PLY: PARSE DEBUG START

State  : 0
Stack  : . LexToken(KEY_MODULE,'MODULE',2,64)
Action : Shift and goto state 2

State  : 2
Stack  : KEY_MODULE . LexToken(IDENT,'Pattern',2,71)
Action : Shift and goto state 3

State  : 3
Stack  : KEY_MODULE IDENT . LexToken(SCOLON,';',2,78)
Action : Shift and goto state 4

State  : 4
Stack  : KEY_MODULE IDENT SCOLON . LexToken(KEY_VAR,'VAR',3,81)
Action : Reduce rule [empty -> <empty>] with [] and goto state 5
Result : <NoneType @ 0xa40060> (None)

State  : 5
Stack  : KEY_MODULE IDENT SCOLON empty . LexToken(KEY_VAR,'VAR',3,81)
Action : Reduce rule [declarationSequence -> empty] with [None] and goto state 6
Result : <NoneType @ 0xa40060> (None)

State  : 6
Stack  : KEY_MODULE IDENT SCOLON declarationSequence . LexToken(KEY_VAR,'VAR',3,81)
Action : Shift and goto state 10

State  : 10
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR . LexToken(IDENT,'x',3,85)
Action : Reduce rule [empty -> <empty>] with [] and goto state 59
Result : <NoneType @ 0xa40060> (None)

State  : 59
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR empty . LexToken(IDENT,'x',3,85)
Action : Reduce rule [varss -> empty] with [None] and goto state 58
Result : <NoneType @ 0xa40060> (None)

State  : 58
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss . LexToken(IDENT,'x',3,85)
Action : Shift and goto state 129

State  : 129
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss IDENT . LexToken(COLON,':',3,86)
Action : Reduce rule [identList -> IDENT] with ['x'] and goto state 131
Result : <NoneType @ 0xa40060> (None)

State  : 131
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss identList . LexToken(COLON,':',3,86)
Action : Shift and goto state 202

State  : 202
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss identList COLON . LexToken(KEY_INTEGER,'INTEGER',3,88)
Action : Shift and goto state 259

State  : 259
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss identList COLON KEY_INTEGER . LexToken(SCOLON,';',3,95)
Action : Reduce rule [varType -> KEY_INTEGER] with ['INTEGER'] and goto state 269
Result : <NoneType @ 0xa40060> (None)

State  : 269
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss identList COLON varType . LexToken(SCOLON,';',3,95)
Action : Reduce rule [type -> varType] with [None] and goto state 258
Result : <NoneType @ 0xa40060> (None)

State  : 258
Defaulted state 258: Reduce using 109
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss identList COLON type . LexToken(SCOLON,';',3,95)
Action : Reduce rule [variableDeclaration -> identList COLON type] with [None,':',None] and goto state 130
Result : <NoneType @ 0xa40060> (None)

State  : 130
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss variableDeclaration . LexToken(SCOLON,';',3,95)
Action : Shift and goto state 201

State  : 201
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss variableDeclaration SCOLON . LexToken(KEY_PROCEDURE,'PROCEDURE',4,98)
Action : Reduce rule [varss -> varss variableDeclaration SCOLON] with [None,None,';'] and goto state 58
Result : <NoneType @ 0xa40060> (None)

State  : 58
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_VAR varss . LexToken(KEY_PROCEDURE,'PROCEDURE',4,98)
Action : Reduce rule [declarationSequence -> declarationSequence KEY_VAR varss] with [None,'VAR',None] and goto state 6
Result : <NoneType @ 0xa40060> (None)

State  : 6
Stack  : KEY_MODULE IDENT SCOLON declarationSequence . LexToken(KEY_PROCEDURE,'PROCEDURE',4,98)
Action : Reduce rule [empty -> <empty>] with [] and goto state 8
Result : <NoneType @ 0xa40060> (None)

State  : 8
Stack  : KEY_MODULE IDENT SCOLON declarationSequence empty . LexToken(KEY_PROCEDURE,'PROCEDURE',4,98)
Action : Reduce rule [procss -> empty] with [None] and goto state 11
Result : <NoneType @ 0xa40060> (None)

State  : 11
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss . LexToken(KEY_PROCEDURE,'PROCEDURE',4,98)
Action : Shift and goto state 61

State  : 61
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE . LexToken(IDENT,'fib',4,108)
Action : Shift and goto state 133

State  : 133
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT . LexToken(LRB,'(',4,111)
Action : Shift and goto state 205

State  : 205
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB . LexToken(IDENT,'n',4,112)
Action : Shift and goto state 275

State  : 275
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB IDENT . LexToken(COLON,':',4,113)
Action : Reduce rule [empty -> <empty>] with [] and goto state 315
Result : <NoneType @ 0xa40060> (None)

State  : 315
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB IDENT empty . LexToken(COLON,':',4,113)
Action : Reduce rule [FPs -> empty] with [None] and goto state 314
Result : <NoneType @ 0xa40060> (None)

State  : 314
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB IDENT FPs . LexToken(COLON,':',4,113)
Action : Shift and goto state 343

State  : 343
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB IDENT FPs COLON . LexToken(KEY_INTEGER,'INTEGER',4,115)
Action : Shift and goto state 259

State  : 259
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB IDENT FPs COLON KEY_INTEGER . LexToken(RRB,')',4,122)
Action : Reduce rule [varType -> KEY_INTEGER] with ['INTEGER'] and goto state 269
Result : <NoneType @ 0xa40060> (None)

State  : 269
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB IDENT FPs COLON varType . LexToken(RRB,')',4,122)
Action : Reduce rule [type -> varType] with [None] and goto state 360
Result : <NoneType @ 0xa40060> (None)

State  : 360
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB IDENT FPs COLON type . LexToken(RRB,')',4,122)
Action : Reduce rule [FPSection -> IDENT FPs COLON type] with ['n',None,':',None] and goto state 277
Result : <NoneType @ 0xa40060> (None)

State  : 277
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB FPSection . LexToken(RRB,')',4,122)
Action : Reduce rule [empty -> <empty>] with [] and goto state 316
Result : <NoneType @ 0xa40060> (None)

State  : 316
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB FPSection empty . LexToken(RRB,')',4,122)
Action : Reduce rule [formalss -> empty] with [None] and goto state 317
Result : <NoneType @ 0xa40060> (None)

State  : 317
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB FPSection formalss . LexToken(RRB,')',4,122)
Action : Shift and goto state 346

State  : 346
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT LRB FPSection formalss RRB . LexToken(COLON,':',4,124)
Action : Reduce rule [formalParameters -> LRB FPSection formalss RRB] with ['(',None,None,')'] and goto state 204
Result : <NoneType @ 0xa40060> (None)

State  : 204
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT formalParameters . LexToken(COLON,':',4,124)
Action : Shift and goto state 274

State  : 274
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT formalParameters COLON . LexToken(KEY_INTEGER,'INTEGER',4,126)
Action : Shift and goto state 259

State  : 259
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT formalParameters COLON KEY_INTEGER . LexToken(SCOLON,';',4,133)
Action : Reduce rule [varType -> KEY_INTEGER] with ['INTEGER'] and goto state 269
Result : <NoneType @ 0xa40060> (None)

State  : 269
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT formalParameters COLON varType . LexToken(SCOLON,';',4,133)
Action : Reduce rule [type -> varType] with [None] and goto state 313
Result : <NoneType @ 0xa40060> (None)

State  : 313
Defaulted state 313: Reduce using 111
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss KEY_PROCEDURE IDENT formalParameters COLON type . LexToken(SCOLON,';',4,133)
Action : Reduce rule [procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type] with ['PROCEDURE','fib',None,':',None] and goto state 62
Result : <NoneType @ 0xa40060> (None)

State  : 62
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading . LexToken(SCOLON,';',4,133)
Action : Shift and goto state 134

State  : 134
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON . LexToken(KEY_BEGIN,'BEGIN',5,136)
Action : Reduce rule [empty -> <empty>] with [] and goto state 5
Result : <NoneType @ 0xa40060> (None)

State  : 5
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON empty . LexToken(KEY_BEGIN,'BEGIN',5,136)
Action : Reduce rule [declarationSequence -> empty] with [None] and goto state 206
Result : <NoneType @ 0xa40060> (None)

State  : 206
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence . LexToken(KEY_BEGIN,'BEGIN',5,136)
Action : Shift and goto state 278

State  : 278
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN . LexToken(KEY_IF,'IF',6,144)
Action : Shift and goto state 54

State  : 54
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF . LexToken(LRB,'(',6,147)
Action : Shift and goto state 86

State  : 86
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB . LexToken(LRB,'(',6,148)
Action : Shift and goto state 86

State  : 86
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB . LexToken(IDENT,'n',6,149)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB IDENT . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [identdef -> IDENT] with ['n'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB identdef . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB qualident . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB qualident empty . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB qualident designator2 . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB designator . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [factor -> designator] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB factor . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB factor empty . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB factor termss . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB term . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB term empty . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB term simpless . LexToken(EQUAL,'=',6,151)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression . LexToken(EQUAL,'=',6,151)
Action : Shift and goto state 154

State  : 154
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression EQUAL . LexToken(VINTEGER,'1',6,153)
Action : Reduce rule [relation -> EQUAL] with ['='] and goto state 157
Result : <NoneType @ 0xa40060> (None)

State  : 157
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation . LexToken(VINTEGER,'1',6,153)
Action : Shift and goto state 97

State  : 97
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation VINTEGER . LexToken(RRB,')',6,154)
Action : Reduce rule [number -> VINTEGER] with ['1'] and goto state 76
Result : <NoneType @ 0xa40060> (None)

State  : 76
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation number . LexToken(RRB,')',6,154)
Action : Reduce rule [factor -> number] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation factor . LexToken(RRB,')',6,154)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation factor empty . LexToken(RRB,')',6,154)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation factor termss . LexToken(RRB,')',6,154)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation term . LexToken(RRB,')',6,154)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation term empty . LexToken(RRB,')',6,154)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation term simpless . LexToken(RRB,')',6,154)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 227
Result : <NoneType @ 0xa40060> (None)

State  : 227
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB simpleExpression relation simpleExpression . LexToken(RRB,')',6,154)
Action : Reduce rule [expression -> simpleExpression relation simpleExpression] with [None,None,None] and goto state 151
Result : <NoneType @ 0xa40060> (None)

State  : 151
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB expression . LexToken(RRB,')',6,154)
Action : Shift and goto state 226

State  : 226
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB LRB expression RRB . LexToken(OR,'|',6,156)
Action : Reduce rule [factor -> LRB expression RRB] with ['(',None,')'] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB factor . LexToken(OR,'|',6,156)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB factor empty . LexToken(OR,'|',6,156)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB factor termss . LexToken(OR,'|',6,156)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term . LexToken(OR,'|',6,156)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term empty . LexToken(OR,'|',6,156)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless . LexToken(OR,'|',6,156)
Action : Shift and goto state 218

State  : 218
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless OR . LexToken(LRB,'(',6,158)
Action : Reduce rule [addOperator -> OR] with ['|'] and goto state 216
Result : <NoneType @ 0xa40060> (None)

State  : 216
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator . LexToken(LRB,'(',6,158)
Action : Shift and goto state 86

State  : 86
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB . LexToken(IDENT,'n',6,159)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB IDENT . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [identdef -> IDENT] with ['n'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB identdef . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB qualident . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB qualident empty . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB qualident designator2 . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB designator . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [factor -> designator] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB factor . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB factor empty . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB factor termss . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB term . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB term empty . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB term simpless . LexToken(EQUAL,'=',6,161)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression . LexToken(EQUAL,'=',6,161)
Action : Shift and goto state 154

State  : 154
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression EQUAL . LexToken(VINTEGER,'2',6,163)
Action : Reduce rule [relation -> EQUAL] with ['='] and goto state 157
Result : <NoneType @ 0xa40060> (None)

State  : 157
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation . LexToken(VINTEGER,'2',6,163)
Action : Shift and goto state 97

State  : 97
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation VINTEGER . LexToken(RRB,')',6,164)
Action : Reduce rule [number -> VINTEGER] with ['2'] and goto state 76
Result : <NoneType @ 0xa40060> (None)

State  : 76
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation number . LexToken(RRB,')',6,164)
Action : Reduce rule [factor -> number] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation factor . LexToken(RRB,')',6,164)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation factor empty . LexToken(RRB,')',6,164)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation factor termss . LexToken(RRB,')',6,164)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation term . LexToken(RRB,')',6,164)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation term empty . LexToken(RRB,')',6,164)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation term simpless . LexToken(RRB,')',6,164)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 227
Result : <NoneType @ 0xa40060> (None)

State  : 227
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB simpleExpression relation simpleExpression . LexToken(RRB,')',6,164)
Action : Reduce rule [expression -> simpleExpression relation simpleExpression] with [None,None,None] and goto state 151
Result : <NoneType @ 0xa40060> (None)

State  : 151
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB expression . LexToken(RRB,')',6,164)
Action : Shift and goto state 226

State  : 226
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator LRB expression RRB . LexToken(RRB,')',6,165)
Action : Reduce rule [factor -> LRB expression RRB] with ['(',None,')'] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator factor . LexToken(RRB,')',6,165)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator factor empty . LexToken(RRB,')',6,165)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator factor termss . LexToken(RRB,')',6,165)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 285
Result : <NoneType @ 0xa40060> (None)

State  : 285
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless addOperator term . LexToken(RRB,')',6,165)
Action : Reduce rule [simpless -> simpless addOperator term] with [None,None,None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB term simpless . LexToken(RRB,')',6,165)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB simpleExpression . LexToken(RRB,')',6,165)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 151
Result : <NoneType @ 0xa40060> (None)

State  : 151
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB expression . LexToken(RRB,')',6,165)
Action : Shift and goto state 226

State  : 226
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF LRB expression RRB . LexToken(KEY_THEN,'THEN',6,167)
Action : Reduce rule [factor -> LRB expression RRB] with ['(',None,')'] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF factor . LexToken(KEY_THEN,'THEN',6,167)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF factor empty . LexToken(KEY_THEN,'THEN',6,167)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF factor termss . LexToken(KEY_THEN,'THEN',6,167)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF term . LexToken(KEY_THEN,'THEN',6,167)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF term empty . LexToken(KEY_THEN,'THEN',6,167)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF term simpless . LexToken(KEY_THEN,'THEN',6,167)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF simpleExpression . LexToken(KEY_THEN,'THEN',6,167)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 125
Result : <NoneType @ 0xa40060> (None)

State  : 125
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression . LexToken(KEY_THEN,'THEN',6,167)
Action : Shift and goto state 196

State  : 196
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN . LexToken(KEY_RETURN,'RETURN',7,175)
Action : Shift and goto state 35

State  : 35
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN . LexToken(VINTEGER,'1',7,182)
Action : Shift and goto state 97

State  : 97
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN VINTEGER . LexToken(SCOLON,';',7,183)
Action : Reduce rule [number -> VINTEGER] with ['1'] and goto state 76
Result : <NoneType @ 0xa40060> (None)

State  : 76
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN number . LexToken(SCOLON,';',7,183)
Action : Reduce rule [factor -> number] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN factor . LexToken(SCOLON,';',7,183)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN factor empty . LexToken(SCOLON,';',7,183)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN factor termss . LexToken(SCOLON,';',7,183)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN term . LexToken(SCOLON,';',7,183)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN term empty . LexToken(SCOLON,';',7,183)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN term simpless . LexToken(SCOLON,';',7,183)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN simpleExpression . LexToken(SCOLON,';',7,183)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 112
Result : <NoneType @ 0xa40060> (None)

State  : 112
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN KEY_RETURN expression . LexToken(SCOLON,';',7,183)
Action : Reduce rule [statement -> KEY_RETURN expression] with ['RETURN',None] and goto state 17
Result : <NoneType @ 0xa40060> (None)

State  : 17
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statement . LexToken(SCOLON,';',7,183)
Action : Reduce rule [statementSequence -> statement] with [None] and goto state 255
Result : <NoneType @ 0xa40060> (None)

State  : 255
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence . LexToken(SCOLON,';',7,183)
Action : Shift and goto state 124

State  : 124
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence SCOLON . LexToken(KEY_ELSE,'ELSE',8,187)
Action : Reduce rule [empty -> <empty>] with [] and goto state 42
Result : <NoneType @ 0xa40060> (None)

State  : 42
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence SCOLON empty . LexToken(KEY_ELSE,'ELSE',8,187)
Action : Reduce rule [statement -> empty] with [None] and goto state 195
Result : <NoneType @ 0xa40060> (None)

State  : 195
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence SCOLON statement . LexToken(KEY_ELSE,'ELSE',8,187)
Action : Reduce rule [statementSequence -> statementSequence SCOLON statement] with [None,';',None] and goto state 255
Result : <NoneType @ 0xa40060> (None)

State  : 255
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence . LexToken(KEY_ELSE,'ELSE',8,187)
Action : Reduce rule [empty -> <empty>] with [] and goto state 301
Result : <NoneType @ 0xa40060> (None)

State  : 301
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence empty . LexToken(KEY_ELSE,'ELSE',8,187)
Action : Reduce rule [ifss -> empty] with [None] and goto state 302
Result : <NoneType @ 0xa40060> (None)

State  : 302
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss . LexToken(KEY_ELSE,'ELSE',8,187)
Action : Shift and goto state 332

State  : 332
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE . LexToken(KEY_RETURN,'RETURN',9,195)
Action : Shift and goto state 35

State  : 35
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN . LexToken(IDENT,'fib',9,202)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN IDENT . LexToken(LRB,'(',9,205)
Action : Reduce rule [identdef -> IDENT] with ['fib'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN identdef . LexToken(LRB,'(',9,205)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN qualident . LexToken(LRB,'(',9,205)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN qualident empty . LexToken(LRB,'(',9,205)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN qualident designator2 . LexToken(LRB,'(',9,205)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator . LexToken(LRB,'(',9,205)
Action : Shift and goto state 101

State  : 101
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB . LexToken(IDENT,'n',9,206)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB IDENT . LexToken(MINUS,'-',9,207)
Action : Reduce rule [identdef -> IDENT] with ['n'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB identdef . LexToken(MINUS,'-',9,207)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB qualident . LexToken(MINUS,'-',9,207)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB qualident empty . LexToken(MINUS,'-',9,207)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB qualident designator2 . LexToken(MINUS,'-',9,207)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB designator . LexToken(MINUS,'-',9,207)
Action : Reduce rule [factor -> designator] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB factor . LexToken(MINUS,'-',9,207)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB factor empty . LexToken(MINUS,'-',9,207)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB factor termss . LexToken(MINUS,'-',9,207)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term . LexToken(MINUS,'-',9,207)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term empty . LexToken(MINUS,'-',9,207)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless . LexToken(MINUS,'-',9,207)
Action : Shift and goto state 217

State  : 217
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless MINUS . LexToken(VINTEGER,'1',9,208)
Action : Reduce rule [addOperator -> MINUS] with ['-'] and goto state 216
Result : <NoneType @ 0xa40060> (None)

State  : 216
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless addOperator . LexToken(VINTEGER,'1',9,208)
Action : Shift and goto state 97

State  : 97
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless addOperator VINTEGER . LexToken(RRB,')',9,209)
Action : Reduce rule [number -> VINTEGER] with ['1'] and goto state 76
Result : <NoneType @ 0xa40060> (None)

State  : 76
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless addOperator number . LexToken(RRB,')',9,209)
Action : Reduce rule [factor -> number] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless addOperator factor . LexToken(RRB,')',9,209)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless addOperator factor empty . LexToken(RRB,')',9,209)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless addOperator factor termss . LexToken(RRB,')',9,209)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 285
Result : <NoneType @ 0xa40060> (None)

State  : 285
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless addOperator term . LexToken(RRB,')',9,209)
Action : Reduce rule [simpless -> simpless addOperator term] with [None,None,None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB term simpless . LexToken(RRB,')',9,209)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB simpleExpression . LexToken(RRB,')',9,209)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 173
Result : <NoneType @ 0xa40060> (None)

State  : 173
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB expression . LexToken(RRB,')',9,209)
Action : Reduce rule [expList -> expression] with [None] and goto state 174
Result : <NoneType @ 0xa40060> (None)

State  : 174
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB expList . LexToken(RRB,')',9,209)
Action : Shift and goto state 235

State  : 235
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator LRB expList RRB . LexToken(PLUS,'+',9,211)
Action : Reduce rule [actualParameters -> LRB expList RRB] with ['(',None,')'] and goto state 145
Result : <NoneType @ 0xa40060> (None)

State  : 145
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN designator actualParameters . LexToken(PLUS,'+',9,211)
Action : Reduce rule [factor -> designator actualParameters] with [None,None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN factor . LexToken(PLUS,'+',9,211)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN factor empty . LexToken(PLUS,'+',9,211)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN factor termss . LexToken(PLUS,'+',9,211)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term . LexToken(PLUS,'+',9,211)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term empty . LexToken(PLUS,'+',9,211)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless . LexToken(PLUS,'+',9,211)
Action : Shift and goto state 219

State  : 219
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless PLUS . LexToken(IDENT,'fib',9,213)
Action : Reduce rule [addOperator -> PLUS] with ['+'] and goto state 216
Result : <NoneType @ 0xa40060> (None)

State  : 216
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator . LexToken(IDENT,'fib',9,213)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator IDENT . LexToken(LRB,'(',9,216)
Action : Reduce rule [identdef -> IDENT] with ['fib'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator identdef . LexToken(LRB,'(',9,216)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator qualident . LexToken(LRB,'(',9,216)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator qualident empty . LexToken(LRB,'(',9,216)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator qualident designator2 . LexToken(LRB,'(',9,216)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator . LexToken(LRB,'(',9,216)
Action : Shift and goto state 101

State  : 101
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB . LexToken(IDENT,'n',9,217)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB IDENT . LexToken(MINUS,'-',9,218)
Action : Reduce rule [identdef -> IDENT] with ['n'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB identdef . LexToken(MINUS,'-',9,218)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB qualident . LexToken(MINUS,'-',9,218)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB qualident empty . LexToken(MINUS,'-',9,218)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB qualident designator2 . LexToken(MINUS,'-',9,218)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB designator . LexToken(MINUS,'-',9,218)
Action : Reduce rule [factor -> designator] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB factor . LexToken(MINUS,'-',9,218)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB factor empty . LexToken(MINUS,'-',9,218)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB factor termss . LexToken(MINUS,'-',9,218)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term . LexToken(MINUS,'-',9,218)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term empty . LexToken(MINUS,'-',9,218)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless . LexToken(MINUS,'-',9,218)
Action : Shift and goto state 217

State  : 217
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless MINUS . LexToken(VINTEGER,'2',9,219)
Action : Reduce rule [addOperator -> MINUS] with ['-'] and goto state 216
Result : <NoneType @ 0xa40060> (None)

State  : 216
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless addOperator . LexToken(VINTEGER,'2',9,219)
Action : Shift and goto state 97

State  : 97
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless addOperator VINTEGER . LexToken(RRB,')',9,220)
Action : Reduce rule [number -> VINTEGER] with ['2'] and goto state 76
Result : <NoneType @ 0xa40060> (None)

State  : 76
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless addOperator number . LexToken(RRB,')',9,220)
Action : Reduce rule [factor -> number] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless addOperator factor . LexToken(RRB,')',9,220)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless addOperator factor empty . LexToken(RRB,')',9,220)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless addOperator factor termss . LexToken(RRB,')',9,220)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 285
Result : <NoneType @ 0xa40060> (None)

State  : 285
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless addOperator term . LexToken(RRB,')',9,220)
Action : Reduce rule [simpless -> simpless addOperator term] with [None,None,None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB term simpless . LexToken(RRB,')',9,220)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB simpleExpression . LexToken(RRB,')',9,220)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 173
Result : <NoneType @ 0xa40060> (None)

State  : 173
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB expression . LexToken(RRB,')',9,220)
Action : Reduce rule [expList -> expression] with [None] and goto state 174
Result : <NoneType @ 0xa40060> (None)

State  : 174
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB expList . LexToken(RRB,')',9,220)
Action : Shift and goto state 235

State  : 235
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator LRB expList RRB . LexToken(SCOLON,';',9,221)
Action : Reduce rule [actualParameters -> LRB expList RRB] with ['(',None,')'] and goto state 145
Result : <NoneType @ 0xa40060> (None)

State  : 145
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator designator actualParameters . LexToken(SCOLON,';',9,221)
Action : Reduce rule [factor -> designator actualParameters] with [None,None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator factor . LexToken(SCOLON,';',9,221)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator factor empty . LexToken(SCOLON,';',9,221)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator factor termss . LexToken(SCOLON,';',9,221)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 285
Result : <NoneType @ 0xa40060> (None)

State  : 285
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless addOperator term . LexToken(SCOLON,';',9,221)
Action : Reduce rule [simpless -> simpless addOperator term] with [None,None,None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN term simpless . LexToken(SCOLON,';',9,221)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN simpleExpression . LexToken(SCOLON,';',9,221)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 112
Result : <NoneType @ 0xa40060> (None)

State  : 112
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE KEY_RETURN expression . LexToken(SCOLON,';',9,221)
Action : Reduce rule [statement -> KEY_RETURN expression] with ['RETURN',None] and goto state 17
Result : <NoneType @ 0xa40060> (None)

State  : 17
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statement . LexToken(SCOLON,';',9,221)
Action : Reduce rule [statementSequence -> statement] with [None] and goto state 353
Result : <NoneType @ 0xa40060> (None)

State  : 353
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence . LexToken(SCOLON,';',9,221)
Action : Shift and goto state 124

State  : 124
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence SCOLON . LexToken(KEY_END,'END',10,225)
Action : Reduce rule [empty -> <empty>] with [] and goto state 42
Result : <NoneType @ 0xa40060> (None)

State  : 42
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence SCOLON empty . LexToken(KEY_END,'END',10,225)
Action : Reduce rule [statement -> empty] with [None] and goto state 195
Result : <NoneType @ 0xa40060> (None)

State  : 195
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence SCOLON statement . LexToken(KEY_END,'END',10,225)
Action : Reduce rule [statementSequence -> statementSequence SCOLON statement] with [None,';',None] and goto state 353
Result : <NoneType @ 0xa40060> (None)

State  : 353
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence . LexToken(KEY_END,'END',10,225)
Action : Shift and goto state 367

State  : 367
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END . LexToken(KEY_END,'END',11,230)
Action : Reduce rule [ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END] with ['IF',None,'THEN',None,None,'ELSE',None,'END'] and goto state 45
Result : <NoneType @ 0xa40060> (None)

State  : 45
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN ifStatement . LexToken(KEY_END,'END',11,230)
Action : Reduce rule [statement -> ifStatement] with [None] and goto state 17
Result : <NoneType @ 0xa40060> (None)

State  : 17
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN statement . LexToken(KEY_END,'END',11,230)
Action : Reduce rule [statementSequence -> statement] with [None] and goto state 318
Result : <NoneType @ 0xa40060> (None)

State  : 318
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN statementSequence . LexToken(KEY_END,'END',11,230)
Action : Shift and goto state 347

State  : 347
Defaulted state 347: Reduce using 120
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END . None
Action : Reduce rule [procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END] with [None,'BEGIN',None,'END'] and goto state 207
Result : <NoneType @ 0xa40060> (None)

State  : 207
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON procedureBody . LexToken(IDENT,'fib',11,234)
Action : Shift and goto state 279

State  : 279
Defaulted state 279: Reduce using 110
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureHeading SCOLON procedureBody IDENT . None
Action : Reduce rule [procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT] with [None,';',None,'fib'] and goto state 60
Result : <NoneType @ 0xa40060> (None)

State  : 60
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureDeclaration . LexToken(SCOLON,';',11,237)
Action : Shift and goto state 132

State  : 132
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss procedureDeclaration SCOLON . LexToken(KEY_BEGIN,'BEGIN',13,240)
Action : Reduce rule [procss -> procss procedureDeclaration SCOLON] with [None,None,';'] and goto state 11
Result : <NoneType @ 0xa40060> (None)

State  : 11
Stack  : KEY_MODULE IDENT SCOLON declarationSequence procss . LexToken(KEY_BEGIN,'BEGIN',13,240)
Action : Reduce rule [declarationSequence -> declarationSequence procss] with [None,None] and goto state 6
Result : <NoneType @ 0xa40060> (None)

State  : 6
Stack  : KEY_MODULE IDENT SCOLON declarationSequence . LexToken(KEY_BEGIN,'BEGIN',13,240)
Action : Shift and goto state 7

State  : 7
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN . LexToken(IDENT,'x',14,247)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN IDENT . LexToken(ASSIGN,':=',14,248)
Action : Reduce rule [identdef -> IDENT] with ['x'] and goto state 48
Result : <NoneType @ 0xa40060> (None)

State  : 48
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN identdef . LexToken(ASSIGN,':=',14,248)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 14
Result : <NoneType @ 0xa40060> (None)

State  : 14
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN qualident . LexToken(ASSIGN,':=',14,248)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN qualident empty . LexToken(ASSIGN,':=',14,248)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN qualident designator2 . LexToken(ASSIGN,':=',14,248)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 16
Result : <NoneType @ 0xa40060> (None)

State  : 16
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator . LexToken(ASSIGN,':=',14,248)
Action : Shift and goto state 100

State  : 100
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN . LexToken(VINTEGER,'1',14,250)
Action : Shift and goto state 97

State  : 97
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN VINTEGER . LexToken(SCOLON,';',14,251)
Action : Reduce rule [number -> VINTEGER] with ['1'] and goto state 76
Result : <NoneType @ 0xa40060> (None)

State  : 76
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN number . LexToken(SCOLON,';',14,251)
Action : Reduce rule [factor -> number] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN factor . LexToken(SCOLON,';',14,251)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN factor empty . LexToken(SCOLON,';',14,251)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN factor termss . LexToken(SCOLON,';',14,251)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN term . LexToken(SCOLON,';',14,251)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN term empty . LexToken(SCOLON,';',14,251)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN term simpless . LexToken(SCOLON,';',14,251)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN simpleExpression . LexToken(SCOLON,';',14,251)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 171
Result : <NoneType @ 0xa40060> (None)

State  : 171
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN designator ASSIGN expression . LexToken(SCOLON,';',14,251)
Action : Reduce rule [assignment -> designator ASSIGN expression] with [None,':=',None] and goto state 29
Result : <NoneType @ 0xa40060> (None)

State  : 29
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN assignment . LexToken(SCOLON,';',14,251)
Action : Reduce rule [statement -> assignment] with [None] and goto state 17
Result : <NoneType @ 0xa40060> (None)

State  : 17
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statement . LexToken(SCOLON,';',14,251)
Action : Reduce rule [statementSequence -> statement] with [None] and goto state 53
Result : <NoneType @ 0xa40060> (None)

State  : 53
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence . LexToken(SCOLON,';',14,251)
Action : Shift and goto state 124

State  : 124
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON . LexToken(KEY_WHILE,'WHILE',15,254)
Action : Shift and goto state 15

State  : 15
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE . LexToken(IDENT,'x',15,260)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE IDENT . LexToken(LT,'<',15,262)
Action : Reduce rule [identdef -> IDENT] with ['x'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE identdef . LexToken(LT,'<',15,262)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE qualident . LexToken(LT,'<',15,262)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE qualident empty . LexToken(LT,'<',15,262)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE qualident designator2 . LexToken(LT,'<',15,262)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE designator . LexToken(LT,'<',15,262)
Action : Reduce rule [factor -> designator] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE factor . LexToken(LT,'<',15,262)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE factor empty . LexToken(LT,'<',15,262)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE factor termss . LexToken(LT,'<',15,262)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE term . LexToken(LT,'<',15,262)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE term empty . LexToken(LT,'<',15,262)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE term simpless . LexToken(LT,'<',15,262)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression . LexToken(LT,'<',15,262)
Action : Shift and goto state 158

State  : 158
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression LT . LexToken(VINTEGER,'10',15,264)
Action : Reduce rule [relation -> LT] with ['<'] and goto state 157
Result : <NoneType @ 0xa40060> (None)

State  : 157
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation . LexToken(VINTEGER,'10',15,264)
Action : Shift and goto state 97

State  : 97
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation VINTEGER . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Reduce rule [number -> VINTEGER] with ['10'] and goto state 76
Result : <NoneType @ 0xa40060> (None)

State  : 76
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation number . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Reduce rule [factor -> number] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation factor . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation factor empty . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation factor termss . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation term . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation term empty . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation term simpless . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 227
Result : <NoneType @ 0xa40060> (None)

State  : 227
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE simpleExpression relation simpleExpression . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Reduce rule [expression -> simpleExpression relation simpleExpression] with [None,None,None] and goto state 98
Result : <NoneType @ 0xa40060> (None)

State  : 98
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression . LexToken(KEY_BEGIN,'BEGIN',16,268)
Action : Shift and goto state 169

State  : 169
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN . LexToken(KEY_WRITEINT,'WRITEINT',17,276)
Action : Shift and goto state 24

State  : 24
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT . LexToken(LRB,'(',17,284)
Action : Shift and goto state 107

State  : 107
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB . LexToken(IDENT,'fib',17,285)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB IDENT . LexToken(LRB,'(',17,288)
Action : Reduce rule [identdef -> IDENT] with ['fib'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB identdef . LexToken(LRB,'(',17,288)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB qualident . LexToken(LRB,'(',17,288)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB qualident empty . LexToken(LRB,'(',17,288)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB qualident designator2 . LexToken(LRB,'(',17,288)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator . LexToken(LRB,'(',17,288)
Action : Shift and goto state 101

State  : 101
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB . LexToken(IDENT,'x',17,289)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB IDENT . LexToken(RRB,')',17,290)
Action : Reduce rule [identdef -> IDENT] with ['x'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB identdef . LexToken(RRB,')',17,290)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB qualident . LexToken(RRB,')',17,290)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB qualident empty . LexToken(RRB,')',17,290)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB qualident designator2 . LexToken(RRB,')',17,290)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB designator . LexToken(RRB,')',17,290)
Action : Reduce rule [factor -> designator] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB factor . LexToken(RRB,')',17,290)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB factor empty . LexToken(RRB,')',17,290)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB factor termss . LexToken(RRB,')',17,290)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB term . LexToken(RRB,')',17,290)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB term empty . LexToken(RRB,')',17,290)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB term simpless . LexToken(RRB,')',17,290)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB simpleExpression . LexToken(RRB,')',17,290)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 173
Result : <NoneType @ 0xa40060> (None)

State  : 173
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB expression . LexToken(RRB,')',17,290)
Action : Reduce rule [expList -> expression] with [None] and goto state 174
Result : <NoneType @ 0xa40060> (None)

State  : 174
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB expList . LexToken(RRB,')',17,290)
Action : Shift and goto state 235

State  : 235
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator LRB expList RRB . LexToken(RRB,')',17,291)
Action : Reduce rule [actualParameters -> LRB expList RRB] with ['(',None,')'] and goto state 145
Result : <NoneType @ 0xa40060> (None)

State  : 145
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB designator actualParameters . LexToken(RRB,')',17,291)
Action : Reduce rule [factor -> designator actualParameters] with [None,None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB factor . LexToken(RRB,')',17,291)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB factor empty . LexToken(RRB,')',17,291)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB factor termss . LexToken(RRB,')',17,291)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB term . LexToken(RRB,')',17,291)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB term empty . LexToken(RRB,')',17,291)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB term simpless . LexToken(RRB,')',17,291)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB simpleExpression . LexToken(RRB,')',17,291)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 180
Result : <NoneType @ 0xa40060> (None)

State  : 180
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB expression . LexToken(RRB,')',17,291)
Action : Shift and goto state 240

State  : 240
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN KEY_WRITEINT LRB expression RRB . LexToken(SCOLON,';',17,292)
Action : Reduce rule [ioStatement -> KEY_WRITEINT LRB expression RRB] with ['WRITEINT','(',None,')'] and goto state 41
Result : <NoneType @ 0xa40060> (None)

State  : 41
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN ioStatement . LexToken(SCOLON,';',17,292)
Action : Reduce rule [statement -> ioStatement] with [None] and goto state 17
Result : <NoneType @ 0xa40060> (None)

State  : 17
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statement . LexToken(SCOLON,';',17,292)
Action : Reduce rule [statementSequence -> statement] with [None] and goto state 233
Result : <NoneType @ 0xa40060> (None)

State  : 233
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence . LexToken(SCOLON,';',17,292)
Action : Shift and goto state 124

State  : 124
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON . LexToken(IDENT,'x',18,296)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON IDENT . LexToken(ASSIGN,':=',18,297)
Action : Reduce rule [identdef -> IDENT] with ['x'] and goto state 48
Result : <NoneType @ 0xa40060> (None)

State  : 48
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON identdef . LexToken(ASSIGN,':=',18,297)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 14
Result : <NoneType @ 0xa40060> (None)

State  : 14
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON qualident . LexToken(ASSIGN,':=',18,297)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON qualident empty . LexToken(ASSIGN,':=',18,297)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON qualident designator2 . LexToken(ASSIGN,':=',18,297)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 16
Result : <NoneType @ 0xa40060> (None)

State  : 16
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator . LexToken(ASSIGN,':=',18,297)
Action : Shift and goto state 100

State  : 100
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN . LexToken(IDENT,'x',18,299)
Action : Shift and goto state 38

State  : 38
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN IDENT . LexToken(PLUS,'+',18,300)
Action : Reduce rule [identdef -> IDENT] with ['x'] and goto state 68
Result : <NoneType @ 0xa40060> (None)

State  : 68
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN identdef . LexToken(PLUS,'+',18,300)
Action : Reduce rule [qualident -> identdef] with [None] and goto state 66
Result : <NoneType @ 0xa40060> (None)

State  : 66
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN qualident . LexToken(PLUS,'+',18,300)
Action : Reduce rule [empty -> <empty>] with [] and goto state 71
Result : <NoneType @ 0xa40060> (None)

State  : 71
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN qualident empty . LexToken(PLUS,'+',18,300)
Action : Reduce rule [designator2 -> empty] with [None] and goto state 70
Result : <NoneType @ 0xa40060> (None)

State  : 70
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN qualident designator2 . LexToken(PLUS,'+',18,300)
Action : Reduce rule [designator -> qualident designator2] with [None,None] and goto state 75
Result : <NoneType @ 0xa40060> (None)

State  : 75
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN designator . LexToken(PLUS,'+',18,300)
Action : Reduce rule [factor -> designator] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN factor . LexToken(PLUS,'+',18,300)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN factor empty . LexToken(PLUS,'+',18,300)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN factor termss . LexToken(PLUS,'+',18,300)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 74
Result : <NoneType @ 0xa40060> (None)

State  : 74
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term . LexToken(PLUS,'+',18,300)
Action : Reduce rule [empty -> <empty>] with [] and goto state 144
Result : <NoneType @ 0xa40060> (None)

State  : 144
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term empty . LexToken(PLUS,'+',18,300)
Action : Reduce rule [simpless -> empty] with [None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless . LexToken(PLUS,'+',18,300)
Action : Shift and goto state 219

State  : 219
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless PLUS . LexToken(VINTEGER,'1',18,301)
Action : Reduce rule [addOperator -> PLUS] with ['+'] and goto state 216
Result : <NoneType @ 0xa40060> (None)

State  : 216
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless addOperator . LexToken(VINTEGER,'1',18,301)
Action : Shift and goto state 97

State  : 97
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless addOperator VINTEGER . LexToken(SCOLON,';',18,302)
Action : Reduce rule [number -> VINTEGER] with ['1'] and goto state 76
Result : <NoneType @ 0xa40060> (None)

State  : 76
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless addOperator number . LexToken(SCOLON,';',18,302)
Action : Reduce rule [factor -> number] with [None] and goto state 78
Result : <NoneType @ 0xa40060> (None)

State  : 78
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless addOperator factor . LexToken(SCOLON,';',18,302)
Action : Reduce rule [empty -> <empty>] with [] and goto state 146
Result : <NoneType @ 0xa40060> (None)

State  : 146
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless addOperator factor empty . LexToken(SCOLON,';',18,302)
Action : Reduce rule [termss -> empty] with [None] and goto state 147
Result : <NoneType @ 0xa40060> (None)

State  : 147
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless addOperator factor termss . LexToken(SCOLON,';',18,302)
Action : Reduce rule [term -> factor termss] with [None,None] and goto state 285
Result : <NoneType @ 0xa40060> (None)

State  : 285
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless addOperator term . LexToken(SCOLON,';',18,302)
Action : Reduce rule [simpless -> simpless addOperator term] with [None,None,None] and goto state 143
Result : <NoneType @ 0xa40060> (None)

State  : 143
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN term simpless . LexToken(SCOLON,';',18,302)
Action : Reduce rule [simpleExpression -> term simpless] with [None,None] and goto state 89
Result : <NoneType @ 0xa40060> (None)

State  : 89
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN simpleExpression . LexToken(SCOLON,';',18,302)
Action : Reduce rule [expression -> simpleExpression] with [None] and goto state 171
Result : <NoneType @ 0xa40060> (None)

State  : 171
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON designator ASSIGN expression . LexToken(SCOLON,';',18,302)
Action : Reduce rule [assignment -> designator ASSIGN expression] with [None,':=',None] and goto state 29
Result : <NoneType @ 0xa40060> (None)

State  : 29
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON assignment . LexToken(SCOLON,';',18,302)
Action : Reduce rule [statement -> assignment] with [None] and goto state 195
Result : <NoneType @ 0xa40060> (None)

State  : 195
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON statement . LexToken(SCOLON,';',18,302)
Action : Reduce rule [statementSequence -> statementSequence SCOLON statement] with [None,';',None] and goto state 233
Result : <NoneType @ 0xa40060> (None)

State  : 233
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence . LexToken(SCOLON,';',18,302)
Action : Shift and goto state 124

State  : 124
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON . LexToken(KEY_END,'END',19,305)
Action : Reduce rule [empty -> <empty>] with [] and goto state 42
Result : <NoneType @ 0xa40060> (None)

State  : 42
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON empty . LexToken(KEY_END,'END',19,305)
Action : Reduce rule [statement -> empty] with [None] and goto state 195
Result : <NoneType @ 0xa40060> (None)

State  : 195
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence SCOLON statement . LexToken(KEY_END,'END',19,305)
Action : Reduce rule [statementSequence -> statementSequence SCOLON statement] with [None,';',None] and goto state 233
Result : <NoneType @ 0xa40060> (None)

State  : 233
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence . LexToken(KEY_END,'END',19,305)
Action : Shift and goto state 291

State  : 291
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON KEY_WHILE expression KEY_BEGIN statementSequence KEY_END . LexToken(SCOLON,';',19,308)
Action : Reduce rule [whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END] with ['WHILE',None,'BEGIN',None,'END'] and goto state 27
Result : <NoneType @ 0xa40060> (None)

State  : 27
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON whileStatement . LexToken(SCOLON,';',19,308)
Action : Reduce rule [statement -> whileStatement] with [None] and goto state 195
Result : <NoneType @ 0xa40060> (None)

State  : 195
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON statement . LexToken(SCOLON,';',19,308)
Action : Reduce rule [statementSequence -> statementSequence SCOLON statement] with [None,';',None] and goto state 53
Result : <NoneType @ 0xa40060> (None)

State  : 53
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence . LexToken(SCOLON,';',19,308)
Action : Shift and goto state 124

State  : 124
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON . LexToken(KEY_END,'END',20,310)
Action : Reduce rule [empty -> <empty>] with [] and goto state 42
Result : <NoneType @ 0xa40060> (None)

State  : 42
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON empty . LexToken(KEY_END,'END',20,310)
Action : Reduce rule [statement -> empty] with [None] and goto state 195
Result : <NoneType @ 0xa40060> (None)

State  : 195
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence SCOLON statement . LexToken(KEY_END,'END',20,310)
Action : Reduce rule [statementSequence -> statementSequence SCOLON statement] with [None,';',None] and goto state 53
Result : <NoneType @ 0xa40060> (None)

State  : 53
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence . LexToken(KEY_END,'END',20,310)
Action : Shift and goto state 123

State  : 123
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END . LexToken(IDENT,'Pattern',20,314)
Action : Shift and goto state 194

State  : 194
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT . LexToken(DOT,'.',20,321)
Action : Shift and goto state 254

State  : 254
Defaulted state 254: Reduce using 1
Stack  : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT . None
Action : Reduce rule [module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT] with ['MODULE','Pattern',';',None,'BEGIN',None,'END','Pattern','.'] and goto state 1
Result : <NoneType @ 0xa40060> (None)

State  : 1
Stack  : module . $end
Done   : Returning <NoneType @ 0xa40060> (None)
PLY: PARSE DEBUG END
