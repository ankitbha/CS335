Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> module
Rule 1     module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT
Rule 2     declarationSequence -> declarationSequence KEY_CONST conss
Rule 3     declarationSequence -> declarationSequence KEY_TYPE typess
Rule 4     declarationSequence -> declarationSequence KEY_VAR varss
Rule 5     declarationSequence -> declarationSequence procss
Rule 6     declarationSequence -> empty
Rule 7     conss -> conss constantDeclaration SCOLON
Rule 8     conss -> empty
Rule 9     typess -> typess typeDeclaration SCOLON
Rule 10    typess -> empty
Rule 11    varss -> varss variableDeclaration SCOLON
Rule 12    varss -> empty
Rule 13    procss -> procss procedureDeclaration SCOLON
Rule 14    procss -> empty
Rule 15    statementSequence -> statementSequence statement SCOLON
Rule 16    statementSequence -> empty
Rule 17    constantDeclaration -> IDENT ASSIGN expression COLON type
Rule 18    expression -> simpleExpression
Rule 19    expression -> simpleExpression relation simpleExpression
Rule 20    simpleExpression -> PLUS term simpless
Rule 21    simpleExpression -> term simpless
Rule 22    simpleExpression -> MINUS term simpless
Rule 23    simpless -> simpless addOperator term
Rule 24    simpless -> empty
Rule 25    term -> factor termss
Rule 26    termss -> termss mulOperator factor
Rule 27    termss -> empty
Rule 28    factor -> number
<<<<<<< HEAD
Rule 29    factor -> char
Rule 30    factor -> string
Rule 31    factor -> KEY_NIL LRB designator RRB
Rule 32    factor -> set
Rule 33    factor -> designator
Rule 34    factor -> designator actualParameters
Rule 35    factor -> LRB expression RRB
Rule 36    factor -> NOT factor
Rule 37    factor -> KEY_ABS factor
Rule 38    factor -> KEY_CHR factor
Rule 39    factor -> KEY_ORD factor
Rule 40    factor -> KEY_INTEGER
Rule 41    factor -> KEY_BOOLEAN
Rule 42    factor -> KEY_CHAR
Rule 43    factor -> KEY_STRING
Rule 44    factor -> KEY_REAL
Rule 45    factor -> KEY_SET
Rule 46    factor -> KEY_CHR LRB factor RRB
Rule 47    factor -> KEY_ORD LRB factor RRB
Rule 48    number -> VINTEGER
Rule 49    number -> VREAL
Rule 50    char -> VCHAR
Rule 51    string -> VSTRING
Rule 52    set -> LCB element COMMA element RCB
Rule 53    set -> LCB RCB
Rule 54    element -> expression
Rule 55    designator -> qualident designator2
Rule 56    designator2 -> designator2 DOT identdef
Rule 57    designator2 -> designator2 LSB expList RSB
Rule 58    designator2 -> designator2 LRB qualident RRB
Rule 59    designator2 -> empty
Rule 60    qualident -> identdef
Rule 61    qualident -> identdef DOT qualident
Rule 62    identdef -> IDENT
Rule 63    identdef -> AT IDENT
Rule 64    expList -> expList COMMA expression
Rule 65    expList -> expression
Rule 66    actualParameters -> LRB expList RRB
Rule 67    actualParameters -> LRB RRB
Rule 68    mulOperator -> MULTIPLY
Rule 69    mulOperator -> DIVIDE
Rule 70    mulOperator -> MODULUS
Rule 71    mulOperator -> AND
Rule 72    addOperator -> PLUS
Rule 73    addOperator -> MINUS
Rule 74    addOperator -> OR
Rule 75    relation -> EQUAL
Rule 76    relation -> NEQUAL
Rule 77    relation -> LT
Rule 78    relation -> LTEQ
Rule 79    relation -> GT
Rule 80    relation -> GTEQ
Rule 81    relation -> KEY_IN
Rule 82    relation -> KEY_IS
Rule 83    typeDeclaration -> IDENT EQUAL type
Rule 84    type -> IDENT
Rule 85    type -> varType
Rule 86    type -> arrayType
Rule 87    type -> recordType
Rule 88    type -> pointerType
Rule 89    varType -> KEY_INTEGER
Rule 90    varType -> KEY_BOOLEAN
Rule 91    varType -> KEY_CHAR
Rule 92    varType -> KEY_STRING
Rule 93    varType -> KEY_REAL
Rule 94    varType -> KEY_SET
Rule 95    arrayType -> KEY_ARRAY length comass KEY_OF type
Rule 96    comass -> comass COMMA length
Rule 97    comass -> empty
Rule 98    length -> expression
Rule 99    recordType -> KEY_RECORD fieldListSequence KEY_END
Rule 100   recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
Rule 101   baseType -> qualident
Rule 102   fieldListSequence -> fieldListSequence SCOLON fieldList
Rule 103   fieldListSequence -> fieldList
Rule 104   fieldList -> identList COLON type
Rule 105   fieldList -> empty
Rule 106   identList -> identList COMMA IDENT
Rule 107   identList -> IDENT
Rule 108   pointerType -> KEY_POINTER KEY_TO type
Rule 109   variableDeclaration -> identList COLON type
Rule 110   procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT
Rule 111   procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type
Rule 112   procedureHeading -> KEY_PROCEDURE IDENT formalParameters
Rule 113   formalParameters -> LRB fpSection formalss RRB
Rule 114   formalParameters -> LRB RRB
Rule 115   formalss -> formalss SCOLON fpSection
Rule 116   formalss -> empty
Rule 117   fpSection -> IDENT fps COLON type
Rule 118   fps -> fps COMMA IDENT
Rule 119   fps -> empty
Rule 120   procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END
Rule 121   statement -> assignment
Rule 122   statement -> procedureCall
Rule 123   statement -> ifStatement
Rule 124   statement -> switchStatement
Rule 125   statement -> whileStatement
Rule 126   statement -> forStatement
Rule 127   statement -> doWhileStatement
Rule 128   statement -> KEY_EXIT
Rule 129   statement -> KEY_RETURN expression
Rule 130   statement -> KEY_RETURN
Rule 131   statement -> ioStatement
Rule 132   statement -> fileStatement
Rule 133   statement -> KEY_BREAK
Rule 134   statement -> KEY_CONTINUE
Rule 135   statement -> empty
Rule 136   statement -> memoryalloc
Rule 137   statement -> setStatement
Rule 138   assignment -> designator ASSIGN expression
Rule 139   setStatement -> qualident DOT KEY_ADD LRB expression RRB
Rule 140   setStatement -> qualident DOT KEY_DEL LRB expression RRB
Rule 141   memoryalloc -> KEY_NEW LRB designator RRB
Rule 142   procedureCall -> designator actualParameters
Rule 143   procedureCall -> designator
Rule 144   ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
Rule 145   ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END
Rule 146   ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence
Rule 147   ifss -> empty
Rule 148   switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
Rule 149   switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END
Rule 150   casess -> case casess
Rule 151   casess -> empty
Rule 152   case -> KEY_CASE expression COLON statementSequence
Rule 153   whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
Rule 154   forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
Rule 155   doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
Rule 156   ioStatement -> KEY_WRITE LRB expression RRB
Rule 157   ioStatement -> KEY_WRITEINT LRB expression RRB
Rule 158   ioStatement -> KEY_WRITEREAL LRB expression RRB
Rule 159   ioStatement -> KEY_WRITECHAR LRB expression RRB
Rule 160   ioStatement -> KEY_WRITEBOOL LRB expression RRB
Rule 161   ioStatement -> KEY_WRITELN LRB expression RRB
Rule 162   ioStatement -> KEY_WRITELN LRB RRB
Rule 163   ioStatement -> KEY_READ LRB expression RRB
Rule 164   ioStatement -> KEY_READINT LRB expression RRB
Rule 165   ioStatement -> KEY_READREAL LRB expression RRB
Rule 166   ioStatement -> KEY_READCHAR LRB expression RRB
Rule 167   ioStatement -> KEY_READBOOL LRB expression RRB
Rule 168   fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
Rule 169   fileStatement -> KEY_FCLOSE LRB identdef RRB
Rule 170   fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB
Rule 171   fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
Rule 172   empty -> <empty>
=======
Rule 29    factor -> boolean
Rule 30    factor -> char
Rule 31    factor -> string
Rule 32    factor -> KEY_NIL LRB designator RRB
Rule 33    factor -> set
Rule 34    factor -> designator
Rule 35    factor -> designator actualParameters
Rule 36    factor -> LRB expression RRB
Rule 37    factor -> NOT factor
Rule 38    factor -> KEY_ABS factor
Rule 39    factor -> KEY_CHR factor
Rule 40    factor -> KEY_ORD factor
Rule 41    factor -> KEY_INTEGER
Rule 42    factor -> KEY_BOOLEAN
Rule 43    factor -> KEY_CHAR
Rule 44    factor -> KEY_STRING
Rule 45    factor -> KEY_REAL
Rule 46    factor -> KEY_SET
Rule 47    factor -> KEY_CHR LRB factor RRB
Rule 48    factor -> KEY_ORD LRB factor RRB
Rule 49    number -> VINTEGER
Rule 50    number -> VREAL
Rule 51    boolean -> VBOOLEAN
Rule 52    char -> VCHAR
Rule 53    string -> VSTRING
Rule 54    set -> LCB element COMMA element RCB
Rule 55    set -> LCB RCB
Rule 56    element -> expression
Rule 57    designator -> qualident designator2
Rule 58    designator2 -> designator2 DOT identdef
Rule 59    designator2 -> designator2 LSB expList RSB
Rule 60    designator2 -> designator2 LRB qualident RRB
Rule 61    designator2 -> empty
Rule 62    qualident -> identdef
Rule 63    qualident -> identdef DOT qualident
Rule 64    identdef -> IDENT
Rule 65    identdef -> AT IDENT
Rule 66    expList -> expList COMMA expression
Rule 67    expList -> expression
Rule 68    actualParameters -> LRB expList RRB
Rule 69    actualParameters -> LRB RRB
Rule 70    mulOperator -> MULTIPLY
Rule 71    mulOperator -> DIVIDE
Rule 72    mulOperator -> MODULUS
Rule 73    mulOperator -> AND
Rule 74    addOperator -> PLUS
Rule 75    addOperator -> MINUS
Rule 76    addOperator -> OR
Rule 77    relation -> EQUAL
Rule 78    relation -> NEQUAL
Rule 79    relation -> LT
Rule 80    relation -> LTEQ
Rule 81    relation -> GT
Rule 82    relation -> GTEQ
Rule 83    relation -> KEY_IN
Rule 84    relation -> KEY_IS
Rule 85    typeDeclaration -> IDENT EQUAL type
Rule 86    type -> IDENT
Rule 87    type -> varType
Rule 88    type -> arrayType
Rule 89    type -> recordType
Rule 90    type -> pointerType
Rule 91    varType -> KEY_INTEGER
Rule 92    varType -> KEY_BOOLEAN
Rule 93    varType -> KEY_CHAR
Rule 94    varType -> KEY_STRING
Rule 95    varType -> KEY_REAL
Rule 96    varType -> KEY_SET
Rule 97    arrayType -> KEY_ARRAY length comass KEY_OF type
Rule 98    comass -> comass COMMA length
Rule 99    comass -> empty
Rule 100   length -> expression
Rule 101   recordType -> KEY_RECORD fieldListSequence KEY_END
Rule 102   recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
Rule 103   baseType -> qualident
Rule 104   fieldListSequence -> fieldListSequence SCOLON fieldList
Rule 105   fieldListSequence -> fieldList
Rule 106   fieldList -> identList COLON type
Rule 107   fieldList -> empty
Rule 108   identList -> identList COMMA IDENT
Rule 109   identList -> IDENT
Rule 110   pointerType -> KEY_POINTER KEY_TO type
Rule 111   variableDeclaration -> identList COLON type
Rule 112   procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT
Rule 113   procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type
Rule 114   procedureHeading -> KEY_PROCEDURE IDENT formalParameters
Rule 115   formalParameters -> LRB fpSection formalss RRB
Rule 116   formalParameters -> LRB RRB
Rule 117   formalss -> formalss SCOLON fpSection
Rule 118   formalss -> empty
Rule 119   fpSection -> IDENT fps COLON type
Rule 120   fps -> fps COMMA IDENT
Rule 121   fps -> empty
Rule 122   procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END
Rule 123   statement -> assignment
Rule 124   statement -> procedureCall
Rule 125   statement -> ifStatement
Rule 126   statement -> switchStatement
Rule 127   statement -> whileStatement
Rule 128   statement -> forStatement
Rule 129   statement -> doWhileStatement
Rule 130   statement -> KEY_EXIT
Rule 131   statement -> KEY_RETURN expression
Rule 132   statement -> KEY_RETURN
Rule 133   statement -> ioStatement
Rule 134   statement -> fileStatement
Rule 135   statement -> KEY_BREAK
Rule 136   statement -> KEY_CONTINUE
Rule 137   statement -> empty
Rule 138   statement -> memoryalloc
Rule 139   statement -> setStatement
Rule 140   assignment -> designator ASSIGN expression
Rule 141   setStatement -> qualident DOT KEY_ADD LRB expression RRB
Rule 142   setStatement -> qualident DOT KEY_DEL LRB expression RRB
Rule 143   memoryalloc -> KEY_NEW LRB designator RRB
Rule 144   procedureCall -> designator actualParameters
Rule 145   procedureCall -> designator
Rule 146   ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
Rule 147   ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END
Rule 148   ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence
Rule 149   ifss -> empty
Rule 150   switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
Rule 151   switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END
Rule 152   casess -> case casess
Rule 153   casess -> empty
Rule 154   case -> KEY_CASE expression COLON statementSequence
Rule 155   whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
Rule 156   forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
Rule 157   doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
Rule 158   ioStatement -> KEY_WRITE LRB expression RRB
Rule 159   ioStatement -> KEY_WRITEINT LRB expression RRB
Rule 160   ioStatement -> KEY_WRITEREAL LRB expression RRB
Rule 161   ioStatement -> KEY_WRITECHAR LRB expression RRB
Rule 162   ioStatement -> KEY_WRITEBOOL LRB expression RRB
Rule 163   ioStatement -> KEY_WRITELN LRB expression RRB
Rule 164   ioStatement -> KEY_WRITELN LRB RRB
Rule 165   ioStatement -> KEY_READ LRB expression RRB
Rule 166   ioStatement -> KEY_READINT LRB expression RRB
Rule 167   ioStatement -> KEY_READREAL LRB expression RRB
Rule 168   ioStatement -> KEY_READCHAR LRB expression RRB
Rule 169   ioStatement -> KEY_READBOOL LRB expression RRB
Rule 170   fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
Rule 171   fileStatement -> KEY_FCLOSE LRB identdef RRB
Rule 172   fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB
Rule 173   fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
Rule 174   empty -> <empty>
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

Terminals, with rules where they appear

AND                  : 73
ASSIGN               : 17 140
AT                   : 65
COLON                : 17 106 111 113 119 150 154
COMMA                : 54 66 98 108 120 170 172 173 173
DIVIDE               : 71
DOT                  : 1 58 63 141 142
EQUAL                : 77 85 170
GT                   : 81
GTEQ                 : 82
IDENT                : 1 1 17 64 65 85 86 108 109 112 113 114 119 120
KEY_ABS              : 38
KEY_ADD              : 141
KEY_ARRAY            : 97
KEY_BEGIN            : 1 122 150 151 155 156 157
KEY_BOOLEAN          : 42 92
KEY_BREAK            : 135
KEY_CASE             : 154
KEY_CHAR             : 43 93
KEY_CHR              : 39 47
KEY_CONST            : 2
KEY_CONTINUE         : 136
KEY_DEL              : 142
KEY_DO               : 157
KEY_ELSE             : 146 150
KEY_ELSEIF           : 148
KEY_END              : 1 101 102 122 146 147 150 151 155 156 157
KEY_EXIT             : 130
KEY_FCLOSE           : 171
KEY_FOPEN            : 170
KEY_FOR              : 156
KEY_FPRINTF          : 172
KEY_FREAD            : 173
KEY_IF               : 146 147
KEY_IN               : 83
KEY_INTEGER          : 41 91
KEY_IS               : 84
KEY_MODULE           : 1
KEY_NEW              : 143
KEY_NIL              : 32
KEY_OF               : 97
KEY_ORD              : 40 48
KEY_POINTER          : 110
KEY_PROCEDURE        : 113 114
KEY_READ             : 165
KEY_READBOOL         : 169
KEY_READCHAR         : 168
KEY_READINT          : 166
KEY_READREAL         : 167
KEY_REAL             : 45 95
KEY_RECORD           : 101 102
KEY_RETURN           : 131 132
KEY_SET              : 46 96
KEY_STRING           : 44 94
KEY_SWITCH           : 150 151
KEY_THEN             : 146 147 148
KEY_TO               : 110
KEY_TYPE             : 3
KEY_VAR              : 4
KEY_WHILE            : 155 157
KEY_WRITE            : 158
KEY_WRITEBOOL        : 162
KEY_WRITECHAR        : 161
KEY_WRITEINT         : 159
KEY_WRITELN          : 163 164
KEY_WRITEREAL        : 160
LCB                  : 54 55
LRB                  : 32 36 47 48 60 68 69 102 115 116 141 142 143 156 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173
LSB                  : 59
LT                   : 79
LTEQ                 : 80
MINUS                : 22 75
MODULUS              : 72
MULTIPLY             : 70
NEQUAL               : 78
NOT                  : 37
OR                   : 76
PLUS                 : 20 74
RCB                  : 54 55
RRB                  : 32 36 47 48 60 68 69 102 115 116 141 142 143 156 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173
RSB                  : 59
SCOLON               : 1 7 9 11 13 15 104 112 117 156 156
VBOOLEAN             : 51
VCHAR                : 52
VINTEGER             : 49 173
VREAL                : 50
VSTRING              : 53
error                : 

Nonterminals, with rules where they appear

actualParameters     : 35 144
addOperator          : 23
arrayType            : 88
assignment           : 123 156 156
baseType             : 102
boolean              : 29
case                 : 150 151 152
casess               : 150 151 152
char                 : 30 170
comass               : 97 98
conss                : 2 7
constantDeclaration  : 7
<<<<<<< HEAD
declarationSequence  : 1 2 3 4 5 120
designator           : 31 33 34 138 141 142 143
designator2          : 55 56 57 58
doWhileStatement     : 127
element              : 52 52
empty                : 6 8 10 12 14 16 24 27 59 97 105 116 119 135 147 151
expList              : 57 64 66
expression           : 17 35 54 64 65 98 129 138 139 140 144 145 146 148 149 152 153 154 155 156 157 158 159 160 161 163 164 165 166 167
factor               : 25 26 36 37 38 39 46 47
fieldList            : 102 103
fieldListSequence    : 99 100 102
fileStatement        : 132
forStatement         : 126
formalParameters     : 111 112
formalss             : 113 115
fpSection            : 113 115
fps                  : 117 118
identList            : 104 106 109
identdef             : 56 60 61 168 169 170 171 171
ifStatement          : 123
ifss                 : 144 145 146
ioStatement          : 131
length               : 95 96
memoryalloc          : 136
=======
declarationSequence  : 1 2 3 4 5 122
designator           : 32 34 35 140 143 144 145
designator2          : 57 58 59 60
doWhileStatement     : 129
element              : 54 54
empty                : 6 8 10 12 14 16 24 27 61 99 107 118 121 137 149 153
expList              : 59 66 68
expression           : 17 36 56 66 67 100 131 140 141 142 146 147 148 150 151 154 155 156 157 158 159 160 161 162 163 165 166 167 168 169
factor               : 25 26 37 38 39 40 47 48
fieldList            : 104 105
fieldListSequence    : 101 102 104
fileStatement        : 134
forStatement         : 128
formalParameters     : 113 114
formalss             : 115 117
fpSection            : 115 117
fps                  : 119 120
identList            : 106 108 111
identdef             : 58 62 63 170 171 172 173 173
ifStatement          : 125
ifss                 : 146 147 148
ioStatement          : 133
length               : 97 98
memoryalloc          : 138
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
module               : 0
mulOperator          : 26
number               : 28
pointerType          : 90
procedureBody        : 112
procedureCall        : 124
procedureDeclaration : 13
procedureHeading     : 112
procss               : 5 13
qualident            : 57 60 63 103 141 142
recordType           : 89
relation             : 19
set                  : 33
setStatement         : 139
simpleExpression     : 18 19 19
simpless             : 20 21 22 23
statement            : 15
statementSequence    : 1 15 122 146 146 147 148 150 154 155 156 157
string               : 31 170 172
switchStatement      : 126
term                 : 20 21 22 23
termss               : 25 26
type                 : 17 85 97 106 110 111 113 119
typeDeclaration      : 9
typess               : 3 9
varType              : 87
variableDeclaration  : 11
varss                : 4 11
whileStatement       : 127

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT

    KEY_MODULE      shift and go to state 2

    module                         shift and go to state 1

state 1

    (0) S' -> module .



state 2

    (1) module -> KEY_MODULE . IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT

    IDENT           shift and go to state 3


state 3

    (1) module -> KEY_MODULE IDENT . SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT

    SCOLON          shift and go to state 4


state 4

    (1) module -> KEY_MODULE IDENT SCOLON . declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT
    (2) declarationSequence -> . declarationSequence KEY_CONST conss
    (3) declarationSequence -> . declarationSequence KEY_TYPE typess
    (4) declarationSequence -> . declarationSequence KEY_VAR varss
    (5) declarationSequence -> . declarationSequence procss
    (6) declarationSequence -> . empty
    (174) empty -> .

    KEY_BEGIN       reduce using rule 174 (empty -> .)
    KEY_CONST       reduce using rule 174 (empty -> .)
    KEY_TYPE        reduce using rule 174 (empty -> .)
    KEY_VAR         reduce using rule 174 (empty -> .)
    KEY_PROCEDURE   reduce using rule 174 (empty -> .)

    declarationSequence            shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence . KEY_BEGIN statementSequence KEY_END IDENT DOT
    (2) declarationSequence -> declarationSequence . KEY_CONST conss
    (3) declarationSequence -> declarationSequence . KEY_TYPE typess
    (4) declarationSequence -> declarationSequence . KEY_VAR varss
    (5) declarationSequence -> declarationSequence . procss
    (13) procss -> . procss procedureDeclaration SCOLON
    (14) procss -> . empty
    (174) empty -> .

  ! shift/reduce conflict for KEY_BEGIN resolved as shift
  ! shift/reduce conflict for KEY_CONST resolved as shift
  ! shift/reduce conflict for KEY_TYPE resolved as shift
  ! shift/reduce conflict for KEY_VAR resolved as shift
<<<<<<< HEAD
    KEY_BEGIN       shift and go to state 9
    KEY_CONST       shift and go to state 12
    KEY_TYPE        shift and go to state 8
    KEY_VAR         shift and go to state 10
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)
=======
    KEY_BEGIN       shift and go to state 7
    KEY_CONST       shift and go to state 12
    KEY_TYPE        shift and go to state 8
    KEY_VAR         shift and go to state 11
    KEY_PROCEDURE   reduce using rule 174 (empty -> .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

  ! KEY_BEGIN       [ reduce using rule 174 (empty -> .) ]
  ! KEY_CONST       [ reduce using rule 174 (empty -> .) ]
  ! KEY_TYPE        [ reduce using rule 174 (empty -> .) ]
  ! KEY_VAR         [ reduce using rule 174 (empty -> .) ]

<<<<<<< HEAD
    empty                          shift and go to state 11
    procss                         shift and go to state 7

state 6

    (6) declarationSequence -> empty .

    KEY_BEGIN       reduce using rule 6 (declarationSequence -> empty .)
    KEY_CONST       reduce using rule 6 (declarationSequence -> empty .)
    KEY_TYPE        reduce using rule 6 (declarationSequence -> empty .)
    KEY_VAR         reduce using rule 6 (declarationSequence -> empty .)
    KEY_PROCEDURE   reduce using rule 6 (declarationSequence -> empty .)

=======
    procss                         shift and go to state 9
    empty                          shift and go to state 10
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 6

<<<<<<< HEAD
    (5) declarationSequence -> declarationSequence procss .
    (13) procss -> procss . procedureDeclaration SCOLON
    (110) procedureDeclaration -> . procedureHeading SCOLON procedureBody IDENT
    (111) procedureHeading -> . KEY_PROCEDURE IDENT formalParameters COLON type
    (112) procedureHeading -> . KEY_PROCEDURE IDENT formalParameters

  ! shift/reduce conflict for KEY_PROCEDURE resolved as shift
    KEY_BEGIN       reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_CONST       reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_TYPE        reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_VAR         reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_PROCEDURE   shift and go to state 14

  ! KEY_PROCEDURE   [ reduce using rule 5 (declarationSequence -> declarationSequence procss .) ]

    procedureDeclaration           shift and go to state 13
    procedureHeading               shift and go to state 15

state 8

    (3) declarationSequence -> declarationSequence KEY_TYPE . typess
    (9) typess -> . typess typeDeclaration SCOLON
    (10) typess -> . empty
    (172) empty -> .
=======
    (6) declarationSequence -> empty .
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    KEY_BEGIN       reduce using rule 6 (declarationSequence -> empty .)
    KEY_CONST       reduce using rule 6 (declarationSequence -> empty .)
    KEY_TYPE        reduce using rule 6 (declarationSequence -> empty .)
    KEY_VAR         reduce using rule 6 (declarationSequence -> empty .)
    KEY_PROCEDURE   reduce using rule 6 (declarationSequence -> empty .)

<<<<<<< HEAD
    typess                         shift and go to state 17
    empty                          shift and go to state 16

state 9
=======

state 7
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN . statementSequence KEY_END IDENT DOT
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
<<<<<<< HEAD
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 19
    statementSequence              shift and go to state 18

state 10

    (4) declarationSequence -> declarationSequence KEY_VAR . varss
    (11) varss -> . varss variableDeclaration SCOLON
    (12) varss -> . empty
    (172) empty -> .

    IDENT           reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_CONST       reduce using rule 172 (empty -> .)
    KEY_TYPE        reduce using rule 172 (empty -> .)
    KEY_VAR         reduce using rule 172 (empty -> .)
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

    varss                          shift and go to state 20
    empty                          shift and go to state 21

state 11

    (14) procss -> empty .

    KEY_PROCEDURE   reduce using rule 14 (procss -> empty .)
    KEY_BEGIN       reduce using rule 14 (procss -> empty .)
    KEY_CONST       reduce using rule 14 (procss -> empty .)
    KEY_TYPE        reduce using rule 14 (procss -> empty .)
    KEY_VAR         reduce using rule 14 (procss -> empty .)


state 12

    (2) declarationSequence -> declarationSequence KEY_CONST . conss
    (7) conss -> . conss constantDeclaration SCOLON
    (8) conss -> . empty
    (172) empty -> .
=======
    (174) empty -> .

    KEY_END         reduce using rule 174 (empty -> .)
    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 13
    empty                          shift and go to state 14

state 8

    (3) declarationSequence -> declarationSequence KEY_TYPE . typess
    (9) typess -> . typess typeDeclaration SCOLON
    (10) typess -> . empty
    (174) empty -> .
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    IDENT           reduce using rule 174 (empty -> .)
    KEY_BEGIN       reduce using rule 174 (empty -> .)
    KEY_CONST       reduce using rule 174 (empty -> .)
    KEY_TYPE        reduce using rule 174 (empty -> .)
    KEY_VAR         reduce using rule 174 (empty -> .)
    KEY_PROCEDURE   reduce using rule 174 (empty -> .)

<<<<<<< HEAD
    conss                          shift and go to state 22
    empty                          shift and go to state 23

state 13

    (13) procss -> procss procedureDeclaration . SCOLON

    SCOLON          shift and go to state 24
=======
    typess                         shift and go to state 16
    empty                          shift and go to state 15

state 9

    (5) declarationSequence -> declarationSequence procss .
    (13) procss -> procss . procedureDeclaration SCOLON
    (112) procedureDeclaration -> . procedureHeading SCOLON procedureBody IDENT
    (113) procedureHeading -> . KEY_PROCEDURE IDENT formalParameters COLON type
    (114) procedureHeading -> . KEY_PROCEDURE IDENT formalParameters

  ! shift/reduce conflict for KEY_PROCEDURE resolved as shift
    KEY_BEGIN       reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_CONST       reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_TYPE        reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_VAR         reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_PROCEDURE   shift and go to state 17
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


<<<<<<< HEAD
state 14

    (111) procedureHeading -> KEY_PROCEDURE . IDENT formalParameters COLON type
    (112) procedureHeading -> KEY_PROCEDURE . IDENT formalParameters
=======
    procedureDeclaration           shift and go to state 18
    procedureHeading               shift and go to state 19

state 10
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    IDENT           shift and go to state 25


state 15

<<<<<<< HEAD
    (110) procedureDeclaration -> procedureHeading . SCOLON procedureBody IDENT

    SCOLON          shift and go to state 26


state 16

    (10) typess -> empty .

    IDENT           reduce using rule 10 (typess -> empty .)
    KEY_BEGIN       reduce using rule 10 (typess -> empty .)
    KEY_CONST       reduce using rule 10 (typess -> empty .)
    KEY_TYPE        reduce using rule 10 (typess -> empty .)
    KEY_VAR         reduce using rule 10 (typess -> empty .)
    KEY_PROCEDURE   reduce using rule 10 (typess -> empty .)


state 17

    (3) declarationSequence -> declarationSequence KEY_TYPE typess .
    (9) typess -> typess . typeDeclaration SCOLON
    (83) typeDeclaration -> . IDENT EQUAL type

    KEY_BEGIN       reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_CONST       reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_TYPE        reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_VAR         reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_PROCEDURE   reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    IDENT           shift and go to state 27

    typeDeclaration                shift and go to state 28

state 18

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence . KEY_END IDENT DOT
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 30
    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    identdef                       shift and go to state 32
    switchStatement                shift and go to state 55
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    statement                      shift and go to state 66
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    assignment                     shift and go to state 63
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 70
    designator                     shift and go to state 65

state 19
=======
state 11

    (4) declarationSequence -> declarationSequence KEY_VAR . varss
    (11) varss -> . varss variableDeclaration SCOLON
    (12) varss -> . empty
    (174) empty -> .

    IDENT           reduce using rule 174 (empty -> .)
    KEY_BEGIN       reduce using rule 174 (empty -> .)
    KEY_CONST       reduce using rule 174 (empty -> .)
    KEY_TYPE        reduce using rule 174 (empty -> .)
    KEY_VAR         reduce using rule 174 (empty -> .)
    KEY_PROCEDURE   reduce using rule 174 (empty -> .)

    varss                          shift and go to state 20
    empty                          shift and go to state 21

state 12

    (2) declarationSequence -> declarationSequence KEY_CONST . conss
    (7) conss -> . conss constantDeclaration SCOLON
    (8) conss -> . empty
    (174) empty -> .

    IDENT           reduce using rule 174 (empty -> .)
    KEY_BEGIN       reduce using rule 174 (empty -> .)
    KEY_CONST       reduce using rule 174 (empty -> .)
    KEY_TYPE        reduce using rule 174 (empty -> .)
    KEY_VAR         reduce using rule 174 (empty -> .)
    KEY_PROCEDURE   reduce using rule 174 (empty -> .)

    conss                          shift and go to state 23
    empty                          shift and go to state 22

state 13

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence . KEY_END IDENT DOT
    (15) statementSequence -> statementSequence . statement SCOLON
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (174) empty -> .
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 66
    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ifStatement                    shift and go to state 47
    ioStatement                    shift and go to state 24
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    forStatement                   shift and go to state 33
    fileStatement                  shift and go to state 32
    designator                     shift and go to state 54
    memoryalloc                    shift and go to state 55
    doWhileStatement               shift and go to state 59
    switchStatement                shift and go to state 46
    assignment                     shift and go to state 25
    empty                          shift and go to state 63
    qualident                      shift and go to state 56
    identdef                       shift and go to state 36
    procedureCall                  shift and go to state 53

state 14
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (16) statementSequence -> empty .

    KEY_END         reduce using rule 16 (statementSequence -> empty .)
    KEY_EXIT        reduce using rule 16 (statementSequence -> empty .)
    KEY_RETURN      reduce using rule 16 (statementSequence -> empty .)
    KEY_BREAK       reduce using rule 16 (statementSequence -> empty .)
    KEY_CONTINUE    reduce using rule 16 (statementSequence -> empty .)
    KEY_IF          reduce using rule 16 (statementSequence -> empty .)
    KEY_SWITCH      reduce using rule 16 (statementSequence -> empty .)
    KEY_WHILE       reduce using rule 16 (statementSequence -> empty .)
    KEY_FOR         reduce using rule 16 (statementSequence -> empty .)
    KEY_DO          reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITE       reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITEINT    reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITEREAL   reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITECHAR   reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITEBOOL   reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITELN     reduce using rule 16 (statementSequence -> empty .)
    KEY_READ        reduce using rule 16 (statementSequence -> empty .)
    KEY_READINT     reduce using rule 16 (statementSequence -> empty .)
    KEY_READREAL    reduce using rule 16 (statementSequence -> empty .)
    KEY_READCHAR    reduce using rule 16 (statementSequence -> empty .)
    KEY_READBOOL    reduce using rule 16 (statementSequence -> empty .)
    KEY_FCLOSE      reduce using rule 16 (statementSequence -> empty .)
    KEY_FPRINTF     reduce using rule 16 (statementSequence -> empty .)
    KEY_FREAD       reduce using rule 16 (statementSequence -> empty .)
    KEY_NEW         reduce using rule 16 (statementSequence -> empty .)
    IDENT           reduce using rule 16 (statementSequence -> empty .)
    AT              reduce using rule 16 (statementSequence -> empty .)
    SCOLON          reduce using rule 16 (statementSequence -> empty .)
    KEY_ELSE        reduce using rule 16 (statementSequence -> empty .)
    KEY_ELSEIF      reduce using rule 16 (statementSequence -> empty .)
    KEY_CASE        reduce using rule 16 (statementSequence -> empty .)


<<<<<<< HEAD
state 20
=======
state 15
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (10) typess -> empty .

<<<<<<< HEAD
    KEY_BEGIN       reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_CONST       reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_TYPE        reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_VAR         reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_PROCEDURE   reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    IDENT           shift and go to state 72

    variableDeclaration            shift and go to state 74
    identList                      shift and go to state 73
=======
    IDENT           reduce using rule 10 (typess -> empty .)
    KEY_BEGIN       reduce using rule 10 (typess -> empty .)
    KEY_CONST       reduce using rule 10 (typess -> empty .)
    KEY_TYPE        reduce using rule 10 (typess -> empty .)
    KEY_VAR         reduce using rule 10 (typess -> empty .)
    KEY_PROCEDURE   reduce using rule 10 (typess -> empty .)


state 16

    (3) declarationSequence -> declarationSequence KEY_TYPE typess .
    (9) typess -> typess . typeDeclaration SCOLON
    (85) typeDeclaration -> . IDENT EQUAL type

    KEY_BEGIN       reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_CONST       reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_TYPE        reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_VAR         reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_PROCEDURE   reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    IDENT           shift and go to state 67

    typeDeclaration                shift and go to state 68

state 17

    (113) procedureHeading -> KEY_PROCEDURE . IDENT formalParameters COLON type
    (114) procedureHeading -> KEY_PROCEDURE . IDENT formalParameters

    IDENT           shift and go to state 69


state 18

    (13) procss -> procss procedureDeclaration . SCOLON

    SCOLON          shift and go to state 70


state 19

    (112) procedureDeclaration -> procedureHeading . SCOLON procedureBody IDENT

    SCOLON          shift and go to state 71


state 20

    (4) declarationSequence -> declarationSequence KEY_VAR varss .
    (11) varss -> varss . variableDeclaration SCOLON
    (111) variableDeclaration -> . identList COLON type
    (108) identList -> . identList COMMA IDENT
    (109) identList -> . IDENT

    KEY_BEGIN       reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_CONST       reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_TYPE        reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_VAR         reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_PROCEDURE   reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    IDENT           shift and go to state 72

    identList                      shift and go to state 74
    variableDeclaration            shift and go to state 73
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 21

    (12) varss -> empty .

    IDENT           reduce using rule 12 (varss -> empty .)
    KEY_BEGIN       reduce using rule 12 (varss -> empty .)
    KEY_CONST       reduce using rule 12 (varss -> empty .)
    KEY_TYPE        reduce using rule 12 (varss -> empty .)
    KEY_VAR         reduce using rule 12 (varss -> empty .)
    KEY_PROCEDURE   reduce using rule 12 (varss -> empty .)


state 22

<<<<<<< HEAD
    (2) declarationSequence -> declarationSequence KEY_CONST conss .
    (7) conss -> conss . constantDeclaration SCOLON
    (17) constantDeclaration -> . IDENT ASSIGN expression COLON type

    KEY_BEGIN       reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_CONST       reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_TYPE        reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_VAR         reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_PROCEDURE   reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    IDENT           shift and go to state 75
=======
    (8) conss -> empty .

    IDENT           reduce using rule 8 (conss -> empty .)
    KEY_BEGIN       reduce using rule 8 (conss -> empty .)
    KEY_CONST       reduce using rule 8 (conss -> empty .)
    KEY_TYPE        reduce using rule 8 (conss -> empty .)
    KEY_VAR         reduce using rule 8 (conss -> empty .)
    KEY_PROCEDURE   reduce using rule 8 (conss -> empty .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    constantDeclaration            shift and go to state 76

state 23

<<<<<<< HEAD
    (8) conss -> empty .

    IDENT           reduce using rule 8 (conss -> empty .)
    KEY_BEGIN       reduce using rule 8 (conss -> empty .)
    KEY_CONST       reduce using rule 8 (conss -> empty .)
    KEY_TYPE        reduce using rule 8 (conss -> empty .)
    KEY_VAR         reduce using rule 8 (conss -> empty .)
    KEY_PROCEDURE   reduce using rule 8 (conss -> empty .)
=======
    (2) declarationSequence -> declarationSequence KEY_CONST conss .
    (7) conss -> conss . constantDeclaration SCOLON
    (17) constantDeclaration -> . IDENT ASSIGN expression COLON type

    KEY_BEGIN       reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_CONST       reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_TYPE        reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_VAR         reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_PROCEDURE   reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    IDENT           shift and go to state 76
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    constantDeclaration            shift and go to state 75

state 24

<<<<<<< HEAD
    (13) procss -> procss procedureDeclaration SCOLON .

    KEY_PROCEDURE   reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_CONST       reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_VAR         reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
=======
    (133) statement -> ioStatement .

    SCOLON          reduce using rule 133 (statement -> ioStatement .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 25

<<<<<<< HEAD
    (111) procedureHeading -> KEY_PROCEDURE IDENT . formalParameters COLON type
    (112) procedureHeading -> KEY_PROCEDURE IDENT . formalParameters
    (113) formalParameters -> . LRB fpSection formalss RRB
    (114) formalParameters -> . LRB RRB

    LRB             shift and go to state 77
=======
    (123) statement -> assignment .

    SCOLON          reduce using rule 123 (statement -> assignment .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    formalParameters               shift and go to state 78

state 26

<<<<<<< HEAD
    (110) procedureDeclaration -> procedureHeading SCOLON . procedureBody IDENT
    (120) procedureBody -> . declarationSequence KEY_BEGIN statementSequence KEY_END
    (2) declarationSequence -> . declarationSequence KEY_CONST conss
    (3) declarationSequence -> . declarationSequence KEY_TYPE typess
    (4) declarationSequence -> . declarationSequence KEY_VAR varss
    (5) declarationSequence -> . declarationSequence procss
    (6) declarationSequence -> . empty
    (172) empty -> .

    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_CONST       reduce using rule 172 (empty -> .)
    KEY_TYPE        reduce using rule 172 (empty -> .)
    KEY_VAR         reduce using rule 172 (empty -> .)
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

    declarationSequence            shift and go to state 80
    procedureBody                  shift and go to state 79
    empty                          shift and go to state 6

state 27

    (83) typeDeclaration -> IDENT . EQUAL type

    EQUAL           shift and go to state 81
=======
    (157) doWhileStatement -> KEY_DO . KEY_BEGIN statementSequence KEY_END KEY_WHILE expression

    KEY_BEGIN       shift and go to state 77


state 27

    (127) statement -> whileStatement .

    SCOLON          reduce using rule 127 (statement -> whileStatement .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 28

<<<<<<< HEAD
    (9) typess -> typess typeDeclaration . SCOLON

    SCOLON          shift and go to state 82
=======
    (161) ioStatement -> KEY_WRITECHAR . LRB expression RRB

    LRB             shift and go to state 78
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 29

<<<<<<< HEAD
    (131) statement -> ioStatement .

    SCOLON          reduce using rule 131 (statement -> ioStatement .)
=======
    (159) ioStatement -> KEY_WRITEINT . LRB expression RRB

    LRB             shift and go to state 79
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 30

<<<<<<< HEAD
    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END . IDENT DOT

    IDENT           shift and go to state 83
=======
    (163) ioStatement -> KEY_WRITELN . LRB expression RRB
    (164) ioStatement -> KEY_WRITELN . LRB RRB

    LRB             shift and go to state 80
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 31

<<<<<<< HEAD
    (169) fileStatement -> KEY_FCLOSE . LRB identdef RRB

    LRB             shift and go to state 84
=======
    (15) statementSequence -> statementSequence statement . SCOLON

    SCOLON          shift and go to state 81
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 32

<<<<<<< HEAD
    (168) fileStatement -> identdef . EQUAL KEY_FOPEN LRB string COMMA char RRB
    (60) qualident -> identdef .
    (61) qualident -> identdef . DOT qualident

  ! shift/reduce conflict for DOT resolved as shift
    EQUAL           shift and go to state 86
    LSB             reduce using rule 60 (qualident -> identdef .)
    LRB             reduce using rule 60 (qualident -> identdef .)
    ASSIGN          reduce using rule 60 (qualident -> identdef .)
    SCOLON          reduce using rule 60 (qualident -> identdef .)
    DOT             shift and go to state 85

  ! DOT             [ reduce using rule 60 (qualident -> identdef .) ]
=======
    (134) statement -> fileStatement .

    SCOLON          reduce using rule 134 (statement -> fileStatement .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 33

<<<<<<< HEAD
    (122) statement -> procedureCall .

    SCOLON          reduce using rule 122 (statement -> procedureCall .)
=======
    (128) statement -> forStatement .

    SCOLON          reduce using rule 128 (statement -> forStatement .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 34

<<<<<<< HEAD
    (156) ioStatement -> KEY_WRITE . LRB expression RRB

    LRB             shift and go to state 87
=======
    (65) identdef -> AT . IDENT

    IDENT           shift and go to state 82
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 35

<<<<<<< HEAD
    (157) ioStatement -> KEY_WRITEINT . LRB expression RRB

    LRB             shift and go to state 88
=======
    (136) statement -> KEY_CONTINUE .

    SCOLON          reduce using rule 136 (statement -> KEY_CONTINUE .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 36

<<<<<<< HEAD
    (167) ioStatement -> KEY_READBOOL . LRB expression RRB

    LRB             shift and go to state 89
=======
    (170) fileStatement -> identdef . EQUAL KEY_FOPEN LRB string COMMA char RRB
    (62) qualident -> identdef .
    (63) qualident -> identdef . DOT qualident

  ! shift/reduce conflict for DOT resolved as shift
    EQUAL           shift and go to state 83
    LSB             reduce using rule 62 (qualident -> identdef .)
    LRB             reduce using rule 62 (qualident -> identdef .)
    ASSIGN          reduce using rule 62 (qualident -> identdef .)
    SCOLON          reduce using rule 62 (qualident -> identdef .)
    DOT             shift and go to state 84

  ! DOT             [ reduce using rule 62 (qualident -> identdef .) ]
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 37

<<<<<<< HEAD
    (123) statement -> ifStatement .

    SCOLON          reduce using rule 123 (statement -> ifStatement .)
=======
    (130) statement -> KEY_EXIT .

    SCOLON          reduce using rule 130 (statement -> KEY_EXIT .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 38

<<<<<<< HEAD
    (134) statement -> KEY_CONTINUE .

    SCOLON          reduce using rule 134 (statement -> KEY_CONTINUE .)
=======
    (135) statement -> KEY_BREAK .

    SCOLON          reduce using rule 135 (statement -> KEY_BREAK .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 39

<<<<<<< HEAD
    (129) statement -> KEY_RETURN . expression
    (130) statement -> KEY_RETURN .
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
=======
    (166) ioStatement -> KEY_READINT . LRB expression RRB

    LRB             shift and go to state 85
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    SCOLON          reduce using rule 130 (statement -> KEY_RETURN .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 98
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 40

<<<<<<< HEAD
    (125) statement -> whileStatement .

    SCOLON          reduce using rule 125 (statement -> whileStatement .)
=======
    (131) statement -> KEY_RETURN . expression
    (132) statement -> KEY_RETURN .
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    SCOLON          reduce using rule 132 (statement -> KEY_RETURN .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    expression                     shift and go to state 104
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 41

<<<<<<< HEAD
    (137) statement -> setStatement .

    SCOLON          reduce using rule 137 (statement -> setStatement .)


state 42

    (126) statement -> forStatement .

    SCOLON          reduce using rule 126 (statement -> forStatement .)
=======
    (146) ifStatement -> KEY_IF . expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> KEY_IF . expression KEY_THEN statementSequence ifss KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 118
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    char                           shift and go to state 105
    string                         shift and go to state 87
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 42

    (143) memoryalloc -> KEY_NEW . LRB designator RRB

    LRB             shift and go to state 119
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 43

<<<<<<< HEAD
    (170) fileStatement -> KEY_FPRINTF . LRB identdef COMMA string RRB
=======
    (168) ioStatement -> KEY_READCHAR . LRB expression RRB
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    LRB             shift and go to state 120


state 44

<<<<<<< HEAD
    (133) statement -> KEY_BREAK .

    SCOLON          reduce using rule 133 (statement -> KEY_BREAK .)
=======
    (158) ioStatement -> KEY_WRITE . LRB expression RRB

    LRB             shift and go to state 121
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 45

<<<<<<< HEAD
    (159) ioStatement -> KEY_WRITECHAR . LRB expression RRB

    LRB             shift and go to state 121


state 46

    (62) identdef -> IDENT .

    DOT             reduce using rule 62 (identdef -> IDENT .)
    LSB             reduce using rule 62 (identdef -> IDENT .)
    LRB             reduce using rule 62 (identdef -> IDENT .)
    MULTIPLY        reduce using rule 62 (identdef -> IDENT .)
    DIVIDE          reduce using rule 62 (identdef -> IDENT .)
    MODULUS         reduce using rule 62 (identdef -> IDENT .)
    AND             reduce using rule 62 (identdef -> IDENT .)
    PLUS            reduce using rule 62 (identdef -> IDENT .)
    MINUS           reduce using rule 62 (identdef -> IDENT .)
    OR              reduce using rule 62 (identdef -> IDENT .)
    EQUAL           reduce using rule 62 (identdef -> IDENT .)
    NEQUAL          reduce using rule 62 (identdef -> IDENT .)
    LT              reduce using rule 62 (identdef -> IDENT .)
    LTEQ            reduce using rule 62 (identdef -> IDENT .)
    GT              reduce using rule 62 (identdef -> IDENT .)
    GTEQ            reduce using rule 62 (identdef -> IDENT .)
    KEY_IN          reduce using rule 62 (identdef -> IDENT .)
    KEY_IS          reduce using rule 62 (identdef -> IDENT .)
    RRB             reduce using rule 62 (identdef -> IDENT .)
    ASSIGN          reduce using rule 62 (identdef -> IDENT .)
    SCOLON          reduce using rule 62 (identdef -> IDENT .)
    COMMA           reduce using rule 62 (identdef -> IDENT .)
    RSB             reduce using rule 62 (identdef -> IDENT .)
    KEY_BEGIN       reduce using rule 62 (identdef -> IDENT .)
    KEY_THEN        reduce using rule 62 (identdef -> IDENT .)
    COLON           reduce using rule 62 (identdef -> IDENT .)
    KEY_OF          reduce using rule 62 (identdef -> IDENT .)
    RCB             reduce using rule 62 (identdef -> IDENT .)


state 47

    (171) fileStatement -> KEY_FREAD . LRB identdef COMMA identdef COMMA VINTEGER RRB
=======
    (156) forStatement -> KEY_FOR . LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    LRB             shift and go to state 122


<<<<<<< HEAD
state 48

    (63) identdef -> AT . IDENT

    IDENT           shift and go to state 123


state 49

    (165) ioStatement -> KEY_READREAL . LRB expression RRB

    LRB             shift and go to state 124


state 50

    (164) ioStatement -> KEY_READINT . LRB expression RRB

    LRB             shift and go to state 125


state 51

    (148) switchStatement -> KEY_SWITCH . expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH . expression KEY_BEGIN case casess KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    term                           shift and go to state 113
    expression                     shift and go to state 126
    string                         shift and go to state 103
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 52

    (153) whileStatement -> KEY_WHILE . expression KEY_BEGIN statementSequence KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    string                         shift and go to state 103
    expression                     shift and go to state 127
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
state 46

    (126) statement -> switchStatement .

    SCOLON          reduce using rule 126 (statement -> switchStatement .)


state 47

    (125) statement -> ifStatement .

    SCOLON          reduce using rule 125 (statement -> ifStatement .)


state 48

    (169) ioStatement -> KEY_READBOOL . LRB expression RRB

    LRB             shift and go to state 123
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 53

<<<<<<< HEAD
    (154) forStatement -> KEY_FOR . LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    LRB             shift and go to state 128
=======
state 49

    (139) statement -> setStatement .

    SCOLON          reduce using rule 139 (statement -> setStatement .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 54

<<<<<<< HEAD
    (155) doWhileStatement -> KEY_DO . KEY_BEGIN statementSequence KEY_END KEY_WHILE expression

    KEY_BEGIN       shift and go to state 129
=======
    (171) fileStatement -> KEY_FCLOSE . LRB identdef RRB

    LRB             shift and go to state 124
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 55

<<<<<<< HEAD
    (124) statement -> switchStatement .

    SCOLON          reduce using rule 124 (statement -> switchStatement .)
=======
    (64) identdef -> IDENT .

    DOT             reduce using rule 64 (identdef -> IDENT .)
    LSB             reduce using rule 64 (identdef -> IDENT .)
    LRB             reduce using rule 64 (identdef -> IDENT .)
    ASSIGN          reduce using rule 64 (identdef -> IDENT .)
    SCOLON          reduce using rule 64 (identdef -> IDENT .)
    MULTIPLY        reduce using rule 64 (identdef -> IDENT .)
    DIVIDE          reduce using rule 64 (identdef -> IDENT .)
    MODULUS         reduce using rule 64 (identdef -> IDENT .)
    AND             reduce using rule 64 (identdef -> IDENT .)
    PLUS            reduce using rule 64 (identdef -> IDENT .)
    MINUS           reduce using rule 64 (identdef -> IDENT .)
    OR              reduce using rule 64 (identdef -> IDENT .)
    EQUAL           reduce using rule 64 (identdef -> IDENT .)
    NEQUAL          reduce using rule 64 (identdef -> IDENT .)
    LT              reduce using rule 64 (identdef -> IDENT .)
    LTEQ            reduce using rule 64 (identdef -> IDENT .)
    GT              reduce using rule 64 (identdef -> IDENT .)
    GTEQ            reduce using rule 64 (identdef -> IDENT .)
    KEY_IN          reduce using rule 64 (identdef -> IDENT .)
    KEY_IS          reduce using rule 64 (identdef -> IDENT .)
    KEY_THEN        reduce using rule 64 (identdef -> IDENT .)
    KEY_BEGIN       reduce using rule 64 (identdef -> IDENT .)
    RRB             reduce using rule 64 (identdef -> IDENT .)
    COMMA           reduce using rule 64 (identdef -> IDENT .)
    COLON           reduce using rule 64 (identdef -> IDENT .)
    RSB             reduce using rule 64 (identdef -> IDENT .)
    KEY_OF          reduce using rule 64 (identdef -> IDENT .)
    RCB             reduce using rule 64 (identdef -> IDENT .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 56

<<<<<<< HEAD
    (132) statement -> fileStatement .

    SCOLON          reduce using rule 132 (statement -> fileStatement .)

=======
    (172) fileStatement -> KEY_FPRINTF . LRB identdef COMMA string RRB

    LRB             shift and go to state 125
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 57

    (141) memoryalloc -> KEY_NEW . LRB designator RRB

<<<<<<< HEAD
    LRB             shift and go to state 130

=======
    (124) statement -> procedureCall .

    SCOLON          reduce using rule 124 (statement -> procedureCall .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 58

    (166) ioStatement -> KEY_READCHAR . LRB expression RRB

<<<<<<< HEAD
    LRB             shift and go to state 131


state 59

    (144) ifStatement -> KEY_IF . expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF . expression KEY_THEN statementSequence ifss KEY_END
=======
    (140) assignment -> designator . ASSIGN expression
    (144) procedureCall -> designator . actualParameters
    (145) procedureCall -> designator .
    (68) actualParameters -> . LRB expList RRB
    (69) actualParameters -> . LRB RRB

    ASSIGN          shift and go to state 128
    SCOLON          reduce using rule 145 (procedureCall -> designator .)
    LRB             shift and go to state 126

    actualParameters               shift and go to state 127

state 55

    (138) statement -> memoryalloc .

    SCOLON          reduce using rule 138 (statement -> memoryalloc .)


state 56

    (141) setStatement -> qualident . DOT KEY_ADD LRB expression RRB
    (142) setStatement -> qualident . DOT KEY_DEL LRB expression RRB
    (57) designator -> qualident . designator2
    (58) designator2 -> . designator2 DOT identdef
    (59) designator2 -> . designator2 LSB expList RSB
    (60) designator2 -> . designator2 LRB qualident RRB
    (61) designator2 -> . empty
    (174) empty -> .

  ! shift/reduce conflict for DOT resolved as shift
    DOT             shift and go to state 130
    LSB             reduce using rule 174 (empty -> .)
    LRB             reduce using rule 174 (empty -> .)
    ASSIGN          reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

  ! DOT             [ reduce using rule 174 (empty -> .) ]

    empty                          shift and go to state 131
    designator2                    shift and go to state 129

state 57

    (165) ioStatement -> KEY_READ . LRB expression RRB

    LRB             shift and go to state 132


state 58

    (150) switchStatement -> KEY_SWITCH . expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> KEY_SWITCH . expression KEY_BEGIN case casess KEY_END
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    expression                     shift and go to state 132
    term                           shift and go to state 113
    string                         shift and go to state 103
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 60

    (139) setStatement -> qualident . DOT KEY_ADD LRB expression RRB
    (140) setStatement -> qualident . DOT KEY_DEL LRB expression RRB
    (55) designator -> qualident . designator2
    (56) designator2 -> . designator2 DOT identdef
    (57) designator2 -> . designator2 LSB expList RSB
    (58) designator2 -> . designator2 LRB qualident RRB
    (59) designator2 -> . empty
    (172) empty -> .

  ! shift/reduce conflict for DOT resolved as shift
    DOT             shift and go to state 135
    LSB             reduce using rule 172 (empty -> .)
    LRB             reduce using rule 172 (empty -> .)
    ASSIGN          reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

  ! DOT             [ reduce using rule 172 (empty -> .) ]

    designator2                    shift and go to state 133
    empty                          shift and go to state 134

state 61

    (160) ioStatement -> KEY_WRITEBOOL . LRB expression RRB

    LRB             shift and go to state 136
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 133
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    string                         shift and go to state 87
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 59

    (129) statement -> doWhileStatement .

    SCOLON          reduce using rule 129 (statement -> doWhileStatement .)


state 60

    (155) whileStatement -> KEY_WHILE . expression KEY_BEGIN statementSequence KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 134
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 61

    (162) ioStatement -> KEY_WRITEBOOL . LRB expression RRB

    LRB             shift and go to state 135
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 62

<<<<<<< HEAD
    (127) statement -> doWhileStatement .

    SCOLON          reduce using rule 127 (statement -> doWhileStatement .)
=======
    (160) ioStatement -> KEY_WRITEREAL . LRB expression RRB

    LRB             shift and go to state 136
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 63

<<<<<<< HEAD
    (121) statement -> assignment .

    SCOLON          reduce using rule 121 (statement -> assignment .)
=======
    (137) statement -> empty .

    SCOLON          reduce using rule 137 (statement -> empty .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 64

<<<<<<< HEAD
    (158) ioStatement -> KEY_WRITEREAL . LRB expression RRB

    LRB             shift and go to state 137


state 65

    (138) assignment -> designator . ASSIGN expression
    (142) procedureCall -> designator . actualParameters
    (143) procedureCall -> designator .
    (66) actualParameters -> . LRB expList RRB
    (67) actualParameters -> . LRB RRB

    ASSIGN          shift and go to state 140
    SCOLON          reduce using rule 143 (procedureCall -> designator .)
=======
    (173) fileStatement -> KEY_FREAD . LRB identdef COMMA identdef COMMA VINTEGER RRB

    LRB             shift and go to state 137


state 65

    (167) ioStatement -> KEY_READREAL . LRB expression RRB

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    LRB             shift and go to state 138

    actualParameters               shift and go to state 139

state 66

<<<<<<< HEAD
    (15) statementSequence -> statementSequence statement . SCOLON

    SCOLON          shift and go to state 141
=======
    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END . IDENT DOT

    IDENT           shift and go to state 139
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 67

<<<<<<< HEAD
    (136) statement -> memoryalloc .

    SCOLON          reduce using rule 136 (statement -> memoryalloc .)
=======
    (85) typeDeclaration -> IDENT . EQUAL type

    EQUAL           shift and go to state 140
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 68

<<<<<<< HEAD
    (128) statement -> KEY_EXIT .

    SCOLON          reduce using rule 128 (statement -> KEY_EXIT .)
=======
    (9) typess -> typess typeDeclaration . SCOLON

    SCOLON          shift and go to state 141
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 69

<<<<<<< HEAD
    (163) ioStatement -> KEY_READ . LRB expression RRB
=======
    (113) procedureHeading -> KEY_PROCEDURE IDENT . formalParameters COLON type
    (114) procedureHeading -> KEY_PROCEDURE IDENT . formalParameters
    (115) formalParameters -> . LRB fpSection formalss RRB
    (116) formalParameters -> . LRB RRB
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    LRB             shift and go to state 142

    formalParameters               shift and go to state 143

state 70

<<<<<<< HEAD
    (135) statement -> empty .

    SCOLON          reduce using rule 135 (statement -> empty .)
=======
    (13) procss -> procss procedureDeclaration SCOLON .

    KEY_PROCEDURE   reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_CONST       reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_VAR         reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 71

<<<<<<< HEAD
    (161) ioStatement -> KEY_WRITELN . LRB expression RRB
    (162) ioStatement -> KEY_WRITELN . LRB RRB

    LRB             shift and go to state 143
=======
    (112) procedureDeclaration -> procedureHeading SCOLON . procedureBody IDENT
    (122) procedureBody -> . declarationSequence KEY_BEGIN statementSequence KEY_END
    (2) declarationSequence -> . declarationSequence KEY_CONST conss
    (3) declarationSequence -> . declarationSequence KEY_TYPE typess
    (4) declarationSequence -> . declarationSequence KEY_VAR varss
    (5) declarationSequence -> . declarationSequence procss
    (6) declarationSequence -> . empty
    (174) empty -> .

    KEY_BEGIN       reduce using rule 174 (empty -> .)
    KEY_CONST       reduce using rule 174 (empty -> .)
    KEY_TYPE        reduce using rule 174 (empty -> .)
    KEY_VAR         reduce using rule 174 (empty -> .)
    KEY_PROCEDURE   reduce using rule 174 (empty -> .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    declarationSequence            shift and go to state 144
    empty                          shift and go to state 6
    procedureBody                  shift and go to state 145

state 72

<<<<<<< HEAD
    (107) identList -> IDENT .

    COLON           reduce using rule 107 (identList -> IDENT .)
    COMMA           reduce using rule 107 (identList -> IDENT .)
=======
    (109) identList -> IDENT .

    COLON           reduce using rule 109 (identList -> IDENT .)
    COMMA           reduce using rule 109 (identList -> IDENT .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 73

<<<<<<< HEAD
    (109) variableDeclaration -> identList . COLON type
    (106) identList -> identList . COMMA IDENT

    COLON           shift and go to state 144
    COMMA           shift and go to state 145
=======
    (11) varss -> varss variableDeclaration . SCOLON

    SCOLON          shift and go to state 146
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 74

<<<<<<< HEAD
    (11) varss -> varss variableDeclaration . SCOLON

    SCOLON          shift and go to state 146
=======
    (111) variableDeclaration -> identList . COLON type
    (108) identList -> identList . COMMA IDENT

    COLON           shift and go to state 148
    COMMA           shift and go to state 147
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 75

<<<<<<< HEAD
    (17) constantDeclaration -> IDENT . ASSIGN expression COLON type

    ASSIGN          shift and go to state 147
=======
    (7) conss -> conss constantDeclaration . SCOLON

    SCOLON          shift and go to state 149
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 76

<<<<<<< HEAD
    (7) conss -> conss constantDeclaration . SCOLON

    SCOLON          shift and go to state 148
=======
    (17) constantDeclaration -> IDENT . ASSIGN expression COLON type

    ASSIGN          shift and go to state 150
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 77

<<<<<<< HEAD
    (113) formalParameters -> LRB . fpSection formalss RRB
    (114) formalParameters -> LRB . RRB
    (117) fpSection -> . IDENT fps COLON type

    RRB             shift and go to state 151
    IDENT           shift and go to state 150

    fpSection                      shift and go to state 149

state 78

    (111) procedureHeading -> KEY_PROCEDURE IDENT formalParameters . COLON type
    (112) procedureHeading -> KEY_PROCEDURE IDENT formalParameters .

    COLON           shift and go to state 152
    SCOLON          reduce using rule 112 (procedureHeading -> KEY_PROCEDURE IDENT formalParameters .)


state 79

    (110) procedureDeclaration -> procedureHeading SCOLON procedureBody . IDENT

    IDENT           shift and go to state 153


state 80

    (120) procedureBody -> declarationSequence . KEY_BEGIN statementSequence KEY_END
    (2) declarationSequence -> declarationSequence . KEY_CONST conss
    (3) declarationSequence -> declarationSequence . KEY_TYPE typess
    (4) declarationSequence -> declarationSequence . KEY_VAR varss
    (5) declarationSequence -> declarationSequence . procss
    (13) procss -> . procss procedureDeclaration SCOLON
    (14) procss -> . empty
    (172) empty -> .

  ! shift/reduce conflict for KEY_BEGIN resolved as shift
  ! shift/reduce conflict for KEY_CONST resolved as shift
  ! shift/reduce conflict for KEY_TYPE resolved as shift
  ! shift/reduce conflict for KEY_VAR resolved as shift
    KEY_BEGIN       shift and go to state 154
    KEY_CONST       shift and go to state 12
    KEY_TYPE        shift and go to state 8
    KEY_VAR         shift and go to state 10
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

  ! KEY_BEGIN       [ reduce using rule 172 (empty -> .) ]
  ! KEY_CONST       [ reduce using rule 172 (empty -> .) ]
  ! KEY_TYPE        [ reduce using rule 172 (empty -> .) ]
  ! KEY_VAR         [ reduce using rule 172 (empty -> .) ]

    empty                          shift and go to state 11
    procss                         shift and go to state 7

state 81

    (83) typeDeclaration -> IDENT EQUAL . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 168
    KEY_INTEGER     shift and go to state 157
    KEY_BOOLEAN     shift and go to state 163
    KEY_CHAR        shift and go to state 160
    KEY_STRING      shift and go to state 164
    KEY_REAL        shift and go to state 158
    KEY_SET         shift and go to state 161
    KEY_ARRAY       shift and go to state 155
    KEY_RECORD      shift and go to state 169
    KEY_POINTER     shift and go to state 165

    recordType                     shift and go to state 162
    pointerType                    shift and go to state 167
    varType                        shift and go to state 156
    arrayType                      shift and go to state 159
    type                           shift and go to state 166

state 82

    (9) typess -> typess typeDeclaration SCOLON .

    IDENT           reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_CONST       reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_VAR         reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)


state 83

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT . DOT

    DOT             shift and go to state 170


state 84

    (169) fileStatement -> KEY_FCLOSE LRB . identdef RRB
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    identdef                       shift and go to state 171

state 85

    (61) qualident -> identdef DOT . qualident
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    identdef                       shift and go to state 108
    qualident                      shift and go to state 172

state 86

    (168) fileStatement -> identdef EQUAL . KEY_FOPEN LRB string COMMA char RRB

    KEY_FOPEN       shift and go to state 173


state 87

    (156) ioStatement -> KEY_WRITE LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 174
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 88

    (157) ioStatement -> KEY_WRITEINT LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 175
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 89

    (167) ioStatement -> KEY_READBOOL LRB . expression RRB
=======
    (157) doWhileStatement -> KEY_DO KEY_BEGIN . statementSequence KEY_END KEY_WHILE expression
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (174) empty -> .

    KEY_END         reduce using rule 174 (empty -> .)
    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 151
    empty                          shift and go to state 14

state 78

    (161) ioStatement -> KEY_WRITECHAR LRB . expression RRB
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 176
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 152
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 79

<<<<<<< HEAD
    (32) factor -> set .

    MULTIPLY        reduce using rule 32 (factor -> set .)
    DIVIDE          reduce using rule 32 (factor -> set .)
    MODULUS         reduce using rule 32 (factor -> set .)
    AND             reduce using rule 32 (factor -> set .)
    PLUS            reduce using rule 32 (factor -> set .)
    MINUS           reduce using rule 32 (factor -> set .)
    OR              reduce using rule 32 (factor -> set .)
    EQUAL           reduce using rule 32 (factor -> set .)
    NEQUAL          reduce using rule 32 (factor -> set .)
    LT              reduce using rule 32 (factor -> set .)
    LTEQ            reduce using rule 32 (factor -> set .)
    GT              reduce using rule 32 (factor -> set .)
    GTEQ            reduce using rule 32 (factor -> set .)
    KEY_IN          reduce using rule 32 (factor -> set .)
    KEY_IS          reduce using rule 32 (factor -> set .)
    RRB             reduce using rule 32 (factor -> set .)
    RCB             reduce using rule 32 (factor -> set .)
    KEY_OF          reduce using rule 32 (factor -> set .)
    COMMA           reduce using rule 32 (factor -> set .)
    KEY_THEN        reduce using rule 32 (factor -> set .)
    SCOLON          reduce using rule 32 (factor -> set .)
    KEY_BEGIN       reduce using rule 32 (factor -> set .)
    COLON           reduce using rule 32 (factor -> set .)
    RSB             reduce using rule 32 (factor -> set .)

=======
    (159) ioStatement -> KEY_WRITEINT LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 153
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 80

<<<<<<< HEAD
    (52) set -> LCB . element COMMA element RCB
    (53) set -> LCB . RCB
    (54) element -> . expression
=======
    (163) ioStatement -> KEY_WRITELN LRB . expression RRB
    (164) ioStatement -> KEY_WRITELN LRB . RRB
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    RCB             shift and go to state 177
    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 178
    factor                         shift and go to state 112
    element                        shift and go to state 179
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    RRB             shift and go to state 154
    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 155
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 81

    (40) factor -> KEY_INTEGER .

    MULTIPLY        reduce using rule 40 (factor -> KEY_INTEGER .)
    DIVIDE          reduce using rule 40 (factor -> KEY_INTEGER .)
    MODULUS         reduce using rule 40 (factor -> KEY_INTEGER .)
    AND             reduce using rule 40 (factor -> KEY_INTEGER .)
    PLUS            reduce using rule 40 (factor -> KEY_INTEGER .)
    MINUS           reduce using rule 40 (factor -> KEY_INTEGER .)
    OR              reduce using rule 40 (factor -> KEY_INTEGER .)
    EQUAL           reduce using rule 40 (factor -> KEY_INTEGER .)
    NEQUAL          reduce using rule 40 (factor -> KEY_INTEGER .)
    LT              reduce using rule 40 (factor -> KEY_INTEGER .)
    LTEQ            reduce using rule 40 (factor -> KEY_INTEGER .)
    GT              reduce using rule 40 (factor -> KEY_INTEGER .)
    GTEQ            reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_IN          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_IS          reduce using rule 40 (factor -> KEY_INTEGER .)
    RRB             reduce using rule 40 (factor -> KEY_INTEGER .)
    RCB             reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_OF          reduce using rule 40 (factor -> KEY_INTEGER .)
    COMMA           reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_THEN        reduce using rule 40 (factor -> KEY_INTEGER .)
    SCOLON          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_BEGIN       reduce using rule 40 (factor -> KEY_INTEGER .)
    COLON           reduce using rule 40 (factor -> KEY_INTEGER .)
    RSB             reduce using rule 40 (factor -> KEY_INTEGER .)


state 82

    (65) identdef -> AT IDENT .

    DOT             reduce using rule 65 (identdef -> AT IDENT .)
    LSB             reduce using rule 65 (identdef -> AT IDENT .)
    LRB             reduce using rule 65 (identdef -> AT IDENT .)
    ASSIGN          reduce using rule 65 (identdef -> AT IDENT .)
    SCOLON          reduce using rule 65 (identdef -> AT IDENT .)
    MULTIPLY        reduce using rule 65 (identdef -> AT IDENT .)
    DIVIDE          reduce using rule 65 (identdef -> AT IDENT .)
    MODULUS         reduce using rule 65 (identdef -> AT IDENT .)
    AND             reduce using rule 65 (identdef -> AT IDENT .)
    PLUS            reduce using rule 65 (identdef -> AT IDENT .)
    MINUS           reduce using rule 65 (identdef -> AT IDENT .)
    OR              reduce using rule 65 (identdef -> AT IDENT .)
    EQUAL           reduce using rule 65 (identdef -> AT IDENT .)
    NEQUAL          reduce using rule 65 (identdef -> AT IDENT .)
    LT              reduce using rule 65 (identdef -> AT IDENT .)
    LTEQ            reduce using rule 65 (identdef -> AT IDENT .)
    GT              reduce using rule 65 (identdef -> AT IDENT .)
    GTEQ            reduce using rule 65 (identdef -> AT IDENT .)
    KEY_IN          reduce using rule 65 (identdef -> AT IDENT .)
    KEY_IS          reduce using rule 65 (identdef -> AT IDENT .)
    KEY_THEN        reduce using rule 65 (identdef -> AT IDENT .)
    KEY_BEGIN       reduce using rule 65 (identdef -> AT IDENT .)
    RRB             reduce using rule 65 (identdef -> AT IDENT .)
    COMMA           reduce using rule 65 (identdef -> AT IDENT .)
    COLON           reduce using rule 65 (identdef -> AT IDENT .)
    RSB             reduce using rule 65 (identdef -> AT IDENT .)
    KEY_OF          reduce using rule 65 (identdef -> AT IDENT .)
    RCB             reduce using rule 65 (identdef -> AT IDENT .)


state 83

    (170) fileStatement -> identdef EQUAL . KEY_FOPEN LRB string COMMA char RRB

    KEY_FOPEN       shift and go to state 156


state 84

    (63) qualident -> identdef DOT . qualident
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

<<<<<<< HEAD
    (44) factor -> KEY_REAL .

    MULTIPLY        reduce using rule 44 (factor -> KEY_REAL .)
    DIVIDE          reduce using rule 44 (factor -> KEY_REAL .)
    MODULUS         reduce using rule 44 (factor -> KEY_REAL .)
    AND             reduce using rule 44 (factor -> KEY_REAL .)
    PLUS            reduce using rule 44 (factor -> KEY_REAL .)
    MINUS           reduce using rule 44 (factor -> KEY_REAL .)
    OR              reduce using rule 44 (factor -> KEY_REAL .)
    EQUAL           reduce using rule 44 (factor -> KEY_REAL .)
    NEQUAL          reduce using rule 44 (factor -> KEY_REAL .)
    LT              reduce using rule 44 (factor -> KEY_REAL .)
    LTEQ            reduce using rule 44 (factor -> KEY_REAL .)
    GT              reduce using rule 44 (factor -> KEY_REAL .)
    GTEQ            reduce using rule 44 (factor -> KEY_REAL .)
    KEY_IN          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_IS          reduce using rule 44 (factor -> KEY_REAL .)
    RRB             reduce using rule 44 (factor -> KEY_REAL .)
    RCB             reduce using rule 44 (factor -> KEY_REAL .)
    KEY_OF          reduce using rule 44 (factor -> KEY_REAL .)
    COMMA           reduce using rule 44 (factor -> KEY_REAL .)
    KEY_THEN        reduce using rule 44 (factor -> KEY_REAL .)
    SCOLON          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_BEGIN       reduce using rule 44 (factor -> KEY_REAL .)
    COLON           reduce using rule 44 (factor -> KEY_REAL .)
    RSB             reduce using rule 44 (factor -> KEY_REAL .)
=======
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    qualident                      shift and go to state 157
    identdef                       shift and go to state 93

state 85

    (166) ioStatement -> KEY_READINT LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 158
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 86

    (45) factor -> KEY_REAL .

    MULTIPLY        reduce using rule 45 (factor -> KEY_REAL .)
    DIVIDE          reduce using rule 45 (factor -> KEY_REAL .)
    MODULUS         reduce using rule 45 (factor -> KEY_REAL .)
    AND             reduce using rule 45 (factor -> KEY_REAL .)
    PLUS            reduce using rule 45 (factor -> KEY_REAL .)
    MINUS           reduce using rule 45 (factor -> KEY_REAL .)
    OR              reduce using rule 45 (factor -> KEY_REAL .)
    EQUAL           reduce using rule 45 (factor -> KEY_REAL .)
    NEQUAL          reduce using rule 45 (factor -> KEY_REAL .)
    LT              reduce using rule 45 (factor -> KEY_REAL .)
    LTEQ            reduce using rule 45 (factor -> KEY_REAL .)
    GT              reduce using rule 45 (factor -> KEY_REAL .)
    GTEQ            reduce using rule 45 (factor -> KEY_REAL .)
    KEY_IN          reduce using rule 45 (factor -> KEY_REAL .)
    KEY_IS          reduce using rule 45 (factor -> KEY_REAL .)
    RRB             reduce using rule 45 (factor -> KEY_REAL .)
    COMMA           reduce using rule 45 (factor -> KEY_REAL .)
    RSB             reduce using rule 45 (factor -> KEY_REAL .)
    SCOLON          reduce using rule 45 (factor -> KEY_REAL .)
    KEY_THEN        reduce using rule 45 (factor -> KEY_REAL .)
    KEY_BEGIN       reduce using rule 45 (factor -> KEY_REAL .)
    COLON           reduce using rule 45 (factor -> KEY_REAL .)
    KEY_OF          reduce using rule 45 (factor -> KEY_REAL .)
    RCB             reduce using rule 45 (factor -> KEY_REAL .)


state 87

    (31) factor -> string .

    MULTIPLY        reduce using rule 31 (factor -> string .)
    DIVIDE          reduce using rule 31 (factor -> string .)
    MODULUS         reduce using rule 31 (factor -> string .)
    AND             reduce using rule 31 (factor -> string .)
    PLUS            reduce using rule 31 (factor -> string .)
    MINUS           reduce using rule 31 (factor -> string .)
    OR              reduce using rule 31 (factor -> string .)
    EQUAL           reduce using rule 31 (factor -> string .)
    NEQUAL          reduce using rule 31 (factor -> string .)
    LT              reduce using rule 31 (factor -> string .)
    LTEQ            reduce using rule 31 (factor -> string .)
    GT              reduce using rule 31 (factor -> string .)
    GTEQ            reduce using rule 31 (factor -> string .)
    KEY_IN          reduce using rule 31 (factor -> string .)
    KEY_IS          reduce using rule 31 (factor -> string .)
    RRB             reduce using rule 31 (factor -> string .)
    COMMA           reduce using rule 31 (factor -> string .)
    RSB             reduce using rule 31 (factor -> string .)
    SCOLON          reduce using rule 31 (factor -> string .)
    KEY_THEN        reduce using rule 31 (factor -> string .)
    KEY_BEGIN       reduce using rule 31 (factor -> string .)
    COLON           reduce using rule 31 (factor -> string .)
    KEY_OF          reduce using rule 31 (factor -> string .)
    RCB             reduce using rule 31 (factor -> string .)


state 88

    (32) factor -> KEY_NIL . LRB designator RRB

    LRB             shift and go to state 159


state 89

    (22) simpleExpression -> MINUS . term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    char                           shift and go to state 105
    term                           shift and go to state 160
    qualident                      shift and go to state 112
    string                         shift and go to state 87
    factor                         shift and go to state 114
    identdef                       shift and go to state 93
    number                         shift and go to state 92
    set                            shift and go to state 99
    designator                     shift and go to state 111
    boolean                        shift and go to state 103

state 90

    (54) set -> LCB . element COMMA element RCB
    (55) set -> LCB . RCB
    (56) element -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    RCB             shift and go to state 162
    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 161
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    element                        shift and go to state 163
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 91

    (53) string -> VSTRING .

    MULTIPLY        reduce using rule 53 (string -> VSTRING .)
    DIVIDE          reduce using rule 53 (string -> VSTRING .)
    MODULUS         reduce using rule 53 (string -> VSTRING .)
    AND             reduce using rule 53 (string -> VSTRING .)
    PLUS            reduce using rule 53 (string -> VSTRING .)
    MINUS           reduce using rule 53 (string -> VSTRING .)
    OR              reduce using rule 53 (string -> VSTRING .)
    EQUAL           reduce using rule 53 (string -> VSTRING .)
    NEQUAL          reduce using rule 53 (string -> VSTRING .)
    LT              reduce using rule 53 (string -> VSTRING .)
    LTEQ            reduce using rule 53 (string -> VSTRING .)
    GT              reduce using rule 53 (string -> VSTRING .)
    GTEQ            reduce using rule 53 (string -> VSTRING .)
    KEY_IN          reduce using rule 53 (string -> VSTRING .)
    KEY_IS          reduce using rule 53 (string -> VSTRING .)
    KEY_OF          reduce using rule 53 (string -> VSTRING .)
    COMMA           reduce using rule 53 (string -> VSTRING .)
    RRB             reduce using rule 53 (string -> VSTRING .)
    SCOLON          reduce using rule 53 (string -> VSTRING .)
    KEY_THEN        reduce using rule 53 (string -> VSTRING .)
    KEY_BEGIN       reduce using rule 53 (string -> VSTRING .)
    COLON           reduce using rule 53 (string -> VSTRING .)
    RSB             reduce using rule 53 (string -> VSTRING .)
    RCB             reduce using rule 53 (string -> VSTRING .)


state 92

    (28) factor -> number .

    MULTIPLY        reduce using rule 28 (factor -> number .)
    DIVIDE          reduce using rule 28 (factor -> number .)
    MODULUS         reduce using rule 28 (factor -> number .)
    AND             reduce using rule 28 (factor -> number .)
    PLUS            reduce using rule 28 (factor -> number .)
    MINUS           reduce using rule 28 (factor -> number .)
    OR              reduce using rule 28 (factor -> number .)
    EQUAL           reduce using rule 28 (factor -> number .)
    NEQUAL          reduce using rule 28 (factor -> number .)
    LT              reduce using rule 28 (factor -> number .)
    LTEQ            reduce using rule 28 (factor -> number .)
    GT              reduce using rule 28 (factor -> number .)
    GTEQ            reduce using rule 28 (factor -> number .)
    KEY_IN          reduce using rule 28 (factor -> number .)
    KEY_IS          reduce using rule 28 (factor -> number .)
    RRB             reduce using rule 28 (factor -> number .)
    COMMA           reduce using rule 28 (factor -> number .)
    RSB             reduce using rule 28 (factor -> number .)
    SCOLON          reduce using rule 28 (factor -> number .)
    KEY_THEN        reduce using rule 28 (factor -> number .)
    KEY_BEGIN       reduce using rule 28 (factor -> number .)
    COLON           reduce using rule 28 (factor -> number .)
    KEY_OF          reduce using rule 28 (factor -> number .)
    RCB             reduce using rule 28 (factor -> number .)


state 93

    (62) qualident -> identdef .
    (63) qualident -> identdef . DOT qualident

  ! shift/reduce conflict for DOT resolved as shift
    LSB             reduce using rule 62 (qualident -> identdef .)
    LRB             reduce using rule 62 (qualident -> identdef .)
    MULTIPLY        reduce using rule 62 (qualident -> identdef .)
    DIVIDE          reduce using rule 62 (qualident -> identdef .)
    MODULUS         reduce using rule 62 (qualident -> identdef .)
    AND             reduce using rule 62 (qualident -> identdef .)
    PLUS            reduce using rule 62 (qualident -> identdef .)
    MINUS           reduce using rule 62 (qualident -> identdef .)
    OR              reduce using rule 62 (qualident -> identdef .)
    EQUAL           reduce using rule 62 (qualident -> identdef .)
    NEQUAL          reduce using rule 62 (qualident -> identdef .)
    LT              reduce using rule 62 (qualident -> identdef .)
    LTEQ            reduce using rule 62 (qualident -> identdef .)
    GT              reduce using rule 62 (qualident -> identdef .)
    GTEQ            reduce using rule 62 (qualident -> identdef .)
    KEY_IN          reduce using rule 62 (qualident -> identdef .)
    KEY_IS          reduce using rule 62 (qualident -> identdef .)
    RRB             reduce using rule 62 (qualident -> identdef .)
    KEY_THEN        reduce using rule 62 (qualident -> identdef .)
    ASSIGN          reduce using rule 62 (qualident -> identdef .)
    SCOLON          reduce using rule 62 (qualident -> identdef .)
    KEY_BEGIN       reduce using rule 62 (qualident -> identdef .)
    COMMA           reduce using rule 62 (qualident -> identdef .)
    COLON           reduce using rule 62 (qualident -> identdef .)
    RSB             reduce using rule 62 (qualident -> identdef .)
    KEY_OF          reduce using rule 62 (qualident -> identdef .)
    RCB             reduce using rule 62 (qualident -> identdef .)
    DOT             shift and go to state 84

  ! DOT             [ reduce using rule 62 (qualident -> identdef .) ]


state 94

    (51) boolean -> VBOOLEAN .

    MULTIPLY        reduce using rule 51 (boolean -> VBOOLEAN .)
    DIVIDE          reduce using rule 51 (boolean -> VBOOLEAN .)
    MODULUS         reduce using rule 51 (boolean -> VBOOLEAN .)
    AND             reduce using rule 51 (boolean -> VBOOLEAN .)
    PLUS            reduce using rule 51 (boolean -> VBOOLEAN .)
    MINUS           reduce using rule 51 (boolean -> VBOOLEAN .)
    OR              reduce using rule 51 (boolean -> VBOOLEAN .)
    EQUAL           reduce using rule 51 (boolean -> VBOOLEAN .)
    NEQUAL          reduce using rule 51 (boolean -> VBOOLEAN .)
    LT              reduce using rule 51 (boolean -> VBOOLEAN .)
    LTEQ            reduce using rule 51 (boolean -> VBOOLEAN .)
    GT              reduce using rule 51 (boolean -> VBOOLEAN .)
    GTEQ            reduce using rule 51 (boolean -> VBOOLEAN .)
    KEY_IN          reduce using rule 51 (boolean -> VBOOLEAN .)
    KEY_IS          reduce using rule 51 (boolean -> VBOOLEAN .)
    RRB             reduce using rule 51 (boolean -> VBOOLEAN .)
    COMMA           reduce using rule 51 (boolean -> VBOOLEAN .)
    RSB             reduce using rule 51 (boolean -> VBOOLEAN .)
    KEY_BEGIN       reduce using rule 51 (boolean -> VBOOLEAN .)
    SCOLON          reduce using rule 51 (boolean -> VBOOLEAN .)
    KEY_THEN        reduce using rule 51 (boolean -> VBOOLEAN .)
    COLON           reduce using rule 51 (boolean -> VBOOLEAN .)
    KEY_OF          reduce using rule 51 (boolean -> VBOOLEAN .)
    RCB             reduce using rule 51 (boolean -> VBOOLEAN .)


state 95

    (21) simpleExpression -> term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (174) empty -> .

    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    EQUAL           reduce using rule 174 (empty -> .)
    NEQUAL          reduce using rule 174 (empty -> .)
    LT              reduce using rule 174 (empty -> .)
    LTEQ            reduce using rule 174 (empty -> .)
    GT              reduce using rule 174 (empty -> .)
    GTEQ            reduce using rule 174 (empty -> .)
    KEY_IN          reduce using rule 174 (empty -> .)
    KEY_IS          reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_THEN        reduce using rule 174 (empty -> .)
    KEY_BEGIN       reduce using rule 174 (empty -> .)
    RRB             reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    COLON           reduce using rule 174 (empty -> .)
    RSB             reduce using rule 174 (empty -> .)
    KEY_OF          reduce using rule 174 (empty -> .)
    RCB             reduce using rule 174 (empty -> .)

    simpless                       shift and go to state 164
    empty                          shift and go to state 165

state 96

    (18) expression -> simpleExpression .
    (19) expression -> simpleExpression . relation simpleExpression
    (77) relation -> . EQUAL
    (78) relation -> . NEQUAL
    (79) relation -> . LT
    (80) relation -> . LTEQ
    (81) relation -> . GT
    (82) relation -> . GTEQ
    (83) relation -> . KEY_IN
    (84) relation -> . KEY_IS

    KEY_BEGIN       reduce using rule 18 (expression -> simpleExpression .)
    RRB             reduce using rule 18 (expression -> simpleExpression .)
    COMMA           reduce using rule 18 (expression -> simpleExpression .)
    SCOLON          reduce using rule 18 (expression -> simpleExpression .)
    RSB             reduce using rule 18 (expression -> simpleExpression .)
    KEY_THEN        reduce using rule 18 (expression -> simpleExpression .)
    KEY_OF          reduce using rule 18 (expression -> simpleExpression .)
    COLON           reduce using rule 18 (expression -> simpleExpression .)
    RCB             reduce using rule 18 (expression -> simpleExpression .)
    EQUAL           shift and go to state 167
    NEQUAL          shift and go to state 168
    LT              shift and go to state 172
    LTEQ            shift and go to state 169
    GT              shift and go to state 174
    GTEQ            shift and go to state 170
    KEY_IN          shift and go to state 173
    KEY_IS          shift and go to state 171
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    relation                       shift and go to state 166

state 94

<<<<<<< HEAD
    (49) number -> VREAL .

    MULTIPLY        reduce using rule 49 (number -> VREAL .)
    DIVIDE          reduce using rule 49 (number -> VREAL .)
    MODULUS         reduce using rule 49 (number -> VREAL .)
    AND             reduce using rule 49 (number -> VREAL .)
    PLUS            reduce using rule 49 (number -> VREAL .)
    MINUS           reduce using rule 49 (number -> VREAL .)
    OR              reduce using rule 49 (number -> VREAL .)
    EQUAL           reduce using rule 49 (number -> VREAL .)
    NEQUAL          reduce using rule 49 (number -> VREAL .)
    LT              reduce using rule 49 (number -> VREAL .)
    LTEQ            reduce using rule 49 (number -> VREAL .)
    GT              reduce using rule 49 (number -> VREAL .)
    GTEQ            reduce using rule 49 (number -> VREAL .)
    KEY_IN          reduce using rule 49 (number -> VREAL .)
    KEY_IS          reduce using rule 49 (number -> VREAL .)
    RRB             reduce using rule 49 (number -> VREAL .)
    SCOLON          reduce using rule 49 (number -> VREAL .)
    KEY_BEGIN       reduce using rule 49 (number -> VREAL .)
    KEY_THEN        reduce using rule 49 (number -> VREAL .)
    COMMA           reduce using rule 49 (number -> VREAL .)
    COLON           reduce using rule 49 (number -> VREAL .)
    KEY_OF          reduce using rule 49 (number -> VREAL .)
    RSB             reduce using rule 49 (number -> VREAL .)
    RCB             reduce using rule 49 (number -> VREAL .)
=======
    (43) factor -> KEY_CHAR .

    MULTIPLY        reduce using rule 43 (factor -> KEY_CHAR .)
    DIVIDE          reduce using rule 43 (factor -> KEY_CHAR .)
    MODULUS         reduce using rule 43 (factor -> KEY_CHAR .)
    AND             reduce using rule 43 (factor -> KEY_CHAR .)
    PLUS            reduce using rule 43 (factor -> KEY_CHAR .)
    MINUS           reduce using rule 43 (factor -> KEY_CHAR .)
    OR              reduce using rule 43 (factor -> KEY_CHAR .)
    EQUAL           reduce using rule 43 (factor -> KEY_CHAR .)
    NEQUAL          reduce using rule 43 (factor -> KEY_CHAR .)
    LT              reduce using rule 43 (factor -> KEY_CHAR .)
    LTEQ            reduce using rule 43 (factor -> KEY_CHAR .)
    GT              reduce using rule 43 (factor -> KEY_CHAR .)
    GTEQ            reduce using rule 43 (factor -> KEY_CHAR .)
    KEY_IN          reduce using rule 43 (factor -> KEY_CHAR .)
    KEY_IS          reduce using rule 43 (factor -> KEY_CHAR .)
    RRB             reduce using rule 43 (factor -> KEY_CHAR .)
    COMMA           reduce using rule 43 (factor -> KEY_CHAR .)
    RSB             reduce using rule 43 (factor -> KEY_CHAR .)
    SCOLON          reduce using rule 43 (factor -> KEY_CHAR .)
    KEY_THEN        reduce using rule 43 (factor -> KEY_CHAR .)
    KEY_BEGIN       reduce using rule 43 (factor -> KEY_CHAR .)
    COLON           reduce using rule 43 (factor -> KEY_CHAR .)
    KEY_OF          reduce using rule 43 (factor -> KEY_CHAR .)
    RCB             reduce using rule 43 (factor -> KEY_CHAR .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 95

    (18) expression -> simpleExpression .
    (19) expression -> simpleExpression . relation simpleExpression
    (75) relation -> . EQUAL
    (76) relation -> . NEQUAL
    (77) relation -> . LT
    (78) relation -> . LTEQ
    (79) relation -> . GT
    (80) relation -> . GTEQ
    (81) relation -> . KEY_IN
    (82) relation -> . KEY_IS

    RRB             reduce using rule 18 (expression -> simpleExpression .)
    COLON           reduce using rule 18 (expression -> simpleExpression .)
    KEY_BEGIN       reduce using rule 18 (expression -> simpleExpression .)
    KEY_OF          reduce using rule 18 (expression -> simpleExpression .)
    COMMA           reduce using rule 18 (expression -> simpleExpression .)
    KEY_THEN        reduce using rule 18 (expression -> simpleExpression .)
    SCOLON          reduce using rule 18 (expression -> simpleExpression .)
    RSB             reduce using rule 18 (expression -> simpleExpression .)
    RCB             reduce using rule 18 (expression -> simpleExpression .)
    EQUAL           shift and go to state 183
    NEQUAL          shift and go to state 187
    LT              shift and go to state 182
    LTEQ            shift and go to state 180
    GT              shift and go to state 181
    GTEQ            shift and go to state 186
    KEY_IN          shift and go to state 184
    KEY_IS          shift and go to state 188

    relation                       shift and go to state 185

state 96

    (50) char -> VCHAR .

    MULTIPLY        reduce using rule 50 (char -> VCHAR .)
    DIVIDE          reduce using rule 50 (char -> VCHAR .)
    MODULUS         reduce using rule 50 (char -> VCHAR .)
    AND             reduce using rule 50 (char -> VCHAR .)
    PLUS            reduce using rule 50 (char -> VCHAR .)
    MINUS           reduce using rule 50 (char -> VCHAR .)
    OR              reduce using rule 50 (char -> VCHAR .)
    EQUAL           reduce using rule 50 (char -> VCHAR .)
    NEQUAL          reduce using rule 50 (char -> VCHAR .)
    LT              reduce using rule 50 (char -> VCHAR .)
    LTEQ            reduce using rule 50 (char -> VCHAR .)
    GT              reduce using rule 50 (char -> VCHAR .)
    GTEQ            reduce using rule 50 (char -> VCHAR .)
    KEY_IN          reduce using rule 50 (char -> VCHAR .)
    KEY_IS          reduce using rule 50 (char -> VCHAR .)
    KEY_BEGIN       reduce using rule 50 (char -> VCHAR .)
    SCOLON          reduce using rule 50 (char -> VCHAR .)
    KEY_THEN        reduce using rule 50 (char -> VCHAR .)
    RRB             reduce using rule 50 (char -> VCHAR .)
    COMMA           reduce using rule 50 (char -> VCHAR .)
    COLON           reduce using rule 50 (char -> VCHAR .)
    KEY_OF          reduce using rule 50 (char -> VCHAR .)
    RSB             reduce using rule 50 (char -> VCHAR .)
    RCB             reduce using rule 50 (char -> VCHAR .)


state 97

<<<<<<< HEAD
    (42) factor -> KEY_CHAR .

    MULTIPLY        reduce using rule 42 (factor -> KEY_CHAR .)
    DIVIDE          reduce using rule 42 (factor -> KEY_CHAR .)
    MODULUS         reduce using rule 42 (factor -> KEY_CHAR .)
    AND             reduce using rule 42 (factor -> KEY_CHAR .)
    PLUS            reduce using rule 42 (factor -> KEY_CHAR .)
    MINUS           reduce using rule 42 (factor -> KEY_CHAR .)
    OR              reduce using rule 42 (factor -> KEY_CHAR .)
    EQUAL           reduce using rule 42 (factor -> KEY_CHAR .)
    NEQUAL          reduce using rule 42 (factor -> KEY_CHAR .)
    LT              reduce using rule 42 (factor -> KEY_CHAR .)
    LTEQ            reduce using rule 42 (factor -> KEY_CHAR .)
    GT              reduce using rule 42 (factor -> KEY_CHAR .)
    GTEQ            reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_IN          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_IS          reduce using rule 42 (factor -> KEY_CHAR .)
    RRB             reduce using rule 42 (factor -> KEY_CHAR .)
    RCB             reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_OF          reduce using rule 42 (factor -> KEY_CHAR .)
    COMMA           reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_THEN        reduce using rule 42 (factor -> KEY_CHAR .)
    SCOLON          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_BEGIN       reduce using rule 42 (factor -> KEY_CHAR .)
    COLON           reduce using rule 42 (factor -> KEY_CHAR .)
    RSB             reduce using rule 42 (factor -> KEY_CHAR .)


state 98

    (129) statement -> KEY_RETURN expression .

    SCOLON          reduce using rule 129 (statement -> KEY_RETURN expression .)


state 99

    (51) string -> VSTRING .

    MULTIPLY        reduce using rule 51 (string -> VSTRING .)
    DIVIDE          reduce using rule 51 (string -> VSTRING .)
    MODULUS         reduce using rule 51 (string -> VSTRING .)
    AND             reduce using rule 51 (string -> VSTRING .)
    PLUS            reduce using rule 51 (string -> VSTRING .)
    MINUS           reduce using rule 51 (string -> VSTRING .)
    OR              reduce using rule 51 (string -> VSTRING .)
    SCOLON          reduce using rule 51 (string -> VSTRING .)
    KEY_BEGIN       reduce using rule 51 (string -> VSTRING .)
    KEY_THEN        reduce using rule 51 (string -> VSTRING .)
    RRB             reduce using rule 51 (string -> VSTRING .)
    COMMA           reduce using rule 51 (string -> VSTRING .)
    COLON           reduce using rule 51 (string -> VSTRING .)
    KEY_OF          reduce using rule 51 (string -> VSTRING .)
    RSB             reduce using rule 51 (string -> VSTRING .)
    RCB             reduce using rule 51 (string -> VSTRING .)
    EQUAL           reduce using rule 51 (string -> VSTRING .)
    NEQUAL          reduce using rule 51 (string -> VSTRING .)
    LT              reduce using rule 51 (string -> VSTRING .)
    LTEQ            reduce using rule 51 (string -> VSTRING .)
    GT              reduce using rule 51 (string -> VSTRING .)
    GTEQ            reduce using rule 51 (string -> VSTRING .)
    KEY_IN          reduce using rule 51 (string -> VSTRING .)
    KEY_IS          reduce using rule 51 (string -> VSTRING .)
=======
    (36) factor -> LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 175
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 99

    (33) factor -> set .

    MULTIPLY        reduce using rule 33 (factor -> set .)
    DIVIDE          reduce using rule 33 (factor -> set .)
    MODULUS         reduce using rule 33 (factor -> set .)
    AND             reduce using rule 33 (factor -> set .)
    PLUS            reduce using rule 33 (factor -> set .)
    MINUS           reduce using rule 33 (factor -> set .)
    OR              reduce using rule 33 (factor -> set .)
    EQUAL           reduce using rule 33 (factor -> set .)
    NEQUAL          reduce using rule 33 (factor -> set .)
    LT              reduce using rule 33 (factor -> set .)
    LTEQ            reduce using rule 33 (factor -> set .)
    GT              reduce using rule 33 (factor -> set .)
    GTEQ            reduce using rule 33 (factor -> set .)
    KEY_IN          reduce using rule 33 (factor -> set .)
    KEY_IS          reduce using rule 33 (factor -> set .)
    RRB             reduce using rule 33 (factor -> set .)
    COMMA           reduce using rule 33 (factor -> set .)
    RSB             reduce using rule 33 (factor -> set .)
    SCOLON          reduce using rule 33 (factor -> set .)
    KEY_THEN        reduce using rule 33 (factor -> set .)
    KEY_BEGIN       reduce using rule 33 (factor -> set .)
    COLON           reduce using rule 33 (factor -> set .)
    KEY_OF          reduce using rule 33 (factor -> set .)
    RCB             reduce using rule 33 (factor -> set .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 100

<<<<<<< HEAD
    (45) factor -> KEY_SET .

    MULTIPLY        reduce using rule 45 (factor -> KEY_SET .)
    DIVIDE          reduce using rule 45 (factor -> KEY_SET .)
    MODULUS         reduce using rule 45 (factor -> KEY_SET .)
    AND             reduce using rule 45 (factor -> KEY_SET .)
    PLUS            reduce using rule 45 (factor -> KEY_SET .)
    MINUS           reduce using rule 45 (factor -> KEY_SET .)
    OR              reduce using rule 45 (factor -> KEY_SET .)
    EQUAL           reduce using rule 45 (factor -> KEY_SET .)
    NEQUAL          reduce using rule 45 (factor -> KEY_SET .)
    LT              reduce using rule 45 (factor -> KEY_SET .)
    LTEQ            reduce using rule 45 (factor -> KEY_SET .)
    GT              reduce using rule 45 (factor -> KEY_SET .)
    GTEQ            reduce using rule 45 (factor -> KEY_SET .)
    KEY_IN          reduce using rule 45 (factor -> KEY_SET .)
    KEY_IS          reduce using rule 45 (factor -> KEY_SET .)
    RRB             reduce using rule 45 (factor -> KEY_SET .)
    RCB             reduce using rule 45 (factor -> KEY_SET .)
    KEY_OF          reduce using rule 45 (factor -> KEY_SET .)
    COMMA           reduce using rule 45 (factor -> KEY_SET .)
    KEY_THEN        reduce using rule 45 (factor -> KEY_SET .)
    SCOLON          reduce using rule 45 (factor -> KEY_SET .)
    KEY_BEGIN       reduce using rule 45 (factor -> KEY_SET .)
    COLON           reduce using rule 45 (factor -> KEY_SET .)
    RSB             reduce using rule 45 (factor -> KEY_SET .)
=======
    (49) number -> VINTEGER .

    MULTIPLY        reduce using rule 49 (number -> VINTEGER .)
    DIVIDE          reduce using rule 49 (number -> VINTEGER .)
    MODULUS         reduce using rule 49 (number -> VINTEGER .)
    AND             reduce using rule 49 (number -> VINTEGER .)
    PLUS            reduce using rule 49 (number -> VINTEGER .)
    MINUS           reduce using rule 49 (number -> VINTEGER .)
    OR              reduce using rule 49 (number -> VINTEGER .)
    EQUAL           reduce using rule 49 (number -> VINTEGER .)
    NEQUAL          reduce using rule 49 (number -> VINTEGER .)
    LT              reduce using rule 49 (number -> VINTEGER .)
    LTEQ            reduce using rule 49 (number -> VINTEGER .)
    GT              reduce using rule 49 (number -> VINTEGER .)
    GTEQ            reduce using rule 49 (number -> VINTEGER .)
    KEY_IN          reduce using rule 49 (number -> VINTEGER .)
    KEY_IS          reduce using rule 49 (number -> VINTEGER .)
    RRB             reduce using rule 49 (number -> VINTEGER .)
    COLON           reduce using rule 49 (number -> VINTEGER .)
    SCOLON          reduce using rule 49 (number -> VINTEGER .)
    KEY_THEN        reduce using rule 49 (number -> VINTEGER .)
    KEY_BEGIN       reduce using rule 49 (number -> VINTEGER .)
    COMMA           reduce using rule 49 (number -> VINTEGER .)
    RSB             reduce using rule 49 (number -> VINTEGER .)
    KEY_OF          reduce using rule 49 (number -> VINTEGER .)
    RCB             reduce using rule 49 (number -> VINTEGER .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 101

<<<<<<< HEAD
    (35) factor -> LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 189
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 102

    (41) factor -> KEY_BOOLEAN .

    MULTIPLY        reduce using rule 41 (factor -> KEY_BOOLEAN .)
    DIVIDE          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    MODULUS         reduce using rule 41 (factor -> KEY_BOOLEAN .)
    AND             reduce using rule 41 (factor -> KEY_BOOLEAN .)
    PLUS            reduce using rule 41 (factor -> KEY_BOOLEAN .)
    MINUS           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    OR              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    EQUAL           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    NEQUAL          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    LT              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    LTEQ            reduce using rule 41 (factor -> KEY_BOOLEAN .)
    GT              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    GTEQ            reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_IN          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_IS          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    RRB             reduce using rule 41 (factor -> KEY_BOOLEAN .)
    RCB             reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_OF          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    COMMA           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_THEN        reduce using rule 41 (factor -> KEY_BOOLEAN .)
    SCOLON          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_BEGIN       reduce using rule 41 (factor -> KEY_BOOLEAN .)
    COLON           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    RSB             reduce using rule 41 (factor -> KEY_BOOLEAN .)

=======
    (41) factor -> KEY_INTEGER .

    MULTIPLY        reduce using rule 41 (factor -> KEY_INTEGER .)
    DIVIDE          reduce using rule 41 (factor -> KEY_INTEGER .)
    MODULUS         reduce using rule 41 (factor -> KEY_INTEGER .)
    AND             reduce using rule 41 (factor -> KEY_INTEGER .)
    PLUS            reduce using rule 41 (factor -> KEY_INTEGER .)
    MINUS           reduce using rule 41 (factor -> KEY_INTEGER .)
    OR              reduce using rule 41 (factor -> KEY_INTEGER .)
    EQUAL           reduce using rule 41 (factor -> KEY_INTEGER .)
    NEQUAL          reduce using rule 41 (factor -> KEY_INTEGER .)
    LT              reduce using rule 41 (factor -> KEY_INTEGER .)
    LTEQ            reduce using rule 41 (factor -> KEY_INTEGER .)
    GT              reduce using rule 41 (factor -> KEY_INTEGER .)
    GTEQ            reduce using rule 41 (factor -> KEY_INTEGER .)
    KEY_IN          reduce using rule 41 (factor -> KEY_INTEGER .)
    KEY_IS          reduce using rule 41 (factor -> KEY_INTEGER .)
    RRB             reduce using rule 41 (factor -> KEY_INTEGER .)
    COMMA           reduce using rule 41 (factor -> KEY_INTEGER .)
    RSB             reduce using rule 41 (factor -> KEY_INTEGER .)
    SCOLON          reduce using rule 41 (factor -> KEY_INTEGER .)
    KEY_THEN        reduce using rule 41 (factor -> KEY_INTEGER .)
    KEY_BEGIN       reduce using rule 41 (factor -> KEY_INTEGER .)
    COLON           reduce using rule 41 (factor -> KEY_INTEGER .)
    KEY_OF          reduce using rule 41 (factor -> KEY_INTEGER .)
    RCB             reduce using rule 41 (factor -> KEY_INTEGER .)


state 102

    (40) factor -> KEY_ORD . factor
    (48) factor -> KEY_ORD . LRB factor RRB
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    LRB             shift and go to state 177
    KEY_NIL         shift and go to state 88
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    char                           shift and go to state 105
    qualident                      shift and go to state 112
    string                         shift and go to state 87
    factor                         shift and go to state 176
    number                         shift and go to state 92
    set                            shift and go to state 99
    identdef                       shift and go to state 93
    designator                     shift and go to state 111
    boolean                        shift and go to state 103

state 103

    (29) factor -> boolean .

    MULTIPLY        reduce using rule 29 (factor -> boolean .)
    DIVIDE          reduce using rule 29 (factor -> boolean .)
    MODULUS         reduce using rule 29 (factor -> boolean .)
    AND             reduce using rule 29 (factor -> boolean .)
    PLUS            reduce using rule 29 (factor -> boolean .)
    MINUS           reduce using rule 29 (factor -> boolean .)
    OR              reduce using rule 29 (factor -> boolean .)
    EQUAL           reduce using rule 29 (factor -> boolean .)
    NEQUAL          reduce using rule 29 (factor -> boolean .)
    LT              reduce using rule 29 (factor -> boolean .)
    LTEQ            reduce using rule 29 (factor -> boolean .)
    GT              reduce using rule 29 (factor -> boolean .)
    GTEQ            reduce using rule 29 (factor -> boolean .)
    KEY_IN          reduce using rule 29 (factor -> boolean .)
    KEY_IS          reduce using rule 29 (factor -> boolean .)
    RRB             reduce using rule 29 (factor -> boolean .)
    COMMA           reduce using rule 29 (factor -> boolean .)
    RSB             reduce using rule 29 (factor -> boolean .)
    SCOLON          reduce using rule 29 (factor -> boolean .)
    KEY_THEN        reduce using rule 29 (factor -> boolean .)
    KEY_BEGIN       reduce using rule 29 (factor -> boolean .)
    COLON           reduce using rule 29 (factor -> boolean .)
    KEY_OF          reduce using rule 29 (factor -> boolean .)
    RCB             reduce using rule 29 (factor -> boolean .)


state 104

    (131) statement -> KEY_RETURN expression .

    SCOLON          reduce using rule 131 (statement -> KEY_RETURN expression .)


state 105

    (30) factor -> char .

    MULTIPLY        reduce using rule 30 (factor -> char .)
    DIVIDE          reduce using rule 30 (factor -> char .)
    MODULUS         reduce using rule 30 (factor -> char .)
    AND             reduce using rule 30 (factor -> char .)
    PLUS            reduce using rule 30 (factor -> char .)
    MINUS           reduce using rule 30 (factor -> char .)
    OR              reduce using rule 30 (factor -> char .)
    EQUAL           reduce using rule 30 (factor -> char .)
    NEQUAL          reduce using rule 30 (factor -> char .)
    LT              reduce using rule 30 (factor -> char .)
    LTEQ            reduce using rule 30 (factor -> char .)
    GT              reduce using rule 30 (factor -> char .)
    GTEQ            reduce using rule 30 (factor -> char .)
    KEY_IN          reduce using rule 30 (factor -> char .)
    KEY_IS          reduce using rule 30 (factor -> char .)
    RRB             reduce using rule 30 (factor -> char .)
    COMMA           reduce using rule 30 (factor -> char .)
    RSB             reduce using rule 30 (factor -> char .)
    SCOLON          reduce using rule 30 (factor -> char .)
    KEY_THEN        reduce using rule 30 (factor -> char .)
    KEY_BEGIN       reduce using rule 30 (factor -> char .)
    COLON           reduce using rule 30 (factor -> char .)
    KEY_OF          reduce using rule 30 (factor -> char .)
    RCB             reduce using rule 30 (factor -> char .)


state 106

    (38) factor -> KEY_ABS . factor
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    char                           shift and go to state 105
    qualident                      shift and go to state 112
    string                         shift and go to state 87
    factor                         shift and go to state 178
    number                         shift and go to state 92
    set                            shift and go to state 99
    identdef                       shift and go to state 93
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 103

<<<<<<< HEAD
    (30) factor -> string .

    MULTIPLY        reduce using rule 30 (factor -> string .)
    DIVIDE          reduce using rule 30 (factor -> string .)
    MODULUS         reduce using rule 30 (factor -> string .)
    AND             reduce using rule 30 (factor -> string .)
    PLUS            reduce using rule 30 (factor -> string .)
    MINUS           reduce using rule 30 (factor -> string .)
    OR              reduce using rule 30 (factor -> string .)
    EQUAL           reduce using rule 30 (factor -> string .)
    NEQUAL          reduce using rule 30 (factor -> string .)
    LT              reduce using rule 30 (factor -> string .)
    LTEQ            reduce using rule 30 (factor -> string .)
    GT              reduce using rule 30 (factor -> string .)
    GTEQ            reduce using rule 30 (factor -> string .)
    KEY_IN          reduce using rule 30 (factor -> string .)
    KEY_IS          reduce using rule 30 (factor -> string .)
    RRB             reduce using rule 30 (factor -> string .)
    RCB             reduce using rule 30 (factor -> string .)
    KEY_OF          reduce using rule 30 (factor -> string .)
    COMMA           reduce using rule 30 (factor -> string .)
    KEY_THEN        reduce using rule 30 (factor -> string .)
    SCOLON          reduce using rule 30 (factor -> string .)
    KEY_BEGIN       reduce using rule 30 (factor -> string .)
    COLON           reduce using rule 30 (factor -> string .)
    RSB             reduce using rule 30 (factor -> string .)

=======
    (20) simpleExpression -> PLUS . term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    char                           shift and go to state 105
    term                           shift and go to state 179
    qualident                      shift and go to state 112
    string                         shift and go to state 87
    factor                         shift and go to state 114
    identdef                       shift and go to state 93
    number                         shift and go to state 92
    set                            shift and go to state 99
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 104

<<<<<<< HEAD
    (48) number -> VINTEGER .

    MULTIPLY        reduce using rule 48 (number -> VINTEGER .)
    DIVIDE          reduce using rule 48 (number -> VINTEGER .)
    MODULUS         reduce using rule 48 (number -> VINTEGER .)
    AND             reduce using rule 48 (number -> VINTEGER .)
    PLUS            reduce using rule 48 (number -> VINTEGER .)
    MINUS           reduce using rule 48 (number -> VINTEGER .)
    OR              reduce using rule 48 (number -> VINTEGER .)
    EQUAL           reduce using rule 48 (number -> VINTEGER .)
    NEQUAL          reduce using rule 48 (number -> VINTEGER .)
    LT              reduce using rule 48 (number -> VINTEGER .)
    LTEQ            reduce using rule 48 (number -> VINTEGER .)
    GT              reduce using rule 48 (number -> VINTEGER .)
    GTEQ            reduce using rule 48 (number -> VINTEGER .)
    KEY_IN          reduce using rule 48 (number -> VINTEGER .)
    KEY_IS          reduce using rule 48 (number -> VINTEGER .)
    RRB             reduce using rule 48 (number -> VINTEGER .)
    SCOLON          reduce using rule 48 (number -> VINTEGER .)
    KEY_BEGIN       reduce using rule 48 (number -> VINTEGER .)
    KEY_THEN        reduce using rule 48 (number -> VINTEGER .)
    COMMA           reduce using rule 48 (number -> VINTEGER .)
    COLON           reduce using rule 48 (number -> VINTEGER .)
    KEY_OF          reduce using rule 48 (number -> VINTEGER .)
    RSB             reduce using rule 48 (number -> VINTEGER .)
    RCB             reduce using rule 48 (number -> VINTEGER .)
=======
    (50) number -> VREAL .

    MULTIPLY        reduce using rule 50 (number -> VREAL .)
    DIVIDE          reduce using rule 50 (number -> VREAL .)
    MODULUS         reduce using rule 50 (number -> VREAL .)
    AND             reduce using rule 50 (number -> VREAL .)
    PLUS            reduce using rule 50 (number -> VREAL .)
    MINUS           reduce using rule 50 (number -> VREAL .)
    OR              reduce using rule 50 (number -> VREAL .)
    EQUAL           reduce using rule 50 (number -> VREAL .)
    NEQUAL          reduce using rule 50 (number -> VREAL .)
    LT              reduce using rule 50 (number -> VREAL .)
    LTEQ            reduce using rule 50 (number -> VREAL .)
    GT              reduce using rule 50 (number -> VREAL .)
    GTEQ            reduce using rule 50 (number -> VREAL .)
    KEY_IN          reduce using rule 50 (number -> VREAL .)
    KEY_IS          reduce using rule 50 (number -> VREAL .)
    RRB             reduce using rule 50 (number -> VREAL .)
    COLON           reduce using rule 50 (number -> VREAL .)
    SCOLON          reduce using rule 50 (number -> VREAL .)
    KEY_THEN        reduce using rule 50 (number -> VREAL .)
    KEY_BEGIN       reduce using rule 50 (number -> VREAL .)
    COMMA           reduce using rule 50 (number -> VREAL .)
    RSB             reduce using rule 50 (number -> VREAL .)
    KEY_OF          reduce using rule 50 (number -> VREAL .)
    RCB             reduce using rule 50 (number -> VREAL .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 105

<<<<<<< HEAD
    (29) factor -> char .

    MULTIPLY        reduce using rule 29 (factor -> char .)
    DIVIDE          reduce using rule 29 (factor -> char .)
    MODULUS         reduce using rule 29 (factor -> char .)
    AND             reduce using rule 29 (factor -> char .)
    PLUS            reduce using rule 29 (factor -> char .)
    MINUS           reduce using rule 29 (factor -> char .)
    OR              reduce using rule 29 (factor -> char .)
    EQUAL           reduce using rule 29 (factor -> char .)
    NEQUAL          reduce using rule 29 (factor -> char .)
    LT              reduce using rule 29 (factor -> char .)
    LTEQ            reduce using rule 29 (factor -> char .)
    GT              reduce using rule 29 (factor -> char .)
    GTEQ            reduce using rule 29 (factor -> char .)
    KEY_IN          reduce using rule 29 (factor -> char .)
    KEY_IS          reduce using rule 29 (factor -> char .)
    RRB             reduce using rule 29 (factor -> char .)
    RCB             reduce using rule 29 (factor -> char .)
    KEY_OF          reduce using rule 29 (factor -> char .)
    COMMA           reduce using rule 29 (factor -> char .)
    KEY_THEN        reduce using rule 29 (factor -> char .)
    SCOLON          reduce using rule 29 (factor -> char .)
    KEY_BEGIN       reduce using rule 29 (factor -> char .)
    COLON           reduce using rule 29 (factor -> char .)
    RSB             reduce using rule 29 (factor -> char .)
=======
    (44) factor -> KEY_STRING .

    MULTIPLY        reduce using rule 44 (factor -> KEY_STRING .)
    DIVIDE          reduce using rule 44 (factor -> KEY_STRING .)
    MODULUS         reduce using rule 44 (factor -> KEY_STRING .)
    AND             reduce using rule 44 (factor -> KEY_STRING .)
    PLUS            reduce using rule 44 (factor -> KEY_STRING .)
    MINUS           reduce using rule 44 (factor -> KEY_STRING .)
    OR              reduce using rule 44 (factor -> KEY_STRING .)
    EQUAL           reduce using rule 44 (factor -> KEY_STRING .)
    NEQUAL          reduce using rule 44 (factor -> KEY_STRING .)
    LT              reduce using rule 44 (factor -> KEY_STRING .)
    LTEQ            reduce using rule 44 (factor -> KEY_STRING .)
    GT              reduce using rule 44 (factor -> KEY_STRING .)
    GTEQ            reduce using rule 44 (factor -> KEY_STRING .)
    KEY_IN          reduce using rule 44 (factor -> KEY_STRING .)
    KEY_IS          reduce using rule 44 (factor -> KEY_STRING .)
    RRB             reduce using rule 44 (factor -> KEY_STRING .)
    COMMA           reduce using rule 44 (factor -> KEY_STRING .)
    RSB             reduce using rule 44 (factor -> KEY_STRING .)
    SCOLON          reduce using rule 44 (factor -> KEY_STRING .)
    KEY_THEN        reduce using rule 44 (factor -> KEY_STRING .)
    KEY_BEGIN       reduce using rule 44 (factor -> KEY_STRING .)
    COLON           reduce using rule 44 (factor -> KEY_STRING .)
    KEY_OF          reduce using rule 44 (factor -> KEY_STRING .)
    RCB             reduce using rule 44 (factor -> KEY_STRING .)


state 110

    (42) factor -> KEY_BOOLEAN .

    MULTIPLY        reduce using rule 42 (factor -> KEY_BOOLEAN .)
    DIVIDE          reduce using rule 42 (factor -> KEY_BOOLEAN .)
    MODULUS         reduce using rule 42 (factor -> KEY_BOOLEAN .)
    AND             reduce using rule 42 (factor -> KEY_BOOLEAN .)
    PLUS            reduce using rule 42 (factor -> KEY_BOOLEAN .)
    MINUS           reduce using rule 42 (factor -> KEY_BOOLEAN .)
    OR              reduce using rule 42 (factor -> KEY_BOOLEAN .)
    EQUAL           reduce using rule 42 (factor -> KEY_BOOLEAN .)
    NEQUAL          reduce using rule 42 (factor -> KEY_BOOLEAN .)
    LT              reduce using rule 42 (factor -> KEY_BOOLEAN .)
    LTEQ            reduce using rule 42 (factor -> KEY_BOOLEAN .)
    GT              reduce using rule 42 (factor -> KEY_BOOLEAN .)
    GTEQ            reduce using rule 42 (factor -> KEY_BOOLEAN .)
    KEY_IN          reduce using rule 42 (factor -> KEY_BOOLEAN .)
    KEY_IS          reduce using rule 42 (factor -> KEY_BOOLEAN .)
    RRB             reduce using rule 42 (factor -> KEY_BOOLEAN .)
    COMMA           reduce using rule 42 (factor -> KEY_BOOLEAN .)
    RSB             reduce using rule 42 (factor -> KEY_BOOLEAN .)
    SCOLON          reduce using rule 42 (factor -> KEY_BOOLEAN .)
    KEY_THEN        reduce using rule 42 (factor -> KEY_BOOLEAN .)
    KEY_BEGIN       reduce using rule 42 (factor -> KEY_BOOLEAN .)
    COLON           reduce using rule 42 (factor -> KEY_BOOLEAN .)
    KEY_OF          reduce using rule 42 (factor -> KEY_BOOLEAN .)
    RCB             reduce using rule 42 (factor -> KEY_BOOLEAN .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 106

<<<<<<< HEAD
    (55) designator -> qualident . designator2
    (56) designator2 -> . designator2 DOT identdef
    (57) designator2 -> . designator2 LSB expList RSB
    (58) designator2 -> . designator2 LRB qualident RRB
    (59) designator2 -> . empty
    (172) empty -> .

    DOT             reduce using rule 172 (empty -> .)
    LSB             reduce using rule 172 (empty -> .)
    LRB             reduce using rule 172 (empty -> .)
    MULTIPLY        reduce using rule 172 (empty -> .)
    DIVIDE          reduce using rule 172 (empty -> .)
    MODULUS         reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)
    ASSIGN          reduce using rule 172 (empty -> .)

    designator2                    shift and go to state 133
    empty                          shift and go to state 134
=======
    (34) factor -> designator .
    (35) factor -> designator . actualParameters
    (68) actualParameters -> . LRB expList RRB
    (69) actualParameters -> . LRB RRB

    MULTIPLY        reduce using rule 34 (factor -> designator .)
    DIVIDE          reduce using rule 34 (factor -> designator .)
    MODULUS         reduce using rule 34 (factor -> designator .)
    AND             reduce using rule 34 (factor -> designator .)
    PLUS            reduce using rule 34 (factor -> designator .)
    MINUS           reduce using rule 34 (factor -> designator .)
    OR              reduce using rule 34 (factor -> designator .)
    EQUAL           reduce using rule 34 (factor -> designator .)
    NEQUAL          reduce using rule 34 (factor -> designator .)
    LT              reduce using rule 34 (factor -> designator .)
    LTEQ            reduce using rule 34 (factor -> designator .)
    GT              reduce using rule 34 (factor -> designator .)
    GTEQ            reduce using rule 34 (factor -> designator .)
    KEY_IN          reduce using rule 34 (factor -> designator .)
    KEY_IS          reduce using rule 34 (factor -> designator .)
    RRB             reduce using rule 34 (factor -> designator .)
    COMMA           reduce using rule 34 (factor -> designator .)
    RSB             reduce using rule 34 (factor -> designator .)
    SCOLON          reduce using rule 34 (factor -> designator .)
    KEY_THEN        reduce using rule 34 (factor -> designator .)
    KEY_BEGIN       reduce using rule 34 (factor -> designator .)
    COLON           reduce using rule 34 (factor -> designator .)
    KEY_OF          reduce using rule 34 (factor -> designator .)
    RCB             reduce using rule 34 (factor -> designator .)
    LRB             shift and go to state 126

    actualParameters               shift and go to state 180

state 112

    (57) designator -> qualident . designator2
    (58) designator2 -> . designator2 DOT identdef
    (59) designator2 -> . designator2 LSB expList RSB
    (60) designator2 -> . designator2 LRB qualident RRB
    (61) designator2 -> . empty
    (174) empty -> .

    DOT             reduce using rule 174 (empty -> .)
    LSB             reduce using rule 174 (empty -> .)
    LRB             reduce using rule 174 (empty -> .)
    MULTIPLY        reduce using rule 174 (empty -> .)
    DIVIDE          reduce using rule 174 (empty -> .)
    MODULUS         reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    EQUAL           reduce using rule 174 (empty -> .)
    NEQUAL          reduce using rule 174 (empty -> .)
    LT              reduce using rule 174 (empty -> .)
    LTEQ            reduce using rule 174 (empty -> .)
    GT              reduce using rule 174 (empty -> .)
    GTEQ            reduce using rule 174 (empty -> .)
    KEY_IN          reduce using rule 174 (empty -> .)
    KEY_IS          reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_THEN        reduce using rule 174 (empty -> .)
    KEY_BEGIN       reduce using rule 174 (empty -> .)
    RRB             reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    COLON           reduce using rule 174 (empty -> .)
    RSB             reduce using rule 174 (empty -> .)
    KEY_OF          reduce using rule 174 (empty -> .)
    RCB             reduce using rule 174 (empty -> .)
    ASSIGN          reduce using rule 174 (empty -> .)

    empty                          shift and go to state 131
    designator2                    shift and go to state 129

state 113

    (46) factor -> KEY_SET .

    MULTIPLY        reduce using rule 46 (factor -> KEY_SET .)
    DIVIDE          reduce using rule 46 (factor -> KEY_SET .)
    MODULUS         reduce using rule 46 (factor -> KEY_SET .)
    AND             reduce using rule 46 (factor -> KEY_SET .)
    PLUS            reduce using rule 46 (factor -> KEY_SET .)
    MINUS           reduce using rule 46 (factor -> KEY_SET .)
    OR              reduce using rule 46 (factor -> KEY_SET .)
    EQUAL           reduce using rule 46 (factor -> KEY_SET .)
    NEQUAL          reduce using rule 46 (factor -> KEY_SET .)
    LT              reduce using rule 46 (factor -> KEY_SET .)
    LTEQ            reduce using rule 46 (factor -> KEY_SET .)
    GT              reduce using rule 46 (factor -> KEY_SET .)
    GTEQ            reduce using rule 46 (factor -> KEY_SET .)
    KEY_IN          reduce using rule 46 (factor -> KEY_SET .)
    KEY_IS          reduce using rule 46 (factor -> KEY_SET .)
    RRB             reduce using rule 46 (factor -> KEY_SET .)
    COMMA           reduce using rule 46 (factor -> KEY_SET .)
    RSB             reduce using rule 46 (factor -> KEY_SET .)
    SCOLON          reduce using rule 46 (factor -> KEY_SET .)
    KEY_THEN        reduce using rule 46 (factor -> KEY_SET .)
    KEY_BEGIN       reduce using rule 46 (factor -> KEY_SET .)
    COLON           reduce using rule 46 (factor -> KEY_SET .)
    KEY_OF          reduce using rule 46 (factor -> KEY_SET .)
    RCB             reduce using rule 46 (factor -> KEY_SET .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 107

<<<<<<< HEAD
    (38) factor -> KEY_CHR . factor
    (46) factor -> KEY_CHR . LRB factor RRB
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    LRB             shift and go to state 190
    KEY_NIL         shift and go to state 117
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    number                         shift and go to state 115
    string                         shift and go to state 103
    identdef                       shift and go to state 108
    factor                         shift and go to state 191
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (174) empty -> .

    MULTIPLY        reduce using rule 174 (empty -> .)
    DIVIDE          reduce using rule 174 (empty -> .)
    MODULUS         reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    EQUAL           reduce using rule 174 (empty -> .)
    NEQUAL          reduce using rule 174 (empty -> .)
    LT              reduce using rule 174 (empty -> .)
    LTEQ            reduce using rule 174 (empty -> .)
    GT              reduce using rule 174 (empty -> .)
    GTEQ            reduce using rule 174 (empty -> .)
    KEY_IN          reduce using rule 174 (empty -> .)
    KEY_IS          reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_THEN        reduce using rule 174 (empty -> .)
    KEY_BEGIN       reduce using rule 174 (empty -> .)
    RRB             reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    COLON           reduce using rule 174 (empty -> .)
    RSB             reduce using rule 174 (empty -> .)
    KEY_OF          reduce using rule 174 (empty -> .)
    RCB             reduce using rule 174 (empty -> .)

    termss                         shift and go to state 181
    empty                          shift and go to state 182
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 108

<<<<<<< HEAD
    (60) qualident -> identdef .
    (61) qualident -> identdef . DOT qualident

  ! shift/reduce conflict for DOT resolved as shift
    LSB             reduce using rule 60 (qualident -> identdef .)
    LRB             reduce using rule 60 (qualident -> identdef .)
    MULTIPLY        reduce using rule 60 (qualident -> identdef .)
    DIVIDE          reduce using rule 60 (qualident -> identdef .)
    MODULUS         reduce using rule 60 (qualident -> identdef .)
    AND             reduce using rule 60 (qualident -> identdef .)
    PLUS            reduce using rule 60 (qualident -> identdef .)
    MINUS           reduce using rule 60 (qualident -> identdef .)
    OR              reduce using rule 60 (qualident -> identdef .)
    EQUAL           reduce using rule 60 (qualident -> identdef .)
    NEQUAL          reduce using rule 60 (qualident -> identdef .)
    LT              reduce using rule 60 (qualident -> identdef .)
    LTEQ            reduce using rule 60 (qualident -> identdef .)
    GT              reduce using rule 60 (qualident -> identdef .)
    GTEQ            reduce using rule 60 (qualident -> identdef .)
    KEY_IN          reduce using rule 60 (qualident -> identdef .)
    KEY_IS          reduce using rule 60 (qualident -> identdef .)
    SCOLON          reduce using rule 60 (qualident -> identdef .)
    KEY_BEGIN       reduce using rule 60 (qualident -> identdef .)
    KEY_THEN        reduce using rule 60 (qualident -> identdef .)
    RRB             reduce using rule 60 (qualident -> identdef .)
    COMMA           reduce using rule 60 (qualident -> identdef .)
    COLON           reduce using rule 60 (qualident -> identdef .)
    KEY_OF          reduce using rule 60 (qualident -> identdef .)
    RSB             reduce using rule 60 (qualident -> identdef .)
    RCB             reduce using rule 60 (qualident -> identdef .)
    ASSIGN          reduce using rule 60 (qualident -> identdef .)
    DOT             shift and go to state 85

  ! DOT             [ reduce using rule 60 (qualident -> identdef .) ]
=======
    (39) factor -> KEY_CHR . factor
    (47) factor -> KEY_CHR . LRB factor RRB
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    LRB             shift and go to state 184
    KEY_NIL         shift and go to state 88
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    char                           shift and go to state 105
    qualident                      shift and go to state 112
    string                         shift and go to state 87
    factor                         shift and go to state 183
    number                         shift and go to state 92
    set                            shift and go to state 99
    identdef                       shift and go to state 93
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


<<<<<<< HEAD
state 109

    (43) factor -> KEY_STRING .

    MULTIPLY        reduce using rule 43 (factor -> KEY_STRING .)
    DIVIDE          reduce using rule 43 (factor -> KEY_STRING .)
    MODULUS         reduce using rule 43 (factor -> KEY_STRING .)
    AND             reduce using rule 43 (factor -> KEY_STRING .)
    PLUS            reduce using rule 43 (factor -> KEY_STRING .)
    MINUS           reduce using rule 43 (factor -> KEY_STRING .)
    OR              reduce using rule 43 (factor -> KEY_STRING .)
    EQUAL           reduce using rule 43 (factor -> KEY_STRING .)
    NEQUAL          reduce using rule 43 (factor -> KEY_STRING .)
    LT              reduce using rule 43 (factor -> KEY_STRING .)
    LTEQ            reduce using rule 43 (factor -> KEY_STRING .)
    GT              reduce using rule 43 (factor -> KEY_STRING .)
    GTEQ            reduce using rule 43 (factor -> KEY_STRING .)
    KEY_IN          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_IS          reduce using rule 43 (factor -> KEY_STRING .)
    RRB             reduce using rule 43 (factor -> KEY_STRING .)
    RCB             reduce using rule 43 (factor -> KEY_STRING .)
    KEY_OF          reduce using rule 43 (factor -> KEY_STRING .)
    COMMA           reduce using rule 43 (factor -> KEY_STRING .)
    KEY_THEN        reduce using rule 43 (factor -> KEY_STRING .)
    SCOLON          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_BEGIN       reduce using rule 43 (factor -> KEY_STRING .)
    COLON           reduce using rule 43 (factor -> KEY_STRING .)
    RSB             reduce using rule 43 (factor -> KEY_STRING .)


state 110

    (22) simpleExpression -> MINUS . term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    term                           shift and go to state 192
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (37) factor -> NOT . factor
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    char                           shift and go to state 105
    qualident                      shift and go to state 112
    string                         shift and go to state 87
    factor                         shift and go to state 185
    number                         shift and go to state 92
    set                            shift and go to state 99
    identdef                       shift and go to state 93
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 111

<<<<<<< HEAD
    (39) factor -> KEY_ORD . factor
    (47) factor -> KEY_ORD . LRB factor RRB
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    LRB             shift and go to state 193
    KEY_NIL         shift and go to state 117
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    number                         shift and go to state 115
    string                         shift and go to state 103
    identdef                       shift and go to state 108
    factor                         shift and go to state 194
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 112

    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (172) empty -> .

    MULTIPLY        reduce using rule 172 (empty -> .)
    DIVIDE          reduce using rule 172 (empty -> .)
    MODULUS         reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)

    termss                         shift and go to state 195
    empty                          shift and go to state 196

state 113

    (21) simpleExpression -> term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (172) empty -> .

    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)

    simpless                       shift and go to state 197
    empty                          shift and go to state 198

state 114

    (33) factor -> designator .
    (34) factor -> designator . actualParameters
    (66) actualParameters -> . LRB expList RRB
    (67) actualParameters -> . LRB RRB

    MULTIPLY        reduce using rule 33 (factor -> designator .)
    DIVIDE          reduce using rule 33 (factor -> designator .)
    MODULUS         reduce using rule 33 (factor -> designator .)
    AND             reduce using rule 33 (factor -> designator .)
    PLUS            reduce using rule 33 (factor -> designator .)
    MINUS           reduce using rule 33 (factor -> designator .)
    OR              reduce using rule 33 (factor -> designator .)
    EQUAL           reduce using rule 33 (factor -> designator .)
    NEQUAL          reduce using rule 33 (factor -> designator .)
    LT              reduce using rule 33 (factor -> designator .)
    LTEQ            reduce using rule 33 (factor -> designator .)
    GT              reduce using rule 33 (factor -> designator .)
    GTEQ            reduce using rule 33 (factor -> designator .)
    KEY_IN          reduce using rule 33 (factor -> designator .)
    KEY_IS          reduce using rule 33 (factor -> designator .)
    RRB             reduce using rule 33 (factor -> designator .)
    RCB             reduce using rule 33 (factor -> designator .)
    KEY_OF          reduce using rule 33 (factor -> designator .)
    COMMA           reduce using rule 33 (factor -> designator .)
    KEY_THEN        reduce using rule 33 (factor -> designator .)
    SCOLON          reduce using rule 33 (factor -> designator .)
    KEY_BEGIN       reduce using rule 33 (factor -> designator .)
    COLON           reduce using rule 33 (factor -> designator .)
    RSB             reduce using rule 33 (factor -> designator .)
    LRB             shift and go to state 138

    actualParameters               shift and go to state 199

state 115

    (28) factor -> number .

    MULTIPLY        reduce using rule 28 (factor -> number .)
    DIVIDE          reduce using rule 28 (factor -> number .)
    MODULUS         reduce using rule 28 (factor -> number .)
    AND             reduce using rule 28 (factor -> number .)
    PLUS            reduce using rule 28 (factor -> number .)
    MINUS           reduce using rule 28 (factor -> number .)
    OR              reduce using rule 28 (factor -> number .)
    EQUAL           reduce using rule 28 (factor -> number .)
    NEQUAL          reduce using rule 28 (factor -> number .)
    LT              reduce using rule 28 (factor -> number .)
    LTEQ            reduce using rule 28 (factor -> number .)
    GT              reduce using rule 28 (factor -> number .)
    GTEQ            reduce using rule 28 (factor -> number .)
    KEY_IN          reduce using rule 28 (factor -> number .)
    KEY_IS          reduce using rule 28 (factor -> number .)
    RRB             reduce using rule 28 (factor -> number .)
    RCB             reduce using rule 28 (factor -> number .)
    KEY_OF          reduce using rule 28 (factor -> number .)
    COMMA           reduce using rule 28 (factor -> number .)
    KEY_THEN        reduce using rule 28 (factor -> number .)
    SCOLON          reduce using rule 28 (factor -> number .)
    KEY_BEGIN       reduce using rule 28 (factor -> number .)
    COLON           reduce using rule 28 (factor -> number .)
    RSB             reduce using rule 28 (factor -> number .)


state 116

    (37) factor -> KEY_ABS . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    number                         shift and go to state 115
    string                         shift and go to state 103
    identdef                       shift and go to state 108
    factor                         shift and go to state 200
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 117

    (31) factor -> KEY_NIL . LRB designator RRB

    LRB             shift and go to state 201


state 118

    (20) simpleExpression -> PLUS . term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    term                           shift and go to state 202
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (52) char -> VCHAR .

    MULTIPLY        reduce using rule 52 (char -> VCHAR .)
    DIVIDE          reduce using rule 52 (char -> VCHAR .)
    MODULUS         reduce using rule 52 (char -> VCHAR .)
    AND             reduce using rule 52 (char -> VCHAR .)
    PLUS            reduce using rule 52 (char -> VCHAR .)
    MINUS           reduce using rule 52 (char -> VCHAR .)
    OR              reduce using rule 52 (char -> VCHAR .)
    EQUAL           reduce using rule 52 (char -> VCHAR .)
    NEQUAL          reduce using rule 52 (char -> VCHAR .)
    LT              reduce using rule 52 (char -> VCHAR .)
    LTEQ            reduce using rule 52 (char -> VCHAR .)
    GT              reduce using rule 52 (char -> VCHAR .)
    GTEQ            reduce using rule 52 (char -> VCHAR .)
    KEY_IN          reduce using rule 52 (char -> VCHAR .)
    KEY_IS          reduce using rule 52 (char -> VCHAR .)
    RRB             reduce using rule 52 (char -> VCHAR .)
    KEY_THEN        reduce using rule 52 (char -> VCHAR .)
    SCOLON          reduce using rule 52 (char -> VCHAR .)
    KEY_BEGIN       reduce using rule 52 (char -> VCHAR .)
    COMMA           reduce using rule 52 (char -> VCHAR .)
    COLON           reduce using rule 52 (char -> VCHAR .)
    RSB             reduce using rule 52 (char -> VCHAR .)
    KEY_OF          reduce using rule 52 (char -> VCHAR .)
    RCB             reduce using rule 52 (char -> VCHAR .)


state 118

    (146) ifStatement -> KEY_IF expression . KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> KEY_IF expression . KEY_THEN statementSequence ifss KEY_END

    KEY_THEN        shift and go to state 186


state 119

    (143) memoryalloc -> KEY_NEW LRB . designator RRB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34

    qualident                      shift and go to state 112
    designator                     shift and go to state 187
    identdef                       shift and go to state 93

state 120

    (168) ioStatement -> KEY_READCHAR LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 188
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 121

    (158) ioStatement -> KEY_WRITE LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 189
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 122

    (156) forStatement -> KEY_FOR LRB . assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (140) assignment -> . designator ASSIGN expression
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34

    assignment                     shift and go to state 190
    qualident                      shift and go to state 112
    designator                     shift and go to state 191
    identdef                       shift and go to state 93
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 119

<<<<<<< HEAD
    (36) factor -> NOT . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    number                         shift and go to state 115
    string                         shift and go to state 103
    identdef                       shift and go to state 108
    factor                         shift and go to state 203
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 120

    (170) fileStatement -> KEY_FPRINTF LRB . identdef COMMA string RRB
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    identdef                       shift and go to state 204
=======
    (169) ioStatement -> KEY_READBOOL LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 192
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 124

    (171) fileStatement -> KEY_FCLOSE LRB . identdef RRB
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34

    identdef                       shift and go to state 193

state 125

    (172) fileStatement -> KEY_FPRINTF LRB . identdef COMMA string RRB
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34

    identdef                       shift and go to state 194
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 121

<<<<<<< HEAD
    (159) ioStatement -> KEY_WRITECHAR LRB . expression RRB
=======
    (68) actualParameters -> LRB . expList RRB
    (69) actualParameters -> LRB . RRB
    (66) expList -> . expList COMMA expression
    (67) expList -> . expression
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 205
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    RRB             shift and go to state 196
    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 197
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    expList                        shift and go to state 195
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 122

<<<<<<< HEAD
    (171) fileStatement -> KEY_FREAD LRB . identdef COMMA identdef COMMA VINTEGER RRB
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    identdef                       shift and go to state 206
=======
    (144) procedureCall -> designator actualParameters .

    SCOLON          reduce using rule 144 (procedureCall -> designator actualParameters .)


state 128

    (140) assignment -> designator ASSIGN . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 198
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    identdef                       shift and go to state 93
    designator                     shift and go to state 111
    set                            shift and go to state 99
    number                         shift and go to state 92
    boolean                        shift and go to state 103
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 123

<<<<<<< HEAD
    (63) identdef -> AT IDENT .

    DOT             reduce using rule 63 (identdef -> AT IDENT .)
    LSB             reduce using rule 63 (identdef -> AT IDENT .)
    LRB             reduce using rule 63 (identdef -> AT IDENT .)
    MULTIPLY        reduce using rule 63 (identdef -> AT IDENT .)
    DIVIDE          reduce using rule 63 (identdef -> AT IDENT .)
    MODULUS         reduce using rule 63 (identdef -> AT IDENT .)
    AND             reduce using rule 63 (identdef -> AT IDENT .)
    PLUS            reduce using rule 63 (identdef -> AT IDENT .)
    MINUS           reduce using rule 63 (identdef -> AT IDENT .)
    OR              reduce using rule 63 (identdef -> AT IDENT .)
    EQUAL           reduce using rule 63 (identdef -> AT IDENT .)
    NEQUAL          reduce using rule 63 (identdef -> AT IDENT .)
    LT              reduce using rule 63 (identdef -> AT IDENT .)
    LTEQ            reduce using rule 63 (identdef -> AT IDENT .)
    GT              reduce using rule 63 (identdef -> AT IDENT .)
    GTEQ            reduce using rule 63 (identdef -> AT IDENT .)
    KEY_IN          reduce using rule 63 (identdef -> AT IDENT .)
    KEY_IS          reduce using rule 63 (identdef -> AT IDENT .)
    RRB             reduce using rule 63 (identdef -> AT IDENT .)
    ASSIGN          reduce using rule 63 (identdef -> AT IDENT .)
    SCOLON          reduce using rule 63 (identdef -> AT IDENT .)
    COMMA           reduce using rule 63 (identdef -> AT IDENT .)
    RSB             reduce using rule 63 (identdef -> AT IDENT .)
    KEY_BEGIN       reduce using rule 63 (identdef -> AT IDENT .)
    KEY_THEN        reduce using rule 63 (identdef -> AT IDENT .)
    COLON           reduce using rule 63 (identdef -> AT IDENT .)
    KEY_OF          reduce using rule 63 (identdef -> AT IDENT .)
    RCB             reduce using rule 63 (identdef -> AT IDENT .)
=======
    (57) designator -> qualident designator2 .
    (58) designator2 -> designator2 . DOT identdef
    (59) designator2 -> designator2 . LSB expList RSB
    (60) designator2 -> designator2 . LRB qualident RRB

  ! shift/reduce conflict for LRB resolved as shift
    MULTIPLY        reduce using rule 57 (designator -> qualident designator2 .)
    DIVIDE          reduce using rule 57 (designator -> qualident designator2 .)
    MODULUS         reduce using rule 57 (designator -> qualident designator2 .)
    AND             reduce using rule 57 (designator -> qualident designator2 .)
    PLUS            reduce using rule 57 (designator -> qualident designator2 .)
    MINUS           reduce using rule 57 (designator -> qualident designator2 .)
    OR              reduce using rule 57 (designator -> qualident designator2 .)
    EQUAL           reduce using rule 57 (designator -> qualident designator2 .)
    NEQUAL          reduce using rule 57 (designator -> qualident designator2 .)
    LT              reduce using rule 57 (designator -> qualident designator2 .)
    LTEQ            reduce using rule 57 (designator -> qualident designator2 .)
    GT              reduce using rule 57 (designator -> qualident designator2 .)
    GTEQ            reduce using rule 57 (designator -> qualident designator2 .)
    KEY_IN          reduce using rule 57 (designator -> qualident designator2 .)
    KEY_IS          reduce using rule 57 (designator -> qualident designator2 .)
    KEY_OF          reduce using rule 57 (designator -> qualident designator2 .)
    COMMA           reduce using rule 57 (designator -> qualident designator2 .)
    SCOLON          reduce using rule 57 (designator -> qualident designator2 .)
    RRB             reduce using rule 57 (designator -> qualident designator2 .)
    ASSIGN          reduce using rule 57 (designator -> qualident designator2 .)
    COLON           reduce using rule 57 (designator -> qualident designator2 .)
    KEY_THEN        reduce using rule 57 (designator -> qualident designator2 .)
    KEY_BEGIN       reduce using rule 57 (designator -> qualident designator2 .)
    RSB             reduce using rule 57 (designator -> qualident designator2 .)
    RCB             reduce using rule 57 (designator -> qualident designator2 .)
    DOT             shift and go to state 200
    LSB             shift and go to state 201
    LRB             shift and go to state 199

  ! LRB             [ reduce using rule 57 (designator -> qualident designator2 .) ]
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 124

    (165) ioStatement -> KEY_READREAL LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 207
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 125

    (141) setStatement -> qualident DOT . KEY_ADD LRB expression RRB
    (142) setStatement -> qualident DOT . KEY_DEL LRB expression RRB

    KEY_ADD         shift and go to state 202
    KEY_DEL         shift and go to state 203


state 131

    (61) designator2 -> empty .

    DOT             reduce using rule 61 (designator2 -> empty .)
    LSB             reduce using rule 61 (designator2 -> empty .)
    LRB             reduce using rule 61 (designator2 -> empty .)
    MULTIPLY        reduce using rule 61 (designator2 -> empty .)
    DIVIDE          reduce using rule 61 (designator2 -> empty .)
    MODULUS         reduce using rule 61 (designator2 -> empty .)
    AND             reduce using rule 61 (designator2 -> empty .)
    PLUS            reduce using rule 61 (designator2 -> empty .)
    MINUS           reduce using rule 61 (designator2 -> empty .)
    OR              reduce using rule 61 (designator2 -> empty .)
    EQUAL           reduce using rule 61 (designator2 -> empty .)
    NEQUAL          reduce using rule 61 (designator2 -> empty .)
    LT              reduce using rule 61 (designator2 -> empty .)
    LTEQ            reduce using rule 61 (designator2 -> empty .)
    GT              reduce using rule 61 (designator2 -> empty .)
    GTEQ            reduce using rule 61 (designator2 -> empty .)
    KEY_IN          reduce using rule 61 (designator2 -> empty .)
    KEY_IS          reduce using rule 61 (designator2 -> empty .)
    SCOLON          reduce using rule 61 (designator2 -> empty .)
    KEY_THEN        reduce using rule 61 (designator2 -> empty .)
    KEY_BEGIN       reduce using rule 61 (designator2 -> empty .)
    RRB             reduce using rule 61 (designator2 -> empty .)
    COMMA           reduce using rule 61 (designator2 -> empty .)
    COLON           reduce using rule 61 (designator2 -> empty .)
    RSB             reduce using rule 61 (designator2 -> empty .)
    KEY_OF          reduce using rule 61 (designator2 -> empty .)
    RCB             reduce using rule 61 (designator2 -> empty .)
    ASSIGN          reduce using rule 61 (designator2 -> empty .)


state 132

    (165) ioStatement -> KEY_READ LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 208
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 126

    (148) switchStatement -> KEY_SWITCH expression . KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH expression . KEY_BEGIN case casess KEY_END

    KEY_BEGIN       shift and go to state 209


state 127

    (153) whileStatement -> KEY_WHILE expression . KEY_BEGIN statementSequence KEY_END

    KEY_BEGIN       shift and go to state 210


state 128

    (154) forStatement -> KEY_FOR LRB . assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (138) assignment -> . designator ASSIGN expression
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    identdef                       shift and go to state 108
    qualident                      shift and go to state 106
    assignment                     shift and go to state 211
    designator                     shift and go to state 212

state 129

    (155) doWhileStatement -> KEY_DO KEY_BEGIN . statementSequence KEY_END KEY_WHILE expression
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 19
    statementSequence              shift and go to state 213
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 204
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 133

    (150) switchStatement -> KEY_SWITCH expression . KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> KEY_SWITCH expression . KEY_BEGIN case casess KEY_END

    KEY_BEGIN       shift and go to state 205

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 130

<<<<<<< HEAD
    (141) memoryalloc -> KEY_NEW LRB . designator RRB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    qualident                      shift and go to state 106
    identdef                       shift and go to state 108
    designator                     shift and go to state 214
=======
    (155) whileStatement -> KEY_WHILE expression . KEY_BEGIN statementSequence KEY_END

    KEY_BEGIN       shift and go to state 206

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 131

<<<<<<< HEAD
    (166) ioStatement -> KEY_READCHAR LRB . expression RRB
=======
    (162) ioStatement -> KEY_WRITEBOOL LRB . expression RRB
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 215
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 132

    (144) ifStatement -> KEY_IF expression . KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF expression . KEY_THEN statementSequence ifss KEY_END

    KEY_THEN        shift and go to state 216


state 133

    (55) designator -> qualident designator2 .
    (56) designator2 -> designator2 . DOT identdef
    (57) designator2 -> designator2 . LSB expList RSB
    (58) designator2 -> designator2 . LRB qualident RRB

  ! shift/reduce conflict for LRB resolved as shift
    ASSIGN          reduce using rule 55 (designator -> qualident designator2 .)
    SCOLON          reduce using rule 55 (designator -> qualident designator2 .)
    MULTIPLY        reduce using rule 55 (designator -> qualident designator2 .)
    DIVIDE          reduce using rule 55 (designator -> qualident designator2 .)
    MODULUS         reduce using rule 55 (designator -> qualident designator2 .)
    AND             reduce using rule 55 (designator -> qualident designator2 .)
    PLUS            reduce using rule 55 (designator -> qualident designator2 .)
    MINUS           reduce using rule 55 (designator -> qualident designator2 .)
    OR              reduce using rule 55 (designator -> qualident designator2 .)
    EQUAL           reduce using rule 55 (designator -> qualident designator2 .)
    NEQUAL          reduce using rule 55 (designator -> qualident designator2 .)
    LT              reduce using rule 55 (designator -> qualident designator2 .)
    LTEQ            reduce using rule 55 (designator -> qualident designator2 .)
    GT              reduce using rule 55 (designator -> qualident designator2 .)
    GTEQ            reduce using rule 55 (designator -> qualident designator2 .)
    KEY_IN          reduce using rule 55 (designator -> qualident designator2 .)
    KEY_IS          reduce using rule 55 (designator -> qualident designator2 .)
    RRB             reduce using rule 55 (designator -> qualident designator2 .)
    COMMA           reduce using rule 55 (designator -> qualident designator2 .)
    KEY_OF          reduce using rule 55 (designator -> qualident designator2 .)
    KEY_BEGIN       reduce using rule 55 (designator -> qualident designator2 .)
    RSB             reduce using rule 55 (designator -> qualident designator2 .)
    KEY_THEN        reduce using rule 55 (designator -> qualident designator2 .)
    COLON           reduce using rule 55 (designator -> qualident designator2 .)
    RCB             reduce using rule 55 (designator -> qualident designator2 .)
    DOT             shift and go to state 217
    LSB             shift and go to state 219
    LRB             shift and go to state 218

  ! LRB             [ reduce using rule 55 (designator -> qualident designator2 .) ]


state 134

    (59) designator2 -> empty .

    DOT             reduce using rule 59 (designator2 -> empty .)
    LSB             reduce using rule 59 (designator2 -> empty .)
    LRB             reduce using rule 59 (designator2 -> empty .)
    MULTIPLY        reduce using rule 59 (designator2 -> empty .)
    DIVIDE          reduce using rule 59 (designator2 -> empty .)
    MODULUS         reduce using rule 59 (designator2 -> empty .)
    AND             reduce using rule 59 (designator2 -> empty .)
    PLUS            reduce using rule 59 (designator2 -> empty .)
    MINUS           reduce using rule 59 (designator2 -> empty .)
    OR              reduce using rule 59 (designator2 -> empty .)
    EQUAL           reduce using rule 59 (designator2 -> empty .)
    NEQUAL          reduce using rule 59 (designator2 -> empty .)
    LT              reduce using rule 59 (designator2 -> empty .)
    LTEQ            reduce using rule 59 (designator2 -> empty .)
    GT              reduce using rule 59 (designator2 -> empty .)
    GTEQ            reduce using rule 59 (designator2 -> empty .)
    KEY_IN          reduce using rule 59 (designator2 -> empty .)
    KEY_IS          reduce using rule 59 (designator2 -> empty .)
    SCOLON          reduce using rule 59 (designator2 -> empty .)
    KEY_BEGIN       reduce using rule 59 (designator2 -> empty .)
    KEY_THEN        reduce using rule 59 (designator2 -> empty .)
    RRB             reduce using rule 59 (designator2 -> empty .)
    COMMA           reduce using rule 59 (designator2 -> empty .)
    COLON           reduce using rule 59 (designator2 -> empty .)
    KEY_OF          reduce using rule 59 (designator2 -> empty .)
    RSB             reduce using rule 59 (designator2 -> empty .)
    RCB             reduce using rule 59 (designator2 -> empty .)
    ASSIGN          reduce using rule 59 (designator2 -> empty .)


state 135

    (139) setStatement -> qualident DOT . KEY_ADD LRB expression RRB
    (140) setStatement -> qualident DOT . KEY_DEL LRB expression RRB

    KEY_ADD         shift and go to state 220
    KEY_DEL         shift and go to state 221


state 136

    (160) ioStatement -> KEY_WRITEBOOL LRB . expression RRB
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 207
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 136

    (160) ioStatement -> KEY_WRITEREAL LRB . expression RRB
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 222
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 137

    (158) ioStatement -> KEY_WRITEREAL LRB . expression RRB
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 208
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 137

    (173) fileStatement -> KEY_FREAD LRB . identdef COMMA identdef COMMA VINTEGER RRB
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34

    identdef                       shift and go to state 209

state 138

    (167) ioStatement -> KEY_READREAL LRB . expression RRB
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 223
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 138

    (66) actualParameters -> LRB . expList RRB
    (67) actualParameters -> LRB . RRB
    (64) expList -> . expList COMMA expression
    (65) expList -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    RRB             shift and go to state 226
    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    expList                        shift and go to state 224
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    string                         shift and go to state 103
    expression                     shift and go to state 225
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 210
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 139

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT . DOT

    DOT             shift and go to state 211
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 139

<<<<<<< HEAD
    (142) procedureCall -> designator actualParameters .

    SCOLON          reduce using rule 142 (procedureCall -> designator actualParameters .)


state 140

    (138) assignment -> designator ASSIGN . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 227
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 141

    (15) statementSequence -> statementSequence statement SCOLON .

    KEY_END         reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_EXIT        reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_RETURN      reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_BREAK       reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_CONTINUE    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_IF          reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_SWITCH      reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WHILE       reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_FOR         reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_DO          reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITE       reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITEINT    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITEREAL   reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITECHAR   reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITEBOOL   reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITELN     reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READ        reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READINT     reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READREAL    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READCHAR    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READBOOL    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_FCLOSE      reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_FPRINTF     reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_FREAD       reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_NEW         reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    IDENT           reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    AT              reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    SCOLON          reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_ELSE        reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_ELSEIF      reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_CASE        reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)


state 142

    (163) ioStatement -> KEY_READ LRB . expression RRB
=======
state 140

    (85) typeDeclaration -> IDENT EQUAL . type
    (86) type -> . IDENT
    (87) type -> . varType
    (88) type -> . arrayType
    (89) type -> . recordType
    (90) type -> . pointerType
    (91) varType -> . KEY_INTEGER
    (92) varType -> . KEY_BOOLEAN
    (93) varType -> . KEY_CHAR
    (94) varType -> . KEY_STRING
    (95) varType -> . KEY_REAL
    (96) varType -> . KEY_SET
    (97) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (101) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (102) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (110) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 225
    KEY_BOOLEAN     shift and go to state 215
    KEY_CHAR        shift and go to state 220
    KEY_STRING      shift and go to state 214
    KEY_REAL        shift and go to state 212
    KEY_SET         shift and go to state 221
    KEY_ARRAY       shift and go to state 216
    KEY_RECORD      shift and go to state 226
    KEY_POINTER     shift and go to state 222

    pointerType                    shift and go to state 219
    varType                        shift and go to state 224
    arrayType                      shift and go to state 213
    recordType                     shift and go to state 217
    type                           shift and go to state 223

state 141

    (9) typess -> typess typeDeclaration SCOLON .

    IDENT           reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_CONST       reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_VAR         reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)


state 142

    (115) formalParameters -> LRB . fpSection formalss RRB
    (116) formalParameters -> LRB . RRB
    (119) fpSection -> . IDENT fps COLON type

    RRB             shift and go to state 227
    IDENT           shift and go to state 228

    fpSection                      shift and go to state 229

state 143

    (113) procedureHeading -> KEY_PROCEDURE IDENT formalParameters . COLON type
    (114) procedureHeading -> KEY_PROCEDURE IDENT formalParameters .

    COLON           shift and go to state 230
    SCOLON          reduce using rule 114 (procedureHeading -> KEY_PROCEDURE IDENT formalParameters .)


state 144

    (122) procedureBody -> declarationSequence . KEY_BEGIN statementSequence KEY_END
    (2) declarationSequence -> declarationSequence . KEY_CONST conss
    (3) declarationSequence -> declarationSequence . KEY_TYPE typess
    (4) declarationSequence -> declarationSequence . KEY_VAR varss
    (5) declarationSequence -> declarationSequence . procss
    (13) procss -> . procss procedureDeclaration SCOLON
    (14) procss -> . empty
    (174) empty -> .

  ! shift/reduce conflict for KEY_BEGIN resolved as shift
  ! shift/reduce conflict for KEY_CONST resolved as shift
  ! shift/reduce conflict for KEY_TYPE resolved as shift
  ! shift/reduce conflict for KEY_VAR resolved as shift
    KEY_BEGIN       shift and go to state 231
    KEY_CONST       shift and go to state 12
    KEY_TYPE        shift and go to state 8
    KEY_VAR         shift and go to state 11
    KEY_PROCEDURE   reduce using rule 174 (empty -> .)

  ! KEY_BEGIN       [ reduce using rule 174 (empty -> .) ]
  ! KEY_CONST       [ reduce using rule 174 (empty -> .) ]
  ! KEY_TYPE        [ reduce using rule 174 (empty -> .) ]
  ! KEY_VAR         [ reduce using rule 174 (empty -> .) ]

    procss                         shift and go to state 9
    empty                          shift and go to state 10

state 145

    (112) procedureDeclaration -> procedureHeading SCOLON procedureBody . IDENT

    IDENT           shift and go to state 232


state 146

    (11) varss -> varss variableDeclaration SCOLON .

    IDENT           reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_CONST       reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_VAR         reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)


state 147

    (108) identList -> identList COMMA . IDENT

    IDENT           shift and go to state 233


state 148

    (111) variableDeclaration -> identList COLON . type
    (86) type -> . IDENT
    (87) type -> . varType
    (88) type -> . arrayType
    (89) type -> . recordType
    (90) type -> . pointerType
    (91) varType -> . KEY_INTEGER
    (92) varType -> . KEY_BOOLEAN
    (93) varType -> . KEY_CHAR
    (94) varType -> . KEY_STRING
    (95) varType -> . KEY_REAL
    (96) varType -> . KEY_SET
    (97) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (101) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (102) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (110) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 225
    KEY_BOOLEAN     shift and go to state 215
    KEY_CHAR        shift and go to state 220
    KEY_STRING      shift and go to state 214
    KEY_REAL        shift and go to state 212
    KEY_SET         shift and go to state 221
    KEY_ARRAY       shift and go to state 216
    KEY_RECORD      shift and go to state 226
    KEY_POINTER     shift and go to state 222

    type                           shift and go to state 234
    pointerType                    shift and go to state 219
    varType                        shift and go to state 224
    arrayType                      shift and go to state 213
    recordType                     shift and go to state 217

state 149

    (7) conss -> conss constantDeclaration SCOLON .

    IDENT           reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_CONST       reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_VAR         reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)


state 150

    (17) constantDeclaration -> IDENT ASSIGN . expression COLON type
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 228
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 143

    (161) ioStatement -> KEY_WRITELN LRB . expression RRB
    (162) ioStatement -> KEY_WRITELN LRB . RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    RRB             shift and go to state 230
    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 229
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 144

    (109) variableDeclaration -> identList COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 168
    KEY_INTEGER     shift and go to state 157
    KEY_BOOLEAN     shift and go to state 163
    KEY_CHAR        shift and go to state 160
    KEY_STRING      shift and go to state 164
    KEY_REAL        shift and go to state 158
    KEY_SET         shift and go to state 161
    KEY_ARRAY       shift and go to state 155
    KEY_RECORD      shift and go to state 169
    KEY_POINTER     shift and go to state 165

    recordType                     shift and go to state 162
    pointerType                    shift and go to state 167
    varType                        shift and go to state 156
    arrayType                      shift and go to state 159
    type                           shift and go to state 231

state 145
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 235
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 151

    (157) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence . KEY_END KEY_WHILE expression
    (15) statementSequence -> statementSequence . statement SCOLON
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (174) empty -> .
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 236
    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ioStatement                    shift and go to state 24
    ifStatement                    shift and go to state 47
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    forStatement                   shift and go to state 33
    fileStatement                  shift and go to state 32
    designator                     shift and go to state 54
    identdef                       shift and go to state 36
    qualident                      shift and go to state 56
    doWhileStatement               shift and go to state 59
    switchStatement                shift and go to state 46
    assignment                     shift and go to state 25
    empty                          shift and go to state 63
    memoryalloc                    shift and go to state 55
    procedureCall                  shift and go to state 53

state 152

    (161) ioStatement -> KEY_WRITECHAR LRB expression . RRB

    RRB             shift and go to state 237


state 153

    (159) ioStatement -> KEY_WRITEINT LRB expression . RRB

    RRB             shift and go to state 238


state 154

    (164) ioStatement -> KEY_WRITELN LRB RRB .

    SCOLON          reduce using rule 164 (ioStatement -> KEY_WRITELN LRB RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (106) identList -> identList COMMA . IDENT

<<<<<<< HEAD
    IDENT           shift and go to state 232


state 146
=======
state 155

    (163) ioStatement -> KEY_WRITELN LRB expression . RRB

    RRB             shift and go to state 239
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (11) varss -> varss variableDeclaration SCOLON .

<<<<<<< HEAD
    IDENT           reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_CONST       reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_VAR         reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)


state 147
=======
state 156

    (170) fileStatement -> identdef EQUAL KEY_FOPEN . LRB string COMMA char RRB

    LRB             shift and go to state 240
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (17) constantDeclaration -> IDENT ASSIGN . expression COLON type
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

<<<<<<< HEAD
    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 233
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 148

    (7) conss -> conss constantDeclaration SCOLON .

    IDENT           reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_CONST       reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_VAR         reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)


state 149

    (113) formalParameters -> LRB fpSection . formalss RRB
    (115) formalss -> . formalss SCOLON fpSection
    (116) formalss -> . empty
    (172) empty -> .

    RRB             reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 235
    formalss                       shift and go to state 234

state 150

    (117) fpSection -> IDENT . fps COLON type
    (118) fps -> . fps COMMA IDENT
    (119) fps -> . empty
    (172) empty -> .

    COLON           reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)

    fps                            shift and go to state 236
    empty                          shift and go to state 237

state 151

    (114) formalParameters -> LRB RRB .

    COLON           reduce using rule 114 (formalParameters -> LRB RRB .)
    SCOLON          reduce using rule 114 (formalParameters -> LRB RRB .)


state 152

    (111) procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 168
    KEY_INTEGER     shift and go to state 157
    KEY_BOOLEAN     shift and go to state 163
    KEY_CHAR        shift and go to state 160
    KEY_STRING      shift and go to state 164
    KEY_REAL        shift and go to state 158
    KEY_SET         shift and go to state 161
    KEY_ARRAY       shift and go to state 155
    KEY_RECORD      shift and go to state 169
    KEY_POINTER     shift and go to state 165

    recordType                     shift and go to state 162
    pointerType                    shift and go to state 167
    varType                        shift and go to state 156
    arrayType                      shift and go to state 159
    type                           shift and go to state 238

state 153

    (110) procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT .

    SCOLON          reduce using rule 110 (procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT .)


state 154

    (120) procedureBody -> declarationSequence KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 19
    statementSequence              shift and go to state 239

state 155

    (95) arrayType -> KEY_ARRAY . length comass KEY_OF type
    (98) length -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    length                         shift and go to state 241
    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    expression                     shift and go to state 240
    char                           shift and go to state 105
    term                           shift and go to state 113
    string                         shift and go to state 103
    number                         shift and go to state 115
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 156

    (85) type -> varType .

    RRB             reduce using rule 85 (type -> varType .)
    SCOLON          reduce using rule 85 (type -> varType .)
    KEY_END         reduce using rule 85 (type -> varType .)


state 157

    (89) varType -> KEY_INTEGER .

    SCOLON          reduce using rule 89 (varType -> KEY_INTEGER .)
    RRB             reduce using rule 89 (varType -> KEY_INTEGER .)
    KEY_END         reduce using rule 89 (varType -> KEY_INTEGER .)


state 158

    (93) varType -> KEY_REAL .

    SCOLON          reduce using rule 93 (varType -> KEY_REAL .)
    RRB             reduce using rule 93 (varType -> KEY_REAL .)
    KEY_END         reduce using rule 93 (varType -> KEY_REAL .)


state 159

    (86) type -> arrayType .

    RRB             reduce using rule 86 (type -> arrayType .)
    SCOLON          reduce using rule 86 (type -> arrayType .)
    KEY_END         reduce using rule 86 (type -> arrayType .)


state 160

    (91) varType -> KEY_CHAR .

    SCOLON          reduce using rule 91 (varType -> KEY_CHAR .)
    RRB             reduce using rule 91 (varType -> KEY_CHAR .)
    KEY_END         reduce using rule 91 (varType -> KEY_CHAR .)


state 161

    (94) varType -> KEY_SET .

    SCOLON          reduce using rule 94 (varType -> KEY_SET .)
    RRB             reduce using rule 94 (varType -> KEY_SET .)
    KEY_END         reduce using rule 94 (varType -> KEY_SET .)


state 162

    (87) type -> recordType .

    RRB             reduce using rule 87 (type -> recordType .)
    SCOLON          reduce using rule 87 (type -> recordType .)
    KEY_END         reduce using rule 87 (type -> recordType .)


state 163

    (90) varType -> KEY_BOOLEAN .

    SCOLON          reduce using rule 90 (varType -> KEY_BOOLEAN .)
    RRB             reduce using rule 90 (varType -> KEY_BOOLEAN .)
    KEY_END         reduce using rule 90 (varType -> KEY_BOOLEAN .)


state 164

    (92) varType -> KEY_STRING .

    SCOLON          reduce using rule 92 (varType -> KEY_STRING .)
    RRB             reduce using rule 92 (varType -> KEY_STRING .)
    KEY_END         reduce using rule 92 (varType -> KEY_STRING .)


state 165

    (108) pointerType -> KEY_POINTER . KEY_TO type

    KEY_TO          shift and go to state 242


state 166

    (83) typeDeclaration -> IDENT EQUAL type .

    SCOLON          reduce using rule 83 (typeDeclaration -> IDENT EQUAL type .)


state 167

    (88) type -> pointerType .

    RRB             reduce using rule 88 (type -> pointerType .)
    SCOLON          reduce using rule 88 (type -> pointerType .)
    KEY_END         reduce using rule 88 (type -> pointerType .)


state 168

    (84) type -> IDENT .

    RRB             reduce using rule 84 (type -> IDENT .)
    SCOLON          reduce using rule 84 (type -> IDENT .)
    KEY_END         reduce using rule 84 (type -> IDENT .)


state 169

    (99) recordType -> KEY_RECORD . fieldListSequence KEY_END
    (100) recordType -> KEY_RECORD . LRB baseType RRB fieldListSequence KEY_END
    (102) fieldListSequence -> . fieldListSequence SCOLON fieldList
    (103) fieldListSequence -> . fieldList
    (104) fieldList -> . identList COLON type
    (105) fieldList -> . empty
    (106) identList -> . identList COMMA IDENT
    (107) identList -> . IDENT
    (172) empty -> .

    LRB             shift and go to state 246
    IDENT           shift and go to state 72
    KEY_END         reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    fieldListSequence              shift and go to state 245
    fieldList                      shift and go to state 247
    identList                      shift and go to state 243
    empty                          shift and go to state 244

state 170

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT .

    $end            reduce using rule 1 (module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT .)


state 171

    (169) fileStatement -> KEY_FCLOSE LRB identdef . RRB

    RRB             shift and go to state 248


state 172

    (61) qualident -> identdef DOT qualident .

    DOT             reduce using rule 61 (qualident -> identdef DOT qualident .)
    LSB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    LRB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    MULTIPLY        reduce using rule 61 (qualident -> identdef DOT qualident .)
    DIVIDE          reduce using rule 61 (qualident -> identdef DOT qualident .)
    MODULUS         reduce using rule 61 (qualident -> identdef DOT qualident .)
    AND             reduce using rule 61 (qualident -> identdef DOT qualident .)
    PLUS            reduce using rule 61 (qualident -> identdef DOT qualident .)
    MINUS           reduce using rule 61 (qualident -> identdef DOT qualident .)
    OR              reduce using rule 61 (qualident -> identdef DOT qualident .)
    EQUAL           reduce using rule 61 (qualident -> identdef DOT qualident .)
    NEQUAL          reduce using rule 61 (qualident -> identdef DOT qualident .)
    LT              reduce using rule 61 (qualident -> identdef DOT qualident .)
    LTEQ            reduce using rule 61 (qualident -> identdef DOT qualident .)
    GT              reduce using rule 61 (qualident -> identdef DOT qualident .)
    GTEQ            reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_IN          reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_IS          reduce using rule 61 (qualident -> identdef DOT qualident .)
    SCOLON          reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_BEGIN       reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_THEN        reduce using rule 61 (qualident -> identdef DOT qualident .)
    RRB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    COMMA           reduce using rule 61 (qualident -> identdef DOT qualident .)
    COLON           reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_OF          reduce using rule 61 (qualident -> identdef DOT qualident .)
    RSB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    RCB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    ASSIGN          reduce using rule 61 (qualident -> identdef DOT qualident .)


state 173

    (168) fileStatement -> identdef EQUAL KEY_FOPEN . LRB string COMMA char RRB

    LRB             shift and go to state 249


state 174

    (156) ioStatement -> KEY_WRITE LRB expression . RRB

    RRB             shift and go to state 250


state 175

    (157) ioStatement -> KEY_WRITEINT LRB expression . RRB

    RRB             shift and go to state 251


state 176

    (167) ioStatement -> KEY_READBOOL LRB expression . RRB

    RRB             shift and go to state 252


state 177

    (53) set -> LCB RCB .

    RRB             reduce using rule 53 (set -> LCB RCB .)
    MULTIPLY        reduce using rule 53 (set -> LCB RCB .)
    DIVIDE          reduce using rule 53 (set -> LCB RCB .)
    MODULUS         reduce using rule 53 (set -> LCB RCB .)
    AND             reduce using rule 53 (set -> LCB RCB .)
    PLUS            reduce using rule 53 (set -> LCB RCB .)
    MINUS           reduce using rule 53 (set -> LCB RCB .)
    OR              reduce using rule 53 (set -> LCB RCB .)
    EQUAL           reduce using rule 53 (set -> LCB RCB .)
    NEQUAL          reduce using rule 53 (set -> LCB RCB .)
    LT              reduce using rule 53 (set -> LCB RCB .)
    LTEQ            reduce using rule 53 (set -> LCB RCB .)
    GT              reduce using rule 53 (set -> LCB RCB .)
    GTEQ            reduce using rule 53 (set -> LCB RCB .)
    KEY_IN          reduce using rule 53 (set -> LCB RCB .)
    KEY_IS          reduce using rule 53 (set -> LCB RCB .)
    SCOLON          reduce using rule 53 (set -> LCB RCB .)
    RSB             reduce using rule 53 (set -> LCB RCB .)
    COMMA           reduce using rule 53 (set -> LCB RCB .)
    KEY_BEGIN       reduce using rule 53 (set -> LCB RCB .)
    KEY_THEN        reduce using rule 53 (set -> LCB RCB .)
    COLON           reduce using rule 53 (set -> LCB RCB .)
    KEY_OF          reduce using rule 53 (set -> LCB RCB .)
    RCB             reduce using rule 53 (set -> LCB RCB .)


state 178

    (54) element -> expression .

    RCB             reduce using rule 54 (element -> expression .)
    COMMA           reduce using rule 54 (element -> expression .)


state 179

    (52) set -> LCB element . COMMA element RCB

    COMMA           shift and go to state 253


state 180

    (78) relation -> LTEQ .

    PLUS            reduce using rule 78 (relation -> LTEQ .)
    MINUS           reduce using rule 78 (relation -> LTEQ .)
    KEY_NIL         reduce using rule 78 (relation -> LTEQ .)
    LRB             reduce using rule 78 (relation -> LTEQ .)
    NOT             reduce using rule 78 (relation -> LTEQ .)
    KEY_ABS         reduce using rule 78 (relation -> LTEQ .)
    KEY_CHR         reduce using rule 78 (relation -> LTEQ .)
    KEY_ORD         reduce using rule 78 (relation -> LTEQ .)
    KEY_INTEGER     reduce using rule 78 (relation -> LTEQ .)
    KEY_BOOLEAN     reduce using rule 78 (relation -> LTEQ .)
    KEY_CHAR        reduce using rule 78 (relation -> LTEQ .)
    KEY_STRING      reduce using rule 78 (relation -> LTEQ .)
    KEY_REAL        reduce using rule 78 (relation -> LTEQ .)
    KEY_SET         reduce using rule 78 (relation -> LTEQ .)
    VINTEGER        reduce using rule 78 (relation -> LTEQ .)
    VREAL           reduce using rule 78 (relation -> LTEQ .)
    VCHAR           reduce using rule 78 (relation -> LTEQ .)
    VSTRING         reduce using rule 78 (relation -> LTEQ .)
    LCB             reduce using rule 78 (relation -> LTEQ .)
    IDENT           reduce using rule 78 (relation -> LTEQ .)
    AT              reduce using rule 78 (relation -> LTEQ .)


state 181

    (79) relation -> GT .

    PLUS            reduce using rule 79 (relation -> GT .)
    MINUS           reduce using rule 79 (relation -> GT .)
    KEY_NIL         reduce using rule 79 (relation -> GT .)
    LRB             reduce using rule 79 (relation -> GT .)
    NOT             reduce using rule 79 (relation -> GT .)
    KEY_ABS         reduce using rule 79 (relation -> GT .)
    KEY_CHR         reduce using rule 79 (relation -> GT .)
    KEY_ORD         reduce using rule 79 (relation -> GT .)
    KEY_INTEGER     reduce using rule 79 (relation -> GT .)
    KEY_BOOLEAN     reduce using rule 79 (relation -> GT .)
    KEY_CHAR        reduce using rule 79 (relation -> GT .)
    KEY_STRING      reduce using rule 79 (relation -> GT .)
    KEY_REAL        reduce using rule 79 (relation -> GT .)
    KEY_SET         reduce using rule 79 (relation -> GT .)
    VINTEGER        reduce using rule 79 (relation -> GT .)
    VREAL           reduce using rule 79 (relation -> GT .)
    VCHAR           reduce using rule 79 (relation -> GT .)
    VSTRING         reduce using rule 79 (relation -> GT .)
    LCB             reduce using rule 79 (relation -> GT .)
    IDENT           reduce using rule 79 (relation -> GT .)
    AT              reduce using rule 79 (relation -> GT .)


state 182

    (77) relation -> LT .

    PLUS            reduce using rule 77 (relation -> LT .)
    MINUS           reduce using rule 77 (relation -> LT .)
    KEY_NIL         reduce using rule 77 (relation -> LT .)
    LRB             reduce using rule 77 (relation -> LT .)
    NOT             reduce using rule 77 (relation -> LT .)
    KEY_ABS         reduce using rule 77 (relation -> LT .)
    KEY_CHR         reduce using rule 77 (relation -> LT .)
    KEY_ORD         reduce using rule 77 (relation -> LT .)
    KEY_INTEGER     reduce using rule 77 (relation -> LT .)
    KEY_BOOLEAN     reduce using rule 77 (relation -> LT .)
    KEY_CHAR        reduce using rule 77 (relation -> LT .)
    KEY_STRING      reduce using rule 77 (relation -> LT .)
    KEY_REAL        reduce using rule 77 (relation -> LT .)
    KEY_SET         reduce using rule 77 (relation -> LT .)
    VINTEGER        reduce using rule 77 (relation -> LT .)
    VREAL           reduce using rule 77 (relation -> LT .)
    VCHAR           reduce using rule 77 (relation -> LT .)
    VSTRING         reduce using rule 77 (relation -> LT .)
    LCB             reduce using rule 77 (relation -> LT .)
    IDENT           reduce using rule 77 (relation -> LT .)
    AT              reduce using rule 77 (relation -> LT .)


state 183

    (75) relation -> EQUAL .

    PLUS            reduce using rule 75 (relation -> EQUAL .)
    MINUS           reduce using rule 75 (relation -> EQUAL .)
    KEY_NIL         reduce using rule 75 (relation -> EQUAL .)
    LRB             reduce using rule 75 (relation -> EQUAL .)
    NOT             reduce using rule 75 (relation -> EQUAL .)
    KEY_ABS         reduce using rule 75 (relation -> EQUAL .)
    KEY_CHR         reduce using rule 75 (relation -> EQUAL .)
    KEY_ORD         reduce using rule 75 (relation -> EQUAL .)
    KEY_INTEGER     reduce using rule 75 (relation -> EQUAL .)
    KEY_BOOLEAN     reduce using rule 75 (relation -> EQUAL .)
    KEY_CHAR        reduce using rule 75 (relation -> EQUAL .)
    KEY_STRING      reduce using rule 75 (relation -> EQUAL .)
    KEY_REAL        reduce using rule 75 (relation -> EQUAL .)
    KEY_SET         reduce using rule 75 (relation -> EQUAL .)
    VINTEGER        reduce using rule 75 (relation -> EQUAL .)
    VREAL           reduce using rule 75 (relation -> EQUAL .)
    VCHAR           reduce using rule 75 (relation -> EQUAL .)
    VSTRING         reduce using rule 75 (relation -> EQUAL .)
    LCB             reduce using rule 75 (relation -> EQUAL .)
    IDENT           reduce using rule 75 (relation -> EQUAL .)
    AT              reduce using rule 75 (relation -> EQUAL .)


state 184

    (81) relation -> KEY_IN .

    PLUS            reduce using rule 81 (relation -> KEY_IN .)
    MINUS           reduce using rule 81 (relation -> KEY_IN .)
    KEY_NIL         reduce using rule 81 (relation -> KEY_IN .)
    LRB             reduce using rule 81 (relation -> KEY_IN .)
    NOT             reduce using rule 81 (relation -> KEY_IN .)
    KEY_ABS         reduce using rule 81 (relation -> KEY_IN .)
    KEY_CHR         reduce using rule 81 (relation -> KEY_IN .)
    KEY_ORD         reduce using rule 81 (relation -> KEY_IN .)
    KEY_INTEGER     reduce using rule 81 (relation -> KEY_IN .)
    KEY_BOOLEAN     reduce using rule 81 (relation -> KEY_IN .)
    KEY_CHAR        reduce using rule 81 (relation -> KEY_IN .)
    KEY_STRING      reduce using rule 81 (relation -> KEY_IN .)
    KEY_REAL        reduce using rule 81 (relation -> KEY_IN .)
    KEY_SET         reduce using rule 81 (relation -> KEY_IN .)
    VINTEGER        reduce using rule 81 (relation -> KEY_IN .)
    VREAL           reduce using rule 81 (relation -> KEY_IN .)
    VCHAR           reduce using rule 81 (relation -> KEY_IN .)
    VSTRING         reduce using rule 81 (relation -> KEY_IN .)
    LCB             reduce using rule 81 (relation -> KEY_IN .)
    IDENT           reduce using rule 81 (relation -> KEY_IN .)
    AT              reduce using rule 81 (relation -> KEY_IN .)


state 185

    (19) expression -> simpleExpression relation . simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 254
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
state 157

    (63) qualident -> identdef DOT qualident .

    DOT             reduce using rule 63 (qualident -> identdef DOT qualident .)
    LSB             reduce using rule 63 (qualident -> identdef DOT qualident .)
    LRB             reduce using rule 63 (qualident -> identdef DOT qualident .)
    MULTIPLY        reduce using rule 63 (qualident -> identdef DOT qualident .)
    DIVIDE          reduce using rule 63 (qualident -> identdef DOT qualident .)
    MODULUS         reduce using rule 63 (qualident -> identdef DOT qualident .)
    AND             reduce using rule 63 (qualident -> identdef DOT qualident .)
    PLUS            reduce using rule 63 (qualident -> identdef DOT qualident .)
    MINUS           reduce using rule 63 (qualident -> identdef DOT qualident .)
    OR              reduce using rule 63 (qualident -> identdef DOT qualident .)
    EQUAL           reduce using rule 63 (qualident -> identdef DOT qualident .)
    NEQUAL          reduce using rule 63 (qualident -> identdef DOT qualident .)
    LT              reduce using rule 63 (qualident -> identdef DOT qualident .)
    LTEQ            reduce using rule 63 (qualident -> identdef DOT qualident .)
    GT              reduce using rule 63 (qualident -> identdef DOT qualident .)
    GTEQ            reduce using rule 63 (qualident -> identdef DOT qualident .)
    KEY_IN          reduce using rule 63 (qualident -> identdef DOT qualident .)
    KEY_IS          reduce using rule 63 (qualident -> identdef DOT qualident .)
    RRB             reduce using rule 63 (qualident -> identdef DOT qualident .)
    KEY_THEN        reduce using rule 63 (qualident -> identdef DOT qualident .)
    ASSIGN          reduce using rule 63 (qualident -> identdef DOT qualident .)
    SCOLON          reduce using rule 63 (qualident -> identdef DOT qualident .)
    KEY_BEGIN       reduce using rule 63 (qualident -> identdef DOT qualident .)
    COMMA           reduce using rule 63 (qualident -> identdef DOT qualident .)
    COLON           reduce using rule 63 (qualident -> identdef DOT qualident .)
    RSB             reduce using rule 63 (qualident -> identdef DOT qualident .)
    KEY_OF          reduce using rule 63 (qualident -> identdef DOT qualident .)
    RCB             reduce using rule 63 (qualident -> identdef DOT qualident .)


state 158

    (166) ioStatement -> KEY_READINT LRB expression . RRB

    RRB             shift and go to state 241


state 159

    (32) factor -> KEY_NIL LRB . designator RRB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34

    qualident                      shift and go to state 112
    designator                     shift and go to state 242
    identdef                       shift and go to state 93

state 160

    (22) simpleExpression -> MINUS term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (174) empty -> .

    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    EQUAL           reduce using rule 174 (empty -> .)
    NEQUAL          reduce using rule 174 (empty -> .)
    LT              reduce using rule 174 (empty -> .)
    LTEQ            reduce using rule 174 (empty -> .)
    GT              reduce using rule 174 (empty -> .)
    GTEQ            reduce using rule 174 (empty -> .)
    KEY_IN          reduce using rule 174 (empty -> .)
    KEY_IS          reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_THEN        reduce using rule 174 (empty -> .)
    KEY_BEGIN       reduce using rule 174 (empty -> .)
    RRB             reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    COLON           reduce using rule 174 (empty -> .)
    RSB             reduce using rule 174 (empty -> .)
    KEY_OF          reduce using rule 174 (empty -> .)
    RCB             reduce using rule 174 (empty -> .)

    simpless                       shift and go to state 243
    empty                          shift and go to state 165

state 161

    (56) element -> expression .

    COMMA           reduce using rule 56 (element -> expression .)
    RCB             reduce using rule 56 (element -> expression .)


state 162

    (55) set -> LCB RCB .

    MULTIPLY        reduce using rule 55 (set -> LCB RCB .)
    DIVIDE          reduce using rule 55 (set -> LCB RCB .)
    MODULUS         reduce using rule 55 (set -> LCB RCB .)
    AND             reduce using rule 55 (set -> LCB RCB .)
    PLUS            reduce using rule 55 (set -> LCB RCB .)
    MINUS           reduce using rule 55 (set -> LCB RCB .)
    OR              reduce using rule 55 (set -> LCB RCB .)
    EQUAL           reduce using rule 55 (set -> LCB RCB .)
    NEQUAL          reduce using rule 55 (set -> LCB RCB .)
    LT              reduce using rule 55 (set -> LCB RCB .)
    LTEQ            reduce using rule 55 (set -> LCB RCB .)
    GT              reduce using rule 55 (set -> LCB RCB .)
    GTEQ            reduce using rule 55 (set -> LCB RCB .)
    KEY_IN          reduce using rule 55 (set -> LCB RCB .)
    KEY_IS          reduce using rule 55 (set -> LCB RCB .)
    RRB             reduce using rule 55 (set -> LCB RCB .)
    SCOLON          reduce using rule 55 (set -> LCB RCB .)
    KEY_THEN        reduce using rule 55 (set -> LCB RCB .)
    KEY_BEGIN       reduce using rule 55 (set -> LCB RCB .)
    COMMA           reduce using rule 55 (set -> LCB RCB .)
    COLON           reduce using rule 55 (set -> LCB RCB .)
    RSB             reduce using rule 55 (set -> LCB RCB .)
    KEY_OF          reduce using rule 55 (set -> LCB RCB .)
    RCB             reduce using rule 55 (set -> LCB RCB .)


state 163

    (54) set -> LCB element . COMMA element RCB

    COMMA           shift and go to state 244


state 164

    (21) simpleExpression -> term simpless .
    (23) simpless -> simpless . addOperator term
    (74) addOperator -> . PLUS
    (75) addOperator -> . MINUS
    (76) addOperator -> . OR

    EQUAL           reduce using rule 21 (simpleExpression -> term simpless .)
    NEQUAL          reduce using rule 21 (simpleExpression -> term simpless .)
    LT              reduce using rule 21 (simpleExpression -> term simpless .)
    LTEQ            reduce using rule 21 (simpleExpression -> term simpless .)
    GT              reduce using rule 21 (simpleExpression -> term simpless .)
    GTEQ            reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_IN          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_IS          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_BEGIN       reduce using rule 21 (simpleExpression -> term simpless .)
    SCOLON          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_THEN        reduce using rule 21 (simpleExpression -> term simpless .)
    RRB             reduce using rule 21 (simpleExpression -> term simpless .)
    COMMA           reduce using rule 21 (simpleExpression -> term simpless .)
    COLON           reduce using rule 21 (simpleExpression -> term simpless .)
    RSB             reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_OF          reduce using rule 21 (simpleExpression -> term simpless .)
    RCB             reduce using rule 21 (simpleExpression -> term simpless .)
    PLUS            shift and go to state 246
    MINUS           shift and go to state 245
    OR              shift and go to state 247

    addOperator                    shift and go to state 248

state 165

    (24) simpless -> empty .

    PLUS            reduce using rule 24 (simpless -> empty .)
    MINUS           reduce using rule 24 (simpless -> empty .)
    OR              reduce using rule 24 (simpless -> empty .)
    EQUAL           reduce using rule 24 (simpless -> empty .)
    NEQUAL          reduce using rule 24 (simpless -> empty .)
    LT              reduce using rule 24 (simpless -> empty .)
    LTEQ            reduce using rule 24 (simpless -> empty .)
    GT              reduce using rule 24 (simpless -> empty .)
    GTEQ            reduce using rule 24 (simpless -> empty .)
    KEY_IN          reduce using rule 24 (simpless -> empty .)
    KEY_IS          reduce using rule 24 (simpless -> empty .)
    SCOLON          reduce using rule 24 (simpless -> empty .)
    KEY_THEN        reduce using rule 24 (simpless -> empty .)
    KEY_BEGIN       reduce using rule 24 (simpless -> empty .)
    RRB             reduce using rule 24 (simpless -> empty .)
    COMMA           reduce using rule 24 (simpless -> empty .)
    COLON           reduce using rule 24 (simpless -> empty .)
    RSB             reduce using rule 24 (simpless -> empty .)
    KEY_OF          reduce using rule 24 (simpless -> empty .)
    RCB             reduce using rule 24 (simpless -> empty .)


state 166

    (19) expression -> simpleExpression relation . simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 249
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    identdef                       shift and go to state 93
    number                         shift and go to state 92
    set                            shift and go to state 99
    designator                     shift and go to state 111
    boolean                        shift and go to state 103

state 167

    (77) relation -> EQUAL .

    PLUS            reduce using rule 77 (relation -> EQUAL .)
    MINUS           reduce using rule 77 (relation -> EQUAL .)
    KEY_NIL         reduce using rule 77 (relation -> EQUAL .)
    LRB             reduce using rule 77 (relation -> EQUAL .)
    NOT             reduce using rule 77 (relation -> EQUAL .)
    KEY_ABS         reduce using rule 77 (relation -> EQUAL .)
    KEY_CHR         reduce using rule 77 (relation -> EQUAL .)
    KEY_ORD         reduce using rule 77 (relation -> EQUAL .)
    KEY_INTEGER     reduce using rule 77 (relation -> EQUAL .)
    KEY_BOOLEAN     reduce using rule 77 (relation -> EQUAL .)
    KEY_CHAR        reduce using rule 77 (relation -> EQUAL .)
    KEY_STRING      reduce using rule 77 (relation -> EQUAL .)
    KEY_REAL        reduce using rule 77 (relation -> EQUAL .)
    KEY_SET         reduce using rule 77 (relation -> EQUAL .)
    VINTEGER        reduce using rule 77 (relation -> EQUAL .)
    VREAL           reduce using rule 77 (relation -> EQUAL .)
    VBOOLEAN        reduce using rule 77 (relation -> EQUAL .)
    VCHAR           reduce using rule 77 (relation -> EQUAL .)
    VSTRING         reduce using rule 77 (relation -> EQUAL .)
    LCB             reduce using rule 77 (relation -> EQUAL .)
    IDENT           reduce using rule 77 (relation -> EQUAL .)
    AT              reduce using rule 77 (relation -> EQUAL .)


state 168

    (78) relation -> NEQUAL .

    PLUS            reduce using rule 78 (relation -> NEQUAL .)
    MINUS           reduce using rule 78 (relation -> NEQUAL .)
    KEY_NIL         reduce using rule 78 (relation -> NEQUAL .)
    LRB             reduce using rule 78 (relation -> NEQUAL .)
    NOT             reduce using rule 78 (relation -> NEQUAL .)
    KEY_ABS         reduce using rule 78 (relation -> NEQUAL .)
    KEY_CHR         reduce using rule 78 (relation -> NEQUAL .)
    KEY_ORD         reduce using rule 78 (relation -> NEQUAL .)
    KEY_INTEGER     reduce using rule 78 (relation -> NEQUAL .)
    KEY_BOOLEAN     reduce using rule 78 (relation -> NEQUAL .)
    KEY_CHAR        reduce using rule 78 (relation -> NEQUAL .)
    KEY_STRING      reduce using rule 78 (relation -> NEQUAL .)
    KEY_REAL        reduce using rule 78 (relation -> NEQUAL .)
    KEY_SET         reduce using rule 78 (relation -> NEQUAL .)
    VINTEGER        reduce using rule 78 (relation -> NEQUAL .)
    VREAL           reduce using rule 78 (relation -> NEQUAL .)
    VBOOLEAN        reduce using rule 78 (relation -> NEQUAL .)
    VCHAR           reduce using rule 78 (relation -> NEQUAL .)
    VSTRING         reduce using rule 78 (relation -> NEQUAL .)
    LCB             reduce using rule 78 (relation -> NEQUAL .)
    IDENT           reduce using rule 78 (relation -> NEQUAL .)
    AT              reduce using rule 78 (relation -> NEQUAL .)


state 169

    (80) relation -> LTEQ .

    PLUS            reduce using rule 80 (relation -> LTEQ .)
    MINUS           reduce using rule 80 (relation -> LTEQ .)
    KEY_NIL         reduce using rule 80 (relation -> LTEQ .)
    LRB             reduce using rule 80 (relation -> LTEQ .)
    NOT             reduce using rule 80 (relation -> LTEQ .)
    KEY_ABS         reduce using rule 80 (relation -> LTEQ .)
    KEY_CHR         reduce using rule 80 (relation -> LTEQ .)
    KEY_ORD         reduce using rule 80 (relation -> LTEQ .)
    KEY_INTEGER     reduce using rule 80 (relation -> LTEQ .)
    KEY_BOOLEAN     reduce using rule 80 (relation -> LTEQ .)
    KEY_CHAR        reduce using rule 80 (relation -> LTEQ .)
    KEY_STRING      reduce using rule 80 (relation -> LTEQ .)
    KEY_REAL        reduce using rule 80 (relation -> LTEQ .)
    KEY_SET         reduce using rule 80 (relation -> LTEQ .)
    VINTEGER        reduce using rule 80 (relation -> LTEQ .)
    VREAL           reduce using rule 80 (relation -> LTEQ .)
    VBOOLEAN        reduce using rule 80 (relation -> LTEQ .)
    VCHAR           reduce using rule 80 (relation -> LTEQ .)
    VSTRING         reduce using rule 80 (relation -> LTEQ .)
    LCB             reduce using rule 80 (relation -> LTEQ .)
    IDENT           reduce using rule 80 (relation -> LTEQ .)
    AT              reduce using rule 80 (relation -> LTEQ .)


state 170

    (82) relation -> GTEQ .

    PLUS            reduce using rule 82 (relation -> GTEQ .)
    MINUS           reduce using rule 82 (relation -> GTEQ .)
    KEY_NIL         reduce using rule 82 (relation -> GTEQ .)
    LRB             reduce using rule 82 (relation -> GTEQ .)
    NOT             reduce using rule 82 (relation -> GTEQ .)
    KEY_ABS         reduce using rule 82 (relation -> GTEQ .)
    KEY_CHR         reduce using rule 82 (relation -> GTEQ .)
    KEY_ORD         reduce using rule 82 (relation -> GTEQ .)
    KEY_INTEGER     reduce using rule 82 (relation -> GTEQ .)
    KEY_BOOLEAN     reduce using rule 82 (relation -> GTEQ .)
    KEY_CHAR        reduce using rule 82 (relation -> GTEQ .)
    KEY_STRING      reduce using rule 82 (relation -> GTEQ .)
    KEY_REAL        reduce using rule 82 (relation -> GTEQ .)
    KEY_SET         reduce using rule 82 (relation -> GTEQ .)
    VINTEGER        reduce using rule 82 (relation -> GTEQ .)
    VREAL           reduce using rule 82 (relation -> GTEQ .)
    VBOOLEAN        reduce using rule 82 (relation -> GTEQ .)
    VCHAR           reduce using rule 82 (relation -> GTEQ .)
    VSTRING         reduce using rule 82 (relation -> GTEQ .)
    LCB             reduce using rule 82 (relation -> GTEQ .)
    IDENT           reduce using rule 82 (relation -> GTEQ .)
    AT              reduce using rule 82 (relation -> GTEQ .)


state 171

    (84) relation -> KEY_IS .

    PLUS            reduce using rule 84 (relation -> KEY_IS .)
    MINUS           reduce using rule 84 (relation -> KEY_IS .)
    KEY_NIL         reduce using rule 84 (relation -> KEY_IS .)
    LRB             reduce using rule 84 (relation -> KEY_IS .)
    NOT             reduce using rule 84 (relation -> KEY_IS .)
    KEY_ABS         reduce using rule 84 (relation -> KEY_IS .)
    KEY_CHR         reduce using rule 84 (relation -> KEY_IS .)
    KEY_ORD         reduce using rule 84 (relation -> KEY_IS .)
    KEY_INTEGER     reduce using rule 84 (relation -> KEY_IS .)
    KEY_BOOLEAN     reduce using rule 84 (relation -> KEY_IS .)
    KEY_CHAR        reduce using rule 84 (relation -> KEY_IS .)
    KEY_STRING      reduce using rule 84 (relation -> KEY_IS .)
    KEY_REAL        reduce using rule 84 (relation -> KEY_IS .)
    KEY_SET         reduce using rule 84 (relation -> KEY_IS .)
    VINTEGER        reduce using rule 84 (relation -> KEY_IS .)
    VREAL           reduce using rule 84 (relation -> KEY_IS .)
    VBOOLEAN        reduce using rule 84 (relation -> KEY_IS .)
    VCHAR           reduce using rule 84 (relation -> KEY_IS .)
    VSTRING         reduce using rule 84 (relation -> KEY_IS .)
    LCB             reduce using rule 84 (relation -> KEY_IS .)
    IDENT           reduce using rule 84 (relation -> KEY_IS .)
    AT              reduce using rule 84 (relation -> KEY_IS .)


state 172

    (79) relation -> LT .

    PLUS            reduce using rule 79 (relation -> LT .)
    MINUS           reduce using rule 79 (relation -> LT .)
    KEY_NIL         reduce using rule 79 (relation -> LT .)
    LRB             reduce using rule 79 (relation -> LT .)
    NOT             reduce using rule 79 (relation -> LT .)
    KEY_ABS         reduce using rule 79 (relation -> LT .)
    KEY_CHR         reduce using rule 79 (relation -> LT .)
    KEY_ORD         reduce using rule 79 (relation -> LT .)
    KEY_INTEGER     reduce using rule 79 (relation -> LT .)
    KEY_BOOLEAN     reduce using rule 79 (relation -> LT .)
    KEY_CHAR        reduce using rule 79 (relation -> LT .)
    KEY_STRING      reduce using rule 79 (relation -> LT .)
    KEY_REAL        reduce using rule 79 (relation -> LT .)
    KEY_SET         reduce using rule 79 (relation -> LT .)
    VINTEGER        reduce using rule 79 (relation -> LT .)
    VREAL           reduce using rule 79 (relation -> LT .)
    VBOOLEAN        reduce using rule 79 (relation -> LT .)
    VCHAR           reduce using rule 79 (relation -> LT .)
    VSTRING         reduce using rule 79 (relation -> LT .)
    LCB             reduce using rule 79 (relation -> LT .)
    IDENT           reduce using rule 79 (relation -> LT .)
    AT              reduce using rule 79 (relation -> LT .)


state 173

    (83) relation -> KEY_IN .

    PLUS            reduce using rule 83 (relation -> KEY_IN .)
    MINUS           reduce using rule 83 (relation -> KEY_IN .)
    KEY_NIL         reduce using rule 83 (relation -> KEY_IN .)
    LRB             reduce using rule 83 (relation -> KEY_IN .)
    NOT             reduce using rule 83 (relation -> KEY_IN .)
    KEY_ABS         reduce using rule 83 (relation -> KEY_IN .)
    KEY_CHR         reduce using rule 83 (relation -> KEY_IN .)
    KEY_ORD         reduce using rule 83 (relation -> KEY_IN .)
    KEY_INTEGER     reduce using rule 83 (relation -> KEY_IN .)
    KEY_BOOLEAN     reduce using rule 83 (relation -> KEY_IN .)
    KEY_CHAR        reduce using rule 83 (relation -> KEY_IN .)
    KEY_STRING      reduce using rule 83 (relation -> KEY_IN .)
    KEY_REAL        reduce using rule 83 (relation -> KEY_IN .)
    KEY_SET         reduce using rule 83 (relation -> KEY_IN .)
    VINTEGER        reduce using rule 83 (relation -> KEY_IN .)
    VREAL           reduce using rule 83 (relation -> KEY_IN .)
    VBOOLEAN        reduce using rule 83 (relation -> KEY_IN .)
    VCHAR           reduce using rule 83 (relation -> KEY_IN .)
    VSTRING         reduce using rule 83 (relation -> KEY_IN .)
    LCB             reduce using rule 83 (relation -> KEY_IN .)
    IDENT           reduce using rule 83 (relation -> KEY_IN .)
    AT              reduce using rule 83 (relation -> KEY_IN .)


state 174

    (81) relation -> GT .

    PLUS            reduce using rule 81 (relation -> GT .)
    MINUS           reduce using rule 81 (relation -> GT .)
    KEY_NIL         reduce using rule 81 (relation -> GT .)
    LRB             reduce using rule 81 (relation -> GT .)
    NOT             reduce using rule 81 (relation -> GT .)
    KEY_ABS         reduce using rule 81 (relation -> GT .)
    KEY_CHR         reduce using rule 81 (relation -> GT .)
    KEY_ORD         reduce using rule 81 (relation -> GT .)
    KEY_INTEGER     reduce using rule 81 (relation -> GT .)
    KEY_BOOLEAN     reduce using rule 81 (relation -> GT .)
    KEY_CHAR        reduce using rule 81 (relation -> GT .)
    KEY_STRING      reduce using rule 81 (relation -> GT .)
    KEY_REAL        reduce using rule 81 (relation -> GT .)
    KEY_SET         reduce using rule 81 (relation -> GT .)
    VINTEGER        reduce using rule 81 (relation -> GT .)
    VREAL           reduce using rule 81 (relation -> GT .)
    VBOOLEAN        reduce using rule 81 (relation -> GT .)
    VCHAR           reduce using rule 81 (relation -> GT .)
    VSTRING         reduce using rule 81 (relation -> GT .)
    LCB             reduce using rule 81 (relation -> GT .)
    IDENT           reduce using rule 81 (relation -> GT .)
    AT              reduce using rule 81 (relation -> GT .)


state 175

    (36) factor -> LRB expression . RRB

    RRB             shift and go to state 250


state 176

    (40) factor -> KEY_ORD factor .

    MULTIPLY        reduce using rule 40 (factor -> KEY_ORD factor .)
    DIVIDE          reduce using rule 40 (factor -> KEY_ORD factor .)
    MODULUS         reduce using rule 40 (factor -> KEY_ORD factor .)
    AND             reduce using rule 40 (factor -> KEY_ORD factor .)
    PLUS            reduce using rule 40 (factor -> KEY_ORD factor .)
    MINUS           reduce using rule 40 (factor -> KEY_ORD factor .)
    OR              reduce using rule 40 (factor -> KEY_ORD factor .)
    EQUAL           reduce using rule 40 (factor -> KEY_ORD factor .)
    NEQUAL          reduce using rule 40 (factor -> KEY_ORD factor .)
    LT              reduce using rule 40 (factor -> KEY_ORD factor .)
    LTEQ            reduce using rule 40 (factor -> KEY_ORD factor .)
    GT              reduce using rule 40 (factor -> KEY_ORD factor .)
    GTEQ            reduce using rule 40 (factor -> KEY_ORD factor .)
    KEY_IN          reduce using rule 40 (factor -> KEY_ORD factor .)
    KEY_IS          reduce using rule 40 (factor -> KEY_ORD factor .)
    RRB             reduce using rule 40 (factor -> KEY_ORD factor .)
    COMMA           reduce using rule 40 (factor -> KEY_ORD factor .)
    RSB             reduce using rule 40 (factor -> KEY_ORD factor .)
    SCOLON          reduce using rule 40 (factor -> KEY_ORD factor .)
    KEY_THEN        reduce using rule 40 (factor -> KEY_ORD factor .)
    KEY_BEGIN       reduce using rule 40 (factor -> KEY_ORD factor .)
    COLON           reduce using rule 40 (factor -> KEY_ORD factor .)
    KEY_OF          reduce using rule 40 (factor -> KEY_ORD factor .)
    RCB             reduce using rule 40 (factor -> KEY_ORD factor .)


state 177

    (48) factor -> KEY_ORD LRB . factor RRB
    (36) factor -> LRB . expression RRB
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (25) term -> . factor termss
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 175
    char                           shift and go to state 105
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    factor                         shift and go to state 251
    number                         shift and go to state 92
    set                            shift and go to state 99
    identdef                       shift and go to state 93
    designator                     shift and go to state 111
    boolean                        shift and go to state 103

state 178

    (38) factor -> KEY_ABS factor .

    MULTIPLY        reduce using rule 38 (factor -> KEY_ABS factor .)
    DIVIDE          reduce using rule 38 (factor -> KEY_ABS factor .)
    MODULUS         reduce using rule 38 (factor -> KEY_ABS factor .)
    AND             reduce using rule 38 (factor -> KEY_ABS factor .)
    PLUS            reduce using rule 38 (factor -> KEY_ABS factor .)
    MINUS           reduce using rule 38 (factor -> KEY_ABS factor .)
    OR              reduce using rule 38 (factor -> KEY_ABS factor .)
    EQUAL           reduce using rule 38 (factor -> KEY_ABS factor .)
    NEQUAL          reduce using rule 38 (factor -> KEY_ABS factor .)
    LT              reduce using rule 38 (factor -> KEY_ABS factor .)
    LTEQ            reduce using rule 38 (factor -> KEY_ABS factor .)
    GT              reduce using rule 38 (factor -> KEY_ABS factor .)
    GTEQ            reduce using rule 38 (factor -> KEY_ABS factor .)
    KEY_IN          reduce using rule 38 (factor -> KEY_ABS factor .)
    KEY_IS          reduce using rule 38 (factor -> KEY_ABS factor .)
    RRB             reduce using rule 38 (factor -> KEY_ABS factor .)
    COMMA           reduce using rule 38 (factor -> KEY_ABS factor .)
    RSB             reduce using rule 38 (factor -> KEY_ABS factor .)
    SCOLON          reduce using rule 38 (factor -> KEY_ABS factor .)
    KEY_THEN        reduce using rule 38 (factor -> KEY_ABS factor .)
    KEY_BEGIN       reduce using rule 38 (factor -> KEY_ABS factor .)
    COLON           reduce using rule 38 (factor -> KEY_ABS factor .)
    KEY_OF          reduce using rule 38 (factor -> KEY_ABS factor .)
    RCB             reduce using rule 38 (factor -> KEY_ABS factor .)


state 179

    (20) simpleExpression -> PLUS term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (174) empty -> .

    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    EQUAL           reduce using rule 174 (empty -> .)
    NEQUAL          reduce using rule 174 (empty -> .)
    LT              reduce using rule 174 (empty -> .)
    LTEQ            reduce using rule 174 (empty -> .)
    GT              reduce using rule 174 (empty -> .)
    GTEQ            reduce using rule 174 (empty -> .)
    KEY_IN          reduce using rule 174 (empty -> .)
    KEY_IS          reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_THEN        reduce using rule 174 (empty -> .)
    KEY_BEGIN       reduce using rule 174 (empty -> .)
    RRB             reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    COLON           reduce using rule 174 (empty -> .)
    RSB             reduce using rule 174 (empty -> .)
    KEY_OF          reduce using rule 174 (empty -> .)
    RCB             reduce using rule 174 (empty -> .)

    simpless                       shift and go to state 252
    empty                          shift and go to state 165

state 180

    (35) factor -> designator actualParameters .

    MULTIPLY        reduce using rule 35 (factor -> designator actualParameters .)
    DIVIDE          reduce using rule 35 (factor -> designator actualParameters .)
    MODULUS         reduce using rule 35 (factor -> designator actualParameters .)
    AND             reduce using rule 35 (factor -> designator actualParameters .)
    PLUS            reduce using rule 35 (factor -> designator actualParameters .)
    MINUS           reduce using rule 35 (factor -> designator actualParameters .)
    OR              reduce using rule 35 (factor -> designator actualParameters .)
    EQUAL           reduce using rule 35 (factor -> designator actualParameters .)
    NEQUAL          reduce using rule 35 (factor -> designator actualParameters .)
    LT              reduce using rule 35 (factor -> designator actualParameters .)
    LTEQ            reduce using rule 35 (factor -> designator actualParameters .)
    GT              reduce using rule 35 (factor -> designator actualParameters .)
    GTEQ            reduce using rule 35 (factor -> designator actualParameters .)
    KEY_IN          reduce using rule 35 (factor -> designator actualParameters .)
    KEY_IS          reduce using rule 35 (factor -> designator actualParameters .)
    RRB             reduce using rule 35 (factor -> designator actualParameters .)
    COMMA           reduce using rule 35 (factor -> designator actualParameters .)
    RSB             reduce using rule 35 (factor -> designator actualParameters .)
    SCOLON          reduce using rule 35 (factor -> designator actualParameters .)
    KEY_THEN        reduce using rule 35 (factor -> designator actualParameters .)
    KEY_BEGIN       reduce using rule 35 (factor -> designator actualParameters .)
    COLON           reduce using rule 35 (factor -> designator actualParameters .)
    KEY_OF          reduce using rule 35 (factor -> designator actualParameters .)
    RCB             reduce using rule 35 (factor -> designator actualParameters .)


state 181

    (25) term -> factor termss .
    (26) termss -> termss . mulOperator factor
    (70) mulOperator -> . MULTIPLY
    (71) mulOperator -> . DIVIDE
    (72) mulOperator -> . MODULUS
    (73) mulOperator -> . AND

    PLUS            reduce using rule 25 (term -> factor termss .)
    MINUS           reduce using rule 25 (term -> factor termss .)
    OR              reduce using rule 25 (term -> factor termss .)
    EQUAL           reduce using rule 25 (term -> factor termss .)
    NEQUAL          reduce using rule 25 (term -> factor termss .)
    LT              reduce using rule 25 (term -> factor termss .)
    LTEQ            reduce using rule 25 (term -> factor termss .)
    GT              reduce using rule 25 (term -> factor termss .)
    GTEQ            reduce using rule 25 (term -> factor termss .)
    KEY_IN          reduce using rule 25 (term -> factor termss .)
    KEY_IS          reduce using rule 25 (term -> factor termss .)
    KEY_THEN        reduce using rule 25 (term -> factor termss .)
    RRB             reduce using rule 25 (term -> factor termss .)
    SCOLON          reduce using rule 25 (term -> factor termss .)
    KEY_BEGIN       reduce using rule 25 (term -> factor termss .)
    COMMA           reduce using rule 25 (term -> factor termss .)
    COLON           reduce using rule 25 (term -> factor termss .)
    RSB             reduce using rule 25 (term -> factor termss .)
    KEY_OF          reduce using rule 25 (term -> factor termss .)
    RCB             reduce using rule 25 (term -> factor termss .)
    MULTIPLY        shift and go to state 257
    DIVIDE          shift and go to state 253
    MODULUS         shift and go to state 255
    AND             shift and go to state 254

    mulOperator                    shift and go to state 256

state 182

    (27) termss -> empty .

    MULTIPLY        reduce using rule 27 (termss -> empty .)
    DIVIDE          reduce using rule 27 (termss -> empty .)
    MODULUS         reduce using rule 27 (termss -> empty .)
    AND             reduce using rule 27 (termss -> empty .)
    PLUS            reduce using rule 27 (termss -> empty .)
    MINUS           reduce using rule 27 (termss -> empty .)
    OR              reduce using rule 27 (termss -> empty .)
    EQUAL           reduce using rule 27 (termss -> empty .)
    NEQUAL          reduce using rule 27 (termss -> empty .)
    LT              reduce using rule 27 (termss -> empty .)
    LTEQ            reduce using rule 27 (termss -> empty .)
    GT              reduce using rule 27 (termss -> empty .)
    GTEQ            reduce using rule 27 (termss -> empty .)
    KEY_IN          reduce using rule 27 (termss -> empty .)
    KEY_IS          reduce using rule 27 (termss -> empty .)
    SCOLON          reduce using rule 27 (termss -> empty .)
    KEY_THEN        reduce using rule 27 (termss -> empty .)
    KEY_BEGIN       reduce using rule 27 (termss -> empty .)
    RRB             reduce using rule 27 (termss -> empty .)
    COMMA           reduce using rule 27 (termss -> empty .)
    COLON           reduce using rule 27 (termss -> empty .)
    RSB             reduce using rule 27 (termss -> empty .)
    KEY_OF          reduce using rule 27 (termss -> empty .)
    RCB             reduce using rule 27 (termss -> empty .)


state 183

    (39) factor -> KEY_CHR factor .

    MULTIPLY        reduce using rule 39 (factor -> KEY_CHR factor .)
    DIVIDE          reduce using rule 39 (factor -> KEY_CHR factor .)
    MODULUS         reduce using rule 39 (factor -> KEY_CHR factor .)
    AND             reduce using rule 39 (factor -> KEY_CHR factor .)
    PLUS            reduce using rule 39 (factor -> KEY_CHR factor .)
    MINUS           reduce using rule 39 (factor -> KEY_CHR factor .)
    OR              reduce using rule 39 (factor -> KEY_CHR factor .)
    EQUAL           reduce using rule 39 (factor -> KEY_CHR factor .)
    NEQUAL          reduce using rule 39 (factor -> KEY_CHR factor .)
    LT              reduce using rule 39 (factor -> KEY_CHR factor .)
    LTEQ            reduce using rule 39 (factor -> KEY_CHR factor .)
    GT              reduce using rule 39 (factor -> KEY_CHR factor .)
    GTEQ            reduce using rule 39 (factor -> KEY_CHR factor .)
    KEY_IN          reduce using rule 39 (factor -> KEY_CHR factor .)
    KEY_IS          reduce using rule 39 (factor -> KEY_CHR factor .)
    RRB             reduce using rule 39 (factor -> KEY_CHR factor .)
    COMMA           reduce using rule 39 (factor -> KEY_CHR factor .)
    RSB             reduce using rule 39 (factor -> KEY_CHR factor .)
    SCOLON          reduce using rule 39 (factor -> KEY_CHR factor .)
    KEY_THEN        reduce using rule 39 (factor -> KEY_CHR factor .)
    KEY_BEGIN       reduce using rule 39 (factor -> KEY_CHR factor .)
    COLON           reduce using rule 39 (factor -> KEY_CHR factor .)
    KEY_OF          reduce using rule 39 (factor -> KEY_CHR factor .)
    RCB             reduce using rule 39 (factor -> KEY_CHR factor .)


state 184

    (47) factor -> KEY_CHR LRB . factor RRB
    (36) factor -> LRB . expression RRB
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (25) term -> . factor termss
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 175
    char                           shift and go to state 105
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    factor                         shift and go to state 258
    number                         shift and go to state 92
    set                            shift and go to state 99
    identdef                       shift and go to state 93
    designator                     shift and go to state 111
    boolean                        shift and go to state 103

state 185

    (37) factor -> NOT factor .

    MULTIPLY        reduce using rule 37 (factor -> NOT factor .)
    DIVIDE          reduce using rule 37 (factor -> NOT factor .)
    MODULUS         reduce using rule 37 (factor -> NOT factor .)
    AND             reduce using rule 37 (factor -> NOT factor .)
    PLUS            reduce using rule 37 (factor -> NOT factor .)
    MINUS           reduce using rule 37 (factor -> NOT factor .)
    OR              reduce using rule 37 (factor -> NOT factor .)
    EQUAL           reduce using rule 37 (factor -> NOT factor .)
    NEQUAL          reduce using rule 37 (factor -> NOT factor .)
    LT              reduce using rule 37 (factor -> NOT factor .)
    LTEQ            reduce using rule 37 (factor -> NOT factor .)
    GT              reduce using rule 37 (factor -> NOT factor .)
    GTEQ            reduce using rule 37 (factor -> NOT factor .)
    KEY_IN          reduce using rule 37 (factor -> NOT factor .)
    KEY_IS          reduce using rule 37 (factor -> NOT factor .)
    RRB             reduce using rule 37 (factor -> NOT factor .)
    COMMA           reduce using rule 37 (factor -> NOT factor .)
    RSB             reduce using rule 37 (factor -> NOT factor .)
    SCOLON          reduce using rule 37 (factor -> NOT factor .)
    KEY_THEN        reduce using rule 37 (factor -> NOT factor .)
    KEY_BEGIN       reduce using rule 37 (factor -> NOT factor .)
    COLON           reduce using rule 37 (factor -> NOT factor .)
    KEY_OF          reduce using rule 37 (factor -> NOT factor .)
    RCB             reduce using rule 37 (factor -> NOT factor .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


<<<<<<< HEAD
    (80) relation -> GTEQ .

    PLUS            reduce using rule 80 (relation -> GTEQ .)
    MINUS           reduce using rule 80 (relation -> GTEQ .)
    KEY_NIL         reduce using rule 80 (relation -> GTEQ .)
    LRB             reduce using rule 80 (relation -> GTEQ .)
    NOT             reduce using rule 80 (relation -> GTEQ .)
    KEY_ABS         reduce using rule 80 (relation -> GTEQ .)
    KEY_CHR         reduce using rule 80 (relation -> GTEQ .)
    KEY_ORD         reduce using rule 80 (relation -> GTEQ .)
    KEY_INTEGER     reduce using rule 80 (relation -> GTEQ .)
    KEY_BOOLEAN     reduce using rule 80 (relation -> GTEQ .)
    KEY_CHAR        reduce using rule 80 (relation -> GTEQ .)
    KEY_STRING      reduce using rule 80 (relation -> GTEQ .)
    KEY_REAL        reduce using rule 80 (relation -> GTEQ .)
    KEY_SET         reduce using rule 80 (relation -> GTEQ .)
    VINTEGER        reduce using rule 80 (relation -> GTEQ .)
    VREAL           reduce using rule 80 (relation -> GTEQ .)
    VCHAR           reduce using rule 80 (relation -> GTEQ .)
    VSTRING         reduce using rule 80 (relation -> GTEQ .)
    LCB             reduce using rule 80 (relation -> GTEQ .)
    IDENT           reduce using rule 80 (relation -> GTEQ .)
    AT              reduce using rule 80 (relation -> GTEQ .)


state 187

    (76) relation -> NEQUAL .

    PLUS            reduce using rule 76 (relation -> NEQUAL .)
    MINUS           reduce using rule 76 (relation -> NEQUAL .)
    KEY_NIL         reduce using rule 76 (relation -> NEQUAL .)
    LRB             reduce using rule 76 (relation -> NEQUAL .)
    NOT             reduce using rule 76 (relation -> NEQUAL .)
    KEY_ABS         reduce using rule 76 (relation -> NEQUAL .)
    KEY_CHR         reduce using rule 76 (relation -> NEQUAL .)
    KEY_ORD         reduce using rule 76 (relation -> NEQUAL .)
    KEY_INTEGER     reduce using rule 76 (relation -> NEQUAL .)
    KEY_BOOLEAN     reduce using rule 76 (relation -> NEQUAL .)
    KEY_CHAR        reduce using rule 76 (relation -> NEQUAL .)
    KEY_STRING      reduce using rule 76 (relation -> NEQUAL .)
    KEY_REAL        reduce using rule 76 (relation -> NEQUAL .)
    KEY_SET         reduce using rule 76 (relation -> NEQUAL .)
    VINTEGER        reduce using rule 76 (relation -> NEQUAL .)
    VREAL           reduce using rule 76 (relation -> NEQUAL .)
    VCHAR           reduce using rule 76 (relation -> NEQUAL .)
    VSTRING         reduce using rule 76 (relation -> NEQUAL .)
    LCB             reduce using rule 76 (relation -> NEQUAL .)
    IDENT           reduce using rule 76 (relation -> NEQUAL .)
    AT              reduce using rule 76 (relation -> NEQUAL .)
=======
state 186
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (146) ifStatement -> KEY_IF expression KEY_THEN . statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> KEY_IF expression KEY_THEN . statementSequence ifss KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (174) empty -> .

    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    KEY_ELSE        reduce using rule 174 (empty -> .)
    KEY_END         reduce using rule 174 (empty -> .)
    KEY_ELSEIF      reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 259
    empty                          shift and go to state 14

state 188

<<<<<<< HEAD
    (82) relation -> KEY_IS .

    PLUS            reduce using rule 82 (relation -> KEY_IS .)
    MINUS           reduce using rule 82 (relation -> KEY_IS .)
    KEY_NIL         reduce using rule 82 (relation -> KEY_IS .)
    LRB             reduce using rule 82 (relation -> KEY_IS .)
    NOT             reduce using rule 82 (relation -> KEY_IS .)
    KEY_ABS         reduce using rule 82 (relation -> KEY_IS .)
    KEY_CHR         reduce using rule 82 (relation -> KEY_IS .)
    KEY_ORD         reduce using rule 82 (relation -> KEY_IS .)
    KEY_INTEGER     reduce using rule 82 (relation -> KEY_IS .)
    KEY_BOOLEAN     reduce using rule 82 (relation -> KEY_IS .)
    KEY_CHAR        reduce using rule 82 (relation -> KEY_IS .)
    KEY_STRING      reduce using rule 82 (relation -> KEY_IS .)
    KEY_REAL        reduce using rule 82 (relation -> KEY_IS .)
    KEY_SET         reduce using rule 82 (relation -> KEY_IS .)
    VINTEGER        reduce using rule 82 (relation -> KEY_IS .)
    VREAL           reduce using rule 82 (relation -> KEY_IS .)
    VCHAR           reduce using rule 82 (relation -> KEY_IS .)
    VSTRING         reduce using rule 82 (relation -> KEY_IS .)
    LCB             reduce using rule 82 (relation -> KEY_IS .)
    IDENT           reduce using rule 82 (relation -> KEY_IS .)
    AT              reduce using rule 82 (relation -> KEY_IS .)
=======
    (143) memoryalloc -> KEY_NEW LRB designator . RRB

    RRB             shift and go to state 260
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 189

<<<<<<< HEAD
    (35) factor -> LRB expression . RRB

    RRB             shift and go to state 255
=======
    (168) ioStatement -> KEY_READCHAR LRB expression . RRB

    RRB             shift and go to state 261
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 190

    (46) factor -> KEY_CHR LRB . factor RRB
    (35) factor -> LRB . expression RRB
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (25) term -> . factor termss
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    number                         shift and go to state 115
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    factor                         shift and go to state 256
    expression                     shift and go to state 189
    term                           shift and go to state 113
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 191

<<<<<<< HEAD
    (38) factor -> KEY_CHR factor .

    MULTIPLY        reduce using rule 38 (factor -> KEY_CHR factor .)
    DIVIDE          reduce using rule 38 (factor -> KEY_CHR factor .)
    MODULUS         reduce using rule 38 (factor -> KEY_CHR factor .)
    AND             reduce using rule 38 (factor -> KEY_CHR factor .)
    PLUS            reduce using rule 38 (factor -> KEY_CHR factor .)
    MINUS           reduce using rule 38 (factor -> KEY_CHR factor .)
    OR              reduce using rule 38 (factor -> KEY_CHR factor .)
    EQUAL           reduce using rule 38 (factor -> KEY_CHR factor .)
    NEQUAL          reduce using rule 38 (factor -> KEY_CHR factor .)
    LT              reduce using rule 38 (factor -> KEY_CHR factor .)
    LTEQ            reduce using rule 38 (factor -> KEY_CHR factor .)
    GT              reduce using rule 38 (factor -> KEY_CHR factor .)
    GTEQ            reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_IN          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_IS          reduce using rule 38 (factor -> KEY_CHR factor .)
    RRB             reduce using rule 38 (factor -> KEY_CHR factor .)
    RCB             reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_OF          reduce using rule 38 (factor -> KEY_CHR factor .)
    COMMA           reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_THEN        reduce using rule 38 (factor -> KEY_CHR factor .)
    SCOLON          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_BEGIN       reduce using rule 38 (factor -> KEY_CHR factor .)
    COLON           reduce using rule 38 (factor -> KEY_CHR factor .)
    RSB             reduce using rule 38 (factor -> KEY_CHR factor .)
=======
    (158) ioStatement -> KEY_WRITE LRB expression . RRB
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    RRB             shift and go to state 262

<<<<<<< HEAD
state 192

    (22) simpleExpression -> MINUS term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (172) empty -> .

    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)

    simpless                       shift and go to state 257
    empty                          shift and go to state 198

state 193

    (47) factor -> KEY_ORD LRB . factor RRB
    (35) factor -> LRB . expression RRB
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (25) term -> . factor termss
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    number                         shift and go to state 115
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    factor                         shift and go to state 258
    expression                     shift and go to state 189
    term                           shift and go to state 113
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======

state 190

    (156) forStatement -> KEY_FOR LRB assignment . SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    SCOLON          shift and go to state 263

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 194

    (39) factor -> KEY_ORD factor .

    MULTIPLY        reduce using rule 39 (factor -> KEY_ORD factor .)
    DIVIDE          reduce using rule 39 (factor -> KEY_ORD factor .)
    MODULUS         reduce using rule 39 (factor -> KEY_ORD factor .)
    AND             reduce using rule 39 (factor -> KEY_ORD factor .)
    PLUS            reduce using rule 39 (factor -> KEY_ORD factor .)
    MINUS           reduce using rule 39 (factor -> KEY_ORD factor .)
    OR              reduce using rule 39 (factor -> KEY_ORD factor .)
    EQUAL           reduce using rule 39 (factor -> KEY_ORD factor .)
    NEQUAL          reduce using rule 39 (factor -> KEY_ORD factor .)
    LT              reduce using rule 39 (factor -> KEY_ORD factor .)
    LTEQ            reduce using rule 39 (factor -> KEY_ORD factor .)
    GT              reduce using rule 39 (factor -> KEY_ORD factor .)
    GTEQ            reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_IN          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_IS          reduce using rule 39 (factor -> KEY_ORD factor .)
    RRB             reduce using rule 39 (factor -> KEY_ORD factor .)
    RCB             reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_OF          reduce using rule 39 (factor -> KEY_ORD factor .)
    COMMA           reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_THEN        reduce using rule 39 (factor -> KEY_ORD factor .)
    SCOLON          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_BEGIN       reduce using rule 39 (factor -> KEY_ORD factor .)
    COLON           reduce using rule 39 (factor -> KEY_ORD factor .)
    RSB             reduce using rule 39 (factor -> KEY_ORD factor .)


state 195

    (25) term -> factor termss .
    (26) termss -> termss . mulOperator factor
    (68) mulOperator -> . MULTIPLY
    (69) mulOperator -> . DIVIDE
    (70) mulOperator -> . MODULUS
    (71) mulOperator -> . AND

    PLUS            reduce using rule 25 (term -> factor termss .)
    MINUS           reduce using rule 25 (term -> factor termss .)
    OR              reduce using rule 25 (term -> factor termss .)
    EQUAL           reduce using rule 25 (term -> factor termss .)
    NEQUAL          reduce using rule 25 (term -> factor termss .)
    LT              reduce using rule 25 (term -> factor termss .)
    LTEQ            reduce using rule 25 (term -> factor termss .)
    GT              reduce using rule 25 (term -> factor termss .)
    GTEQ            reduce using rule 25 (term -> factor termss .)
    KEY_IN          reduce using rule 25 (term -> factor termss .)
    KEY_IS          reduce using rule 25 (term -> factor termss .)
    RRB             reduce using rule 25 (term -> factor termss .)
    SCOLON          reduce using rule 25 (term -> factor termss .)
    KEY_BEGIN       reduce using rule 25 (term -> factor termss .)
    KEY_THEN        reduce using rule 25 (term -> factor termss .)
    COMMA           reduce using rule 25 (term -> factor termss .)
    COLON           reduce using rule 25 (term -> factor termss .)
    KEY_OF          reduce using rule 25 (term -> factor termss .)
    RSB             reduce using rule 25 (term -> factor termss .)
    RCB             reduce using rule 25 (term -> factor termss .)
    MULTIPLY        shift and go to state 259
    DIVIDE          shift and go to state 262
    MODULUS         shift and go to state 260
    AND             shift and go to state 261

    mulOperator                    shift and go to state 263

state 196

    (27) termss -> empty .

    MULTIPLY        reduce using rule 27 (termss -> empty .)
    DIVIDE          reduce using rule 27 (termss -> empty .)
    MODULUS         reduce using rule 27 (termss -> empty .)
    AND             reduce using rule 27 (termss -> empty .)
    PLUS            reduce using rule 27 (termss -> empty .)
    MINUS           reduce using rule 27 (termss -> empty .)
    OR              reduce using rule 27 (termss -> empty .)
    EQUAL           reduce using rule 27 (termss -> empty .)
    NEQUAL          reduce using rule 27 (termss -> empty .)
    LT              reduce using rule 27 (termss -> empty .)
    LTEQ            reduce using rule 27 (termss -> empty .)
    GT              reduce using rule 27 (termss -> empty .)
    GTEQ            reduce using rule 27 (termss -> empty .)
    KEY_IN          reduce using rule 27 (termss -> empty .)
    KEY_IS          reduce using rule 27 (termss -> empty .)
    SCOLON          reduce using rule 27 (termss -> empty .)
    KEY_BEGIN       reduce using rule 27 (termss -> empty .)
    KEY_THEN        reduce using rule 27 (termss -> empty .)
    RRB             reduce using rule 27 (termss -> empty .)
    COMMA           reduce using rule 27 (termss -> empty .)
    COLON           reduce using rule 27 (termss -> empty .)
    KEY_OF          reduce using rule 27 (termss -> empty .)
    RSB             reduce using rule 27 (termss -> empty .)
    RCB             reduce using rule 27 (termss -> empty .)


state 197

    (21) simpleExpression -> term simpless .
    (23) simpless -> simpless . addOperator term
    (72) addOperator -> . PLUS
    (73) addOperator -> . MINUS
    (74) addOperator -> . OR

    EQUAL           reduce using rule 21 (simpleExpression -> term simpless .)
    NEQUAL          reduce using rule 21 (simpleExpression -> term simpless .)
    LT              reduce using rule 21 (simpleExpression -> term simpless .)
    LTEQ            reduce using rule 21 (simpleExpression -> term simpless .)
    GT              reduce using rule 21 (simpleExpression -> term simpless .)
    GTEQ            reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_IN          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_IS          reduce using rule 21 (simpleExpression -> term simpless .)
    RRB             reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_OF          reduce using rule 21 (simpleExpression -> term simpless .)
    COMMA           reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_BEGIN       reduce using rule 21 (simpleExpression -> term simpless .)
    SCOLON          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_THEN        reduce using rule 21 (simpleExpression -> term simpless .)
    COLON           reduce using rule 21 (simpleExpression -> term simpless .)
    RSB             reduce using rule 21 (simpleExpression -> term simpless .)
    RCB             reduce using rule 21 (simpleExpression -> term simpless .)
    PLUS            shift and go to state 265
    MINUS           shift and go to state 264
    OR              shift and go to state 267

    addOperator                    shift and go to state 266

state 198

    (24) simpless -> empty .

    PLUS            reduce using rule 24 (simpless -> empty .)
    MINUS           reduce using rule 24 (simpless -> empty .)
    OR              reduce using rule 24 (simpless -> empty .)
    EQUAL           reduce using rule 24 (simpless -> empty .)
    NEQUAL          reduce using rule 24 (simpless -> empty .)
    LT              reduce using rule 24 (simpless -> empty .)
    LTEQ            reduce using rule 24 (simpless -> empty .)
    GT              reduce using rule 24 (simpless -> empty .)
    GTEQ            reduce using rule 24 (simpless -> empty .)
    KEY_IN          reduce using rule 24 (simpless -> empty .)
    KEY_IS          reduce using rule 24 (simpless -> empty .)
    SCOLON          reduce using rule 24 (simpless -> empty .)
    KEY_BEGIN       reduce using rule 24 (simpless -> empty .)
    KEY_THEN        reduce using rule 24 (simpless -> empty .)
    RRB             reduce using rule 24 (simpless -> empty .)
    COMMA           reduce using rule 24 (simpless -> empty .)
    COLON           reduce using rule 24 (simpless -> empty .)
    KEY_OF          reduce using rule 24 (simpless -> empty .)
    RSB             reduce using rule 24 (simpless -> empty .)
    RCB             reduce using rule 24 (simpless -> empty .)


state 199

<<<<<<< HEAD
    (34) factor -> designator actualParameters .

    MULTIPLY        reduce using rule 34 (factor -> designator actualParameters .)
    DIVIDE          reduce using rule 34 (factor -> designator actualParameters .)
    MODULUS         reduce using rule 34 (factor -> designator actualParameters .)
    AND             reduce using rule 34 (factor -> designator actualParameters .)
    PLUS            reduce using rule 34 (factor -> designator actualParameters .)
    MINUS           reduce using rule 34 (factor -> designator actualParameters .)
    OR              reduce using rule 34 (factor -> designator actualParameters .)
    EQUAL           reduce using rule 34 (factor -> designator actualParameters .)
    NEQUAL          reduce using rule 34 (factor -> designator actualParameters .)
    LT              reduce using rule 34 (factor -> designator actualParameters .)
    LTEQ            reduce using rule 34 (factor -> designator actualParameters .)
    GT              reduce using rule 34 (factor -> designator actualParameters .)
    GTEQ            reduce using rule 34 (factor -> designator actualParameters .)
    KEY_IN          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_IS          reduce using rule 34 (factor -> designator actualParameters .)
    RRB             reduce using rule 34 (factor -> designator actualParameters .)
    RCB             reduce using rule 34 (factor -> designator actualParameters .)
    KEY_OF          reduce using rule 34 (factor -> designator actualParameters .)
    COMMA           reduce using rule 34 (factor -> designator actualParameters .)
    KEY_THEN        reduce using rule 34 (factor -> designator actualParameters .)
    SCOLON          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_BEGIN       reduce using rule 34 (factor -> designator actualParameters .)
    COLON           reduce using rule 34 (factor -> designator actualParameters .)
    RSB             reduce using rule 34 (factor -> designator actualParameters .)
=======
    (140) assignment -> designator . ASSIGN expression

    ASSIGN          shift and go to state 128
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 200

    (37) factor -> KEY_ABS factor .

    MULTIPLY        reduce using rule 37 (factor -> KEY_ABS factor .)
    DIVIDE          reduce using rule 37 (factor -> KEY_ABS factor .)
    MODULUS         reduce using rule 37 (factor -> KEY_ABS factor .)
    AND             reduce using rule 37 (factor -> KEY_ABS factor .)
    PLUS            reduce using rule 37 (factor -> KEY_ABS factor .)
    MINUS           reduce using rule 37 (factor -> KEY_ABS factor .)
    OR              reduce using rule 37 (factor -> KEY_ABS factor .)
    EQUAL           reduce using rule 37 (factor -> KEY_ABS factor .)
    NEQUAL          reduce using rule 37 (factor -> KEY_ABS factor .)
    LT              reduce using rule 37 (factor -> KEY_ABS factor .)
    LTEQ            reduce using rule 37 (factor -> KEY_ABS factor .)
    GT              reduce using rule 37 (factor -> KEY_ABS factor .)
    GTEQ            reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_IN          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_IS          reduce using rule 37 (factor -> KEY_ABS factor .)
    RRB             reduce using rule 37 (factor -> KEY_ABS factor .)
    RCB             reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_OF          reduce using rule 37 (factor -> KEY_ABS factor .)
    COMMA           reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_THEN        reduce using rule 37 (factor -> KEY_ABS factor .)
    SCOLON          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_BEGIN       reduce using rule 37 (factor -> KEY_ABS factor .)
    COLON           reduce using rule 37 (factor -> KEY_ABS factor .)
    RSB             reduce using rule 37 (factor -> KEY_ABS factor .)


state 201

    (31) factor -> KEY_NIL LRB . designator RRB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    qualident                      shift and go to state 106
    identdef                       shift and go to state 108
    designator                     shift and go to state 268

state 202

    (20) simpleExpression -> PLUS term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (172) empty -> .

    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)

    simpless                       shift and go to state 269
    empty                          shift and go to state 198

state 203

    (36) factor -> NOT factor .

    MULTIPLY        reduce using rule 36 (factor -> NOT factor .)
    DIVIDE          reduce using rule 36 (factor -> NOT factor .)
    MODULUS         reduce using rule 36 (factor -> NOT factor .)
    AND             reduce using rule 36 (factor -> NOT factor .)
    PLUS            reduce using rule 36 (factor -> NOT factor .)
    MINUS           reduce using rule 36 (factor -> NOT factor .)
    OR              reduce using rule 36 (factor -> NOT factor .)
    EQUAL           reduce using rule 36 (factor -> NOT factor .)
    NEQUAL          reduce using rule 36 (factor -> NOT factor .)
    LT              reduce using rule 36 (factor -> NOT factor .)
    LTEQ            reduce using rule 36 (factor -> NOT factor .)
    GT              reduce using rule 36 (factor -> NOT factor .)
    GTEQ            reduce using rule 36 (factor -> NOT factor .)
    KEY_IN          reduce using rule 36 (factor -> NOT factor .)
    KEY_IS          reduce using rule 36 (factor -> NOT factor .)
    RRB             reduce using rule 36 (factor -> NOT factor .)
    RCB             reduce using rule 36 (factor -> NOT factor .)
    KEY_OF          reduce using rule 36 (factor -> NOT factor .)
    COMMA           reduce using rule 36 (factor -> NOT factor .)
    KEY_THEN        reduce using rule 36 (factor -> NOT factor .)
    SCOLON          reduce using rule 36 (factor -> NOT factor .)
    KEY_BEGIN       reduce using rule 36 (factor -> NOT factor .)
    COLON           reduce using rule 36 (factor -> NOT factor .)
    RSB             reduce using rule 36 (factor -> NOT factor .)


state 204

<<<<<<< HEAD
    (170) fileStatement -> KEY_FPRINTF LRB identdef . COMMA string RRB

    COMMA           shift and go to state 270
=======
    (169) ioStatement -> KEY_READBOOL LRB expression . RRB

    RRB             shift and go to state 264
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 205

<<<<<<< HEAD
    (159) ioStatement -> KEY_WRITECHAR LRB expression . RRB

    RRB             shift and go to state 271
=======
    (171) fileStatement -> KEY_FCLOSE LRB identdef . RRB

    RRB             shift and go to state 265
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 206

<<<<<<< HEAD
    (171) fileStatement -> KEY_FREAD LRB identdef . COMMA identdef COMMA VINTEGER RRB

    COMMA           shift and go to state 272
=======
    (172) fileStatement -> KEY_FPRINTF LRB identdef . COMMA string RRB

    COMMA           shift and go to state 266
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 207

<<<<<<< HEAD
    (165) ioStatement -> KEY_READREAL LRB expression . RRB

    RRB             shift and go to state 273
=======
    (68) actualParameters -> LRB expList . RRB
    (66) expList -> expList . COMMA expression

    RRB             shift and go to state 267
    COMMA           shift and go to state 268
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 208

<<<<<<< HEAD
    (164) ioStatement -> KEY_READINT LRB expression . RRB

    RRB             shift and go to state 274
=======
    (69) actualParameters -> LRB RRB .

    SCOLON          reduce using rule 69 (actualParameters -> LRB RRB .)
    MULTIPLY        reduce using rule 69 (actualParameters -> LRB RRB .)
    DIVIDE          reduce using rule 69 (actualParameters -> LRB RRB .)
    MODULUS         reduce using rule 69 (actualParameters -> LRB RRB .)
    AND             reduce using rule 69 (actualParameters -> LRB RRB .)
    PLUS            reduce using rule 69 (actualParameters -> LRB RRB .)
    MINUS           reduce using rule 69 (actualParameters -> LRB RRB .)
    OR              reduce using rule 69 (actualParameters -> LRB RRB .)
    EQUAL           reduce using rule 69 (actualParameters -> LRB RRB .)
    NEQUAL          reduce using rule 69 (actualParameters -> LRB RRB .)
    LT              reduce using rule 69 (actualParameters -> LRB RRB .)
    LTEQ            reduce using rule 69 (actualParameters -> LRB RRB .)
    GT              reduce using rule 69 (actualParameters -> LRB RRB .)
    GTEQ            reduce using rule 69 (actualParameters -> LRB RRB .)
    KEY_IN          reduce using rule 69 (actualParameters -> LRB RRB .)
    KEY_IS          reduce using rule 69 (actualParameters -> LRB RRB .)
    KEY_THEN        reduce using rule 69 (actualParameters -> LRB RRB .)
    KEY_BEGIN       reduce using rule 69 (actualParameters -> LRB RRB .)
    RRB             reduce using rule 69 (actualParameters -> LRB RRB .)
    COMMA           reduce using rule 69 (actualParameters -> LRB RRB .)
    COLON           reduce using rule 69 (actualParameters -> LRB RRB .)
    RSB             reduce using rule 69 (actualParameters -> LRB RRB .)
    KEY_OF          reduce using rule 69 (actualParameters -> LRB RRB .)
    RCB             reduce using rule 69 (actualParameters -> LRB RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 209

<<<<<<< HEAD
    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN . case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH expression KEY_BEGIN . case casess KEY_END
    (152) case -> . KEY_CASE expression COLON statementSequence

    KEY_CASE        shift and go to state 276
=======
    (67) expList -> expression .

    RRB             reduce using rule 67 (expList -> expression .)
    COMMA           reduce using rule 67 (expList -> expression .)
    RSB             reduce using rule 67 (expList -> expression .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    case                           shift and go to state 275

state 210

<<<<<<< HEAD
    (153) whileStatement -> KEY_WHILE expression KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
=======
    (140) assignment -> designator ASSIGN expression .

    SCOLON          reduce using rule 140 (assignment -> designator ASSIGN expression .)
    RRB             reduce using rule 140 (assignment -> designator ASSIGN expression .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    empty                          shift and go to state 19
    statementSequence              shift and go to state 277

state 211

<<<<<<< HEAD
    (154) forStatement -> KEY_FOR LRB assignment . SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    SCOLON          shift and go to state 278
=======
    (60) designator2 -> designator2 LRB . qualident RRB
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    qualident                      shift and go to state 269
    identdef                       shift and go to state 93

state 212

<<<<<<< HEAD
    (138) assignment -> designator . ASSIGN expression

    ASSIGN          shift and go to state 140
=======
    (58) designator2 -> designator2 DOT . identdef
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    identdef                       shift and go to state 270

state 213

<<<<<<< HEAD
    (155) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence . KEY_END KEY_WHILE expression
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 279
    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    identdef                       shift and go to state 32
    switchStatement                shift and go to state 55
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    statement                      shift and go to state 66
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    assignment                     shift and go to state 63
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 70
    designator                     shift and go to state 65

state 214

    (141) memoryalloc -> KEY_NEW LRB designator . RRB

    RRB             shift and go to state 280


state 215

    (166) ioStatement -> KEY_READCHAR LRB expression . RRB

    RRB             shift and go to state 281


state 216

    (144) ifStatement -> KEY_IF expression KEY_THEN . statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF expression KEY_THEN . statementSequence ifss KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)
    KEY_ELSEIF      reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 19
    statementSequence              shift and go to state 282

state 217

    (56) designator2 -> designator2 DOT . identdef
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    identdef                       shift and go to state 283

state 218

    (58) designator2 -> designator2 LRB . qualident RRB
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    qualident                      shift and go to state 284
    identdef                       shift and go to state 108

state 219

    (57) designator2 -> designator2 LSB . expList RSB
    (64) expList -> . expList COMMA expression
    (65) expList -> . expression
=======
    (59) designator2 -> designator2 LSB . expList RSB
    (66) expList -> . expList COMMA expression
    (67) expList -> . expression
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    expList                        shift and go to state 285
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    expression                     shift and go to state 225
    term                           shift and go to state 113
    string                         shift and go to state 103
    number                         shift and go to state 115
    set                            shift and go to state 90
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 197
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    expList                        shift and go to state 271
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 220

<<<<<<< HEAD
    (139) setStatement -> qualident DOT KEY_ADD . LRB expression RRB

    LRB             shift and go to state 286
=======
    (141) setStatement -> qualident DOT KEY_ADD . LRB expression RRB

    LRB             shift and go to state 272
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 221

<<<<<<< HEAD
    (140) setStatement -> qualident DOT KEY_DEL . LRB expression RRB

    LRB             shift and go to state 287
=======
    (142) setStatement -> qualident DOT KEY_DEL . LRB expression RRB

    LRB             shift and go to state 273
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 222

<<<<<<< HEAD
    (160) ioStatement -> KEY_WRITEBOOL LRB expression . RRB

    RRB             shift and go to state 288
=======
    (165) ioStatement -> KEY_READ LRB expression . RRB

    RRB             shift and go to state 274
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 223

<<<<<<< HEAD
    (158) ioStatement -> KEY_WRITEREAL LRB expression . RRB

    RRB             shift and go to state 289
=======
    (150) switchStatement -> KEY_SWITCH expression KEY_BEGIN . case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> KEY_SWITCH expression KEY_BEGIN . case casess KEY_END
    (154) case -> . KEY_CASE expression COLON statementSequence

    KEY_CASE        shift and go to state 276
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    case                           shift and go to state 275

state 224

<<<<<<< HEAD
    (66) actualParameters -> LRB expList . RRB
    (64) expList -> expList . COMMA expression

    RRB             shift and go to state 291
    COMMA           shift and go to state 290

=======
    (155) whileStatement -> KEY_WHILE expression KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (174) empty -> .

    KEY_END         reduce using rule 174 (empty -> .)
    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 277
    empty                          shift and go to state 14
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 225

    (162) ioStatement -> KEY_WRITEBOOL LRB expression . RRB

    RRB             shift and go to state 278


state 226

<<<<<<< HEAD
    (67) actualParameters -> LRB RRB .

    SCOLON          reduce using rule 67 (actualParameters -> LRB RRB .)
    MULTIPLY        reduce using rule 67 (actualParameters -> LRB RRB .)
    DIVIDE          reduce using rule 67 (actualParameters -> LRB RRB .)
    MODULUS         reduce using rule 67 (actualParameters -> LRB RRB .)
    AND             reduce using rule 67 (actualParameters -> LRB RRB .)
    PLUS            reduce using rule 67 (actualParameters -> LRB RRB .)
    MINUS           reduce using rule 67 (actualParameters -> LRB RRB .)
    OR              reduce using rule 67 (actualParameters -> LRB RRB .)
    EQUAL           reduce using rule 67 (actualParameters -> LRB RRB .)
    NEQUAL          reduce using rule 67 (actualParameters -> LRB RRB .)
    LT              reduce using rule 67 (actualParameters -> LRB RRB .)
    LTEQ            reduce using rule 67 (actualParameters -> LRB RRB .)
    GT              reduce using rule 67 (actualParameters -> LRB RRB .)
    GTEQ            reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_IN          reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_IS          reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_BEGIN       reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_THEN        reduce using rule 67 (actualParameters -> LRB RRB .)
    RRB             reduce using rule 67 (actualParameters -> LRB RRB .)
    COMMA           reduce using rule 67 (actualParameters -> LRB RRB .)
    COLON           reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_OF          reduce using rule 67 (actualParameters -> LRB RRB .)
    RSB             reduce using rule 67 (actualParameters -> LRB RRB .)
    RCB             reduce using rule 67 (actualParameters -> LRB RRB .)
=======
    (160) ioStatement -> KEY_WRITEREAL LRB expression . RRB

    RRB             shift and go to state 279
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 227

    (173) fileStatement -> KEY_FREAD LRB identdef . COMMA identdef COMMA VINTEGER RRB

    COMMA           shift and go to state 280


<<<<<<< HEAD
state 228

    (163) ioStatement -> KEY_READ LRB expression . RRB
=======
state 210

    (167) ioStatement -> KEY_READREAL LRB expression . RRB

    RRB             shift and go to state 281


state 211

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT .

    $end            reduce using rule 1 (module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT .)


state 212

    (95) varType -> KEY_REAL .

    SCOLON          reduce using rule 95 (varType -> KEY_REAL .)
    KEY_END         reduce using rule 95 (varType -> KEY_REAL .)
    RRB             reduce using rule 95 (varType -> KEY_REAL .)


state 213

    (88) type -> arrayType .

    RRB             reduce using rule 88 (type -> arrayType .)
    SCOLON          reduce using rule 88 (type -> arrayType .)
    KEY_END         reduce using rule 88 (type -> arrayType .)


state 214

    (94) varType -> KEY_STRING .

    SCOLON          reduce using rule 94 (varType -> KEY_STRING .)
    KEY_END         reduce using rule 94 (varType -> KEY_STRING .)
    RRB             reduce using rule 94 (varType -> KEY_STRING .)


state 215

    (92) varType -> KEY_BOOLEAN .

    SCOLON          reduce using rule 92 (varType -> KEY_BOOLEAN .)
    KEY_END         reduce using rule 92 (varType -> KEY_BOOLEAN .)
    RRB             reduce using rule 92 (varType -> KEY_BOOLEAN .)


state 216

    (97) arrayType -> KEY_ARRAY . length comass KEY_OF type
    (100) length -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 283
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    set                            shift and go to state 99
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    length                         shift and go to state 282
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 217

    (89) type -> recordType .

    RRB             reduce using rule 89 (type -> recordType .)
    SCOLON          reduce using rule 89 (type -> recordType .)
    KEY_END         reduce using rule 89 (type -> recordType .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    RRB             shift and go to state 292


<<<<<<< HEAD
state 229

    (161) ioStatement -> KEY_WRITELN LRB expression . RRB
=======
    (86) type -> IDENT .

    RRB             reduce using rule 86 (type -> IDENT .)
    SCOLON          reduce using rule 86 (type -> IDENT .)
    KEY_END         reduce using rule 86 (type -> IDENT .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    RRB             shift and go to state 293


<<<<<<< HEAD
state 230

    (162) ioStatement -> KEY_WRITELN LRB RRB .
=======
    (90) type -> pointerType .

    RRB             reduce using rule 90 (type -> pointerType .)
    SCOLON          reduce using rule 90 (type -> pointerType .)
    KEY_END         reduce using rule 90 (type -> pointerType .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    SCOLON          reduce using rule 162 (ioStatement -> KEY_WRITELN LRB RRB .)


<<<<<<< HEAD
state 231

    (109) variableDeclaration -> identList COLON type .
=======
    (93) varType -> KEY_CHAR .

    SCOLON          reduce using rule 93 (varType -> KEY_CHAR .)
    KEY_END         reduce using rule 93 (varType -> KEY_CHAR .)
    RRB             reduce using rule 93 (varType -> KEY_CHAR .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    SCOLON          reduce using rule 109 (variableDeclaration -> identList COLON type .)

<<<<<<< HEAD

state 232
=======
    (96) varType -> KEY_SET .

    SCOLON          reduce using rule 96 (varType -> KEY_SET .)
    KEY_END         reduce using rule 96 (varType -> KEY_SET .)
    RRB             reduce using rule 96 (varType -> KEY_SET .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (106) identList -> identList COMMA IDENT .

    COLON           reduce using rule 106 (identList -> identList COMMA IDENT .)
    COMMA           reduce using rule 106 (identList -> identList COMMA IDENT .)

<<<<<<< HEAD

state 233
=======
    (110) pointerType -> KEY_POINTER . KEY_TO type

    KEY_TO          shift and go to state 284
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (17) constantDeclaration -> IDENT ASSIGN expression . COLON type

    COLON           shift and go to state 294

<<<<<<< HEAD

state 234
=======
    (85) typeDeclaration -> IDENT EQUAL type .

    SCOLON          reduce using rule 85 (typeDeclaration -> IDENT EQUAL type .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (113) formalParameters -> LRB fpSection formalss . RRB
    (115) formalss -> formalss . SCOLON fpSection

    RRB             shift and go to state 296
    SCOLON          shift and go to state 295

<<<<<<< HEAD

state 235
=======
    (87) type -> varType .

    RRB             reduce using rule 87 (type -> varType .)
    SCOLON          reduce using rule 87 (type -> varType .)
    KEY_END         reduce using rule 87 (type -> varType .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (116) formalss -> empty .

    RRB             reduce using rule 116 (formalss -> empty .)
    SCOLON          reduce using rule 116 (formalss -> empty .)

<<<<<<< HEAD

state 236
=======
    (91) varType -> KEY_INTEGER .

    SCOLON          reduce using rule 91 (varType -> KEY_INTEGER .)
    KEY_END         reduce using rule 91 (varType -> KEY_INTEGER .)
    RRB             reduce using rule 91 (varType -> KEY_INTEGER .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (117) fpSection -> IDENT fps . COLON type
    (118) fps -> fps . COMMA IDENT

    COLON           shift and go to state 298
    COMMA           shift and go to state 297

<<<<<<< HEAD

state 237

    (119) fps -> empty .
=======
    (101) recordType -> KEY_RECORD . fieldListSequence KEY_END
    (102) recordType -> KEY_RECORD . LRB baseType RRB fieldListSequence KEY_END
    (104) fieldListSequence -> . fieldListSequence SCOLON fieldList
    (105) fieldListSequence -> . fieldList
    (106) fieldList -> . identList COLON type
    (107) fieldList -> . empty
    (108) identList -> . identList COMMA IDENT
    (109) identList -> . IDENT
    (174) empty -> .

    LRB             shift and go to state 287
    IDENT           shift and go to state 72
    KEY_END         reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    empty                          shift and go to state 289
    fieldListSequence              shift and go to state 285
    identList                      shift and go to state 286
    fieldList                      shift and go to state 288
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    COLON           reduce using rule 119 (fps -> empty .)
    COMMA           reduce using rule 119 (fps -> empty .)

<<<<<<< HEAD

state 238
=======
    (116) formalParameters -> LRB RRB .

    COLON           reduce using rule 116 (formalParameters -> LRB RRB .)
    SCOLON          reduce using rule 116 (formalParameters -> LRB RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (111) procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type .

    SCOLON          reduce using rule 111 (procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type .)

<<<<<<< HEAD

state 239

    (120) procedureBody -> declarationSequence KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
=======
    (119) fpSection -> IDENT . fps COLON type
    (120) fps -> . fps COMMA IDENT
    (121) fps -> . empty
    (174) empty -> .

    COLON           reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)

    fps                            shift and go to state 291
    empty                          shift and go to state 290
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    KEY_END         shift and go to state 299
    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    identdef                       shift and go to state 32
    switchStatement                shift and go to state 55
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    statement                      shift and go to state 66
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    assignment                     shift and go to state 63
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 70
    designator                     shift and go to state 65

<<<<<<< HEAD
state 240

    (98) length -> expression .

    KEY_OF          reduce using rule 98 (length -> expression .)
    COMMA           reduce using rule 98 (length -> expression .)
=======
    (115) formalParameters -> LRB fpSection . formalss RRB
    (117) formalss -> . formalss SCOLON fpSection
    (118) formalss -> . empty
    (174) empty -> .

    RRB             reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    empty                          shift and go to state 292
    formalss                       shift and go to state 293
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


<<<<<<< HEAD
state 241

    (95) arrayType -> KEY_ARRAY length . comass KEY_OF type
    (96) comass -> . comass COMMA length
    (97) comass -> . empty
    (172) empty -> .

    KEY_OF          reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)

    comass                         shift and go to state 300
    empty                          shift and go to state 301

state 242

    (108) pointerType -> KEY_POINTER KEY_TO . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 168
    KEY_INTEGER     shift and go to state 157
    KEY_BOOLEAN     shift and go to state 163
    KEY_CHAR        shift and go to state 160
    KEY_STRING      shift and go to state 164
    KEY_REAL        shift and go to state 158
    KEY_SET         shift and go to state 161
    KEY_ARRAY       shift and go to state 155
    KEY_RECORD      shift and go to state 169
    KEY_POINTER     shift and go to state 165

    recordType                     shift and go to state 162
    pointerType                    shift and go to state 167
    varType                        shift and go to state 156
    arrayType                      shift and go to state 159
    type                           shift and go to state 302
=======
    (113) procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON . type
    (86) type -> . IDENT
    (87) type -> . varType
    (88) type -> . arrayType
    (89) type -> . recordType
    (90) type -> . pointerType
    (91) varType -> . KEY_INTEGER
    (92) varType -> . KEY_BOOLEAN
    (93) varType -> . KEY_CHAR
    (94) varType -> . KEY_STRING
    (95) varType -> . KEY_REAL
    (96) varType -> . KEY_SET
    (97) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (101) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (102) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (110) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 225
    KEY_BOOLEAN     shift and go to state 215
    KEY_CHAR        shift and go to state 220
    KEY_STRING      shift and go to state 214
    KEY_REAL        shift and go to state 212
    KEY_SET         shift and go to state 221
    KEY_ARRAY       shift and go to state 216
    KEY_RECORD      shift and go to state 226
    KEY_POINTER     shift and go to state 222

    pointerType                    shift and go to state 219
    varType                        shift and go to state 224
    arrayType                      shift and go to state 213
    recordType                     shift and go to state 217
    type                           shift and go to state 294

state 231

    (122) procedureBody -> declarationSequence KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (174) empty -> .

    KEY_END         reduce using rule 174 (empty -> .)
    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 295
    empty                          shift and go to state 14

state 232

    (112) procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT .

    SCOLON          reduce using rule 112 (procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 243

    (104) fieldList -> identList . COLON type
    (106) identList -> identList . COMMA IDENT

<<<<<<< HEAD
    COLON           shift and go to state 303
    COMMA           shift and go to state 145


state 244
=======
    (108) identList -> identList COMMA IDENT .

    COLON           reduce using rule 108 (identList -> identList COMMA IDENT .)
    COMMA           reduce using rule 108 (identList -> identList COMMA IDENT .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (105) fieldList -> empty .

<<<<<<< HEAD
    KEY_END         reduce using rule 105 (fieldList -> empty .)
    SCOLON          reduce using rule 105 (fieldList -> empty .)


state 245
=======
    (111) variableDeclaration -> identList COLON type .

    SCOLON          reduce using rule 111 (variableDeclaration -> identList COLON type .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (99) recordType -> KEY_RECORD fieldListSequence . KEY_END
    (102) fieldListSequence -> fieldListSequence . SCOLON fieldList

<<<<<<< HEAD
    KEY_END         shift and go to state 305
    SCOLON          shift and go to state 304
=======
    (17) constantDeclaration -> IDENT ASSIGN expression . COLON type

    COLON           shift and go to state 296
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 246

<<<<<<< HEAD
    (100) recordType -> KEY_RECORD LRB . baseType RRB fieldListSequence KEY_END
    (101) baseType -> . qualident
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48
=======
    (157) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END . KEY_WHILE expression

    KEY_WHILE       shift and go to state 297

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    identdef                       shift and go to state 108
    qualident                      shift and go to state 307
    baseType                       shift and go to state 306

<<<<<<< HEAD
state 247

    (103) fieldListSequence -> fieldList .

    KEY_END         reduce using rule 103 (fieldListSequence -> fieldList .)
    SCOLON          reduce using rule 103 (fieldListSequence -> fieldList .)


state 248

    (169) fileStatement -> KEY_FCLOSE LRB identdef RRB .

    SCOLON          reduce using rule 169 (fileStatement -> KEY_FCLOSE LRB identdef RRB .)


state 249

    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB . string COMMA char RRB
    (51) string -> . VSTRING

    VSTRING         shift and go to state 99
=======
    (161) ioStatement -> KEY_WRITECHAR LRB expression RRB .

    SCOLON          reduce using rule 161 (ioStatement -> KEY_WRITECHAR LRB expression RRB .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    string                         shift and go to state 308

<<<<<<< HEAD
state 250

    (156) ioStatement -> KEY_WRITE LRB expression RRB .
=======
    (159) ioStatement -> KEY_WRITEINT LRB expression RRB .

    SCOLON          reduce using rule 159 (ioStatement -> KEY_WRITEINT LRB expression RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    SCOLON          reduce using rule 156 (ioStatement -> KEY_WRITE LRB expression RRB .)


<<<<<<< HEAD
state 251

    (157) ioStatement -> KEY_WRITEINT LRB expression RRB .
=======
    (163) ioStatement -> KEY_WRITELN LRB expression RRB .

    SCOLON          reduce using rule 163 (ioStatement -> KEY_WRITELN LRB expression RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    SCOLON          reduce using rule 157 (ioStatement -> KEY_WRITEINT LRB expression RRB .)


<<<<<<< HEAD
state 252

    (167) ioStatement -> KEY_READBOOL LRB expression RRB .

    SCOLON          reduce using rule 167 (ioStatement -> KEY_READBOOL LRB expression RRB .)
=======
    (170) fileStatement -> identdef EQUAL KEY_FOPEN LRB . string COMMA char RRB
    (53) string -> . VSTRING

    VSTRING         shift and go to state 91

    string                         shift and go to state 298
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


<<<<<<< HEAD
state 253

    (52) set -> LCB element COMMA . element RCB
    (54) element -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 178
    factor                         shift and go to state 112
    element                        shift and go to state 309
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 254

    (19) expression -> simpleExpression relation simpleExpression .
=======
    (166) ioStatement -> KEY_READINT LRB expression RRB .

    SCOLON          reduce using rule 166 (ioStatement -> KEY_READINT LRB expression RRB .)


state 242

    (32) factor -> KEY_NIL LRB designator . RRB

    RRB             shift and go to state 299


state 243

    (22) simpleExpression -> MINUS term simpless .
    (23) simpless -> simpless . addOperator term
    (74) addOperator -> . PLUS
    (75) addOperator -> . MINUS
    (76) addOperator -> . OR

    EQUAL           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    NEQUAL          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    LT              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    LTEQ            reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    GT              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    GTEQ            reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_IN          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_IS          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_BEGIN       reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    SCOLON          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_THEN        reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RRB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    COMMA           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    COLON           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RSB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_OF          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RCB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    PLUS            shift and go to state 246
    MINUS           shift and go to state 245
    OR              shift and go to state 247

    addOperator                    shift and go to state 248
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    RRB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    COLON           reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_BEGIN       reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_OF          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    COMMA           reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_THEN        reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    SCOLON          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RSB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RCB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)

<<<<<<< HEAD

state 255

    (35) factor -> LRB expression RRB .
=======
    (54) set -> LCB element COMMA . element RCB
    (56) element -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 161
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    element                        shift and go to state 300
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    MULTIPLY        reduce using rule 35 (factor -> LRB expression RRB .)
    DIVIDE          reduce using rule 35 (factor -> LRB expression RRB .)
    MODULUS         reduce using rule 35 (factor -> LRB expression RRB .)
    AND             reduce using rule 35 (factor -> LRB expression RRB .)
    PLUS            reduce using rule 35 (factor -> LRB expression RRB .)
    MINUS           reduce using rule 35 (factor -> LRB expression RRB .)
    OR              reduce using rule 35 (factor -> LRB expression RRB .)
    EQUAL           reduce using rule 35 (factor -> LRB expression RRB .)
    NEQUAL          reduce using rule 35 (factor -> LRB expression RRB .)
    LT              reduce using rule 35 (factor -> LRB expression RRB .)
    LTEQ            reduce using rule 35 (factor -> LRB expression RRB .)
    GT              reduce using rule 35 (factor -> LRB expression RRB .)
    GTEQ            reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_IN          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_IS          reduce using rule 35 (factor -> LRB expression RRB .)
    RRB             reduce using rule 35 (factor -> LRB expression RRB .)
    RCB             reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_OF          reduce using rule 35 (factor -> LRB expression RRB .)
    COMMA           reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_THEN        reduce using rule 35 (factor -> LRB expression RRB .)
    SCOLON          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_BEGIN       reduce using rule 35 (factor -> LRB expression RRB .)
    COLON           reduce using rule 35 (factor -> LRB expression RRB .)
    RSB             reduce using rule 35 (factor -> LRB expression RRB .)

<<<<<<< HEAD

state 256
=======
    (75) addOperator -> MINUS .

    KEY_NIL         reduce using rule 75 (addOperator -> MINUS .)
    LRB             reduce using rule 75 (addOperator -> MINUS .)
    NOT             reduce using rule 75 (addOperator -> MINUS .)
    KEY_ABS         reduce using rule 75 (addOperator -> MINUS .)
    KEY_CHR         reduce using rule 75 (addOperator -> MINUS .)
    KEY_ORD         reduce using rule 75 (addOperator -> MINUS .)
    KEY_INTEGER     reduce using rule 75 (addOperator -> MINUS .)
    KEY_BOOLEAN     reduce using rule 75 (addOperator -> MINUS .)
    KEY_CHAR        reduce using rule 75 (addOperator -> MINUS .)
    KEY_STRING      reduce using rule 75 (addOperator -> MINUS .)
    KEY_REAL        reduce using rule 75 (addOperator -> MINUS .)
    KEY_SET         reduce using rule 75 (addOperator -> MINUS .)
    VINTEGER        reduce using rule 75 (addOperator -> MINUS .)
    VREAL           reduce using rule 75 (addOperator -> MINUS .)
    VBOOLEAN        reduce using rule 75 (addOperator -> MINUS .)
    VCHAR           reduce using rule 75 (addOperator -> MINUS .)
    VSTRING         reduce using rule 75 (addOperator -> MINUS .)
    LCB             reduce using rule 75 (addOperator -> MINUS .)
    IDENT           reduce using rule 75 (addOperator -> MINUS .)
    AT              reduce using rule 75 (addOperator -> MINUS .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (46) factor -> KEY_CHR LRB factor . RRB
    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (172) empty -> .

  ! shift/reduce conflict for RRB resolved as shift
    RRB             shift and go to state 310
    MULTIPLY        reduce using rule 172 (empty -> .)
    DIVIDE          reduce using rule 172 (empty -> .)
    MODULUS         reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)

<<<<<<< HEAD
  ! RRB             [ reduce using rule 172 (empty -> .) ]

    termss                         shift and go to state 195
    empty                          shift and go to state 196
=======
    (74) addOperator -> PLUS .

    KEY_NIL         reduce using rule 74 (addOperator -> PLUS .)
    LRB             reduce using rule 74 (addOperator -> PLUS .)
    NOT             reduce using rule 74 (addOperator -> PLUS .)
    KEY_ABS         reduce using rule 74 (addOperator -> PLUS .)
    KEY_CHR         reduce using rule 74 (addOperator -> PLUS .)
    KEY_ORD         reduce using rule 74 (addOperator -> PLUS .)
    KEY_INTEGER     reduce using rule 74 (addOperator -> PLUS .)
    KEY_BOOLEAN     reduce using rule 74 (addOperator -> PLUS .)
    KEY_CHAR        reduce using rule 74 (addOperator -> PLUS .)
    KEY_STRING      reduce using rule 74 (addOperator -> PLUS .)
    KEY_REAL        reduce using rule 74 (addOperator -> PLUS .)
    KEY_SET         reduce using rule 74 (addOperator -> PLUS .)
    VINTEGER        reduce using rule 74 (addOperator -> PLUS .)
    VREAL           reduce using rule 74 (addOperator -> PLUS .)
    VBOOLEAN        reduce using rule 74 (addOperator -> PLUS .)
    VCHAR           reduce using rule 74 (addOperator -> PLUS .)
    VSTRING         reduce using rule 74 (addOperator -> PLUS .)
    LCB             reduce using rule 74 (addOperator -> PLUS .)
    IDENT           reduce using rule 74 (addOperator -> PLUS .)
    AT              reduce using rule 74 (addOperator -> PLUS .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 257

    (22) simpleExpression -> MINUS term simpless .
    (23) simpless -> simpless . addOperator term
    (72) addOperator -> . PLUS
    (73) addOperator -> . MINUS
    (74) addOperator -> . OR

<<<<<<< HEAD
    EQUAL           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    NEQUAL          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    LT              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    LTEQ            reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    GT              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    GTEQ            reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_IN          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_IS          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RRB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_OF          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    COMMA           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_BEGIN       reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    SCOLON          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_THEN        reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    COLON           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RSB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RCB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    PLUS            shift and go to state 265
    MINUS           shift and go to state 264
    OR              shift and go to state 267

    addOperator                    shift and go to state 266
=======
    (76) addOperator -> OR .

    KEY_NIL         reduce using rule 76 (addOperator -> OR .)
    LRB             reduce using rule 76 (addOperator -> OR .)
    NOT             reduce using rule 76 (addOperator -> OR .)
    KEY_ABS         reduce using rule 76 (addOperator -> OR .)
    KEY_CHR         reduce using rule 76 (addOperator -> OR .)
    KEY_ORD         reduce using rule 76 (addOperator -> OR .)
    KEY_INTEGER     reduce using rule 76 (addOperator -> OR .)
    KEY_BOOLEAN     reduce using rule 76 (addOperator -> OR .)
    KEY_CHAR        reduce using rule 76 (addOperator -> OR .)
    KEY_STRING      reduce using rule 76 (addOperator -> OR .)
    KEY_REAL        reduce using rule 76 (addOperator -> OR .)
    KEY_SET         reduce using rule 76 (addOperator -> OR .)
    VINTEGER        reduce using rule 76 (addOperator -> OR .)
    VREAL           reduce using rule 76 (addOperator -> OR .)
    VBOOLEAN        reduce using rule 76 (addOperator -> OR .)
    VCHAR           reduce using rule 76 (addOperator -> OR .)
    VSTRING         reduce using rule 76 (addOperator -> OR .)
    LCB             reduce using rule 76 (addOperator -> OR .)
    IDENT           reduce using rule 76 (addOperator -> OR .)
    AT              reduce using rule 76 (addOperator -> OR .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 258

    (47) factor -> KEY_ORD LRB factor . RRB
    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (172) empty -> .

<<<<<<< HEAD
  ! shift/reduce conflict for RRB resolved as shift
    RRB             shift and go to state 311
    MULTIPLY        reduce using rule 172 (empty -> .)
    DIVIDE          reduce using rule 172 (empty -> .)
    MODULUS         reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)

  ! RRB             [ reduce using rule 172 (empty -> .) ]

    termss                         shift and go to state 195
    empty                          shift and go to state 196
=======
    (23) simpless -> simpless addOperator . term
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    char                           shift and go to state 105
    term                           shift and go to state 301
    qualident                      shift and go to state 112
    string                         shift and go to state 87
    factor                         shift and go to state 114
    identdef                       shift and go to state 93
    number                         shift and go to state 92
    set                            shift and go to state 99
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 259

<<<<<<< HEAD
    (68) mulOperator -> MULTIPLY .

    KEY_NIL         reduce using rule 68 (mulOperator -> MULTIPLY .)
    LRB             reduce using rule 68 (mulOperator -> MULTIPLY .)
    NOT             reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_ABS         reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_CHR         reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_ORD         reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_INTEGER     reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_BOOLEAN     reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_CHAR        reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_STRING      reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_REAL        reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_SET         reduce using rule 68 (mulOperator -> MULTIPLY .)
    VINTEGER        reduce using rule 68 (mulOperator -> MULTIPLY .)
    VREAL           reduce using rule 68 (mulOperator -> MULTIPLY .)
    VCHAR           reduce using rule 68 (mulOperator -> MULTIPLY .)
    VSTRING         reduce using rule 68 (mulOperator -> MULTIPLY .)
    LCB             reduce using rule 68 (mulOperator -> MULTIPLY .)
    IDENT           reduce using rule 68 (mulOperator -> MULTIPLY .)
    AT              reduce using rule 68 (mulOperator -> MULTIPLY .)
=======
    (19) expression -> simpleExpression relation simpleExpression .

    KEY_BEGIN       reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RRB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    COMMA           reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    SCOLON          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RSB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_THEN        reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_OF          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    COLON           reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RCB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 260

<<<<<<< HEAD
    (70) mulOperator -> MODULUS .

    KEY_NIL         reduce using rule 70 (mulOperator -> MODULUS .)
    LRB             reduce using rule 70 (mulOperator -> MODULUS .)
    NOT             reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_ABS         reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_CHR         reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_ORD         reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_INTEGER     reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_BOOLEAN     reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_CHAR        reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_STRING      reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_REAL        reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_SET         reduce using rule 70 (mulOperator -> MODULUS .)
    VINTEGER        reduce using rule 70 (mulOperator -> MODULUS .)
    VREAL           reduce using rule 70 (mulOperator -> MODULUS .)
    VCHAR           reduce using rule 70 (mulOperator -> MODULUS .)
    VSTRING         reduce using rule 70 (mulOperator -> MODULUS .)
    LCB             reduce using rule 70 (mulOperator -> MODULUS .)
    IDENT           reduce using rule 70 (mulOperator -> MODULUS .)
    AT              reduce using rule 70 (mulOperator -> MODULUS .)
=======
    (36) factor -> LRB expression RRB .

    MULTIPLY        reduce using rule 36 (factor -> LRB expression RRB .)
    DIVIDE          reduce using rule 36 (factor -> LRB expression RRB .)
    MODULUS         reduce using rule 36 (factor -> LRB expression RRB .)
    AND             reduce using rule 36 (factor -> LRB expression RRB .)
    PLUS            reduce using rule 36 (factor -> LRB expression RRB .)
    MINUS           reduce using rule 36 (factor -> LRB expression RRB .)
    OR              reduce using rule 36 (factor -> LRB expression RRB .)
    EQUAL           reduce using rule 36 (factor -> LRB expression RRB .)
    NEQUAL          reduce using rule 36 (factor -> LRB expression RRB .)
    LT              reduce using rule 36 (factor -> LRB expression RRB .)
    LTEQ            reduce using rule 36 (factor -> LRB expression RRB .)
    GT              reduce using rule 36 (factor -> LRB expression RRB .)
    GTEQ            reduce using rule 36 (factor -> LRB expression RRB .)
    KEY_IN          reduce using rule 36 (factor -> LRB expression RRB .)
    KEY_IS          reduce using rule 36 (factor -> LRB expression RRB .)
    RRB             reduce using rule 36 (factor -> LRB expression RRB .)
    COMMA           reduce using rule 36 (factor -> LRB expression RRB .)
    RSB             reduce using rule 36 (factor -> LRB expression RRB .)
    SCOLON          reduce using rule 36 (factor -> LRB expression RRB .)
    KEY_THEN        reduce using rule 36 (factor -> LRB expression RRB .)
    KEY_BEGIN       reduce using rule 36 (factor -> LRB expression RRB .)
    COLON           reduce using rule 36 (factor -> LRB expression RRB .)
    KEY_OF          reduce using rule 36 (factor -> LRB expression RRB .)
    RCB             reduce using rule 36 (factor -> LRB expression RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 261

<<<<<<< HEAD
    (71) mulOperator -> AND .

    KEY_NIL         reduce using rule 71 (mulOperator -> AND .)
    LRB             reduce using rule 71 (mulOperator -> AND .)
    NOT             reduce using rule 71 (mulOperator -> AND .)
    KEY_ABS         reduce using rule 71 (mulOperator -> AND .)
    KEY_CHR         reduce using rule 71 (mulOperator -> AND .)
    KEY_ORD         reduce using rule 71 (mulOperator -> AND .)
    KEY_INTEGER     reduce using rule 71 (mulOperator -> AND .)
    KEY_BOOLEAN     reduce using rule 71 (mulOperator -> AND .)
    KEY_CHAR        reduce using rule 71 (mulOperator -> AND .)
    KEY_STRING      reduce using rule 71 (mulOperator -> AND .)
    KEY_REAL        reduce using rule 71 (mulOperator -> AND .)
    KEY_SET         reduce using rule 71 (mulOperator -> AND .)
    VINTEGER        reduce using rule 71 (mulOperator -> AND .)
    VREAL           reduce using rule 71 (mulOperator -> AND .)
    VCHAR           reduce using rule 71 (mulOperator -> AND .)
    VSTRING         reduce using rule 71 (mulOperator -> AND .)
    LCB             reduce using rule 71 (mulOperator -> AND .)
    IDENT           reduce using rule 71 (mulOperator -> AND .)
    AT              reduce using rule 71 (mulOperator -> AND .)
=======
    (48) factor -> KEY_ORD LRB factor . RRB
    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (174) empty -> .
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

  ! shift/reduce conflict for RRB resolved as shift
    RRB             shift and go to state 302
    MULTIPLY        reduce using rule 174 (empty -> .)
    DIVIDE          reduce using rule 174 (empty -> .)
    MODULUS         reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    EQUAL           reduce using rule 174 (empty -> .)
    NEQUAL          reduce using rule 174 (empty -> .)
    LT              reduce using rule 174 (empty -> .)
    LTEQ            reduce using rule 174 (empty -> .)
    GT              reduce using rule 174 (empty -> .)
    GTEQ            reduce using rule 174 (empty -> .)
    KEY_IN          reduce using rule 174 (empty -> .)
    KEY_IS          reduce using rule 174 (empty -> .)

  ! RRB             [ reduce using rule 174 (empty -> .) ]

    termss                         shift and go to state 181
    empty                          shift and go to state 182

state 262

<<<<<<< HEAD
    (69) mulOperator -> DIVIDE .

    KEY_NIL         reduce using rule 69 (mulOperator -> DIVIDE .)
    LRB             reduce using rule 69 (mulOperator -> DIVIDE .)
    NOT             reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_ABS         reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_CHR         reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_ORD         reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_INTEGER     reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_BOOLEAN     reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_CHAR        reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_STRING      reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_REAL        reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_SET         reduce using rule 69 (mulOperator -> DIVIDE .)
    VINTEGER        reduce using rule 69 (mulOperator -> DIVIDE .)
    VREAL           reduce using rule 69 (mulOperator -> DIVIDE .)
    VCHAR           reduce using rule 69 (mulOperator -> DIVIDE .)
    VSTRING         reduce using rule 69 (mulOperator -> DIVIDE .)
    LCB             reduce using rule 69 (mulOperator -> DIVIDE .)
    IDENT           reduce using rule 69 (mulOperator -> DIVIDE .)
    AT              reduce using rule 69 (mulOperator -> DIVIDE .)

=======
    (20) simpleExpression -> PLUS term simpless .
    (23) simpless -> simpless . addOperator term
    (74) addOperator -> . PLUS
    (75) addOperator -> . MINUS
    (76) addOperator -> . OR

    EQUAL           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    NEQUAL          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    LT              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    LTEQ            reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    GT              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    GTEQ            reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_IN          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_IS          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_BEGIN       reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    SCOLON          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_THEN        reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RRB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    COMMA           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    COLON           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RSB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_OF          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RCB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    PLUS            shift and go to state 246
    MINUS           shift and go to state 245
    OR              shift and go to state 247

    addOperator                    shift and go to state 248
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 263

<<<<<<< HEAD
    (26) termss -> termss mulOperator . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    number                         shift and go to state 115
    string                         shift and go to state 103
    identdef                       shift and go to state 108
    factor                         shift and go to state 312
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (71) mulOperator -> DIVIDE .

    KEY_NIL         reduce using rule 71 (mulOperator -> DIVIDE .)
    LRB             reduce using rule 71 (mulOperator -> DIVIDE .)
    NOT             reduce using rule 71 (mulOperator -> DIVIDE .)
    KEY_ABS         reduce using rule 71 (mulOperator -> DIVIDE .)
    KEY_CHR         reduce using rule 71 (mulOperator -> DIVIDE .)
    KEY_ORD         reduce using rule 71 (mulOperator -> DIVIDE .)
    KEY_INTEGER     reduce using rule 71 (mulOperator -> DIVIDE .)
    KEY_BOOLEAN     reduce using rule 71 (mulOperator -> DIVIDE .)
    KEY_CHAR        reduce using rule 71 (mulOperator -> DIVIDE .)
    KEY_STRING      reduce using rule 71 (mulOperator -> DIVIDE .)
    KEY_REAL        reduce using rule 71 (mulOperator -> DIVIDE .)
    KEY_SET         reduce using rule 71 (mulOperator -> DIVIDE .)
    VINTEGER        reduce using rule 71 (mulOperator -> DIVIDE .)
    VREAL           reduce using rule 71 (mulOperator -> DIVIDE .)
    VBOOLEAN        reduce using rule 71 (mulOperator -> DIVIDE .)
    VCHAR           reduce using rule 71 (mulOperator -> DIVIDE .)
    VSTRING         reduce using rule 71 (mulOperator -> DIVIDE .)
    LCB             reduce using rule 71 (mulOperator -> DIVIDE .)
    IDENT           reduce using rule 71 (mulOperator -> DIVIDE .)
    AT              reduce using rule 71 (mulOperator -> DIVIDE .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 264

    (73) mulOperator -> AND .

    KEY_NIL         reduce using rule 73 (mulOperator -> AND .)
    LRB             reduce using rule 73 (mulOperator -> AND .)
    NOT             reduce using rule 73 (mulOperator -> AND .)
    KEY_ABS         reduce using rule 73 (mulOperator -> AND .)
    KEY_CHR         reduce using rule 73 (mulOperator -> AND .)
    KEY_ORD         reduce using rule 73 (mulOperator -> AND .)
    KEY_INTEGER     reduce using rule 73 (mulOperator -> AND .)
    KEY_BOOLEAN     reduce using rule 73 (mulOperator -> AND .)
    KEY_CHAR        reduce using rule 73 (mulOperator -> AND .)
    KEY_STRING      reduce using rule 73 (mulOperator -> AND .)
    KEY_REAL        reduce using rule 73 (mulOperator -> AND .)
    KEY_SET         reduce using rule 73 (mulOperator -> AND .)
    VINTEGER        reduce using rule 73 (mulOperator -> AND .)
    VREAL           reduce using rule 73 (mulOperator -> AND .)
    VBOOLEAN        reduce using rule 73 (mulOperator -> AND .)
    VCHAR           reduce using rule 73 (mulOperator -> AND .)
    VSTRING         reduce using rule 73 (mulOperator -> AND .)
    LCB             reduce using rule 73 (mulOperator -> AND .)
    IDENT           reduce using rule 73 (mulOperator -> AND .)
    AT              reduce using rule 73 (mulOperator -> AND .)


state 265

    (72) addOperator -> PLUS .

    KEY_NIL         reduce using rule 72 (addOperator -> PLUS .)
    LRB             reduce using rule 72 (addOperator -> PLUS .)
    NOT             reduce using rule 72 (addOperator -> PLUS .)
    KEY_ABS         reduce using rule 72 (addOperator -> PLUS .)
    KEY_CHR         reduce using rule 72 (addOperator -> PLUS .)
    KEY_ORD         reduce using rule 72 (addOperator -> PLUS .)
    KEY_INTEGER     reduce using rule 72 (addOperator -> PLUS .)
    KEY_BOOLEAN     reduce using rule 72 (addOperator -> PLUS .)
    KEY_CHAR        reduce using rule 72 (addOperator -> PLUS .)
    KEY_STRING      reduce using rule 72 (addOperator -> PLUS .)
    KEY_REAL        reduce using rule 72 (addOperator -> PLUS .)
    KEY_SET         reduce using rule 72 (addOperator -> PLUS .)
    VINTEGER        reduce using rule 72 (addOperator -> PLUS .)
    VREAL           reduce using rule 72 (addOperator -> PLUS .)
    VCHAR           reduce using rule 72 (addOperator -> PLUS .)
    VSTRING         reduce using rule 72 (addOperator -> PLUS .)
    LCB             reduce using rule 72 (addOperator -> PLUS .)
    IDENT           reduce using rule 72 (addOperator -> PLUS .)
    AT              reduce using rule 72 (addOperator -> PLUS .)


state 266

<<<<<<< HEAD
    (23) simpless -> simpless addOperator . term
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    term                           shift and go to state 313
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 267
=======
    (72) mulOperator -> MODULUS .

    KEY_NIL         reduce using rule 72 (mulOperator -> MODULUS .)
    LRB             reduce using rule 72 (mulOperator -> MODULUS .)
    NOT             reduce using rule 72 (mulOperator -> MODULUS .)
    KEY_ABS         reduce using rule 72 (mulOperator -> MODULUS .)
    KEY_CHR         reduce using rule 72 (mulOperator -> MODULUS .)
    KEY_ORD         reduce using rule 72 (mulOperator -> MODULUS .)
    KEY_INTEGER     reduce using rule 72 (mulOperator -> MODULUS .)
    KEY_BOOLEAN     reduce using rule 72 (mulOperator -> MODULUS .)
    KEY_CHAR        reduce using rule 72 (mulOperator -> MODULUS .)
    KEY_STRING      reduce using rule 72 (mulOperator -> MODULUS .)
    KEY_REAL        reduce using rule 72 (mulOperator -> MODULUS .)
    KEY_SET         reduce using rule 72 (mulOperator -> MODULUS .)
    VINTEGER        reduce using rule 72 (mulOperator -> MODULUS .)
    VREAL           reduce using rule 72 (mulOperator -> MODULUS .)
    VBOOLEAN        reduce using rule 72 (mulOperator -> MODULUS .)
    VCHAR           reduce using rule 72 (mulOperator -> MODULUS .)
    VSTRING         reduce using rule 72 (mulOperator -> MODULUS .)
    LCB             reduce using rule 72 (mulOperator -> MODULUS .)
    IDENT           reduce using rule 72 (mulOperator -> MODULUS .)
    AT              reduce using rule 72 (mulOperator -> MODULUS .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 256

    (26) termss -> termss mulOperator . factor
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    char                           shift and go to state 105
    qualident                      shift and go to state 112
    string                         shift and go to state 87
    factor                         shift and go to state 303
    identdef                       shift and go to state 93
    number                         shift and go to state 92
    set                            shift and go to state 99
    designator                     shift and go to state 111
    boolean                        shift and go to state 103

state 268

<<<<<<< HEAD
    (31) factor -> KEY_NIL LRB designator . RRB

    RRB             shift and go to state 314
=======
    (70) mulOperator -> MULTIPLY .

    KEY_NIL         reduce using rule 70 (mulOperator -> MULTIPLY .)
    LRB             reduce using rule 70 (mulOperator -> MULTIPLY .)
    NOT             reduce using rule 70 (mulOperator -> MULTIPLY .)
    KEY_ABS         reduce using rule 70 (mulOperator -> MULTIPLY .)
    KEY_CHR         reduce using rule 70 (mulOperator -> MULTIPLY .)
    KEY_ORD         reduce using rule 70 (mulOperator -> MULTIPLY .)
    KEY_INTEGER     reduce using rule 70 (mulOperator -> MULTIPLY .)
    KEY_BOOLEAN     reduce using rule 70 (mulOperator -> MULTIPLY .)
    KEY_CHAR        reduce using rule 70 (mulOperator -> MULTIPLY .)
    KEY_STRING      reduce using rule 70 (mulOperator -> MULTIPLY .)
    KEY_REAL        reduce using rule 70 (mulOperator -> MULTIPLY .)
    KEY_SET         reduce using rule 70 (mulOperator -> MULTIPLY .)
    VINTEGER        reduce using rule 70 (mulOperator -> MULTIPLY .)
    VREAL           reduce using rule 70 (mulOperator -> MULTIPLY .)
    VBOOLEAN        reduce using rule 70 (mulOperator -> MULTIPLY .)
    VCHAR           reduce using rule 70 (mulOperator -> MULTIPLY .)
    VSTRING         reduce using rule 70 (mulOperator -> MULTIPLY .)
    LCB             reduce using rule 70 (mulOperator -> MULTIPLY .)
    IDENT           reduce using rule 70 (mulOperator -> MULTIPLY .)
    AT              reduce using rule 70 (mulOperator -> MULTIPLY .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 269

<<<<<<< HEAD
    (20) simpleExpression -> PLUS term simpless .
    (23) simpless -> simpless . addOperator term
    (72) addOperator -> . PLUS
    (73) addOperator -> . MINUS
    (74) addOperator -> . OR

    EQUAL           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    NEQUAL          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    LT              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    LTEQ            reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    GT              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    GTEQ            reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_IN          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_IS          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RRB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_OF          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    COMMA           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_BEGIN       reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    SCOLON          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_THEN        reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    COLON           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RSB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RCB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    PLUS            shift and go to state 265
    MINUS           shift and go to state 264
    OR              shift and go to state 267

    addOperator                    shift and go to state 266

state 270

    (170) fileStatement -> KEY_FPRINTF LRB identdef COMMA . string RRB
    (51) string -> . VSTRING

    VSTRING         shift and go to state 99

    string                         shift and go to state 315

state 271

    (159) ioStatement -> KEY_WRITECHAR LRB expression RRB .

    SCOLON          reduce using rule 159 (ioStatement -> KEY_WRITECHAR LRB expression RRB .)


state 272

    (171) fileStatement -> KEY_FREAD LRB identdef COMMA . identdef COMMA VINTEGER RRB
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    identdef                       shift and go to state 316

state 273
=======
    (47) factor -> KEY_CHR LRB factor . RRB
    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (174) empty -> .

  ! shift/reduce conflict for RRB resolved as shift
    RRB             shift and go to state 304
    MULTIPLY        reduce using rule 174 (empty -> .)
    DIVIDE          reduce using rule 174 (empty -> .)
    MODULUS         reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    EQUAL           reduce using rule 174 (empty -> .)
    NEQUAL          reduce using rule 174 (empty -> .)
    LT              reduce using rule 174 (empty -> .)
    LTEQ            reduce using rule 174 (empty -> .)
    GT              reduce using rule 174 (empty -> .)
    GTEQ            reduce using rule 174 (empty -> .)
    KEY_IN          reduce using rule 174 (empty -> .)
    KEY_IS          reduce using rule 174 (empty -> .)

  ! RRB             [ reduce using rule 174 (empty -> .) ]

    termss                         shift and go to state 181
    empty                          shift and go to state 182
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (165) ioStatement -> KEY_READREAL LRB expression RRB .

<<<<<<< HEAD
    SCOLON          reduce using rule 165 (ioStatement -> KEY_READREAL LRB expression RRB .)


state 274
=======
    (146) ifStatement -> KEY_IF expression KEY_THEN statementSequence . ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> KEY_IF expression KEY_THEN statementSequence . ifss KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (148) ifss -> . ifss KEY_ELSEIF expression KEY_THEN statementSequence
    (149) ifss -> . empty
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (174) empty -> .
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_ELSE        reduce using rule 174 (empty -> .)
    KEY_END         reduce using rule 174 (empty -> .)
    KEY_ELSEIF      reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ioStatement                    shift and go to state 24
    ifStatement                    shift and go to state 47
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    forStatement                   shift and go to state 33
    fileStatement                  shift and go to state 32
    designator                     shift and go to state 54
    identdef                       shift and go to state 36
    qualident                      shift and go to state 56
    doWhileStatement               shift and go to state 59
    switchStatement                shift and go to state 46
    assignment                     shift and go to state 25
    ifss                           shift and go to state 305
    empty                          shift and go to state 306
    memoryalloc                    shift and go to state 55
    procedureCall                  shift and go to state 53
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (164) ioStatement -> KEY_READINT LRB expression RRB .

<<<<<<< HEAD
    SCOLON          reduce using rule 164 (ioStatement -> KEY_READINT LRB expression RRB .)

=======
    (143) memoryalloc -> KEY_NEW LRB designator RRB .

    SCOLON          reduce using rule 143 (memoryalloc -> KEY_NEW LRB designator RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 275

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case . casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH expression KEY_BEGIN case . casess KEY_END
    (150) casess -> . case casess
    (151) casess -> . empty
    (152) case -> . KEY_CASE expression COLON statementSequence
    (172) empty -> .

<<<<<<< HEAD
    KEY_CASE        shift and go to state 276
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)

    case                           shift and go to state 317
    casess                         shift and go to state 318
    empty                          shift and go to state 319

state 276

    (152) case -> KEY_CASE . expression COLON statementSequence
=======
    (168) ioStatement -> KEY_READCHAR LRB expression RRB .

    SCOLON          reduce using rule 168 (ioStatement -> KEY_READCHAR LRB expression RRB .)


state 262

    (158) ioStatement -> KEY_WRITE LRB expression RRB .

    SCOLON          reduce using rule 158 (ioStatement -> KEY_WRITE LRB expression RRB .)


state 263

    (156) forStatement -> KEY_FOR LRB assignment SCOLON . expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    string                         shift and go to state 103
    expression                     shift and go to state 320
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 277

    (153) whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 307
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    char                           shift and go to state 105
    string                         shift and go to state 87
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 264

    (169) ioStatement -> KEY_READBOOL LRB expression RRB .

    SCOLON          reduce using rule 169 (ioStatement -> KEY_READBOOL LRB expression RRB .)


state 265

    (171) fileStatement -> KEY_FCLOSE LRB identdef RRB .

    SCOLON          reduce using rule 171 (fileStatement -> KEY_FCLOSE LRB identdef RRB .)


state 266

    (172) fileStatement -> KEY_FPRINTF LRB identdef COMMA . string RRB
    (53) string -> . VSTRING

    VSTRING         shift and go to state 91

    string                         shift and go to state 308

state 267

    (68) actualParameters -> LRB expList RRB .

    SCOLON          reduce using rule 68 (actualParameters -> LRB expList RRB .)
    MULTIPLY        reduce using rule 68 (actualParameters -> LRB expList RRB .)
    DIVIDE          reduce using rule 68 (actualParameters -> LRB expList RRB .)
    MODULUS         reduce using rule 68 (actualParameters -> LRB expList RRB .)
    AND             reduce using rule 68 (actualParameters -> LRB expList RRB .)
    PLUS            reduce using rule 68 (actualParameters -> LRB expList RRB .)
    MINUS           reduce using rule 68 (actualParameters -> LRB expList RRB .)
    OR              reduce using rule 68 (actualParameters -> LRB expList RRB .)
    EQUAL           reduce using rule 68 (actualParameters -> LRB expList RRB .)
    NEQUAL          reduce using rule 68 (actualParameters -> LRB expList RRB .)
    LT              reduce using rule 68 (actualParameters -> LRB expList RRB .)
    LTEQ            reduce using rule 68 (actualParameters -> LRB expList RRB .)
    GT              reduce using rule 68 (actualParameters -> LRB expList RRB .)
    GTEQ            reduce using rule 68 (actualParameters -> LRB expList RRB .)
    KEY_IN          reduce using rule 68 (actualParameters -> LRB expList RRB .)
    KEY_IS          reduce using rule 68 (actualParameters -> LRB expList RRB .)
    KEY_THEN        reduce using rule 68 (actualParameters -> LRB expList RRB .)
    KEY_BEGIN       reduce using rule 68 (actualParameters -> LRB expList RRB .)
    RRB             reduce using rule 68 (actualParameters -> LRB expList RRB .)
    COMMA           reduce using rule 68 (actualParameters -> LRB expList RRB .)
    COLON           reduce using rule 68 (actualParameters -> LRB expList RRB .)
    RSB             reduce using rule 68 (actualParameters -> LRB expList RRB .)
    KEY_OF          reduce using rule 68 (actualParameters -> LRB expList RRB .)
    RCB             reduce using rule 68 (actualParameters -> LRB expList RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    KEY_END         shift and go to state 321
    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    identdef                       shift and go to state 32
    switchStatement                shift and go to state 55
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    statement                      shift and go to state 66
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    assignment                     shift and go to state 63
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 70
    designator                     shift and go to state 65

state 278

<<<<<<< HEAD
    (154) forStatement -> KEY_FOR LRB assignment SCOLON . expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
=======
    (66) expList -> expList COMMA . expression
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    expression                     shift and go to state 322
    term                           shift and go to state 113
    string                         shift and go to state 103
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 279

    (155) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END . KEY_WHILE expression

    KEY_WHILE       shift and go to state 323
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 309
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 269

    (60) designator2 -> designator2 LRB qualident . RRB

    RRB             shift and go to state 310


state 270

    (58) designator2 -> designator2 DOT identdef .

    DOT             reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    LSB             reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    LRB             reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    MULTIPLY        reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    DIVIDE          reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    MODULUS         reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    AND             reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    PLUS            reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    MINUS           reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    OR              reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    EQUAL           reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    NEQUAL          reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    LT              reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    LTEQ            reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    GT              reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    GTEQ            reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    KEY_IN          reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    KEY_IS          reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    SCOLON          reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    KEY_THEN        reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    KEY_BEGIN       reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    RRB             reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    COMMA           reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    COLON           reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    RSB             reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    KEY_OF          reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    RCB             reduce using rule 58 (designator2 -> designator2 DOT identdef .)
    ASSIGN          reduce using rule 58 (designator2 -> designator2 DOT identdef .)


state 271

    (59) designator2 -> designator2 LSB expList . RSB
    (66) expList -> expList . COMMA expression

    RSB             shift and go to state 311
    COMMA           shift and go to state 268
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 280

<<<<<<< HEAD
    (141) memoryalloc -> KEY_NEW LRB designator RRB .

    SCOLON          reduce using rule 141 (memoryalloc -> KEY_NEW LRB designator RRB .)
=======
    (141) setStatement -> qualident DOT KEY_ADD LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 312
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 273

    (142) setStatement -> qualident DOT KEY_DEL LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 313
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 274
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (165) ioStatement -> KEY_READ LRB expression RRB .

<<<<<<< HEAD
state 281

    (166) ioStatement -> KEY_READCHAR LRB expression RRB .

    SCOLON          reduce using rule 166 (ioStatement -> KEY_READCHAR LRB expression RRB .)
=======
    SCOLON          reduce using rule 165 (ioStatement -> KEY_READ LRB expression RRB .)


state 275
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (150) switchStatement -> KEY_SWITCH expression KEY_BEGIN case . casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> KEY_SWITCH expression KEY_BEGIN case . casess KEY_END
    (152) casess -> . case casess
    (153) casess -> . empty
    (154) case -> . KEY_CASE expression COLON statementSequence
    (174) empty -> .

<<<<<<< HEAD
state 282

    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence . ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF expression KEY_THEN statementSequence . ifss KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (146) ifss -> . ifss KEY_ELSEIF expression KEY_THEN statementSequence
    (147) ifss -> . empty
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (172) empty -> .
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)
    KEY_ELSEIF      reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    statement                      shift and go to state 66
    identdef                       shift and go to state 32
    assignment                     shift and go to state 63
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    ifss                           shift and go to state 324
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    switchStatement                shift and go to state 55
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 325
    designator                     shift and go to state 65

state 283

    (56) designator2 -> designator2 DOT identdef .

    DOT             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    LSB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    LRB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    MULTIPLY        reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    DIVIDE          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    MODULUS         reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    AND             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    PLUS            reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    MINUS           reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    OR              reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    EQUAL           reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    NEQUAL          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    LT              reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    LTEQ            reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    GT              reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    GTEQ            reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_IN          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_IS          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    SCOLON          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_BEGIN       reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_THEN        reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    RRB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    COMMA           reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    COLON           reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_OF          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    RSB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    RCB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    ASSIGN          reduce using rule 56 (designator2 -> designator2 DOT identdef .)


state 284

    (58) designator2 -> designator2 LRB qualident . RRB

    RRB             shift and go to state 326


state 285

    (57) designator2 -> designator2 LSB expList . RSB
    (64) expList -> expList . COMMA expression

    RSB             shift and go to state 327
    COMMA           shift and go to state 290


state 286

    (139) setStatement -> qualident DOT KEY_ADD LRB . expression RRB
=======
    KEY_CASE        shift and go to state 276
    KEY_ELSE        reduce using rule 174 (empty -> .)
    KEY_END         reduce using rule 174 (empty -> .)

    case                           shift and go to state 315
    empty                          shift and go to state 314
    casess                         shift and go to state 316

state 276

    (154) case -> KEY_CASE . expression COLON statementSequence
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 328
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 317
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 277

    (155) whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (174) empty -> .
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 318
    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ioStatement                    shift and go to state 24
    ifStatement                    shift and go to state 47
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    forStatement                   shift and go to state 33
    fileStatement                  shift and go to state 32
    designator                     shift and go to state 54
    identdef                       shift and go to state 36
    qualident                      shift and go to state 56
    doWhileStatement               shift and go to state 59
    switchStatement                shift and go to state 46
    assignment                     shift and go to state 25
    empty                          shift and go to state 63
    memoryalloc                    shift and go to state 55
    procedureCall                  shift and go to state 53

state 278

    (162) ioStatement -> KEY_WRITEBOOL LRB expression RRB .

    SCOLON          reduce using rule 162 (ioStatement -> KEY_WRITEBOOL LRB expression RRB .)


state 279

    (160) ioStatement -> KEY_WRITEREAL LRB expression RRB .

    SCOLON          reduce using rule 160 (ioStatement -> KEY_WRITEREAL LRB expression RRB .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 287

<<<<<<< HEAD
    (140) setStatement -> qualident DOT KEY_DEL LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    string                         shift and go to state 103
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    expression                     shift and go to state 329
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (173) fileStatement -> KEY_FREAD LRB identdef COMMA . identdef COMMA VINTEGER RRB
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34

    identdef                       shift and go to state 319
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 288

<<<<<<< HEAD
    (160) ioStatement -> KEY_WRITEBOOL LRB expression RRB .

    SCOLON          reduce using rule 160 (ioStatement -> KEY_WRITEBOOL LRB expression RRB .)
=======
    (167) ioStatement -> KEY_READREAL LRB expression RRB .

    SCOLON          reduce using rule 167 (ioStatement -> KEY_READREAL LRB expression RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 289

<<<<<<< HEAD
    (158) ioStatement -> KEY_WRITEREAL LRB expression RRB .

    SCOLON          reduce using rule 158 (ioStatement -> KEY_WRITEREAL LRB expression RRB .)
=======
    (97) arrayType -> KEY_ARRAY length . comass KEY_OF type
    (98) comass -> . comass COMMA length
    (99) comass -> . empty
    (174) empty -> .

    KEY_OF          reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    empty                          shift and go to state 320
    comass                         shift and go to state 321

state 290

<<<<<<< HEAD
    (64) expList -> expList COMMA . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    string                         shift and go to state 103
    expression                     shift and go to state 330
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114
=======
    (100) length -> expression .

    KEY_OF          reduce using rule 100 (length -> expression .)
    COMMA           reduce using rule 100 (length -> expression .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 291

<<<<<<< HEAD
    (66) actualParameters -> LRB expList RRB .

    SCOLON          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    MULTIPLY        reduce using rule 66 (actualParameters -> LRB expList RRB .)
    DIVIDE          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    MODULUS         reduce using rule 66 (actualParameters -> LRB expList RRB .)
    AND             reduce using rule 66 (actualParameters -> LRB expList RRB .)
    PLUS            reduce using rule 66 (actualParameters -> LRB expList RRB .)
    MINUS           reduce using rule 66 (actualParameters -> LRB expList RRB .)
    OR              reduce using rule 66 (actualParameters -> LRB expList RRB .)
    EQUAL           reduce using rule 66 (actualParameters -> LRB expList RRB .)
    NEQUAL          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    LT              reduce using rule 66 (actualParameters -> LRB expList RRB .)
    LTEQ            reduce using rule 66 (actualParameters -> LRB expList RRB .)
    GT              reduce using rule 66 (actualParameters -> LRB expList RRB .)
    GTEQ            reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_IN          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_IS          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_BEGIN       reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_THEN        reduce using rule 66 (actualParameters -> LRB expList RRB .)
    RRB             reduce using rule 66 (actualParameters -> LRB expList RRB .)
    COMMA           reduce using rule 66 (actualParameters -> LRB expList RRB .)
    COLON           reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_OF          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    RSB             reduce using rule 66 (actualParameters -> LRB expList RRB .)
    RCB             reduce using rule 66 (actualParameters -> LRB expList RRB .)
=======
    (110) pointerType -> KEY_POINTER KEY_TO . type
    (86) type -> . IDENT
    (87) type -> . varType
    (88) type -> . arrayType
    (89) type -> . recordType
    (90) type -> . pointerType
    (91) varType -> . KEY_INTEGER
    (92) varType -> . KEY_BOOLEAN
    (93) varType -> . KEY_CHAR
    (94) varType -> . KEY_STRING
    (95) varType -> . KEY_REAL
    (96) varType -> . KEY_SET
    (97) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (101) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (102) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (110) pointerType -> . KEY_POINTER KEY_TO type
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 225
    KEY_BOOLEAN     shift and go to state 215
    KEY_CHAR        shift and go to state 220
    KEY_STRING      shift and go to state 214
    KEY_REAL        shift and go to state 212
    KEY_SET         shift and go to state 221
    KEY_ARRAY       shift and go to state 216
    KEY_RECORD      shift and go to state 226
    KEY_POINTER     shift and go to state 222

    pointerType                    shift and go to state 219
    varType                        shift and go to state 224
    arrayType                      shift and go to state 213
    recordType                     shift and go to state 217
    type                           shift and go to state 322

state 292

<<<<<<< HEAD
    (163) ioStatement -> KEY_READ LRB expression RRB .

    SCOLON          reduce using rule 163 (ioStatement -> KEY_READ LRB expression RRB .)
=======
    (101) recordType -> KEY_RECORD fieldListSequence . KEY_END
    (104) fieldListSequence -> fieldListSequence . SCOLON fieldList

    KEY_END         shift and go to state 324
    SCOLON          shift and go to state 323
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 293

<<<<<<< HEAD
    (161) ioStatement -> KEY_WRITELN LRB expression RRB .

    SCOLON          reduce using rule 161 (ioStatement -> KEY_WRITELN LRB expression RRB .)
=======
    (106) fieldList -> identList . COLON type
    (108) identList -> identList . COMMA IDENT

    COLON           shift and go to state 325
    COMMA           shift and go to state 147
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 294

<<<<<<< HEAD
    (17) constantDeclaration -> IDENT ASSIGN expression COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 168
    KEY_INTEGER     shift and go to state 157
    KEY_BOOLEAN     shift and go to state 163
    KEY_CHAR        shift and go to state 160
    KEY_STRING      shift and go to state 164
    KEY_REAL        shift and go to state 158
    KEY_SET         shift and go to state 161
    KEY_ARRAY       shift and go to state 155
    KEY_RECORD      shift and go to state 169
    KEY_POINTER     shift and go to state 165

    recordType                     shift and go to state 162
    pointerType                    shift and go to state 167
    varType                        shift and go to state 156
    arrayType                      shift and go to state 159
    type                           shift and go to state 331

state 295

    (115) formalss -> formalss SCOLON . fpSection
    (117) fpSection -> . IDENT fps COLON type

    IDENT           shift and go to state 150

    fpSection                      shift and go to state 332

state 296

    (113) formalParameters -> LRB fpSection formalss RRB .

    COLON           reduce using rule 113 (formalParameters -> LRB fpSection formalss RRB .)
    SCOLON          reduce using rule 113 (formalParameters -> LRB fpSection formalss RRB .)
=======
    (102) recordType -> KEY_RECORD LRB . baseType RRB fieldListSequence KEY_END
    (103) baseType -> . qualident
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    IDENT           shift and go to state 51
    AT              shift and go to state 34

    qualident                      shift and go to state 326
    baseType                       shift and go to state 327
    identdef                       shift and go to state 93

state 288

    (105) fieldListSequence -> fieldList .

    KEY_END         reduce using rule 105 (fieldListSequence -> fieldList .)
    SCOLON          reduce using rule 105 (fieldListSequence -> fieldList .)


state 289

    (107) fieldList -> empty .

    KEY_END         reduce using rule 107 (fieldList -> empty .)
    SCOLON          reduce using rule 107 (fieldList -> empty .)


state 290

    (121) fps -> empty .

    COLON           reduce using rule 121 (fps -> empty .)
    COMMA           reduce using rule 121 (fps -> empty .)


state 291

    (119) fpSection -> IDENT fps . COLON type
    (120) fps -> fps . COMMA IDENT

    COLON           shift and go to state 329
    COMMA           shift and go to state 328


state 292

    (118) formalss -> empty .

    RRB             reduce using rule 118 (formalss -> empty .)
    SCOLON          reduce using rule 118 (formalss -> empty .)


state 293

    (115) formalParameters -> LRB fpSection formalss . RRB
    (117) formalss -> formalss . SCOLON fpSection

    RRB             shift and go to state 330
    SCOLON          shift and go to state 331


state 294

    (113) procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type .

    SCOLON          reduce using rule 113 (procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type .)


state 295

    (122) procedureBody -> declarationSequence KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (174) empty -> .
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 332
    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ifStatement                    shift and go to state 47
    ioStatement                    shift and go to state 24
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    forStatement                   shift and go to state 33
    fileStatement                  shift and go to state 32
    designator                     shift and go to state 54
    memoryalloc                    shift and go to state 55
    doWhileStatement               shift and go to state 59
    switchStatement                shift and go to state 46
    assignment                     shift and go to state 25
    empty                          shift and go to state 63
    qualident                      shift and go to state 56
    identdef                       shift and go to state 36
    procedureCall                  shift and go to state 53

state 296

    (17) constantDeclaration -> IDENT ASSIGN expression COLON . type
    (86) type -> . IDENT
    (87) type -> . varType
    (88) type -> . arrayType
    (89) type -> . recordType
    (90) type -> . pointerType
    (91) varType -> . KEY_INTEGER
    (92) varType -> . KEY_BOOLEAN
    (93) varType -> . KEY_CHAR
    (94) varType -> . KEY_STRING
    (95) varType -> . KEY_REAL
    (96) varType -> . KEY_SET
    (97) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (101) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (102) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (110) pointerType -> . KEY_POINTER KEY_TO type
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 225
    KEY_BOOLEAN     shift and go to state 215
    KEY_CHAR        shift and go to state 220
    KEY_STRING      shift and go to state 214
    KEY_REAL        shift and go to state 212
    KEY_SET         shift and go to state 221
    KEY_ARRAY       shift and go to state 216
    KEY_RECORD      shift and go to state 226
    KEY_POINTER     shift and go to state 222

    pointerType                    shift and go to state 219
    varType                        shift and go to state 224
    arrayType                      shift and go to state 213
    recordType                     shift and go to state 217
    type                           shift and go to state 333

state 297

<<<<<<< HEAD
    (118) fps -> fps COMMA . IDENT

    IDENT           shift and go to state 333


state 298

    (117) fpSection -> IDENT fps COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type
=======
    (157) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 334
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 298

    (170) fileStatement -> identdef EQUAL KEY_FOPEN LRB string . COMMA char RRB

    COMMA           shift and go to state 335
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    IDENT           shift and go to state 168
    KEY_INTEGER     shift and go to state 157
    KEY_BOOLEAN     shift and go to state 163
    KEY_CHAR        shift and go to state 160
    KEY_STRING      shift and go to state 164
    KEY_REAL        shift and go to state 158
    KEY_SET         shift and go to state 161
    KEY_ARRAY       shift and go to state 155
    KEY_RECORD      shift and go to state 169
    KEY_POINTER     shift and go to state 165

    recordType                     shift and go to state 162
    pointerType                    shift and go to state 167
    varType                        shift and go to state 156
    arrayType                      shift and go to state 159
    type                           shift and go to state 334

state 299

<<<<<<< HEAD
    (120) procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END .

    IDENT           reduce using rule 120 (procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END .)
=======
    (32) factor -> KEY_NIL LRB designator RRB .

    MULTIPLY        reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    DIVIDE          reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    MODULUS         reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    AND             reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    PLUS            reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    MINUS           reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    OR              reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    EQUAL           reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    NEQUAL          reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    LT              reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    LTEQ            reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    GT              reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    GTEQ            reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    KEY_IN          reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    KEY_IS          reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    RRB             reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    COMMA           reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    RSB             reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    SCOLON          reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    KEY_THEN        reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    KEY_BEGIN       reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    COLON           reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    KEY_OF          reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
    RCB             reduce using rule 32 (factor -> KEY_NIL LRB designator RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 300

<<<<<<< HEAD
    (95) arrayType -> KEY_ARRAY length comass . KEY_OF type
    (96) comass -> comass . COMMA length

    KEY_OF          shift and go to state 335
    COMMA           shift and go to state 336


state 301

    (97) comass -> empty .

    KEY_OF          reduce using rule 97 (comass -> empty .)
    COMMA           reduce using rule 97 (comass -> empty .)


state 302

    (108) pointerType -> KEY_POINTER KEY_TO type .

    SCOLON          reduce using rule 108 (pointerType -> KEY_POINTER KEY_TO type .)
    RRB             reduce using rule 108 (pointerType -> KEY_POINTER KEY_TO type .)
    KEY_END         reduce using rule 108 (pointerType -> KEY_POINTER KEY_TO type .)


state 303

    (104) fieldList -> identList COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 168
    KEY_INTEGER     shift and go to state 157
    KEY_BOOLEAN     shift and go to state 163
    KEY_CHAR        shift and go to state 160
    KEY_STRING      shift and go to state 164
    KEY_REAL        shift and go to state 158
    KEY_SET         shift and go to state 161
    KEY_ARRAY       shift and go to state 155
    KEY_RECORD      shift and go to state 169
    KEY_POINTER     shift and go to state 165

    recordType                     shift and go to state 162
    pointerType                    shift and go to state 167
    varType                        shift and go to state 156
    arrayType                      shift and go to state 159
    type                           shift and go to state 337

state 304

    (102) fieldListSequence -> fieldListSequence SCOLON . fieldList
    (104) fieldList -> . identList COLON type
    (105) fieldList -> . empty
    (106) identList -> . identList COMMA IDENT
    (107) identList -> . IDENT
    (172) empty -> .

    IDENT           shift and go to state 72
    KEY_END         reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
=======
    (54) set -> LCB element COMMA element . RCB

    RCB             shift and go to state 336
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    identList                      shift and go to state 243
    fieldList                      shift and go to state 338
    empty                          shift and go to state 244

<<<<<<< HEAD
state 305

    (99) recordType -> KEY_RECORD fieldListSequence KEY_END .

    SCOLON          reduce using rule 99 (recordType -> KEY_RECORD fieldListSequence KEY_END .)
    RRB             reduce using rule 99 (recordType -> KEY_RECORD fieldListSequence KEY_END .)
    KEY_END         reduce using rule 99 (recordType -> KEY_RECORD fieldListSequence KEY_END .)


state 306
=======
state 301
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (100) recordType -> KEY_RECORD LRB baseType . RRB fieldListSequence KEY_END

<<<<<<< HEAD
    RRB             shift and go to state 339
=======
    PLUS            reduce using rule 23 (simpless -> simpless addOperator term .)
    MINUS           reduce using rule 23 (simpless -> simpless addOperator term .)
    OR              reduce using rule 23 (simpless -> simpless addOperator term .)
    EQUAL           reduce using rule 23 (simpless -> simpless addOperator term .)
    NEQUAL          reduce using rule 23 (simpless -> simpless addOperator term .)
    LT              reduce using rule 23 (simpless -> simpless addOperator term .)
    LTEQ            reduce using rule 23 (simpless -> simpless addOperator term .)
    GT              reduce using rule 23 (simpless -> simpless addOperator term .)
    GTEQ            reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_IN          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_IS          reduce using rule 23 (simpless -> simpless addOperator term .)
    SCOLON          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_THEN        reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_BEGIN       reduce using rule 23 (simpless -> simpless addOperator term .)
    RRB             reduce using rule 23 (simpless -> simpless addOperator term .)
    COMMA           reduce using rule 23 (simpless -> simpless addOperator term .)
    COLON           reduce using rule 23 (simpless -> simpless addOperator term .)
    RSB             reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_OF          reduce using rule 23 (simpless -> simpless addOperator term .)
    RCB             reduce using rule 23 (simpless -> simpless addOperator term .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 302

    (48) factor -> KEY_ORD LRB factor RRB .

    MULTIPLY        reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    DIVIDE          reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    MODULUS         reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    AND             reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    PLUS            reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    MINUS           reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    OR              reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    EQUAL           reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    NEQUAL          reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    LT              reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    LTEQ            reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    GT              reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    GTEQ            reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    KEY_IN          reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    KEY_IS          reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    RRB             reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    COMMA           reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    RSB             reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    SCOLON          reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    KEY_THEN        reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    KEY_BEGIN       reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    COLON           reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    KEY_OF          reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)
    RCB             reduce using rule 48 (factor -> KEY_ORD LRB factor RRB .)


state 303

    (101) baseType -> qualident .

<<<<<<< HEAD
    RRB             reduce using rule 101 (baseType -> qualident .)
=======
    MULTIPLY        reduce using rule 26 (termss -> termss mulOperator factor .)
    DIVIDE          reduce using rule 26 (termss -> termss mulOperator factor .)
    MODULUS         reduce using rule 26 (termss -> termss mulOperator factor .)
    AND             reduce using rule 26 (termss -> termss mulOperator factor .)
    PLUS            reduce using rule 26 (termss -> termss mulOperator factor .)
    MINUS           reduce using rule 26 (termss -> termss mulOperator factor .)
    OR              reduce using rule 26 (termss -> termss mulOperator factor .)
    EQUAL           reduce using rule 26 (termss -> termss mulOperator factor .)
    NEQUAL          reduce using rule 26 (termss -> termss mulOperator factor .)
    LT              reduce using rule 26 (termss -> termss mulOperator factor .)
    LTEQ            reduce using rule 26 (termss -> termss mulOperator factor .)
    GT              reduce using rule 26 (termss -> termss mulOperator factor .)
    GTEQ            reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_IN          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_IS          reduce using rule 26 (termss -> termss mulOperator factor .)
    SCOLON          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_THEN        reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_BEGIN       reduce using rule 26 (termss -> termss mulOperator factor .)
    RRB             reduce using rule 26 (termss -> termss mulOperator factor .)
    COMMA           reduce using rule 26 (termss -> termss mulOperator factor .)
    COLON           reduce using rule 26 (termss -> termss mulOperator factor .)
    RSB             reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_OF          reduce using rule 26 (termss -> termss mulOperator factor .)
    RCB             reduce using rule 26 (termss -> termss mulOperator factor .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 304

    (47) factor -> KEY_CHR LRB factor RRB .

    MULTIPLY        reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    DIVIDE          reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    MODULUS         reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    AND             reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    PLUS            reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    MINUS           reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    OR              reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    EQUAL           reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    NEQUAL          reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    LT              reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    LTEQ            reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    GT              reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    GTEQ            reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    KEY_IN          reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    KEY_IS          reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    RRB             reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    COMMA           reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    RSB             reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    SCOLON          reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    KEY_THEN        reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    KEY_BEGIN       reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    COLON           reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    KEY_OF          reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)
    RCB             reduce using rule 47 (factor -> KEY_CHR LRB factor RRB .)


state 305

    (146) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss . KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss . KEY_END
    (148) ifss -> ifss . KEY_ELSEIF expression KEY_THEN statementSequence

    KEY_ELSE        shift and go to state 338
    KEY_END         shift and go to state 339
    KEY_ELSEIF      shift and go to state 337


state 306

    (149) ifss -> empty .
    (137) statement -> empty .

    KEY_ELSE        reduce using rule 149 (ifss -> empty .)
    KEY_END         reduce using rule 149 (ifss -> empty .)
    KEY_ELSEIF      reduce using rule 149 (ifss -> empty .)
    SCOLON          reduce using rule 137 (statement -> empty .)


state 307

    (156) forStatement -> KEY_FOR LRB assignment SCOLON expression . SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    SCOLON          shift and go to state 340


state 308

<<<<<<< HEAD
    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB string . COMMA char RRB

    COMMA           shift and go to state 340
=======
    (172) fileStatement -> KEY_FPRINTF LRB identdef COMMA string . RRB

    RRB             shift and go to state 341
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 309

<<<<<<< HEAD
    (52) set -> LCB element COMMA element . RCB

    RCB             shift and go to state 341
=======
    (66) expList -> expList COMMA expression .

    RRB             reduce using rule 66 (expList -> expList COMMA expression .)
    COMMA           reduce using rule 66 (expList -> expList COMMA expression .)
    RSB             reduce using rule 66 (expList -> expList COMMA expression .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 310

<<<<<<< HEAD
    (46) factor -> KEY_CHR LRB factor RRB .

    MULTIPLY        reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    DIVIDE          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    MODULUS         reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    AND             reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    PLUS            reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    MINUS           reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    OR              reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    EQUAL           reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    NEQUAL          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    LT              reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    LTEQ            reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    GT              reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    GTEQ            reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_IN          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_IS          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    RRB             reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    RCB             reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_OF          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    COMMA           reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_THEN        reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    SCOLON          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_BEGIN       reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    COLON           reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    RSB             reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
=======
    (60) designator2 -> designator2 LRB qualident RRB .

    DOT             reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    LSB             reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    LRB             reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    MULTIPLY        reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    DIVIDE          reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    MODULUS         reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    AND             reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    PLUS            reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    MINUS           reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    OR              reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    EQUAL           reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    NEQUAL          reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    LT              reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    LTEQ            reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    GT              reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    GTEQ            reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    KEY_IN          reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    KEY_IS          reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    SCOLON          reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    KEY_THEN        reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    KEY_BEGIN       reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    RRB             reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    COMMA           reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    COLON           reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    RSB             reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    KEY_OF          reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    RCB             reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
    ASSIGN          reduce using rule 60 (designator2 -> designator2 LRB qualident RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 311

<<<<<<< HEAD
    (47) factor -> KEY_ORD LRB factor RRB .

    MULTIPLY        reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    DIVIDE          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    MODULUS         reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    AND             reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    PLUS            reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    MINUS           reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    OR              reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    EQUAL           reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    NEQUAL          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    LT              reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    LTEQ            reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    GT              reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    GTEQ            reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_IN          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_IS          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    RRB             reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    RCB             reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_OF          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    COMMA           reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_THEN        reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    SCOLON          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_BEGIN       reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    COLON           reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    RSB             reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
=======
    (59) designator2 -> designator2 LSB expList RSB .

    DOT             reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    LSB             reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    LRB             reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    MULTIPLY        reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    DIVIDE          reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    MODULUS         reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    AND             reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    PLUS            reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    MINUS           reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    OR              reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    EQUAL           reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    NEQUAL          reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    LT              reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    LTEQ            reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    GT              reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    GTEQ            reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    KEY_IN          reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    KEY_IS          reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    SCOLON          reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    KEY_THEN        reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    KEY_BEGIN       reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    RRB             reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    COMMA           reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    COLON           reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    RSB             reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    KEY_OF          reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    RCB             reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
    ASSIGN          reduce using rule 59 (designator2 -> designator2 LSB expList RSB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 312

<<<<<<< HEAD
    (26) termss -> termss mulOperator factor .

    MULTIPLY        reduce using rule 26 (termss -> termss mulOperator factor .)
    DIVIDE          reduce using rule 26 (termss -> termss mulOperator factor .)
    MODULUS         reduce using rule 26 (termss -> termss mulOperator factor .)
    AND             reduce using rule 26 (termss -> termss mulOperator factor .)
    PLUS            reduce using rule 26 (termss -> termss mulOperator factor .)
    MINUS           reduce using rule 26 (termss -> termss mulOperator factor .)
    OR              reduce using rule 26 (termss -> termss mulOperator factor .)
    EQUAL           reduce using rule 26 (termss -> termss mulOperator factor .)
    NEQUAL          reduce using rule 26 (termss -> termss mulOperator factor .)
    LT              reduce using rule 26 (termss -> termss mulOperator factor .)
    LTEQ            reduce using rule 26 (termss -> termss mulOperator factor .)
    GT              reduce using rule 26 (termss -> termss mulOperator factor .)
    GTEQ            reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_IN          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_IS          reduce using rule 26 (termss -> termss mulOperator factor .)
    SCOLON          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_BEGIN       reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_THEN        reduce using rule 26 (termss -> termss mulOperator factor .)
    RRB             reduce using rule 26 (termss -> termss mulOperator factor .)
    COMMA           reduce using rule 26 (termss -> termss mulOperator factor .)
    COLON           reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_OF          reduce using rule 26 (termss -> termss mulOperator factor .)
    RSB             reduce using rule 26 (termss -> termss mulOperator factor .)
    RCB             reduce using rule 26 (termss -> termss mulOperator factor .)
=======
    (141) setStatement -> qualident DOT KEY_ADD LRB expression . RRB

    RRB             shift and go to state 342
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 313

<<<<<<< HEAD
    (23) simpless -> simpless addOperator term .

    PLUS            reduce using rule 23 (simpless -> simpless addOperator term .)
    MINUS           reduce using rule 23 (simpless -> simpless addOperator term .)
    OR              reduce using rule 23 (simpless -> simpless addOperator term .)
    EQUAL           reduce using rule 23 (simpless -> simpless addOperator term .)
    NEQUAL          reduce using rule 23 (simpless -> simpless addOperator term .)
    LT              reduce using rule 23 (simpless -> simpless addOperator term .)
    LTEQ            reduce using rule 23 (simpless -> simpless addOperator term .)
    GT              reduce using rule 23 (simpless -> simpless addOperator term .)
    GTEQ            reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_IN          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_IS          reduce using rule 23 (simpless -> simpless addOperator term .)
    SCOLON          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_BEGIN       reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_THEN        reduce using rule 23 (simpless -> simpless addOperator term .)
    RRB             reduce using rule 23 (simpless -> simpless addOperator term .)
    COMMA           reduce using rule 23 (simpless -> simpless addOperator term .)
    COLON           reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_OF          reduce using rule 23 (simpless -> simpless addOperator term .)
    RSB             reduce using rule 23 (simpless -> simpless addOperator term .)
    RCB             reduce using rule 23 (simpless -> simpless addOperator term .)
=======
    (142) setStatement -> qualident DOT KEY_DEL LRB expression . RRB

    RRB             shift and go to state 343
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 314

<<<<<<< HEAD
    (31) factor -> KEY_NIL LRB designator RRB .

    MULTIPLY        reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    DIVIDE          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    MODULUS         reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    AND             reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    PLUS            reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    MINUS           reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    OR              reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    EQUAL           reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    NEQUAL          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    LT              reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    LTEQ            reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    GT              reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    GTEQ            reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_IN          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_IS          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    RRB             reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    RCB             reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_OF          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    COMMA           reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_THEN        reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    SCOLON          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_BEGIN       reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    COLON           reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    RSB             reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
=======
    (153) casess -> empty .

    KEY_ELSE        reduce using rule 153 (casess -> empty .)
    KEY_END         reduce using rule 153 (casess -> empty .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 315

<<<<<<< HEAD
    (170) fileStatement -> KEY_FPRINTF LRB identdef COMMA string . RRB

    RRB             shift and go to state 342
=======
    (152) casess -> case . casess
    (152) casess -> . case casess
    (153) casess -> . empty
    (154) case -> . KEY_CASE expression COLON statementSequence
    (174) empty -> .

    KEY_CASE        shift and go to state 276
    KEY_ELSE        reduce using rule 174 (empty -> .)
    KEY_END         reduce using rule 174 (empty -> .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    case                           shift and go to state 315
    empty                          shift and go to state 314
    casess                         shift and go to state 344

state 316

<<<<<<< HEAD
    (171) fileStatement -> KEY_FREAD LRB identdef COMMA identdef . COMMA VINTEGER RRB
=======
    (150) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess . KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess . KEY_END
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    COMMA           shift and go to state 343


state 317

    (154) case -> KEY_CASE expression . COLON statementSequence

<<<<<<< HEAD
    KEY_CASE        shift and go to state 276
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)

    case                           shift and go to state 317
    casess                         shift and go to state 344
    empty                          shift and go to state 319

state 318

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess . KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess . KEY_END

    KEY_ELSE        shift and go to state 345
    KEY_END         shift and go to state 346
=======
    COLON           shift and go to state 347


state 318

    (155) whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .

    SCOLON          reduce using rule 155 (whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 319

<<<<<<< HEAD
    (151) casess -> empty .

    KEY_ELSE        reduce using rule 151 (casess -> empty .)
    KEY_END         reduce using rule 151 (casess -> empty .)
=======
    (173) fileStatement -> KEY_FREAD LRB identdef COMMA identdef . COMMA VINTEGER RRB

    COMMA           shift and go to state 348
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 320

<<<<<<< HEAD
    (152) case -> KEY_CASE expression . COLON statementSequence

    COLON           shift and go to state 347
=======
    (99) comass -> empty .

    KEY_OF          reduce using rule 99 (comass -> empty .)
    COMMA           reduce using rule 99 (comass -> empty .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 321

<<<<<<< HEAD
    (153) whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .

    SCOLON          reduce using rule 153 (whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .)
=======
    (97) arrayType -> KEY_ARRAY length comass . KEY_OF type
    (98) comass -> comass . COMMA length

    KEY_OF          shift and go to state 349
    COMMA           shift and go to state 350
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 322

<<<<<<< HEAD
    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression . SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    SCOLON          shift and go to state 348
=======
    (110) pointerType -> KEY_POINTER KEY_TO type .

    SCOLON          reduce using rule 110 (pointerType -> KEY_POINTER KEY_TO type .)
    KEY_END         reduce using rule 110 (pointerType -> KEY_POINTER KEY_TO type .)
    RRB             reduce using rule 110 (pointerType -> KEY_POINTER KEY_TO type .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 323

<<<<<<< HEAD
    (155) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    string                         shift and go to state 103
    expression                     shift and go to state 349
    factor                         shift and go to state 112
    term                           shift and go to state 113
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 324

    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss . KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss . KEY_END
    (146) ifss -> ifss . KEY_ELSEIF expression KEY_THEN statementSequence

    KEY_ELSE        shift and go to state 351
    KEY_END         shift and go to state 352
    KEY_ELSEIF      shift and go to state 350

=======
    (104) fieldListSequence -> fieldListSequence SCOLON . fieldList
    (106) fieldList -> . identList COLON type
    (107) fieldList -> . empty
    (108) identList -> . identList COMMA IDENT
    (109) identList -> . IDENT
    (174) empty -> .

    IDENT           shift and go to state 72
    KEY_END         reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    empty                          shift and go to state 289
    identList                      shift and go to state 286
    fieldList                      shift and go to state 351

state 324

    (101) recordType -> KEY_RECORD fieldListSequence KEY_END .

    SCOLON          reduce using rule 101 (recordType -> KEY_RECORD fieldListSequence KEY_END .)
    RRB             reduce using rule 101 (recordType -> KEY_RECORD fieldListSequence KEY_END .)
    KEY_END         reduce using rule 101 (recordType -> KEY_RECORD fieldListSequence KEY_END .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


<<<<<<< HEAD
    (147) ifss -> empty .
    (135) statement -> empty .

    KEY_ELSE        reduce using rule 147 (ifss -> empty .)
    KEY_END         reduce using rule 147 (ifss -> empty .)
    KEY_ELSEIF      reduce using rule 147 (ifss -> empty .)
    SCOLON          reduce using rule 135 (statement -> empty .)
=======
state 325

    (106) fieldList -> identList COLON . type
    (86) type -> . IDENT
    (87) type -> . varType
    (88) type -> . arrayType
    (89) type -> . recordType
    (90) type -> . pointerType
    (91) varType -> . KEY_INTEGER
    (92) varType -> . KEY_BOOLEAN
    (93) varType -> . KEY_CHAR
    (94) varType -> . KEY_STRING
    (95) varType -> . KEY_REAL
    (96) varType -> . KEY_SET
    (97) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (101) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (102) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (110) pointerType -> . KEY_POINTER KEY_TO type
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 225
    KEY_BOOLEAN     shift and go to state 215
    KEY_CHAR        shift and go to state 220
    KEY_STRING      shift and go to state 214
    KEY_REAL        shift and go to state 212
    KEY_SET         shift and go to state 221
    KEY_ARRAY       shift and go to state 216
    KEY_RECORD      shift and go to state 226
    KEY_POINTER     shift and go to state 222

    type                           shift and go to state 352
    pointerType                    shift and go to state 219
    varType                        shift and go to state 224
    arrayType                      shift and go to state 213
    recordType                     shift and go to state 217

state 326

<<<<<<< HEAD
    (58) designator2 -> designator2 LRB qualident RRB .

    DOT             reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    LSB             reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    LRB             reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    MULTIPLY        reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    DIVIDE          reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    MODULUS         reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    AND             reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    PLUS            reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    MINUS           reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    OR              reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    EQUAL           reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    NEQUAL          reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    LT              reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    LTEQ            reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    GT              reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    GTEQ            reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    KEY_IN          reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    KEY_IS          reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    SCOLON          reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    KEY_BEGIN       reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    KEY_THEN        reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    RRB             reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    COMMA           reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    COLON           reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    KEY_OF          reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    RSB             reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    RCB             reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
    ASSIGN          reduce using rule 58 (designator2 -> designator2 LRB qualident RRB .)
=======
    (103) baseType -> qualident .

    RRB             reduce using rule 103 (baseType -> qualident .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 327

<<<<<<< HEAD
    (57) designator2 -> designator2 LSB expList RSB .

    DOT             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    LSB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    LRB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    MULTIPLY        reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    DIVIDE          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    MODULUS         reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    AND             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    PLUS            reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    MINUS           reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    OR              reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    EQUAL           reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    NEQUAL          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    LT              reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    LTEQ            reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    GT              reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    GTEQ            reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_IN          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_IS          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    SCOLON          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_BEGIN       reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_THEN        reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    RRB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    COMMA           reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    COLON           reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_OF          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    RSB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    RCB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    ASSIGN          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
=======
    (102) recordType -> KEY_RECORD LRB baseType . RRB fieldListSequence KEY_END

    RRB             shift and go to state 353
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 328

<<<<<<< HEAD
    (139) setStatement -> qualident DOT KEY_ADD LRB expression . RRB

    RRB             shift and go to state 353
=======
    (120) fps -> fps COMMA . IDENT

    IDENT           shift and go to state 354
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 329

<<<<<<< HEAD
    (140) setStatement -> qualident DOT KEY_DEL LRB expression . RRB

    RRB             shift and go to state 354


state 330

    (64) expList -> expList COMMA expression .

    RRB             reduce using rule 64 (expList -> expList COMMA expression .)
    COMMA           reduce using rule 64 (expList -> expList COMMA expression .)
    RSB             reduce using rule 64 (expList -> expList COMMA expression .)
=======
    (119) fpSection -> IDENT fps COLON . type
    (86) type -> . IDENT
    (87) type -> . varType
    (88) type -> . arrayType
    (89) type -> . recordType
    (90) type -> . pointerType
    (91) varType -> . KEY_INTEGER
    (92) varType -> . KEY_BOOLEAN
    (93) varType -> . KEY_CHAR
    (94) varType -> . KEY_STRING
    (95) varType -> . KEY_REAL
    (96) varType -> . KEY_SET
    (97) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (101) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (102) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (110) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 225
    KEY_BOOLEAN     shift and go to state 215
    KEY_CHAR        shift and go to state 220
    KEY_STRING      shift and go to state 214
    KEY_REAL        shift and go to state 212
    KEY_SET         shift and go to state 221
    KEY_ARRAY       shift and go to state 216
    KEY_RECORD      shift and go to state 226
    KEY_POINTER     shift and go to state 222

    pointerType                    shift and go to state 219
    varType                        shift and go to state 224
    arrayType                      shift and go to state 213
    recordType                     shift and go to state 217
    type                           shift and go to state 355

state 330

    (115) formalParameters -> LRB fpSection formalss RRB .

    COLON           reduce using rule 115 (formalParameters -> LRB fpSection formalss RRB .)
    SCOLON          reduce using rule 115 (formalParameters -> LRB fpSection formalss RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 331

<<<<<<< HEAD
    (17) constantDeclaration -> IDENT ASSIGN expression COLON type .

    SCOLON          reduce using rule 17 (constantDeclaration -> IDENT ASSIGN expression COLON type .)
=======
    (117) formalss -> formalss SCOLON . fpSection
    (119) fpSection -> . IDENT fps COLON type

    IDENT           shift and go to state 228
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    fpSection                      shift and go to state 356

state 332

<<<<<<< HEAD
    (115) formalss -> formalss SCOLON fpSection .

    RRB             reduce using rule 115 (formalss -> formalss SCOLON fpSection .)
    SCOLON          reduce using rule 115 (formalss -> formalss SCOLON fpSection .)
=======
    (122) procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END .

    IDENT           reduce using rule 122 (procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 333

<<<<<<< HEAD
    (118) fps -> fps COMMA IDENT .

    COLON           reduce using rule 118 (fps -> fps COMMA IDENT .)
    COMMA           reduce using rule 118 (fps -> fps COMMA IDENT .)
=======
    (17) constantDeclaration -> IDENT ASSIGN expression COLON type .

    SCOLON          reduce using rule 17 (constantDeclaration -> IDENT ASSIGN expression COLON type .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 334

<<<<<<< HEAD
    (117) fpSection -> IDENT fps COLON type .

    RRB             reduce using rule 117 (fpSection -> IDENT fps COLON type .)
    SCOLON          reduce using rule 117 (fpSection -> IDENT fps COLON type .)
=======
    (157) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression .

    SCOLON          reduce using rule 157 (doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 335

<<<<<<< HEAD
    (95) arrayType -> KEY_ARRAY length comass KEY_OF . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 168
    KEY_INTEGER     shift and go to state 157
    KEY_BOOLEAN     shift and go to state 163
    KEY_CHAR        shift and go to state 160
    KEY_STRING      shift and go to state 164
    KEY_REAL        shift and go to state 158
    KEY_SET         shift and go to state 161
    KEY_ARRAY       shift and go to state 155
    KEY_RECORD      shift and go to state 169
    KEY_POINTER     shift and go to state 165

    recordType                     shift and go to state 162
    varType                        shift and go to state 156
    arrayType                      shift and go to state 159
    type                           shift and go to state 355
    pointerType                    shift and go to state 167

state 336

    (96) comass -> comass COMMA . length
    (98) length -> . expression
=======
    (170) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA . char RRB
    (52) char -> . VCHAR

    VCHAR           shift and go to state 117

    char                           shift and go to state 357

state 336

    (54) set -> LCB element COMMA element RCB .

    MULTIPLY        reduce using rule 54 (set -> LCB element COMMA element RCB .)
    DIVIDE          reduce using rule 54 (set -> LCB element COMMA element RCB .)
    MODULUS         reduce using rule 54 (set -> LCB element COMMA element RCB .)
    AND             reduce using rule 54 (set -> LCB element COMMA element RCB .)
    PLUS            reduce using rule 54 (set -> LCB element COMMA element RCB .)
    MINUS           reduce using rule 54 (set -> LCB element COMMA element RCB .)
    OR              reduce using rule 54 (set -> LCB element COMMA element RCB .)
    EQUAL           reduce using rule 54 (set -> LCB element COMMA element RCB .)
    NEQUAL          reduce using rule 54 (set -> LCB element COMMA element RCB .)
    LT              reduce using rule 54 (set -> LCB element COMMA element RCB .)
    LTEQ            reduce using rule 54 (set -> LCB element COMMA element RCB .)
    GT              reduce using rule 54 (set -> LCB element COMMA element RCB .)
    GTEQ            reduce using rule 54 (set -> LCB element COMMA element RCB .)
    KEY_IN          reduce using rule 54 (set -> LCB element COMMA element RCB .)
    KEY_IS          reduce using rule 54 (set -> LCB element COMMA element RCB .)
    RRB             reduce using rule 54 (set -> LCB element COMMA element RCB .)
    SCOLON          reduce using rule 54 (set -> LCB element COMMA element RCB .)
    KEY_THEN        reduce using rule 54 (set -> LCB element COMMA element RCB .)
    KEY_BEGIN       reduce using rule 54 (set -> LCB element COMMA element RCB .)
    COMMA           reduce using rule 54 (set -> LCB element COMMA element RCB .)
    COLON           reduce using rule 54 (set -> LCB element COMMA element RCB .)
    RSB             reduce using rule 54 (set -> LCB element COMMA element RCB .)
    KEY_OF          reduce using rule 54 (set -> LCB element COMMA element RCB .)
    RCB             reduce using rule 54 (set -> LCB element COMMA element RCB .)


state 337

    (148) ifss -> ifss KEY_ELSEIF . expression KEY_THEN statementSequence
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    length                         shift and go to state 356
    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    expression                     shift and go to state 240
    term                           shift and go to state 113
    string                         shift and go to state 103
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 337

    (104) fieldList -> identList COLON type .

    KEY_END         reduce using rule 104 (fieldList -> identList COLON type .)
    SCOLON          reduce using rule 104 (fieldList -> identList COLON type .)


state 338

    (102) fieldListSequence -> fieldListSequence SCOLON fieldList .

    KEY_END         reduce using rule 102 (fieldListSequence -> fieldListSequence SCOLON fieldList .)
    SCOLON          reduce using rule 102 (fieldListSequence -> fieldListSequence SCOLON fieldList .)


state 339

    (100) recordType -> KEY_RECORD LRB baseType RRB . fieldListSequence KEY_END
    (102) fieldListSequence -> . fieldListSequence SCOLON fieldList
    (103) fieldListSequence -> . fieldList
    (104) fieldList -> . identList COLON type
    (105) fieldList -> . empty
    (106) identList -> . identList COMMA IDENT
    (107) identList -> . IDENT
    (172) empty -> .

    IDENT           shift and go to state 72
    KEY_END         reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    fieldListSequence              shift and go to state 357
    fieldList                      shift and go to state 247
    identList                      shift and go to state 243
    empty                          shift and go to state 244

state 340

    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA . char RRB
    (50) char -> . VCHAR

    VCHAR           shift and go to state 96

    char                           shift and go to state 358

state 341

    (52) set -> LCB element COMMA element RCB .

    RRB             reduce using rule 52 (set -> LCB element COMMA element RCB .)
    MULTIPLY        reduce using rule 52 (set -> LCB element COMMA element RCB .)
    DIVIDE          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    MODULUS         reduce using rule 52 (set -> LCB element COMMA element RCB .)
    AND             reduce using rule 52 (set -> LCB element COMMA element RCB .)
    PLUS            reduce using rule 52 (set -> LCB element COMMA element RCB .)
    MINUS           reduce using rule 52 (set -> LCB element COMMA element RCB .)
    OR              reduce using rule 52 (set -> LCB element COMMA element RCB .)
    EQUAL           reduce using rule 52 (set -> LCB element COMMA element RCB .)
    NEQUAL          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    LT              reduce using rule 52 (set -> LCB element COMMA element RCB .)
    LTEQ            reduce using rule 52 (set -> LCB element COMMA element RCB .)
    GT              reduce using rule 52 (set -> LCB element COMMA element RCB .)
    GTEQ            reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_IN          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_IS          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    SCOLON          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    RSB             reduce using rule 52 (set -> LCB element COMMA element RCB .)
    COMMA           reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_BEGIN       reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_THEN        reduce using rule 52 (set -> LCB element COMMA element RCB .)
    COLON           reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_OF          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    RCB             reduce using rule 52 (set -> LCB element COMMA element RCB .)
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 358
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    simpleExpression               shift and go to state 96
    char                           shift and go to state 105
    string                         shift and go to state 87
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    set                            shift and go to state 99
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 338

    (146) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (174) empty -> .

    KEY_END         reduce using rule 174 (empty -> .)
    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 359
    empty                          shift and go to state 14

state 339

    (147) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .

    SCOLON          reduce using rule 147 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .)


state 340

    (156) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON . assignment RRB KEY_BEGIN statementSequence KEY_END
    (140) assignment -> . designator ASSIGN expression
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    IDENT           shift and go to state 51
    AT              shift and go to state 34

    assignment                     shift and go to state 360
    qualident                      shift and go to state 112
    designator                     shift and go to state 191
    identdef                       shift and go to state 93

state 342

    (170) fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .

    SCOLON          reduce using rule 170 (fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .)


state 343

    (172) fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .

    SCOLON          reduce using rule 172 (fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .)


state 344

<<<<<<< HEAD
    (150) casess -> case casess .

    KEY_ELSE        reduce using rule 150 (casess -> case casess .)
    KEY_END         reduce using rule 150 (casess -> case casess .)
=======
    (141) setStatement -> qualident DOT KEY_ADD LRB expression RRB .

    SCOLON          reduce using rule 141 (setStatement -> qualident DOT KEY_ADD LRB expression RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 345

<<<<<<< HEAD
    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE . COLON statementSequence KEY_END

    COLON           shift and go to state 360
=======
    (142) setStatement -> qualident DOT KEY_DEL LRB expression RRB .

    SCOLON          reduce using rule 142 (setStatement -> qualident DOT KEY_DEL LRB expression RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 346

    (149) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .

    SCOLON          reduce using rule 149 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .)


state 347

<<<<<<< HEAD
    (152) case -> KEY_CASE expression COLON . statementSequence
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_CASE        reduce using rule 172 (empty -> .)
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)

    empty                          shift and go to state 19
    statementSequence              shift and go to state 361

state 348

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON . assignment RRB KEY_BEGIN statementSequence KEY_END
    (138) assignment -> . designator ASSIGN expression
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 48

    identdef                       shift and go to state 108
    qualident                      shift and go to state 106
    assignment                     shift and go to state 362
    designator                     shift and go to state 212

state 349

    (155) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression .

    SCOLON          reduce using rule 155 (doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression .)


state 350

    (146) ifss -> ifss KEY_ELSEIF . expression KEY_THEN statementSequence
=======
    (152) casess -> case casess .

    KEY_ELSE        reduce using rule 152 (casess -> case casess .)
    KEY_END         reduce using rule 152 (casess -> case casess .)


state 345

    (150) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE . COLON statementSequence KEY_END

    COLON           shift and go to state 361


state 346

    (151) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .

    SCOLON          reduce using rule 151 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .)


state 347

    (154) case -> KEY_CASE expression COLON . statementSequence
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (174) empty -> .

    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_CASE        reduce using rule 174 (empty -> .)
    KEY_ELSE        reduce using rule 174 (empty -> .)
    KEY_END         reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 362
    empty                          shift and go to state 14

state 348

    (173) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA . VINTEGER RRB

    VINTEGER        shift and go to state 363


state 349

    (97) arrayType -> KEY_ARRAY length comass KEY_OF . type
    (86) type -> . IDENT
    (87) type -> . varType
    (88) type -> . arrayType
    (89) type -> . recordType
    (90) type -> . pointerType
    (91) varType -> . KEY_INTEGER
    (92) varType -> . KEY_BOOLEAN
    (93) varType -> . KEY_CHAR
    (94) varType -> . KEY_STRING
    (95) varType -> . KEY_REAL
    (96) varType -> . KEY_SET
    (97) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (101) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (102) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (110) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 225
    KEY_BOOLEAN     shift and go to state 215
    KEY_CHAR        shift and go to state 220
    KEY_STRING      shift and go to state 214
    KEY_REAL        shift and go to state 212
    KEY_SET         shift and go to state 221
    KEY_ARRAY       shift and go to state 216
    KEY_RECORD      shift and go to state 226
    KEY_POINTER     shift and go to state 222

    pointerType                    shift and go to state 219
    varType                        shift and go to state 224
    arrayType                      shift and go to state 213
    type                           shift and go to state 364
    recordType                     shift and go to state 217

state 350

    (98) comass -> comass COMMA . length
    (100) length -> . expression
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
<<<<<<< HEAD
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 118
    MINUS           shift and go to state 110
    KEY_NIL         shift and go to state 117
    LRB             shift and go to state 101
    NOT             shift and go to state 119
    KEY_ABS         shift and go to state 116
    KEY_CHR         shift and go to state 107
    KEY_ORD         shift and go to state 111
    KEY_INTEGER     shift and go to state 92
    KEY_BOOLEAN     shift and go to state 102
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 93
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 104
    VREAL           shift and go to state 94
    VCHAR           shift and go to state 96
    VSTRING         shift and go to state 99
    LCB             shift and go to state 91
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    set                            shift and go to state 90
    simpleExpression               shift and go to state 95
    identdef                       shift and go to state 108
    factor                         shift and go to state 112
    expression                     shift and go to state 363
    term                           shift and go to state 113
    string                         shift and go to state 103
    number                         shift and go to state 115
    char                           shift and go to state 105
    qualident                      shift and go to state 106
    designator                     shift and go to state 114

state 351

    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 19
    statementSequence              shift and go to state 364

state 352

    (145) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .

    SCOLON          reduce using rule 145 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .)
=======
    (29) factor -> . boolean
    (30) factor -> . char
    (31) factor -> . string
    (32) factor -> . KEY_NIL LRB designator RRB
    (33) factor -> . set
    (34) factor -> . designator
    (35) factor -> . designator actualParameters
    (36) factor -> . LRB expression RRB
    (37) factor -> . NOT factor
    (38) factor -> . KEY_ABS factor
    (39) factor -> . KEY_CHR factor
    (40) factor -> . KEY_ORD factor
    (41) factor -> . KEY_INTEGER
    (42) factor -> . KEY_BOOLEAN
    (43) factor -> . KEY_CHAR
    (44) factor -> . KEY_STRING
    (45) factor -> . KEY_REAL
    (46) factor -> . KEY_SET
    (47) factor -> . KEY_CHR LRB factor RRB
    (48) factor -> . KEY_ORD LRB factor RRB
    (49) number -> . VINTEGER
    (50) number -> . VREAL
    (51) boolean -> . VBOOLEAN
    (52) char -> . VCHAR
    (53) string -> . VSTRING
    (54) set -> . LCB element COMMA element RCB
    (55) set -> . LCB RCB
    (57) designator -> . qualident designator2
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT

    PLUS            shift and go to state 107
    MINUS           shift and go to state 89
    KEY_NIL         shift and go to state 88
    LRB             shift and go to state 98
    NOT             shift and go to state 116
    KEY_ABS         shift and go to state 106
    KEY_CHR         shift and go to state 115
    KEY_ORD         shift and go to state 102
    KEY_INTEGER     shift and go to state 101
    KEY_BOOLEAN     shift and go to state 110
    KEY_CHAR        shift and go to state 97
    KEY_STRING      shift and go to state 109
    KEY_REAL        shift and go to state 86
    KEY_SET         shift and go to state 113
    VINTEGER        shift and go to state 100
    VREAL           shift and go to state 108
    VBOOLEAN        shift and go to state 94
    VCHAR           shift and go to state 117
    VSTRING         shift and go to state 91
    LCB             shift and go to state 90
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    expression                     shift and go to state 283
    term                           shift and go to state 95
    qualident                      shift and go to state 112
    set                            shift and go to state 99
    simpleExpression               shift and go to state 96
    string                         shift and go to state 87
    char                           shift and go to state 105
    factor                         shift and go to state 114
    designator                     shift and go to state 111
    boolean                        shift and go to state 103
    length                         shift and go to state 365
    number                         shift and go to state 92
    identdef                       shift and go to state 93

state 351

    (104) fieldListSequence -> fieldListSequence SCOLON fieldList .

    KEY_END         reduce using rule 104 (fieldListSequence -> fieldListSequence SCOLON fieldList .)
    SCOLON          reduce using rule 104 (fieldListSequence -> fieldListSequence SCOLON fieldList .)


state 352

    (106) fieldList -> identList COLON type .

    KEY_END         reduce using rule 106 (fieldList -> identList COLON type .)
    SCOLON          reduce using rule 106 (fieldList -> identList COLON type .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 353

<<<<<<< HEAD
    (139) setStatement -> qualident DOT KEY_ADD LRB expression RRB .

    SCOLON          reduce using rule 139 (setStatement -> qualident DOT KEY_ADD LRB expression RRB .)
=======
    (102) recordType -> KEY_RECORD LRB baseType RRB . fieldListSequence KEY_END
    (104) fieldListSequence -> . fieldListSequence SCOLON fieldList
    (105) fieldListSequence -> . fieldList
    (106) fieldList -> . identList COLON type
    (107) fieldList -> . empty
    (108) identList -> . identList COMMA IDENT
    (109) identList -> . IDENT
    (174) empty -> .

    IDENT           shift and go to state 72
    KEY_END         reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    empty                          shift and go to state 289
    fieldListSequence              shift and go to state 366
    identList                      shift and go to state 286
    fieldList                      shift and go to state 288

state 354

<<<<<<< HEAD
    (140) setStatement -> qualident DOT KEY_DEL LRB expression RRB .

    SCOLON          reduce using rule 140 (setStatement -> qualident DOT KEY_DEL LRB expression RRB .)
=======
    (120) fps -> fps COMMA IDENT .

    COLON           reduce using rule 120 (fps -> fps COMMA IDENT .)
    COMMA           reduce using rule 120 (fps -> fps COMMA IDENT .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 355

<<<<<<< HEAD
    (95) arrayType -> KEY_ARRAY length comass KEY_OF type .

    SCOLON          reduce using rule 95 (arrayType -> KEY_ARRAY length comass KEY_OF type .)
    RRB             reduce using rule 95 (arrayType -> KEY_ARRAY length comass KEY_OF type .)
    KEY_END         reduce using rule 95 (arrayType -> KEY_ARRAY length comass KEY_OF type .)
=======
    (119) fpSection -> IDENT fps COLON type .

    RRB             reduce using rule 119 (fpSection -> IDENT fps COLON type .)
    SCOLON          reduce using rule 119 (fpSection -> IDENT fps COLON type .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 356

<<<<<<< HEAD
    (96) comass -> comass COMMA length .

    KEY_OF          reduce using rule 96 (comass -> comass COMMA length .)
    COMMA           reduce using rule 96 (comass -> comass COMMA length .)


state 357

    (100) recordType -> KEY_RECORD LRB baseType RRB fieldListSequence . KEY_END
    (102) fieldListSequence -> fieldListSequence . SCOLON fieldList

    KEY_END         shift and go to state 365
    SCOLON          shift and go to state 304


state 358

    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char . RRB

    RRB             shift and go to state 366


state 359

    (171) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER . RRB

    RRB             shift and go to state 367


state 360

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
=======
    (117) formalss -> formalss SCOLON fpSection .

    RRB             reduce using rule 117 (formalss -> formalss SCOLON fpSection .)
    SCOLON          reduce using rule 117 (formalss -> formalss SCOLON fpSection .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    statementSequence              shift and go to state 368
    empty                          shift and go to state 19

state 361

<<<<<<< HEAD
    (152) case -> KEY_CASE expression COLON statementSequence .
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_CASE        reduce using rule 152 (case -> KEY_CASE expression COLON statementSequence .)
    KEY_ELSE        reduce using rule 152 (case -> KEY_CASE expression COLON statementSequence .)
    KEY_END         reduce using rule 152 (case -> KEY_CASE expression COLON statementSequence .)
    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    identdef                       shift and go to state 32
    switchStatement                shift and go to state 55
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    statement                      shift and go to state 66
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    assignment                     shift and go to state 63
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 70
    designator                     shift and go to state 65
=======
    (170) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char . RRB

    RRB             shift and go to state 367


state 358

    (148) ifss -> ifss KEY_ELSEIF expression . KEY_THEN statementSequence

    KEY_THEN        shift and go to state 368
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 362

<<<<<<< HEAD
    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment . RRB KEY_BEGIN statementSequence KEY_END

    RRB             shift and go to state 369

=======
state 359

    (146) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (174) empty -> .
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 369
    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ioStatement                    shift and go to state 24
    ifStatement                    shift and go to state 47
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    forStatement                   shift and go to state 33
    fileStatement                  shift and go to state 32
    designator                     shift and go to state 54
    identdef                       shift and go to state 36
    qualident                      shift and go to state 56
    doWhileStatement               shift and go to state 59
    switchStatement                shift and go to state 46
    assignment                     shift and go to state 25
    empty                          shift and go to state 63
    memoryalloc                    shift and go to state 55
    procedureCall                  shift and go to state 53
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 363

<<<<<<< HEAD
    (146) ifss -> ifss KEY_ELSEIF expression . KEY_THEN statementSequence
=======
    (156) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment . RRB KEY_BEGIN statementSequence KEY_END
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    KEY_THEN        shift and go to state 370


state 364

<<<<<<< HEAD
    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 371
    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    statement                      shift and go to state 66
    identdef                       shift and go to state 32
    switchStatement                shift and go to state 55
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    assignment                     shift and go to state 63
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 70
    designator                     shift and go to state 65

state 365

    (100) recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .

    SCOLON          reduce using rule 100 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)
    RRB             reduce using rule 100 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)
    KEY_END         reduce using rule 100 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)
=======
    (150) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (174) empty -> .

    KEY_END         reduce using rule 174 (empty -> .)
    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 371
    empty                          shift and go to state 14

state 362

    (154) case -> KEY_CASE expression COLON statementSequence .
    (15) statementSequence -> statementSequence . statement SCOLON
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (174) empty -> .
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_CASE        reduce using rule 154 (case -> KEY_CASE expression COLON statementSequence .)
    KEY_ELSE        reduce using rule 154 (case -> KEY_CASE expression COLON statementSequence .)
    KEY_END         reduce using rule 154 (case -> KEY_CASE expression COLON statementSequence .)
    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ioStatement                    shift and go to state 24
    ifStatement                    shift and go to state 47
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    forStatement                   shift and go to state 33
    fileStatement                  shift and go to state 32
    designator                     shift and go to state 54
    identdef                       shift and go to state 36
    qualident                      shift and go to state 56
    doWhileStatement               shift and go to state 59
    switchStatement                shift and go to state 46
    assignment                     shift and go to state 25
    empty                          shift and go to state 63
    memoryalloc                    shift and go to state 55
    procedureCall                  shift and go to state 53

state 363

    (173) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER . RRB

    RRB             shift and go to state 372


state 364

    (97) arrayType -> KEY_ARRAY length comass KEY_OF type .

    SCOLON          reduce using rule 97 (arrayType -> KEY_ARRAY length comass KEY_OF type .)
    KEY_END         reduce using rule 97 (arrayType -> KEY_ARRAY length comass KEY_OF type .)
    RRB             reduce using rule 97 (arrayType -> KEY_ARRAY length comass KEY_OF type .)


state 365

    (98) comass -> comass COMMA length .

    KEY_OF          reduce using rule 98 (comass -> comass COMMA length .)
    COMMA           reduce using rule 98 (comass -> comass COMMA length .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 366

<<<<<<< HEAD
    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .

    SCOLON          reduce using rule 168 (fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .)
=======
    (102) recordType -> KEY_RECORD LRB baseType RRB fieldListSequence . KEY_END
    (104) fieldListSequence -> fieldListSequence . SCOLON fieldList

    KEY_END         shift and go to state 373
    SCOLON          shift and go to state 323
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 367

<<<<<<< HEAD
    (171) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .
=======
    (170) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .

    SCOLON          reduce using rule 170 (fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .)


state 368

    (148) ifss -> ifss KEY_ELSEIF expression KEY_THEN . statementSequence
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (174) empty -> .

    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_ELSE        reduce using rule 174 (empty -> .)
    KEY_END         reduce using rule 174 (empty -> .)
    KEY_ELSEIF      reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 374
    empty                          shift and go to state 14

state 369

    (146) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    SCOLON          reduce using rule 146 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .)


<<<<<<< HEAD
state 368
=======
state 370

    (156) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB . KEY_BEGIN statementSequence KEY_END

    KEY_BEGIN       shift and go to state 375


state 371
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

    (150) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
<<<<<<< HEAD
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 372
    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    identdef                       shift and go to state 32
    assignment                     shift and go to state 63
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    statement                      shift and go to state 66
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    switchStatement                shift and go to state 55
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 70
    designator                     shift and go to state 65

state 369

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB . KEY_BEGIN statementSequence KEY_END

    KEY_BEGIN       shift and go to state 373


state 370

    (146) ifss -> ifss KEY_ELSEIF expression KEY_THEN . statementSequence
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)
    KEY_ELSEIF      reduce using rule 172 (empty -> .)

    empty                          shift and go to state 19
    statementSequence              shift and go to state 374

state 371

    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .

    SCOLON          reduce using rule 144 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .)


state 372

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .

    SCOLON          reduce using rule 148 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .)
=======
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (174) empty -> .
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 376
    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ioStatement                    shift and go to state 24
    ifStatement                    shift and go to state 47
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    procedureCall                  shift and go to state 53
    forStatement                   shift and go to state 33
    designator                     shift and go to state 54
    identdef                       shift and go to state 36
    qualident                      shift and go to state 56
    doWhileStatement               shift and go to state 59
    fileStatement                  shift and go to state 32
    assignment                     shift and go to state 25
    empty                          shift and go to state 63
    memoryalloc                    shift and go to state 55
    switchStatement                shift and go to state 46

state 372

    (173) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .

    SCOLON          reduce using rule 173 (fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b


state 373

<<<<<<< HEAD
    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 375
    empty                          shift and go to state 19
=======
    (102) recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .

    SCOLON          reduce using rule 102 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)
    RRB             reduce using rule 102 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)
    KEY_END         reduce using rule 102 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)

>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

state 374

    (148) ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .
    (15) statementSequence -> statementSequence . statement SCOLON
<<<<<<< HEAD
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_ELSE        reduce using rule 146 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_END         reduce using rule 146 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_ELSEIF      reduce using rule 146 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    statement                      shift and go to state 66
    identdef                       shift and go to state 32
    switchStatement                shift and go to state 55
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    assignment                     shift and go to state 63
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 70
    designator                     shift and go to state 65

state 375

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 376
    KEY_EXIT        shift and go to state 68
    KEY_RETURN      shift and go to state 39
    KEY_BREAK       shift and go to state 44
    KEY_CONTINUE    shift and go to state 38
    KEY_IF          shift and go to state 59
    KEY_SWITCH      shift and go to state 51
    KEY_WHILE       shift and go to state 52
    KEY_FOR         shift and go to state 53
    KEY_DO          shift and go to state 54
    KEY_WRITE       shift and go to state 34
    KEY_WRITEINT    shift and go to state 35
    KEY_WRITEREAL   shift and go to state 64
    KEY_WRITECHAR   shift and go to state 45
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 71
    KEY_READ        shift and go to state 69
    KEY_READINT     shift and go to state 50
    KEY_READREAL    shift and go to state 49
    KEY_READCHAR    shift and go to state 58
    KEY_READBOOL    shift and go to state 36
    KEY_FCLOSE      shift and go to state 31
    KEY_FPRINTF     shift and go to state 43
    KEY_FREAD       shift and go to state 47
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 57
    IDENT           shift and go to state 46
    AT              shift and go to state 48

    ioStatement                    shift and go to state 29
    identdef                       shift and go to state 32
    switchStatement                shift and go to state 55
    procedureCall                  shift and go to state 33
    qualident                      shift and go to state 60
    statement                      shift and go to state 66
    whileStatement                 shift and go to state 40
    setStatement                   shift and go to state 41
    doWhileStatement               shift and go to state 62
    forStatement                   shift and go to state 42
    assignment                     shift and go to state 63
    ifStatement                    shift and go to state 37
    fileStatement                  shift and go to state 56
    memoryalloc                    shift and go to state 67
    empty                          shift and go to state 70
    designator                     shift and go to state 65

state 376

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .

    SCOLON          reduce using rule 154 (forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .)
=======
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (174) empty -> .
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_ELSE        reduce using rule 148 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_END         reduce using rule 148 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_ELSEIF      reduce using rule 148 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ioStatement                    shift and go to state 24
    ifStatement                    shift and go to state 47
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    forStatement                   shift and go to state 33
    fileStatement                  shift and go to state 32
    designator                     shift and go to state 54
    identdef                       shift and go to state 36
    qualident                      shift and go to state 56
    doWhileStatement               shift and go to state 59
    switchStatement                shift and go to state 46
    assignment                     shift and go to state 25
    empty                          shift and go to state 63
    memoryalloc                    shift and go to state 55
    procedureCall                  shift and go to state 53

state 375

    (156) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (174) empty -> .

    KEY_END         reduce using rule 174 (empty -> .)
    KEY_EXIT        reduce using rule 174 (empty -> .)
    KEY_RETURN      reduce using rule 174 (empty -> .)
    KEY_BREAK       reduce using rule 174 (empty -> .)
    KEY_CONTINUE    reduce using rule 174 (empty -> .)
    KEY_IF          reduce using rule 174 (empty -> .)
    KEY_SWITCH      reduce using rule 174 (empty -> .)
    KEY_WHILE       reduce using rule 174 (empty -> .)
    KEY_FOR         reduce using rule 174 (empty -> .)
    KEY_DO          reduce using rule 174 (empty -> .)
    KEY_WRITE       reduce using rule 174 (empty -> .)
    KEY_WRITEINT    reduce using rule 174 (empty -> .)
    KEY_WRITEREAL   reduce using rule 174 (empty -> .)
    KEY_WRITECHAR   reduce using rule 174 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 174 (empty -> .)
    KEY_WRITELN     reduce using rule 174 (empty -> .)
    KEY_READ        reduce using rule 174 (empty -> .)
    KEY_READINT     reduce using rule 174 (empty -> .)
    KEY_READREAL    reduce using rule 174 (empty -> .)
    KEY_READCHAR    reduce using rule 174 (empty -> .)
    KEY_READBOOL    reduce using rule 174 (empty -> .)
    KEY_FCLOSE      reduce using rule 174 (empty -> .)
    KEY_FPRINTF     reduce using rule 174 (empty -> .)
    KEY_FREAD       reduce using rule 174 (empty -> .)
    KEY_NEW         reduce using rule 174 (empty -> .)
    IDENT           reduce using rule 174 (empty -> .)
    AT              reduce using rule 174 (empty -> .)
    SCOLON          reduce using rule 174 (empty -> .)

    statementSequence              shift and go to state 377
    empty                          shift and go to state 14

state 376

    (150) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .

    SCOLON          reduce using rule 150 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .)


state 377

    (156) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (123) statement -> . assignment
    (124) statement -> . procedureCall
    (125) statement -> . ifStatement
    (126) statement -> . switchStatement
    (127) statement -> . whileStatement
    (128) statement -> . forStatement
    (129) statement -> . doWhileStatement
    (130) statement -> . KEY_EXIT
    (131) statement -> . KEY_RETURN expression
    (132) statement -> . KEY_RETURN
    (133) statement -> . ioStatement
    (134) statement -> . fileStatement
    (135) statement -> . KEY_BREAK
    (136) statement -> . KEY_CONTINUE
    (137) statement -> . empty
    (138) statement -> . memoryalloc
    (139) statement -> . setStatement
    (140) assignment -> . designator ASSIGN expression
    (144) procedureCall -> . designator actualParameters
    (145) procedureCall -> . designator
    (146) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (147) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (150) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (151) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (155) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (156) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (157) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (158) ioStatement -> . KEY_WRITE LRB expression RRB
    (159) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (160) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (161) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (162) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (163) ioStatement -> . KEY_WRITELN LRB expression RRB
    (164) ioStatement -> . KEY_WRITELN LRB RRB
    (165) ioStatement -> . KEY_READ LRB expression RRB
    (166) ioStatement -> . KEY_READINT LRB expression RRB
    (167) ioStatement -> . KEY_READREAL LRB expression RRB
    (168) ioStatement -> . KEY_READCHAR LRB expression RRB
    (169) ioStatement -> . KEY_READBOOL LRB expression RRB
    (170) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (171) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (172) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (173) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (174) empty -> .
    (143) memoryalloc -> . KEY_NEW LRB designator RRB
    (141) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (142) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (57) designator -> . qualident designator2
    (64) identdef -> . IDENT
    (65) identdef -> . AT IDENT
    (62) qualident -> . identdef
    (63) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 378
    KEY_EXIT        shift and go to state 37
    KEY_RETURN      shift and go to state 40
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 35
    KEY_IF          shift and go to state 41
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 60
    KEY_FOR         shift and go to state 45
    KEY_DO          shift and go to state 26
    KEY_WRITE       shift and go to state 44
    KEY_WRITEINT    shift and go to state 29
    KEY_WRITEREAL   shift and go to state 62
    KEY_WRITECHAR   shift and go to state 28
    KEY_WRITEBOOL   shift and go to state 61
    KEY_WRITELN     shift and go to state 30
    KEY_READ        shift and go to state 57
    KEY_READINT     shift and go to state 39
    KEY_READREAL    shift and go to state 65
    KEY_READCHAR    shift and go to state 43
    KEY_READBOOL    shift and go to state 48
    KEY_FCLOSE      shift and go to state 50
    KEY_FPRINTF     shift and go to state 52
    KEY_FREAD       shift and go to state 64
    SCOLON          reduce using rule 174 (empty -> .)
    KEY_NEW         shift and go to state 42
    IDENT           shift and go to state 51
    AT              shift and go to state 34

    ioStatement                    shift and go to state 24
    ifStatement                    shift and go to state 47
    setStatement                   shift and go to state 49
    whileStatement                 shift and go to state 27
    statement                      shift and go to state 31
    forStatement                   shift and go to state 33
    fileStatement                  shift and go to state 32
    designator                     shift and go to state 54
    identdef                       shift and go to state 36
    qualident                      shift and go to state 56
    doWhileStatement               shift and go to state 59
    switchStatement                shift and go to state 46
    assignment                     shift and go to state 25
    empty                          shift and go to state 63
    memoryalloc                    shift and go to state 55
    procedureCall                  shift and go to state 53

state 378

    (156) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .

    SCOLON          reduce using rule 156 (forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .)
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KEY_BEGIN in state 5 resolved as shift
WARNING: shift/reduce conflict for KEY_CONST in state 5 resolved as shift
WARNING: shift/reduce conflict for KEY_TYPE in state 5 resolved as shift
WARNING: shift/reduce conflict for KEY_VAR in state 5 resolved as shift
<<<<<<< HEAD
WARNING: shift/reduce conflict for KEY_PROCEDURE in state 7 resolved as shift
WARNING: shift/reduce conflict for DOT in state 32 resolved as shift
WARNING: shift/reduce conflict for DOT in state 60 resolved as shift
WARNING: shift/reduce conflict for KEY_BEGIN in state 80 resolved as shift
WARNING: shift/reduce conflict for KEY_CONST in state 80 resolved as shift
WARNING: shift/reduce conflict for KEY_TYPE in state 80 resolved as shift
WARNING: shift/reduce conflict for KEY_VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for DOT in state 108 resolved as shift
WARNING: shift/reduce conflict for LRB in state 133 resolved as shift
WARNING: shift/reduce conflict for RRB in state 256 resolved as shift
=======
WARNING: shift/reduce conflict for KEY_PROCEDURE in state 9 resolved as shift
WARNING: shift/reduce conflict for DOT in state 36 resolved as shift
WARNING: shift/reduce conflict for DOT in state 56 resolved as shift
WARNING: shift/reduce conflict for DOT in state 93 resolved as shift
WARNING: shift/reduce conflict for LRB in state 129 resolved as shift
WARNING: shift/reduce conflict for KEY_BEGIN in state 144 resolved as shift
WARNING: shift/reduce conflict for KEY_CONST in state 144 resolved as shift
WARNING: shift/reduce conflict for KEY_TYPE in state 144 resolved as shift
WARNING: shift/reduce conflict for KEY_VAR in state 144 resolved as shift
WARNING: shift/reduce conflict for RRB in state 251 resolved as shift
>>>>>>> 228e081c81b80e94c020d002d85508d74d5ca64b
WARNING: shift/reduce conflict for RRB in state 258 resolved as shift
