Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    VBOOLEAN

Grammar

Rule 0     S' -> module
Rule 1     module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT
Rule 2     declarationSequence -> declarationSequence KEY_CONST conss
Rule 3     declarationSequence -> declarationSequence KEY_TYPE typess
Rule 4     declarationSequence -> declarationSequence KEY_VAR varss
Rule 5     declarationSequence -> declarationSequence procss
Rule 6     declarationSequence -> empty
Rule 7     conss -> conss constantDeclaration SCOLON
Rule 8     conss -> empty
Rule 9     typess -> typess typeDeclaration SCOLON
Rule 10    typess -> empty
Rule 11    varss -> varss variableDeclaration SCOLON
Rule 12    varss -> empty
Rule 13    procss -> procss procedureDeclaration SCOLON
Rule 14    procss -> empty
Rule 15    statementSequence -> statementSequence statement SCOLON
Rule 16    statementSequence -> empty
Rule 17    constantDeclaration -> IDENT ASSIGN expression COLON type
Rule 18    expression -> simpleExpression
Rule 19    expression -> simpleExpression relation simpleExpression
Rule 20    simpleExpression -> PLUS term simpless
Rule 21    simpleExpression -> term simpless
Rule 22    simpleExpression -> MINUS term simpless
Rule 23    simpless -> simpless addOperator term
Rule 24    simpless -> empty
Rule 25    term -> factor termss
Rule 26    termss -> termss mulOperator factor
Rule 27    termss -> empty
Rule 28    factor -> number
Rule 29    factor -> char
Rule 30    factor -> string
Rule 31    factor -> KEY_NIL LRB designator RRB
Rule 32    factor -> set
Rule 33    factor -> designator
Rule 34    factor -> designator actualParameters
Rule 35    factor -> LRB expression RRB
Rule 36    factor -> NOT factor
Rule 37    factor -> KEY_ABS factor
Rule 38    factor -> KEY_CHR factor
Rule 39    factor -> KEY_ORD factor
Rule 40    factor -> KEY_INTEGER
Rule 41    factor -> KEY_BOOLEAN
Rule 42    factor -> KEY_CHAR
Rule 43    factor -> KEY_STRING
Rule 44    factor -> KEY_REAL
Rule 45    factor -> KEY_SET
Rule 46    factor -> KEY_CHR LRB factor RRB
Rule 47    factor -> KEY_ORD LRB factor RRB
Rule 48    number -> VINTEGER
Rule 49    number -> VREAL
Rule 50    char -> VCHAR
Rule 51    string -> VSTRING
Rule 52    set -> LCB element COMMA element RCB
Rule 53    set -> LCB RCB
Rule 54    element -> expression
Rule 55    designator -> qualident designator2
Rule 56    designator2 -> designator2 DOT identdef
Rule 57    designator2 -> designator2 LSB expList RSB
Rule 58    designator2 -> designator LRB qualident RRB
Rule 59    designator2 -> empty
Rule 60    qualident -> identdef
Rule 61    qualident -> identdef DOT qualident
Rule 62    identdef -> IDENT
Rule 63    identdef -> AT IDENT
Rule 64    expList -> expList COMMA expression
Rule 65    expList -> expression
Rule 66    actualParameters -> LRB expList RRB
Rule 67    actualParameters -> LRB RRB
Rule 68    mulOperator -> MULTIPLY
Rule 69    mulOperator -> DIVIDE
Rule 70    mulOperator -> MODULUS
Rule 71    mulOperator -> AND
Rule 72    addOperator -> PLUS
Rule 73    addOperator -> MINUS
Rule 74    addOperator -> OR
Rule 75    relation -> EQUAL
Rule 76    relation -> NEQUAL
Rule 77    relation -> LT
Rule 78    relation -> LTEQ
Rule 79    relation -> GT
Rule 80    relation -> GTEQ
Rule 81    relation -> KEY_IN
Rule 82    relation -> KEY_IS
Rule 83    typeDeclaration -> IDENT EQUAL type
Rule 84    type -> IDENT
Rule 85    type -> varType
Rule 86    type -> arrayType
Rule 87    type -> recordType
Rule 88    type -> pointerType
Rule 89    varType -> KEY_INTEGER
Rule 90    varType -> KEY_BOOLEAN
Rule 91    varType -> KEY_CHAR
Rule 92    varType -> KEY_STRING
Rule 93    varType -> KEY_REAL
Rule 94    varType -> KEY_SET
Rule 95    arrayType -> KEY_ARRAY length comass KEY_OF type
Rule 96    comass -> comass COMMA length
Rule 97    comass -> empty
Rule 98    length -> expression
Rule 99    recordType -> KEY_RECORD fieldListSequence KEY_END
Rule 100   recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
Rule 101   baseType -> qualident
Rule 102   fieldListSequence -> fieldListSequence SCOLON fieldList
Rule 103   fieldListSequence -> fieldList
Rule 104   fieldList -> identList COLON type
Rule 105   fieldList -> empty
Rule 106   identList -> identList COMMA IDENT
Rule 107   identList -> IDENT
Rule 108   pointerType -> KEY_POINTER KEY_TO type
Rule 109   variableDeclaration -> identList COLON type
Rule 110   procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT
Rule 111   procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type
Rule 112   procedureHeading -> KEY_PROCEDURE IDENT formalParameters
Rule 113   formalParameters -> LRB fpSection formalss RRB
Rule 114   formalParameters -> LRB RRB
Rule 115   formalss -> formalss SCOLON fpSection
Rule 116   formalss -> empty
Rule 117   fpSection -> IDENT fps COLON type
Rule 118   fps -> fps COMMA IDENT
Rule 119   fps -> empty
Rule 120   procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END
Rule 121   statement -> assignment
Rule 122   statement -> procedureCall
Rule 123   statement -> ifStatement
Rule 124   statement -> switchStatement
Rule 125   statement -> whileStatement
Rule 126   statement -> forStatement
Rule 127   statement -> doWhileStatement
Rule 128   statement -> KEY_EXIT
Rule 129   statement -> KEY_RETURN expression
Rule 130   statement -> KEY_RETURN
Rule 131   statement -> ioStatement
Rule 132   statement -> fileStatement
Rule 133   statement -> KEY_BREAK
Rule 134   statement -> KEY_CONTINUE
Rule 135   statement -> empty
Rule 136   statement -> memoryalloc
Rule 137   statement -> setStatement
Rule 138   assignment -> designator ASSIGN expression
Rule 139   setStatement -> qualident DOT KEY_ADD LRB expression RRB
Rule 140   setStatement -> qualident DOT KEY_DEL LRB expression RRB
Rule 141   memoryalloc -> KEY_NEW LRB designator RRB
Rule 142   procedureCall -> designator actualParameters
Rule 143   procedureCall -> designator
Rule 144   ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
Rule 145   ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END
Rule 146   ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence
Rule 147   ifss -> empty
Rule 148   switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
Rule 149   switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END
Rule 150   casess -> case casess
Rule 151   casess -> empty
Rule 152   case -> KEY_CASE expression COLON statementSequence
Rule 153   whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
Rule 154   forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
Rule 155   doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
Rule 156   ioStatement -> KEY_WRITE LRB expression RRB
Rule 157   ioStatement -> KEY_WRITEINT LRB expression RRB
Rule 158   ioStatement -> KEY_WRITEREAL LRB expression RRB
Rule 159   ioStatement -> KEY_WRITECHAR LRB expression RRB
Rule 160   ioStatement -> KEY_WRITEBOOL LRB expression RRB
Rule 161   ioStatement -> KEY_WRITELN LRB expression RRB
Rule 162   ioStatement -> KEY_WRITELN LRB RRB
Rule 163   ioStatement -> KEY_READ LRB expression RRB
Rule 164   ioStatement -> KEY_READINT LRB expression RRB
Rule 165   ioStatement -> KEY_READREAL LRB expression RRB
Rule 166   ioStatement -> KEY_READCHAR LRB expression RRB
Rule 167   ioStatement -> KEY_READBOOL LRB expression RRB
Rule 168   fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
Rule 169   fileStatement -> KEY_FCLOSE LRB identdef RRB
Rule 170   fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB
Rule 171   fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
Rule 172   empty -> <empty>

Terminals, with rules where they appear

AND                  : 71
ASSIGN               : 17 138
AT                   : 63
COLON                : 17 104 109 111 117 148 152
COMMA                : 52 64 96 106 118 168 170 171 171
DIVIDE               : 69
DOT                  : 1 56 61 139 140
EQUAL                : 75 83 168
GT                   : 79
GTEQ                 : 80
IDENT                : 1 1 17 62 63 83 84 106 107 110 111 112 117 118
KEY_ABS              : 37
KEY_ADD              : 139
KEY_ARRAY            : 95
KEY_BEGIN            : 1 120 148 149 153 154 155
KEY_BOOLEAN          : 41 90
KEY_BREAK            : 133
KEY_CASE             : 152
KEY_CHAR             : 42 91
KEY_CHR              : 38 46
KEY_CONST            : 2
KEY_CONTINUE         : 134
KEY_DEL              : 140
KEY_DO               : 155
KEY_ELSE             : 144 148
KEY_ELSEIF           : 146
KEY_END              : 1 99 100 120 144 145 148 149 153 154 155
KEY_EXIT             : 128
KEY_FCLOSE           : 169
KEY_FOPEN            : 168
KEY_FOR              : 154
KEY_FPRINTF          : 170
KEY_FREAD            : 171
KEY_IF               : 144 145
KEY_IN               : 81
KEY_INTEGER          : 40 89
KEY_IS               : 82
KEY_MODULE           : 1
KEY_NEW              : 141
KEY_NIL              : 31
KEY_OF               : 95
KEY_ORD              : 39 47
KEY_POINTER          : 108
KEY_PROCEDURE        : 111 112
KEY_READ             : 163
KEY_READBOOL         : 167
KEY_READCHAR         : 166
KEY_READINT          : 164
KEY_READREAL         : 165
KEY_REAL             : 44 93
KEY_RECORD           : 99 100
KEY_RETURN           : 129 130
KEY_SET              : 45 94
KEY_STRING           : 43 92
KEY_SWITCH           : 148 149
KEY_THEN             : 144 145 146
KEY_TO               : 108
KEY_TYPE             : 3
KEY_VAR              : 4
KEY_WHILE            : 153 155
KEY_WRITE            : 156
KEY_WRITEBOOL        : 160
KEY_WRITECHAR        : 159
KEY_WRITEINT         : 157
KEY_WRITELN          : 161 162
KEY_WRITEREAL        : 158
LCB                  : 52 53
LRB                  : 31 35 46 47 58 66 67 100 113 114 139 140 141 154 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171
LSB                  : 57
LT                   : 77
LTEQ                 : 78
MINUS                : 22 73
MODULUS              : 70
MULTIPLY             : 68
NEQUAL               : 76
NOT                  : 36
OR                   : 74
PLUS                 : 20 72
RCB                  : 52 53
RRB                  : 31 35 46 47 58 66 67 100 113 114 139 140 141 154 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171
RSB                  : 57
SCOLON               : 1 7 9 11 13 15 102 110 115 154 154
VBOOLEAN             : 
VCHAR                : 50
VINTEGER             : 48 171
VREAL                : 49
VSTRING              : 51
error                : 

Nonterminals, with rules where they appear

actualParameters     : 34 142
addOperator          : 23
arrayType            : 86
assignment           : 121 154 154
baseType             : 100
case                 : 148 149 150
casess               : 148 149 150
char                 : 29 168
comass               : 95 96
conss                : 2 7
constantDeclaration  : 7
declarationSequence  : 1 2 3 4 5 120
designator           : 31 33 34 58 138 141 142 143
designator2          : 55 56 57
doWhileStatement     : 127
element              : 52 52
empty                : 6 8 10 12 14 16 24 27 59 97 105 116 119 135 147 151
expList              : 57 64 66
expression           : 17 35 54 64 65 98 129 138 139 140 144 145 146 148 149 152 153 154 155 156 157 158 159 160 161 163 164 165 166 167
factor               : 25 26 36 37 38 39 46 47
fieldList            : 102 103
fieldListSequence    : 99 100 102
fileStatement        : 132
forStatement         : 126
formalParameters     : 111 112
formalss             : 113 115
fpSection            : 113 115
fps                  : 117 118
identList            : 104 106 109
identdef             : 56 60 61 168 169 170 171 171
ifStatement          : 123
ifss                 : 144 145 146
ioStatement          : 131
length               : 95 96
memoryalloc          : 136
module               : 0
mulOperator          : 26
number               : 28
pointerType          : 88
procedureBody        : 110
procedureCall        : 122
procedureDeclaration : 13
procedureHeading     : 110
procss               : 5 13
qualident            : 55 58 61 101 139 140
recordType           : 87
relation             : 19
set                  : 32
setStatement         : 137
simpleExpression     : 18 19 19
simpless             : 20 21 22 23
statement            : 15
statementSequence    : 1 15 120 144 144 145 146 148 152 153 154 155
string               : 30 168 170
switchStatement      : 124
term                 : 20 21 22 23
termss               : 25 26
type                 : 17 83 95 104 108 109 111 117
typeDeclaration      : 9
typess               : 3 9
varType              : 85
variableDeclaration  : 11
varss                : 4 11
whileStatement       : 125

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT

    KEY_MODULE      shift and go to state 2

    module                         shift and go to state 1

state 1

    (0) S' -> module .



state 2

    (1) module -> KEY_MODULE . IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT

    IDENT           shift and go to state 3


state 3

    (1) module -> KEY_MODULE IDENT . SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT

    SCOLON          shift and go to state 4


state 4

    (1) module -> KEY_MODULE IDENT SCOLON . declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT
    (2) declarationSequence -> . declarationSequence KEY_CONST conss
    (3) declarationSequence -> . declarationSequence KEY_TYPE typess
    (4) declarationSequence -> . declarationSequence KEY_VAR varss
    (5) declarationSequence -> . declarationSequence procss
    (6) declarationSequence -> . empty
    (172) empty -> .

    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_CONST       reduce using rule 172 (empty -> .)
    KEY_TYPE        reduce using rule 172 (empty -> .)
    KEY_VAR         reduce using rule 172 (empty -> .)
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

    empty                          shift and go to state 5
    declarationSequence            shift and go to state 6

state 5

    (6) declarationSequence -> empty .

    KEY_BEGIN       reduce using rule 6 (declarationSequence -> empty .)
    KEY_CONST       reduce using rule 6 (declarationSequence -> empty .)
    KEY_TYPE        reduce using rule 6 (declarationSequence -> empty .)
    KEY_VAR         reduce using rule 6 (declarationSequence -> empty .)
    KEY_PROCEDURE   reduce using rule 6 (declarationSequence -> empty .)


state 6

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence . KEY_BEGIN statementSequence KEY_END IDENT DOT
    (2) declarationSequence -> declarationSequence . KEY_CONST conss
    (3) declarationSequence -> declarationSequence . KEY_TYPE typess
    (4) declarationSequence -> declarationSequence . KEY_VAR varss
    (5) declarationSequence -> declarationSequence . procss
    (13) procss -> . procss procedureDeclaration SCOLON
    (14) procss -> . empty
    (172) empty -> .

  ! shift/reduce conflict for KEY_BEGIN resolved as shift
  ! shift/reduce conflict for KEY_CONST resolved as shift
  ! shift/reduce conflict for KEY_TYPE resolved as shift
  ! shift/reduce conflict for KEY_VAR resolved as shift
    KEY_BEGIN       shift and go to state 8
    KEY_CONST       shift and go to state 7
    KEY_TYPE        shift and go to state 10
    KEY_VAR         shift and go to state 9
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

  ! KEY_BEGIN       [ reduce using rule 172 (empty -> .) ]
  ! KEY_CONST       [ reduce using rule 172 (empty -> .) ]
  ! KEY_TYPE        [ reduce using rule 172 (empty -> .) ]
  ! KEY_VAR         [ reduce using rule 172 (empty -> .) ]

    empty                          shift and go to state 12
    procss                         shift and go to state 11

state 7

    (2) declarationSequence -> declarationSequence KEY_CONST . conss
    (7) conss -> . conss constantDeclaration SCOLON
    (8) conss -> . empty
    (172) empty -> .

    IDENT           reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_CONST       reduce using rule 172 (empty -> .)
    KEY_TYPE        reduce using rule 172 (empty -> .)
    KEY_VAR         reduce using rule 172 (empty -> .)
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

    conss                          shift and go to state 14
    empty                          shift and go to state 13

state 8

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN . statementSequence KEY_END IDENT DOT
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 15
    empty                          shift and go to state 16

state 9

    (4) declarationSequence -> declarationSequence KEY_VAR . varss
    (11) varss -> . varss variableDeclaration SCOLON
    (12) varss -> . empty
    (172) empty -> .

    IDENT           reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_CONST       reduce using rule 172 (empty -> .)
    KEY_TYPE        reduce using rule 172 (empty -> .)
    KEY_VAR         reduce using rule 172 (empty -> .)
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

    varss                          shift and go to state 18
    empty                          shift and go to state 17

state 10

    (3) declarationSequence -> declarationSequence KEY_TYPE . typess
    (9) typess -> . typess typeDeclaration SCOLON
    (10) typess -> . empty
    (172) empty -> .

    IDENT           reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_CONST       reduce using rule 172 (empty -> .)
    KEY_TYPE        reduce using rule 172 (empty -> .)
    KEY_VAR         reduce using rule 172 (empty -> .)
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

    typess                         shift and go to state 19
    empty                          shift and go to state 20

state 11

    (5) declarationSequence -> declarationSequence procss .
    (13) procss -> procss . procedureDeclaration SCOLON
    (110) procedureDeclaration -> . procedureHeading SCOLON procedureBody IDENT
    (111) procedureHeading -> . KEY_PROCEDURE IDENT formalParameters COLON type
    (112) procedureHeading -> . KEY_PROCEDURE IDENT formalParameters

  ! shift/reduce conflict for KEY_PROCEDURE resolved as shift
    KEY_BEGIN       reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_CONST       reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_TYPE        reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_VAR         reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_PROCEDURE   shift and go to state 23

  ! KEY_PROCEDURE   [ reduce using rule 5 (declarationSequence -> declarationSequence procss .) ]

    procedureHeading               shift and go to state 21
    procedureDeclaration           shift and go to state 22

state 12

    (14) procss -> empty .

    KEY_PROCEDURE   reduce using rule 14 (procss -> empty .)
    KEY_BEGIN       reduce using rule 14 (procss -> empty .)
    KEY_CONST       reduce using rule 14 (procss -> empty .)
    KEY_TYPE        reduce using rule 14 (procss -> empty .)
    KEY_VAR         reduce using rule 14 (procss -> empty .)


state 13

    (8) conss -> empty .

    IDENT           reduce using rule 8 (conss -> empty .)
    KEY_BEGIN       reduce using rule 8 (conss -> empty .)
    KEY_CONST       reduce using rule 8 (conss -> empty .)
    KEY_TYPE        reduce using rule 8 (conss -> empty .)
    KEY_VAR         reduce using rule 8 (conss -> empty .)
    KEY_PROCEDURE   reduce using rule 8 (conss -> empty .)


state 14

    (2) declarationSequence -> declarationSequence KEY_CONST conss .
    (7) conss -> conss . constantDeclaration SCOLON
    (17) constantDeclaration -> . IDENT ASSIGN expression COLON type

    KEY_BEGIN       reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_CONST       reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_TYPE        reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_VAR         reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_PROCEDURE   reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    IDENT           shift and go to state 24

    constantDeclaration            shift and go to state 25

state 15

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence . KEY_END IDENT DOT
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 68
    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    ioStatement                    shift and go to state 59
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 61
    fileStatement                  shift and go to state 62
    switchStatement                shift and go to state 37
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 16

    (16) statementSequence -> empty .

    KEY_END         reduce using rule 16 (statementSequence -> empty .)
    KEY_EXIT        reduce using rule 16 (statementSequence -> empty .)
    KEY_RETURN      reduce using rule 16 (statementSequence -> empty .)
    KEY_BREAK       reduce using rule 16 (statementSequence -> empty .)
    KEY_CONTINUE    reduce using rule 16 (statementSequence -> empty .)
    KEY_IF          reduce using rule 16 (statementSequence -> empty .)
    KEY_SWITCH      reduce using rule 16 (statementSequence -> empty .)
    KEY_WHILE       reduce using rule 16 (statementSequence -> empty .)
    KEY_FOR         reduce using rule 16 (statementSequence -> empty .)
    KEY_DO          reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITE       reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITEINT    reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITEREAL   reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITECHAR   reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITEBOOL   reduce using rule 16 (statementSequence -> empty .)
    KEY_WRITELN     reduce using rule 16 (statementSequence -> empty .)
    KEY_READ        reduce using rule 16 (statementSequence -> empty .)
    KEY_READINT     reduce using rule 16 (statementSequence -> empty .)
    KEY_READREAL    reduce using rule 16 (statementSequence -> empty .)
    KEY_READCHAR    reduce using rule 16 (statementSequence -> empty .)
    KEY_READBOOL    reduce using rule 16 (statementSequence -> empty .)
    KEY_FCLOSE      reduce using rule 16 (statementSequence -> empty .)
    KEY_FPRINTF     reduce using rule 16 (statementSequence -> empty .)
    KEY_FREAD       reduce using rule 16 (statementSequence -> empty .)
    KEY_NEW         reduce using rule 16 (statementSequence -> empty .)
    IDENT           reduce using rule 16 (statementSequence -> empty .)
    AT              reduce using rule 16 (statementSequence -> empty .)
    SCOLON          reduce using rule 16 (statementSequence -> empty .)
    KEY_CASE        reduce using rule 16 (statementSequence -> empty .)
    KEY_ELSE        reduce using rule 16 (statementSequence -> empty .)
    KEY_ELSEIF      reduce using rule 16 (statementSequence -> empty .)


state 17

    (12) varss -> empty .

    IDENT           reduce using rule 12 (varss -> empty .)
    KEY_BEGIN       reduce using rule 12 (varss -> empty .)
    KEY_CONST       reduce using rule 12 (varss -> empty .)
    KEY_TYPE        reduce using rule 12 (varss -> empty .)
    KEY_VAR         reduce using rule 12 (varss -> empty .)
    KEY_PROCEDURE   reduce using rule 12 (varss -> empty .)


state 18

    (4) declarationSequence -> declarationSequence KEY_VAR varss .
    (11) varss -> varss . variableDeclaration SCOLON
    (109) variableDeclaration -> . identList COLON type
    (106) identList -> . identList COMMA IDENT
    (107) identList -> . IDENT

    KEY_BEGIN       reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_CONST       reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_TYPE        reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_VAR         reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_PROCEDURE   reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    IDENT           shift and go to state 69

    identList                      shift and go to state 70
    variableDeclaration            shift and go to state 71

state 19

    (3) declarationSequence -> declarationSequence KEY_TYPE typess .
    (9) typess -> typess . typeDeclaration SCOLON
    (83) typeDeclaration -> . IDENT EQUAL type

    KEY_BEGIN       reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_CONST       reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_TYPE        reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_VAR         reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_PROCEDURE   reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    IDENT           shift and go to state 72

    typeDeclaration                shift and go to state 73

state 20

    (10) typess -> empty .

    IDENT           reduce using rule 10 (typess -> empty .)
    KEY_BEGIN       reduce using rule 10 (typess -> empty .)
    KEY_CONST       reduce using rule 10 (typess -> empty .)
    KEY_TYPE        reduce using rule 10 (typess -> empty .)
    KEY_VAR         reduce using rule 10 (typess -> empty .)
    KEY_PROCEDURE   reduce using rule 10 (typess -> empty .)


state 21

    (110) procedureDeclaration -> procedureHeading . SCOLON procedureBody IDENT

    SCOLON          shift and go to state 74


state 22

    (13) procss -> procss procedureDeclaration . SCOLON

    SCOLON          shift and go to state 75


state 23

    (111) procedureHeading -> KEY_PROCEDURE . IDENT formalParameters COLON type
    (112) procedureHeading -> KEY_PROCEDURE . IDENT formalParameters

    IDENT           shift and go to state 76


state 24

    (17) constantDeclaration -> IDENT . ASSIGN expression COLON type

    ASSIGN          shift and go to state 77


state 25

    (7) conss -> conss constantDeclaration . SCOLON

    SCOLON          shift and go to state 78


state 26

    (139) setStatement -> qualident . DOT KEY_ADD LRB expression RRB
    (140) setStatement -> qualident . DOT KEY_DEL LRB expression RRB
    (55) designator -> qualident . designator2
    (56) designator2 -> . designator2 DOT identdef
    (57) designator2 -> . designator2 LSB expList RSB
    (58) designator2 -> . designator LRB qualident RRB
    (59) designator2 -> . empty
    (55) designator -> . qualident designator2
    (172) empty -> .
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

  ! shift/reduce conflict for DOT resolved as shift
    DOT             shift and go to state 80
    LSB             reduce using rule 172 (empty -> .)
    ASSIGN          reduce using rule 172 (empty -> .)
    LRB             reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    IDENT           shift and go to state 36
    AT              shift and go to state 53

  ! DOT             [ reduce using rule 172 (empty -> .) ]

    qualident                      shift and go to state 79
    designator                     shift and go to state 82
    identdef                       shift and go to state 83
    designator2                    shift and go to state 84
    empty                          shift and go to state 81

state 27

    (154) forStatement -> KEY_FOR . LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    LRB             shift and go to state 85


state 28

    (128) statement -> KEY_EXIT .

    SCOLON          reduce using rule 128 (statement -> KEY_EXIT .)


state 29

    (156) ioStatement -> KEY_WRITE . LRB expression RRB

    LRB             shift and go to state 86


state 30

    (123) statement -> ifStatement .

    SCOLON          reduce using rule 123 (statement -> ifStatement .)


state 31

    (141) memoryalloc -> KEY_NEW . LRB designator RRB

    LRB             shift and go to state 87


state 32

    (166) ioStatement -> KEY_READCHAR . LRB expression RRB

    LRB             shift and go to state 88


state 33

    (134) statement -> KEY_CONTINUE .

    SCOLON          reduce using rule 134 (statement -> KEY_CONTINUE .)


state 34

    (157) ioStatement -> KEY_WRITEINT . LRB expression RRB

    LRB             shift and go to state 89


state 35

    (165) ioStatement -> KEY_READREAL . LRB expression RRB

    LRB             shift and go to state 90


state 36

    (62) identdef -> IDENT .

    DOT             reduce using rule 62 (identdef -> IDENT .)
    RRB             reduce using rule 62 (identdef -> IDENT .)
    EQUAL           reduce using rule 62 (identdef -> IDENT .)
    IDENT           reduce using rule 62 (identdef -> IDENT .)
    AT              reduce using rule 62 (identdef -> IDENT .)
    LSB             reduce using rule 62 (identdef -> IDENT .)
    ASSIGN          reduce using rule 62 (identdef -> IDENT .)
    LRB             reduce using rule 62 (identdef -> IDENT .)
    SCOLON          reduce using rule 62 (identdef -> IDENT .)
    MULTIPLY        reduce using rule 62 (identdef -> IDENT .)
    DIVIDE          reduce using rule 62 (identdef -> IDENT .)
    MODULUS         reduce using rule 62 (identdef -> IDENT .)
    AND             reduce using rule 62 (identdef -> IDENT .)
    PLUS            reduce using rule 62 (identdef -> IDENT .)
    MINUS           reduce using rule 62 (identdef -> IDENT .)
    OR              reduce using rule 62 (identdef -> IDENT .)
    NEQUAL          reduce using rule 62 (identdef -> IDENT .)
    LT              reduce using rule 62 (identdef -> IDENT .)
    LTEQ            reduce using rule 62 (identdef -> IDENT .)
    GT              reduce using rule 62 (identdef -> IDENT .)
    GTEQ            reduce using rule 62 (identdef -> IDENT .)
    KEY_IN          reduce using rule 62 (identdef -> IDENT .)
    KEY_IS          reduce using rule 62 (identdef -> IDENT .)
    KEY_THEN        reduce using rule 62 (identdef -> IDENT .)
    KEY_BEGIN       reduce using rule 62 (identdef -> IDENT .)
    COLON           reduce using rule 62 (identdef -> IDENT .)
    COMMA           reduce using rule 62 (identdef -> IDENT .)
    RSB             reduce using rule 62 (identdef -> IDENT .)
    KEY_OF          reduce using rule 62 (identdef -> IDENT .)
    RCB             reduce using rule 62 (identdef -> IDENT .)


state 37

    (124) statement -> switchStatement .

    SCOLON          reduce using rule 124 (statement -> switchStatement .)


state 38

    (160) ioStatement -> KEY_WRITEBOOL . LRB expression RRB

    LRB             shift and go to state 91


state 39

    (15) statementSequence -> statementSequence statement . SCOLON

    SCOLON          shift and go to state 92


state 40

    (161) ioStatement -> KEY_WRITELN . LRB expression RRB
    (162) ioStatement -> KEY_WRITELN . LRB RRB

    LRB             shift and go to state 93


state 41

    (121) statement -> assignment .

    SCOLON          reduce using rule 121 (statement -> assignment .)


state 42

    (170) fileStatement -> KEY_FPRINTF . LRB identdef COMMA string RRB

    LRB             shift and go to state 94


state 43

    (127) statement -> doWhileStatement .

    SCOLON          reduce using rule 127 (statement -> doWhileStatement .)


state 44

    (158) ioStatement -> KEY_WRITEREAL . LRB expression RRB

    LRB             shift and go to state 95


state 45

    (144) ifStatement -> KEY_IF . expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF . expression KEY_THEN statementSequence ifss KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 104
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108
    designator                     shift and go to state 121

state 46

    (126) statement -> forStatement .

    SCOLON          reduce using rule 126 (statement -> forStatement .)


state 47

    (129) statement -> KEY_RETURN . expression
    (130) statement -> KEY_RETURN .
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    SCOLON          reduce using rule 130 (statement -> KEY_RETURN .)
    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 124
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 48

    (171) fileStatement -> KEY_FREAD . LRB identdef COMMA identdef COMMA VINTEGER RRB

    LRB             shift and go to state 125


state 49

    (137) statement -> setStatement .

    SCOLON          reduce using rule 137 (statement -> setStatement .)


state 50

    (125) statement -> whileStatement .

    SCOLON          reduce using rule 125 (statement -> whileStatement .)


state 51

    (163) ioStatement -> KEY_READ . LRB expression RRB

    LRB             shift and go to state 126


state 52

    (168) fileStatement -> identdef . EQUAL KEY_FOPEN LRB string COMMA char RRB
    (60) qualident -> identdef .
    (61) qualident -> identdef . DOT qualident

  ! shift/reduce conflict for DOT resolved as shift
    EQUAL           shift and go to state 128
    IDENT           reduce using rule 60 (qualident -> identdef .)
    AT              reduce using rule 60 (qualident -> identdef .)
    LSB             reduce using rule 60 (qualident -> identdef .)
    ASSIGN          reduce using rule 60 (qualident -> identdef .)
    LRB             reduce using rule 60 (qualident -> identdef .)
    SCOLON          reduce using rule 60 (qualident -> identdef .)
    DOT             shift and go to state 127

  ! DOT             [ reduce using rule 60 (qualident -> identdef .) ]


state 53

    (63) identdef -> AT . IDENT

    IDENT           shift and go to state 129


state 54

    (164) ioStatement -> KEY_READINT . LRB expression RRB

    LRB             shift and go to state 130


state 55

    (155) doWhileStatement -> KEY_DO . KEY_BEGIN statementSequence KEY_END KEY_WHILE expression

    KEY_BEGIN       shift and go to state 131


state 56

    (153) whileStatement -> KEY_WHILE . expression KEY_BEGIN statementSequence KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 132
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 57

    (122) statement -> procedureCall .

    SCOLON          reduce using rule 122 (statement -> procedureCall .)


state 58

    (148) switchStatement -> KEY_SWITCH . expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH . expression KEY_BEGIN case casess KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 133
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 59

    (131) statement -> ioStatement .

    SCOLON          reduce using rule 131 (statement -> ioStatement .)


state 60

    (169) fileStatement -> KEY_FCLOSE . LRB identdef RRB

    LRB             shift and go to state 134


state 61

    (135) statement -> empty .

    SCOLON          reduce using rule 135 (statement -> empty .)


state 62

    (132) statement -> fileStatement .

    SCOLON          reduce using rule 132 (statement -> fileStatement .)


state 63

    (159) ioStatement -> KEY_WRITECHAR . LRB expression RRB

    LRB             shift and go to state 135


state 64

    (138) assignment -> designator . ASSIGN expression
    (142) procedureCall -> designator . actualParameters
    (143) procedureCall -> designator .
    (66) actualParameters -> . LRB expList RRB
    (67) actualParameters -> . LRB RRB

    ASSIGN          shift and go to state 138
    SCOLON          reduce using rule 143 (procedureCall -> designator .)
    LRB             shift and go to state 136

    actualParameters               shift and go to state 137

state 65

    (167) ioStatement -> KEY_READBOOL . LRB expression RRB

    LRB             shift and go to state 139


state 66

    (136) statement -> memoryalloc .

    SCOLON          reduce using rule 136 (statement -> memoryalloc .)


state 67

    (133) statement -> KEY_BREAK .

    SCOLON          reduce using rule 133 (statement -> KEY_BREAK .)


state 68

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END . IDENT DOT

    IDENT           shift and go to state 140


state 69

    (107) identList -> IDENT .

    COLON           reduce using rule 107 (identList -> IDENT .)
    COMMA           reduce using rule 107 (identList -> IDENT .)


state 70

    (109) variableDeclaration -> identList . COLON type
    (106) identList -> identList . COMMA IDENT

    COLON           shift and go to state 142
    COMMA           shift and go to state 141


state 71

    (11) varss -> varss variableDeclaration . SCOLON

    SCOLON          shift and go to state 143


state 72

    (83) typeDeclaration -> IDENT . EQUAL type

    EQUAL           shift and go to state 144


state 73

    (9) typess -> typess typeDeclaration . SCOLON

    SCOLON          shift and go to state 145


state 74

    (110) procedureDeclaration -> procedureHeading SCOLON . procedureBody IDENT
    (120) procedureBody -> . declarationSequence KEY_BEGIN statementSequence KEY_END
    (2) declarationSequence -> . declarationSequence KEY_CONST conss
    (3) declarationSequence -> . declarationSequence KEY_TYPE typess
    (4) declarationSequence -> . declarationSequence KEY_VAR varss
    (5) declarationSequence -> . declarationSequence procss
    (6) declarationSequence -> . empty
    (172) empty -> .

    KEY_BEGIN       reduce using rule 172 (empty -> .)
    KEY_CONST       reduce using rule 172 (empty -> .)
    KEY_TYPE        reduce using rule 172 (empty -> .)
    KEY_VAR         reduce using rule 172 (empty -> .)
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

    declarationSequence            shift and go to state 147
    empty                          shift and go to state 5
    procedureBody                  shift and go to state 146

state 75

    (13) procss -> procss procedureDeclaration SCOLON .

    KEY_PROCEDURE   reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_CONST       reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_VAR         reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)


state 76

    (111) procedureHeading -> KEY_PROCEDURE IDENT . formalParameters COLON type
    (112) procedureHeading -> KEY_PROCEDURE IDENT . formalParameters
    (113) formalParameters -> . LRB fpSection formalss RRB
    (114) formalParameters -> . LRB RRB

    LRB             shift and go to state 149

    formalParameters               shift and go to state 148

state 77

    (17) constantDeclaration -> IDENT ASSIGN . expression COLON type
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 150
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108
    set                            shift and go to state 110

state 78

    (7) conss -> conss constantDeclaration SCOLON .

    IDENT           reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_CONST       reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_VAR         reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)


state 79

    (55) designator -> qualident . designator2
    (56) designator2 -> . designator2 DOT identdef
    (57) designator2 -> . designator2 LSB expList RSB
    (58) designator2 -> . designator LRB qualident RRB
    (59) designator2 -> . empty
    (55) designator -> . qualident designator2
    (172) empty -> .
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    DOT             reduce using rule 172 (empty -> .)
    LSB             reduce using rule 172 (empty -> .)
    LRB             reduce using rule 172 (empty -> .)
    MULTIPLY        reduce using rule 172 (empty -> .)
    DIVIDE          reduce using rule 172 (empty -> .)
    MODULUS         reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    ASSIGN          reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    designator                     shift and go to state 82
    identdef                       shift and go to state 83
    designator2                    shift and go to state 84
    empty                          shift and go to state 81

state 80

    (139) setStatement -> qualident DOT . KEY_ADD LRB expression RRB
    (140) setStatement -> qualident DOT . KEY_DEL LRB expression RRB

    KEY_ADD         shift and go to state 151
    KEY_DEL         shift and go to state 152


state 81

    (59) designator2 -> empty .

    DOT             reduce using rule 59 (designator2 -> empty .)
    LSB             reduce using rule 59 (designator2 -> empty .)
    LRB             reduce using rule 59 (designator2 -> empty .)
    MULTIPLY        reduce using rule 59 (designator2 -> empty .)
    DIVIDE          reduce using rule 59 (designator2 -> empty .)
    MODULUS         reduce using rule 59 (designator2 -> empty .)
    AND             reduce using rule 59 (designator2 -> empty .)
    PLUS            reduce using rule 59 (designator2 -> empty .)
    MINUS           reduce using rule 59 (designator2 -> empty .)
    OR              reduce using rule 59 (designator2 -> empty .)
    EQUAL           reduce using rule 59 (designator2 -> empty .)
    NEQUAL          reduce using rule 59 (designator2 -> empty .)
    LT              reduce using rule 59 (designator2 -> empty .)
    LTEQ            reduce using rule 59 (designator2 -> empty .)
    GT              reduce using rule 59 (designator2 -> empty .)
    GTEQ            reduce using rule 59 (designator2 -> empty .)
    KEY_IN          reduce using rule 59 (designator2 -> empty .)
    KEY_IS          reduce using rule 59 (designator2 -> empty .)
    KEY_THEN        reduce using rule 59 (designator2 -> empty .)
    SCOLON          reduce using rule 59 (designator2 -> empty .)
    KEY_BEGIN       reduce using rule 59 (designator2 -> empty .)
    COLON           reduce using rule 59 (designator2 -> empty .)
    ASSIGN          reduce using rule 59 (designator2 -> empty .)
    RRB             reduce using rule 59 (designator2 -> empty .)
    COMMA           reduce using rule 59 (designator2 -> empty .)
    RSB             reduce using rule 59 (designator2 -> empty .)
    KEY_OF          reduce using rule 59 (designator2 -> empty .)
    RCB             reduce using rule 59 (designator2 -> empty .)


state 82

    (58) designator2 -> designator . LRB qualident RRB

    LRB             shift and go to state 153


state 83

    (60) qualident -> identdef .
    (61) qualident -> identdef . DOT qualident

  ! shift/reduce conflict for DOT resolved as shift
    IDENT           reduce using rule 60 (qualident -> identdef .)
    AT              reduce using rule 60 (qualident -> identdef .)
    LSB             reduce using rule 60 (qualident -> identdef .)
    LRB             reduce using rule 60 (qualident -> identdef .)
    MULTIPLY        reduce using rule 60 (qualident -> identdef .)
    DIVIDE          reduce using rule 60 (qualident -> identdef .)
    MODULUS         reduce using rule 60 (qualident -> identdef .)
    AND             reduce using rule 60 (qualident -> identdef .)
    PLUS            reduce using rule 60 (qualident -> identdef .)
    MINUS           reduce using rule 60 (qualident -> identdef .)
    OR              reduce using rule 60 (qualident -> identdef .)
    EQUAL           reduce using rule 60 (qualident -> identdef .)
    NEQUAL          reduce using rule 60 (qualident -> identdef .)
    LT              reduce using rule 60 (qualident -> identdef .)
    LTEQ            reduce using rule 60 (qualident -> identdef .)
    GT              reduce using rule 60 (qualident -> identdef .)
    GTEQ            reduce using rule 60 (qualident -> identdef .)
    KEY_IN          reduce using rule 60 (qualident -> identdef .)
    KEY_IS          reduce using rule 60 (qualident -> identdef .)
    COMMA           reduce using rule 60 (qualident -> identdef .)
    SCOLON          reduce using rule 60 (qualident -> identdef .)
    KEY_THEN        reduce using rule 60 (qualident -> identdef .)
    KEY_BEGIN       reduce using rule 60 (qualident -> identdef .)
    COLON           reduce using rule 60 (qualident -> identdef .)
    RRB             reduce using rule 60 (qualident -> identdef .)
    RSB             reduce using rule 60 (qualident -> identdef .)
    KEY_OF          reduce using rule 60 (qualident -> identdef .)
    RCB             reduce using rule 60 (qualident -> identdef .)
    ASSIGN          reduce using rule 60 (qualident -> identdef .)
    DOT             shift and go to state 127

  ! DOT             [ reduce using rule 60 (qualident -> identdef .) ]


state 84

    (55) designator -> qualident designator2 .
    (56) designator2 -> designator2 . DOT identdef
    (57) designator2 -> designator2 . LSB expList RSB

    ASSIGN          reduce using rule 55 (designator -> qualident designator2 .)
    LRB             reduce using rule 55 (designator -> qualident designator2 .)
    SCOLON          reduce using rule 55 (designator -> qualident designator2 .)
    MULTIPLY        reduce using rule 55 (designator -> qualident designator2 .)
    DIVIDE          reduce using rule 55 (designator -> qualident designator2 .)
    MODULUS         reduce using rule 55 (designator -> qualident designator2 .)
    AND             reduce using rule 55 (designator -> qualident designator2 .)
    PLUS            reduce using rule 55 (designator -> qualident designator2 .)
    MINUS           reduce using rule 55 (designator -> qualident designator2 .)
    OR              reduce using rule 55 (designator -> qualident designator2 .)
    EQUAL           reduce using rule 55 (designator -> qualident designator2 .)
    NEQUAL          reduce using rule 55 (designator -> qualident designator2 .)
    LT              reduce using rule 55 (designator -> qualident designator2 .)
    LTEQ            reduce using rule 55 (designator -> qualident designator2 .)
    GT              reduce using rule 55 (designator -> qualident designator2 .)
    GTEQ            reduce using rule 55 (designator -> qualident designator2 .)
    KEY_IN          reduce using rule 55 (designator -> qualident designator2 .)
    KEY_IS          reduce using rule 55 (designator -> qualident designator2 .)
    KEY_THEN        reduce using rule 55 (designator -> qualident designator2 .)
    KEY_BEGIN       reduce using rule 55 (designator -> qualident designator2 .)
    COLON           reduce using rule 55 (designator -> qualident designator2 .)
    RRB             reduce using rule 55 (designator -> qualident designator2 .)
    COMMA           reduce using rule 55 (designator -> qualident designator2 .)
    RSB             reduce using rule 55 (designator -> qualident designator2 .)
    KEY_OF          reduce using rule 55 (designator -> qualident designator2 .)
    RCB             reduce using rule 55 (designator -> qualident designator2 .)
    DOT             shift and go to state 154
    LSB             shift and go to state 155


state 85

    (154) forStatement -> KEY_FOR LRB . assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (138) assignment -> . designator ASSIGN expression
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    assignment                     shift and go to state 156
    designator                     shift and go to state 157
    identdef                       shift and go to state 83

state 86

    (156) ioStatement -> KEY_WRITE LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 158
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 87

    (141) memoryalloc -> KEY_NEW LRB . designator RRB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    designator                     shift and go to state 159
    identdef                       shift and go to state 83

state 88

    (166) ioStatement -> KEY_READCHAR LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 160
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 89

    (157) ioStatement -> KEY_WRITEINT LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 161
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 90

    (165) ioStatement -> KEY_READREAL LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 162
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 91

    (160) ioStatement -> KEY_WRITEBOOL LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 163
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 92

    (15) statementSequence -> statementSequence statement SCOLON .

    KEY_END         reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_EXIT        reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_RETURN      reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_BREAK       reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_CONTINUE    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_IF          reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_SWITCH      reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WHILE       reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_FOR         reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_DO          reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITE       reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITEINT    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITEREAL   reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITECHAR   reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITEBOOL   reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_WRITELN     reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READ        reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READINT     reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READREAL    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READCHAR    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_READBOOL    reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_FCLOSE      reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_FPRINTF     reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_FREAD       reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_NEW         reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    IDENT           reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    AT              reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    SCOLON          reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_CASE        reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_ELSE        reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)
    KEY_ELSEIF      reduce using rule 15 (statementSequence -> statementSequence statement SCOLON .)


state 93

    (161) ioStatement -> KEY_WRITELN LRB . expression RRB
    (162) ioStatement -> KEY_WRITELN LRB . RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    RRB             shift and go to state 165
    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 164
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 94

    (170) fileStatement -> KEY_FPRINTF LRB . identdef COMMA string RRB
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    identdef                       shift and go to state 166

state 95

    (158) ioStatement -> KEY_WRITEREAL LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 167
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 96

    (31) factor -> KEY_NIL . LRB designator RRB

    LRB             shift and go to state 168


state 97

    (49) number -> VREAL .

    MULTIPLY        reduce using rule 49 (number -> VREAL .)
    DIVIDE          reduce using rule 49 (number -> VREAL .)
    MODULUS         reduce using rule 49 (number -> VREAL .)
    AND             reduce using rule 49 (number -> VREAL .)
    PLUS            reduce using rule 49 (number -> VREAL .)
    MINUS           reduce using rule 49 (number -> VREAL .)
    OR              reduce using rule 49 (number -> VREAL .)
    EQUAL           reduce using rule 49 (number -> VREAL .)
    NEQUAL          reduce using rule 49 (number -> VREAL .)
    LT              reduce using rule 49 (number -> VREAL .)
    LTEQ            reduce using rule 49 (number -> VREAL .)
    GT              reduce using rule 49 (number -> VREAL .)
    GTEQ            reduce using rule 49 (number -> VREAL .)
    KEY_IN          reduce using rule 49 (number -> VREAL .)
    KEY_IS          reduce using rule 49 (number -> VREAL .)
    RRB             reduce using rule 49 (number -> VREAL .)
    KEY_BEGIN       reduce using rule 49 (number -> VREAL .)
    RCB             reduce using rule 49 (number -> VREAL .)
    SCOLON          reduce using rule 49 (number -> VREAL .)
    KEY_THEN        reduce using rule 49 (number -> VREAL .)
    COLON           reduce using rule 49 (number -> VREAL .)
    COMMA           reduce using rule 49 (number -> VREAL .)
    RSB             reduce using rule 49 (number -> VREAL .)
    KEY_OF          reduce using rule 49 (number -> VREAL .)


state 98

    (42) factor -> KEY_CHAR .

    MULTIPLY        reduce using rule 42 (factor -> KEY_CHAR .)
    DIVIDE          reduce using rule 42 (factor -> KEY_CHAR .)
    MODULUS         reduce using rule 42 (factor -> KEY_CHAR .)
    AND             reduce using rule 42 (factor -> KEY_CHAR .)
    PLUS            reduce using rule 42 (factor -> KEY_CHAR .)
    MINUS           reduce using rule 42 (factor -> KEY_CHAR .)
    OR              reduce using rule 42 (factor -> KEY_CHAR .)
    EQUAL           reduce using rule 42 (factor -> KEY_CHAR .)
    NEQUAL          reduce using rule 42 (factor -> KEY_CHAR .)
    LT              reduce using rule 42 (factor -> KEY_CHAR .)
    LTEQ            reduce using rule 42 (factor -> KEY_CHAR .)
    GT              reduce using rule 42 (factor -> KEY_CHAR .)
    GTEQ            reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_IN          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_IS          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_THEN        reduce using rule 42 (factor -> KEY_CHAR .)
    SCOLON          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_BEGIN       reduce using rule 42 (factor -> KEY_CHAR .)
    COLON           reduce using rule 42 (factor -> KEY_CHAR .)
    RRB             reduce using rule 42 (factor -> KEY_CHAR .)
    COMMA           reduce using rule 42 (factor -> KEY_CHAR .)
    RSB             reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_OF          reduce using rule 42 (factor -> KEY_CHAR .)
    RCB             reduce using rule 42 (factor -> KEY_CHAR .)


state 99

    (48) number -> VINTEGER .

    MULTIPLY        reduce using rule 48 (number -> VINTEGER .)
    DIVIDE          reduce using rule 48 (number -> VINTEGER .)
    MODULUS         reduce using rule 48 (number -> VINTEGER .)
    AND             reduce using rule 48 (number -> VINTEGER .)
    PLUS            reduce using rule 48 (number -> VINTEGER .)
    MINUS           reduce using rule 48 (number -> VINTEGER .)
    OR              reduce using rule 48 (number -> VINTEGER .)
    EQUAL           reduce using rule 48 (number -> VINTEGER .)
    NEQUAL          reduce using rule 48 (number -> VINTEGER .)
    LT              reduce using rule 48 (number -> VINTEGER .)
    LTEQ            reduce using rule 48 (number -> VINTEGER .)
    GT              reduce using rule 48 (number -> VINTEGER .)
    GTEQ            reduce using rule 48 (number -> VINTEGER .)
    KEY_IN          reduce using rule 48 (number -> VINTEGER .)
    KEY_IS          reduce using rule 48 (number -> VINTEGER .)
    RRB             reduce using rule 48 (number -> VINTEGER .)
    KEY_BEGIN       reduce using rule 48 (number -> VINTEGER .)
    RCB             reduce using rule 48 (number -> VINTEGER .)
    SCOLON          reduce using rule 48 (number -> VINTEGER .)
    KEY_THEN        reduce using rule 48 (number -> VINTEGER .)
    COLON           reduce using rule 48 (number -> VINTEGER .)
    COMMA           reduce using rule 48 (number -> VINTEGER .)
    RSB             reduce using rule 48 (number -> VINTEGER .)
    KEY_OF          reduce using rule 48 (number -> VINTEGER .)


state 100

    (45) factor -> KEY_SET .

    MULTIPLY        reduce using rule 45 (factor -> KEY_SET .)
    DIVIDE          reduce using rule 45 (factor -> KEY_SET .)
    MODULUS         reduce using rule 45 (factor -> KEY_SET .)
    AND             reduce using rule 45 (factor -> KEY_SET .)
    PLUS            reduce using rule 45 (factor -> KEY_SET .)
    MINUS           reduce using rule 45 (factor -> KEY_SET .)
    OR              reduce using rule 45 (factor -> KEY_SET .)
    EQUAL           reduce using rule 45 (factor -> KEY_SET .)
    NEQUAL          reduce using rule 45 (factor -> KEY_SET .)
    LT              reduce using rule 45 (factor -> KEY_SET .)
    LTEQ            reduce using rule 45 (factor -> KEY_SET .)
    GT              reduce using rule 45 (factor -> KEY_SET .)
    GTEQ            reduce using rule 45 (factor -> KEY_SET .)
    KEY_IN          reduce using rule 45 (factor -> KEY_SET .)
    KEY_IS          reduce using rule 45 (factor -> KEY_SET .)
    KEY_THEN        reduce using rule 45 (factor -> KEY_SET .)
    SCOLON          reduce using rule 45 (factor -> KEY_SET .)
    KEY_BEGIN       reduce using rule 45 (factor -> KEY_SET .)
    COLON           reduce using rule 45 (factor -> KEY_SET .)
    RRB             reduce using rule 45 (factor -> KEY_SET .)
    COMMA           reduce using rule 45 (factor -> KEY_SET .)
    RSB             reduce using rule 45 (factor -> KEY_SET .)
    KEY_OF          reduce using rule 45 (factor -> KEY_SET .)
    RCB             reduce using rule 45 (factor -> KEY_SET .)


state 101

    (36) factor -> NOT . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 169
    set                            shift and go to state 110
    string                         shift and go to state 107
    char                           shift and go to state 112
    designator                     shift and go to state 121
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 102

    (43) factor -> KEY_STRING .

    MULTIPLY        reduce using rule 43 (factor -> KEY_STRING .)
    DIVIDE          reduce using rule 43 (factor -> KEY_STRING .)
    MODULUS         reduce using rule 43 (factor -> KEY_STRING .)
    AND             reduce using rule 43 (factor -> KEY_STRING .)
    PLUS            reduce using rule 43 (factor -> KEY_STRING .)
    MINUS           reduce using rule 43 (factor -> KEY_STRING .)
    OR              reduce using rule 43 (factor -> KEY_STRING .)
    EQUAL           reduce using rule 43 (factor -> KEY_STRING .)
    NEQUAL          reduce using rule 43 (factor -> KEY_STRING .)
    LT              reduce using rule 43 (factor -> KEY_STRING .)
    LTEQ            reduce using rule 43 (factor -> KEY_STRING .)
    GT              reduce using rule 43 (factor -> KEY_STRING .)
    GTEQ            reduce using rule 43 (factor -> KEY_STRING .)
    KEY_IN          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_IS          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_THEN        reduce using rule 43 (factor -> KEY_STRING .)
    SCOLON          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_BEGIN       reduce using rule 43 (factor -> KEY_STRING .)
    COLON           reduce using rule 43 (factor -> KEY_STRING .)
    RRB             reduce using rule 43 (factor -> KEY_STRING .)
    COMMA           reduce using rule 43 (factor -> KEY_STRING .)
    RSB             reduce using rule 43 (factor -> KEY_STRING .)
    KEY_OF          reduce using rule 43 (factor -> KEY_STRING .)
    RCB             reduce using rule 43 (factor -> KEY_STRING .)


state 103

    (20) simpleExpression -> PLUS . term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 111
    set                            shift and go to state 110
    string                         shift and go to state 107
    char                           shift and go to state 112
    designator                     shift and go to state 121
    term                           shift and go to state 170
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 104

    (144) ifStatement -> KEY_IF expression . KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF expression . KEY_THEN statementSequence ifss KEY_END

    KEY_THEN        shift and go to state 171


state 105

    (40) factor -> KEY_INTEGER .

    MULTIPLY        reduce using rule 40 (factor -> KEY_INTEGER .)
    DIVIDE          reduce using rule 40 (factor -> KEY_INTEGER .)
    MODULUS         reduce using rule 40 (factor -> KEY_INTEGER .)
    AND             reduce using rule 40 (factor -> KEY_INTEGER .)
    PLUS            reduce using rule 40 (factor -> KEY_INTEGER .)
    MINUS           reduce using rule 40 (factor -> KEY_INTEGER .)
    OR              reduce using rule 40 (factor -> KEY_INTEGER .)
    EQUAL           reduce using rule 40 (factor -> KEY_INTEGER .)
    NEQUAL          reduce using rule 40 (factor -> KEY_INTEGER .)
    LT              reduce using rule 40 (factor -> KEY_INTEGER .)
    LTEQ            reduce using rule 40 (factor -> KEY_INTEGER .)
    GT              reduce using rule 40 (factor -> KEY_INTEGER .)
    GTEQ            reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_IN          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_IS          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_THEN        reduce using rule 40 (factor -> KEY_INTEGER .)
    SCOLON          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_BEGIN       reduce using rule 40 (factor -> KEY_INTEGER .)
    COLON           reduce using rule 40 (factor -> KEY_INTEGER .)
    RRB             reduce using rule 40 (factor -> KEY_INTEGER .)
    COMMA           reduce using rule 40 (factor -> KEY_INTEGER .)
    RSB             reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_OF          reduce using rule 40 (factor -> KEY_INTEGER .)
    RCB             reduce using rule 40 (factor -> KEY_INTEGER .)


state 106

    (41) factor -> KEY_BOOLEAN .

    MULTIPLY        reduce using rule 41 (factor -> KEY_BOOLEAN .)
    DIVIDE          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    MODULUS         reduce using rule 41 (factor -> KEY_BOOLEAN .)
    AND             reduce using rule 41 (factor -> KEY_BOOLEAN .)
    PLUS            reduce using rule 41 (factor -> KEY_BOOLEAN .)
    MINUS           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    OR              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    EQUAL           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    NEQUAL          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    LT              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    LTEQ            reduce using rule 41 (factor -> KEY_BOOLEAN .)
    GT              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    GTEQ            reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_IN          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_IS          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_THEN        reduce using rule 41 (factor -> KEY_BOOLEAN .)
    SCOLON          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_BEGIN       reduce using rule 41 (factor -> KEY_BOOLEAN .)
    COLON           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    RRB             reduce using rule 41 (factor -> KEY_BOOLEAN .)
    COMMA           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    RSB             reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_OF          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    RCB             reduce using rule 41 (factor -> KEY_BOOLEAN .)


state 107

    (30) factor -> string .

    MULTIPLY        reduce using rule 30 (factor -> string .)
    DIVIDE          reduce using rule 30 (factor -> string .)
    MODULUS         reduce using rule 30 (factor -> string .)
    AND             reduce using rule 30 (factor -> string .)
    PLUS            reduce using rule 30 (factor -> string .)
    MINUS           reduce using rule 30 (factor -> string .)
    OR              reduce using rule 30 (factor -> string .)
    EQUAL           reduce using rule 30 (factor -> string .)
    NEQUAL          reduce using rule 30 (factor -> string .)
    LT              reduce using rule 30 (factor -> string .)
    LTEQ            reduce using rule 30 (factor -> string .)
    GT              reduce using rule 30 (factor -> string .)
    GTEQ            reduce using rule 30 (factor -> string .)
    KEY_IN          reduce using rule 30 (factor -> string .)
    KEY_IS          reduce using rule 30 (factor -> string .)
    KEY_THEN        reduce using rule 30 (factor -> string .)
    SCOLON          reduce using rule 30 (factor -> string .)
    KEY_BEGIN       reduce using rule 30 (factor -> string .)
    COLON           reduce using rule 30 (factor -> string .)
    RRB             reduce using rule 30 (factor -> string .)
    COMMA           reduce using rule 30 (factor -> string .)
    RSB             reduce using rule 30 (factor -> string .)
    KEY_OF          reduce using rule 30 (factor -> string .)
    RCB             reduce using rule 30 (factor -> string .)


state 108

    (28) factor -> number .

    MULTIPLY        reduce using rule 28 (factor -> number .)
    DIVIDE          reduce using rule 28 (factor -> number .)
    MODULUS         reduce using rule 28 (factor -> number .)
    AND             reduce using rule 28 (factor -> number .)
    PLUS            reduce using rule 28 (factor -> number .)
    MINUS           reduce using rule 28 (factor -> number .)
    OR              reduce using rule 28 (factor -> number .)
    EQUAL           reduce using rule 28 (factor -> number .)
    NEQUAL          reduce using rule 28 (factor -> number .)
    LT              reduce using rule 28 (factor -> number .)
    LTEQ            reduce using rule 28 (factor -> number .)
    GT              reduce using rule 28 (factor -> number .)
    GTEQ            reduce using rule 28 (factor -> number .)
    KEY_IN          reduce using rule 28 (factor -> number .)
    KEY_IS          reduce using rule 28 (factor -> number .)
    KEY_THEN        reduce using rule 28 (factor -> number .)
    SCOLON          reduce using rule 28 (factor -> number .)
    KEY_BEGIN       reduce using rule 28 (factor -> number .)
    COLON           reduce using rule 28 (factor -> number .)
    RRB             reduce using rule 28 (factor -> number .)
    COMMA           reduce using rule 28 (factor -> number .)
    RSB             reduce using rule 28 (factor -> number .)
    KEY_OF          reduce using rule 28 (factor -> number .)
    RCB             reduce using rule 28 (factor -> number .)


state 109

    (21) simpleExpression -> term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (172) empty -> .

    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)

    simpless                       shift and go to state 172
    empty                          shift and go to state 173

state 110

    (32) factor -> set .

    MULTIPLY        reduce using rule 32 (factor -> set .)
    DIVIDE          reduce using rule 32 (factor -> set .)
    MODULUS         reduce using rule 32 (factor -> set .)
    AND             reduce using rule 32 (factor -> set .)
    PLUS            reduce using rule 32 (factor -> set .)
    MINUS           reduce using rule 32 (factor -> set .)
    OR              reduce using rule 32 (factor -> set .)
    EQUAL           reduce using rule 32 (factor -> set .)
    NEQUAL          reduce using rule 32 (factor -> set .)
    LT              reduce using rule 32 (factor -> set .)
    LTEQ            reduce using rule 32 (factor -> set .)
    GT              reduce using rule 32 (factor -> set .)
    GTEQ            reduce using rule 32 (factor -> set .)
    KEY_IN          reduce using rule 32 (factor -> set .)
    KEY_IS          reduce using rule 32 (factor -> set .)
    KEY_THEN        reduce using rule 32 (factor -> set .)
    SCOLON          reduce using rule 32 (factor -> set .)
    KEY_BEGIN       reduce using rule 32 (factor -> set .)
    COLON           reduce using rule 32 (factor -> set .)
    RRB             reduce using rule 32 (factor -> set .)
    COMMA           reduce using rule 32 (factor -> set .)
    RSB             reduce using rule 32 (factor -> set .)
    KEY_OF          reduce using rule 32 (factor -> set .)
    RCB             reduce using rule 32 (factor -> set .)


state 111

    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (172) empty -> .

    MULTIPLY        reduce using rule 172 (empty -> .)
    DIVIDE          reduce using rule 172 (empty -> .)
    MODULUS         reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)

    termss                         shift and go to state 174
    empty                          shift and go to state 175

state 112

    (29) factor -> char .

    MULTIPLY        reduce using rule 29 (factor -> char .)
    DIVIDE          reduce using rule 29 (factor -> char .)
    MODULUS         reduce using rule 29 (factor -> char .)
    AND             reduce using rule 29 (factor -> char .)
    PLUS            reduce using rule 29 (factor -> char .)
    MINUS           reduce using rule 29 (factor -> char .)
    OR              reduce using rule 29 (factor -> char .)
    EQUAL           reduce using rule 29 (factor -> char .)
    NEQUAL          reduce using rule 29 (factor -> char .)
    LT              reduce using rule 29 (factor -> char .)
    LTEQ            reduce using rule 29 (factor -> char .)
    GT              reduce using rule 29 (factor -> char .)
    GTEQ            reduce using rule 29 (factor -> char .)
    KEY_IN          reduce using rule 29 (factor -> char .)
    KEY_IS          reduce using rule 29 (factor -> char .)
    KEY_THEN        reduce using rule 29 (factor -> char .)
    SCOLON          reduce using rule 29 (factor -> char .)
    KEY_BEGIN       reduce using rule 29 (factor -> char .)
    COLON           reduce using rule 29 (factor -> char .)
    RRB             reduce using rule 29 (factor -> char .)
    COMMA           reduce using rule 29 (factor -> char .)
    RSB             reduce using rule 29 (factor -> char .)
    KEY_OF          reduce using rule 29 (factor -> char .)
    RCB             reduce using rule 29 (factor -> char .)


state 113

    (44) factor -> KEY_REAL .

    MULTIPLY        reduce using rule 44 (factor -> KEY_REAL .)
    DIVIDE          reduce using rule 44 (factor -> KEY_REAL .)
    MODULUS         reduce using rule 44 (factor -> KEY_REAL .)
    AND             reduce using rule 44 (factor -> KEY_REAL .)
    PLUS            reduce using rule 44 (factor -> KEY_REAL .)
    MINUS           reduce using rule 44 (factor -> KEY_REAL .)
    OR              reduce using rule 44 (factor -> KEY_REAL .)
    EQUAL           reduce using rule 44 (factor -> KEY_REAL .)
    NEQUAL          reduce using rule 44 (factor -> KEY_REAL .)
    LT              reduce using rule 44 (factor -> KEY_REAL .)
    LTEQ            reduce using rule 44 (factor -> KEY_REAL .)
    GT              reduce using rule 44 (factor -> KEY_REAL .)
    GTEQ            reduce using rule 44 (factor -> KEY_REAL .)
    KEY_IN          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_IS          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_THEN        reduce using rule 44 (factor -> KEY_REAL .)
    SCOLON          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_BEGIN       reduce using rule 44 (factor -> KEY_REAL .)
    COLON           reduce using rule 44 (factor -> KEY_REAL .)
    RRB             reduce using rule 44 (factor -> KEY_REAL .)
    COMMA           reduce using rule 44 (factor -> KEY_REAL .)
    RSB             reduce using rule 44 (factor -> KEY_REAL .)
    KEY_OF          reduce using rule 44 (factor -> KEY_REAL .)
    RCB             reduce using rule 44 (factor -> KEY_REAL .)


state 114

    (22) simpleExpression -> MINUS . term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 111
    set                            shift and go to state 110
    string                         shift and go to state 107
    char                           shift and go to state 112
    designator                     shift and go to state 121
    term                           shift and go to state 176
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 115

    (51) string -> VSTRING .

    MULTIPLY        reduce using rule 51 (string -> VSTRING .)
    DIVIDE          reduce using rule 51 (string -> VSTRING .)
    MODULUS         reduce using rule 51 (string -> VSTRING .)
    AND             reduce using rule 51 (string -> VSTRING .)
    PLUS            reduce using rule 51 (string -> VSTRING .)
    MINUS           reduce using rule 51 (string -> VSTRING .)
    OR              reduce using rule 51 (string -> VSTRING .)
    EQUAL           reduce using rule 51 (string -> VSTRING .)
    NEQUAL          reduce using rule 51 (string -> VSTRING .)
    LT              reduce using rule 51 (string -> VSTRING .)
    LTEQ            reduce using rule 51 (string -> VSTRING .)
    GT              reduce using rule 51 (string -> VSTRING .)
    GTEQ            reduce using rule 51 (string -> VSTRING .)
    KEY_IN          reduce using rule 51 (string -> VSTRING .)
    KEY_IS          reduce using rule 51 (string -> VSTRING .)
    RRB             reduce using rule 51 (string -> VSTRING .)
    KEY_THEN        reduce using rule 51 (string -> VSTRING .)
    SCOLON          reduce using rule 51 (string -> VSTRING .)
    KEY_BEGIN       reduce using rule 51 (string -> VSTRING .)
    COLON           reduce using rule 51 (string -> VSTRING .)
    COMMA           reduce using rule 51 (string -> VSTRING .)
    RSB             reduce using rule 51 (string -> VSTRING .)
    KEY_OF          reduce using rule 51 (string -> VSTRING .)
    RCB             reduce using rule 51 (string -> VSTRING .)


state 116

    (39) factor -> KEY_ORD . factor
    (47) factor -> KEY_ORD . LRB factor RRB
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    LRB             shift and go to state 178
    KEY_NIL         shift and go to state 96
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 177
    set                            shift and go to state 110
    string                         shift and go to state 107
    char                           shift and go to state 112
    designator                     shift and go to state 121
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 117

    (18) expression -> simpleExpression .
    (19) expression -> simpleExpression . relation simpleExpression
    (75) relation -> . EQUAL
    (76) relation -> . NEQUAL
    (77) relation -> . LT
    (78) relation -> . LTEQ
    (79) relation -> . GT
    (80) relation -> . GTEQ
    (81) relation -> . KEY_IN
    (82) relation -> . KEY_IS

    SCOLON          reduce using rule 18 (expression -> simpleExpression .)
    RRB             reduce using rule 18 (expression -> simpleExpression .)
    COMMA           reduce using rule 18 (expression -> simpleExpression .)
    RSB             reduce using rule 18 (expression -> simpleExpression .)
    KEY_BEGIN       reduce using rule 18 (expression -> simpleExpression .)
    KEY_THEN        reduce using rule 18 (expression -> simpleExpression .)
    COLON           reduce using rule 18 (expression -> simpleExpression .)
    RCB             reduce using rule 18 (expression -> simpleExpression .)
    KEY_OF          reduce using rule 18 (expression -> simpleExpression .)
    EQUAL           shift and go to state 179
    NEQUAL          shift and go to state 186
    LT              shift and go to state 181
    LTEQ            shift and go to state 180
    GT              shift and go to state 183
    GTEQ            shift and go to state 182
    KEY_IN          shift and go to state 187
    KEY_IS          shift and go to state 184

    relation                       shift and go to state 185

state 118

    (37) factor -> KEY_ABS . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 188
    set                            shift and go to state 110
    string                         shift and go to state 107
    char                           shift and go to state 112
    designator                     shift and go to state 121
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 119

    (38) factor -> KEY_CHR . factor
    (46) factor -> KEY_CHR . LRB factor RRB
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    LRB             shift and go to state 190
    KEY_NIL         shift and go to state 96
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 189
    set                            shift and go to state 110
    string                         shift and go to state 107
    char                           shift and go to state 112
    designator                     shift and go to state 121
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 120

    (50) char -> VCHAR .

    MULTIPLY        reduce using rule 50 (char -> VCHAR .)
    DIVIDE          reduce using rule 50 (char -> VCHAR .)
    MODULUS         reduce using rule 50 (char -> VCHAR .)
    AND             reduce using rule 50 (char -> VCHAR .)
    PLUS            reduce using rule 50 (char -> VCHAR .)
    MINUS           reduce using rule 50 (char -> VCHAR .)
    OR              reduce using rule 50 (char -> VCHAR .)
    EQUAL           reduce using rule 50 (char -> VCHAR .)
    NEQUAL          reduce using rule 50 (char -> VCHAR .)
    LT              reduce using rule 50 (char -> VCHAR .)
    LTEQ            reduce using rule 50 (char -> VCHAR .)
    GT              reduce using rule 50 (char -> VCHAR .)
    GTEQ            reduce using rule 50 (char -> VCHAR .)
    KEY_IN          reduce using rule 50 (char -> VCHAR .)
    KEY_IS          reduce using rule 50 (char -> VCHAR .)
    KEY_THEN        reduce using rule 50 (char -> VCHAR .)
    KEY_OF          reduce using rule 50 (char -> VCHAR .)
    COMMA           reduce using rule 50 (char -> VCHAR .)
    RRB             reduce using rule 50 (char -> VCHAR .)
    SCOLON          reduce using rule 50 (char -> VCHAR .)
    KEY_BEGIN       reduce using rule 50 (char -> VCHAR .)
    COLON           reduce using rule 50 (char -> VCHAR .)
    RSB             reduce using rule 50 (char -> VCHAR .)
    RCB             reduce using rule 50 (char -> VCHAR .)


state 121

    (33) factor -> designator .
    (34) factor -> designator . actualParameters
    (66) actualParameters -> . LRB expList RRB
    (67) actualParameters -> . LRB RRB

    MULTIPLY        reduce using rule 33 (factor -> designator .)
    DIVIDE          reduce using rule 33 (factor -> designator .)
    MODULUS         reduce using rule 33 (factor -> designator .)
    AND             reduce using rule 33 (factor -> designator .)
    PLUS            reduce using rule 33 (factor -> designator .)
    MINUS           reduce using rule 33 (factor -> designator .)
    OR              reduce using rule 33 (factor -> designator .)
    EQUAL           reduce using rule 33 (factor -> designator .)
    NEQUAL          reduce using rule 33 (factor -> designator .)
    LT              reduce using rule 33 (factor -> designator .)
    LTEQ            reduce using rule 33 (factor -> designator .)
    GT              reduce using rule 33 (factor -> designator .)
    GTEQ            reduce using rule 33 (factor -> designator .)
    KEY_IN          reduce using rule 33 (factor -> designator .)
    KEY_IS          reduce using rule 33 (factor -> designator .)
    KEY_THEN        reduce using rule 33 (factor -> designator .)
    SCOLON          reduce using rule 33 (factor -> designator .)
    KEY_BEGIN       reduce using rule 33 (factor -> designator .)
    COLON           reduce using rule 33 (factor -> designator .)
    RRB             reduce using rule 33 (factor -> designator .)
    COMMA           reduce using rule 33 (factor -> designator .)
    RSB             reduce using rule 33 (factor -> designator .)
    KEY_OF          reduce using rule 33 (factor -> designator .)
    RCB             reduce using rule 33 (factor -> designator .)
    LRB             shift and go to state 136

    actualParameters               shift and go to state 191

state 122

    (35) factor -> LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 192
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 123

    (52) set -> LCB . element COMMA element RCB
    (53) set -> LCB . RCB
    (54) element -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    RCB             shift and go to state 193
    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 194
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    element                        shift and go to state 195
    designator                     shift and go to state 121
    term                           shift and go to state 109
    simpleExpression               shift and go to state 117
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 124

    (129) statement -> KEY_RETURN expression .

    SCOLON          reduce using rule 129 (statement -> KEY_RETURN expression .)


state 125

    (171) fileStatement -> KEY_FREAD LRB . identdef COMMA identdef COMMA VINTEGER RRB
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    identdef                       shift and go to state 196

state 126

    (163) ioStatement -> KEY_READ LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 197
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 127

    (61) qualident -> identdef DOT . qualident
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 198
    identdef                       shift and go to state 83

state 128

    (168) fileStatement -> identdef EQUAL . KEY_FOPEN LRB string COMMA char RRB

    KEY_FOPEN       shift and go to state 199


state 129

    (63) identdef -> AT IDENT .

    DOT             reduce using rule 63 (identdef -> AT IDENT .)
    RRB             reduce using rule 63 (identdef -> AT IDENT .)
    EQUAL           reduce using rule 63 (identdef -> AT IDENT .)
    IDENT           reduce using rule 63 (identdef -> AT IDENT .)
    AT              reduce using rule 63 (identdef -> AT IDENT .)
    LSB             reduce using rule 63 (identdef -> AT IDENT .)
    ASSIGN          reduce using rule 63 (identdef -> AT IDENT .)
    LRB             reduce using rule 63 (identdef -> AT IDENT .)
    SCOLON          reduce using rule 63 (identdef -> AT IDENT .)
    MULTIPLY        reduce using rule 63 (identdef -> AT IDENT .)
    DIVIDE          reduce using rule 63 (identdef -> AT IDENT .)
    MODULUS         reduce using rule 63 (identdef -> AT IDENT .)
    AND             reduce using rule 63 (identdef -> AT IDENT .)
    PLUS            reduce using rule 63 (identdef -> AT IDENT .)
    MINUS           reduce using rule 63 (identdef -> AT IDENT .)
    OR              reduce using rule 63 (identdef -> AT IDENT .)
    NEQUAL          reduce using rule 63 (identdef -> AT IDENT .)
    LT              reduce using rule 63 (identdef -> AT IDENT .)
    LTEQ            reduce using rule 63 (identdef -> AT IDENT .)
    GT              reduce using rule 63 (identdef -> AT IDENT .)
    GTEQ            reduce using rule 63 (identdef -> AT IDENT .)
    KEY_IN          reduce using rule 63 (identdef -> AT IDENT .)
    KEY_IS          reduce using rule 63 (identdef -> AT IDENT .)
    KEY_THEN        reduce using rule 63 (identdef -> AT IDENT .)
    KEY_BEGIN       reduce using rule 63 (identdef -> AT IDENT .)
    COLON           reduce using rule 63 (identdef -> AT IDENT .)
    COMMA           reduce using rule 63 (identdef -> AT IDENT .)
    RSB             reduce using rule 63 (identdef -> AT IDENT .)
    KEY_OF          reduce using rule 63 (identdef -> AT IDENT .)
    RCB             reduce using rule 63 (identdef -> AT IDENT .)


state 130

    (164) ioStatement -> KEY_READINT LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 200
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 131

    (155) doWhileStatement -> KEY_DO KEY_BEGIN . statementSequence KEY_END KEY_WHILE expression
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 201
    empty                          shift and go to state 16

state 132

    (153) whileStatement -> KEY_WHILE expression . KEY_BEGIN statementSequence KEY_END

    KEY_BEGIN       shift and go to state 202


state 133

    (148) switchStatement -> KEY_SWITCH expression . KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH expression . KEY_BEGIN case casess KEY_END

    KEY_BEGIN       shift and go to state 203


state 134

    (169) fileStatement -> KEY_FCLOSE LRB . identdef RRB
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    identdef                       shift and go to state 204

state 135

    (159) ioStatement -> KEY_WRITECHAR LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 205
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 136

    (66) actualParameters -> LRB . expList RRB
    (67) actualParameters -> LRB . RRB
    (64) expList -> . expList COMMA expression
    (65) expList -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    RRB             shift and go to state 208
    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 207
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    expList                        shift and go to state 206
    number                         shift and go to state 108

state 137

    (142) procedureCall -> designator actualParameters .

    SCOLON          reduce using rule 142 (procedureCall -> designator actualParameters .)


state 138

    (138) assignment -> designator ASSIGN . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 209
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    term                           shift and go to state 109
    designator                     shift and go to state 121
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 139

    (167) ioStatement -> KEY_READBOOL LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 210
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 140

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT . DOT

    DOT             shift and go to state 211


state 141

    (106) identList -> identList COMMA . IDENT

    IDENT           shift and go to state 212


state 142

    (109) variableDeclaration -> identList COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 217
    KEY_BOOLEAN     shift and go to state 222
    KEY_CHAR        shift and go to state 214
    KEY_STRING      shift and go to state 221
    KEY_REAL        shift and go to state 226
    KEY_SET         shift and go to state 213
    KEY_ARRAY       shift and go to state 220
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 219

    type                           shift and go to state 223
    arrayType                      shift and go to state 224
    pointerType                    shift and go to state 227
    varType                        shift and go to state 216
    recordType                     shift and go to state 225

state 143

    (11) varss -> varss variableDeclaration SCOLON .

    IDENT           reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_CONST       reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_VAR         reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)


state 144

    (83) typeDeclaration -> IDENT EQUAL . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 217
    KEY_BOOLEAN     shift and go to state 222
    KEY_CHAR        shift and go to state 214
    KEY_STRING      shift and go to state 221
    KEY_REAL        shift and go to state 226
    KEY_SET         shift and go to state 213
    KEY_ARRAY       shift and go to state 220
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 219

    type                           shift and go to state 228
    arrayType                      shift and go to state 224
    recordType                     shift and go to state 225
    varType                        shift and go to state 216
    pointerType                    shift and go to state 227

state 145

    (9) typess -> typess typeDeclaration SCOLON .

    IDENT           reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_CONST       reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_VAR         reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)


state 146

    (110) procedureDeclaration -> procedureHeading SCOLON procedureBody . IDENT

    IDENT           shift and go to state 229


state 147

    (120) procedureBody -> declarationSequence . KEY_BEGIN statementSequence KEY_END
    (2) declarationSequence -> declarationSequence . KEY_CONST conss
    (3) declarationSequence -> declarationSequence . KEY_TYPE typess
    (4) declarationSequence -> declarationSequence . KEY_VAR varss
    (5) declarationSequence -> declarationSequence . procss
    (13) procss -> . procss procedureDeclaration SCOLON
    (14) procss -> . empty
    (172) empty -> .

  ! shift/reduce conflict for KEY_BEGIN resolved as shift
  ! shift/reduce conflict for KEY_CONST resolved as shift
  ! shift/reduce conflict for KEY_TYPE resolved as shift
  ! shift/reduce conflict for KEY_VAR resolved as shift
    KEY_BEGIN       shift and go to state 230
    KEY_CONST       shift and go to state 7
    KEY_TYPE        shift and go to state 10
    KEY_VAR         shift and go to state 9
    KEY_PROCEDURE   reduce using rule 172 (empty -> .)

  ! KEY_BEGIN       [ reduce using rule 172 (empty -> .) ]
  ! KEY_CONST       [ reduce using rule 172 (empty -> .) ]
  ! KEY_TYPE        [ reduce using rule 172 (empty -> .) ]
  ! KEY_VAR         [ reduce using rule 172 (empty -> .) ]

    empty                          shift and go to state 12
    procss                         shift and go to state 11

state 148

    (111) procedureHeading -> KEY_PROCEDURE IDENT formalParameters . COLON type
    (112) procedureHeading -> KEY_PROCEDURE IDENT formalParameters .

    COLON           shift and go to state 231
    SCOLON          reduce using rule 112 (procedureHeading -> KEY_PROCEDURE IDENT formalParameters .)


state 149

    (113) formalParameters -> LRB . fpSection formalss RRB
    (114) formalParameters -> LRB . RRB
    (117) fpSection -> . IDENT fps COLON type

    RRB             shift and go to state 232
    IDENT           shift and go to state 234

    fpSection                      shift and go to state 233

state 150

    (17) constantDeclaration -> IDENT ASSIGN expression . COLON type

    COLON           shift and go to state 235


state 151

    (139) setStatement -> qualident DOT KEY_ADD . LRB expression RRB

    LRB             shift and go to state 236


state 152

    (140) setStatement -> qualident DOT KEY_DEL . LRB expression RRB

    LRB             shift and go to state 237


state 153

    (58) designator2 -> designator LRB . qualident RRB
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 238
    identdef                       shift and go to state 83

state 154

    (56) designator2 -> designator2 DOT . identdef
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    identdef                       shift and go to state 239

state 155

    (57) designator2 -> designator2 LSB . expList RSB
    (64) expList -> . expList COMMA expression
    (65) expList -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 207
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    expList                        shift and go to state 240
    number                         shift and go to state 108

state 156

    (154) forStatement -> KEY_FOR LRB assignment . SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    SCOLON          shift and go to state 241


state 157

    (138) assignment -> designator . ASSIGN expression

    ASSIGN          shift and go to state 138


state 158

    (156) ioStatement -> KEY_WRITE LRB expression . RRB

    RRB             shift and go to state 242


state 159

    (141) memoryalloc -> KEY_NEW LRB designator . RRB

    RRB             shift and go to state 243


state 160

    (166) ioStatement -> KEY_READCHAR LRB expression . RRB

    RRB             shift and go to state 244


state 161

    (157) ioStatement -> KEY_WRITEINT LRB expression . RRB

    RRB             shift and go to state 245


state 162

    (165) ioStatement -> KEY_READREAL LRB expression . RRB

    RRB             shift and go to state 246


state 163

    (160) ioStatement -> KEY_WRITEBOOL LRB expression . RRB

    RRB             shift and go to state 247


state 164

    (161) ioStatement -> KEY_WRITELN LRB expression . RRB

    RRB             shift and go to state 248


state 165

    (162) ioStatement -> KEY_WRITELN LRB RRB .

    SCOLON          reduce using rule 162 (ioStatement -> KEY_WRITELN LRB RRB .)


state 166

    (170) fileStatement -> KEY_FPRINTF LRB identdef . COMMA string RRB

    COMMA           shift and go to state 249


state 167

    (158) ioStatement -> KEY_WRITEREAL LRB expression . RRB

    RRB             shift and go to state 250


state 168

    (31) factor -> KEY_NIL LRB . designator RRB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    designator                     shift and go to state 251
    identdef                       shift and go to state 83

state 169

    (36) factor -> NOT factor .

    MULTIPLY        reduce using rule 36 (factor -> NOT factor .)
    DIVIDE          reduce using rule 36 (factor -> NOT factor .)
    MODULUS         reduce using rule 36 (factor -> NOT factor .)
    AND             reduce using rule 36 (factor -> NOT factor .)
    PLUS            reduce using rule 36 (factor -> NOT factor .)
    MINUS           reduce using rule 36 (factor -> NOT factor .)
    OR              reduce using rule 36 (factor -> NOT factor .)
    EQUAL           reduce using rule 36 (factor -> NOT factor .)
    NEQUAL          reduce using rule 36 (factor -> NOT factor .)
    LT              reduce using rule 36 (factor -> NOT factor .)
    LTEQ            reduce using rule 36 (factor -> NOT factor .)
    GT              reduce using rule 36 (factor -> NOT factor .)
    GTEQ            reduce using rule 36 (factor -> NOT factor .)
    KEY_IN          reduce using rule 36 (factor -> NOT factor .)
    KEY_IS          reduce using rule 36 (factor -> NOT factor .)
    KEY_THEN        reduce using rule 36 (factor -> NOT factor .)
    SCOLON          reduce using rule 36 (factor -> NOT factor .)
    KEY_BEGIN       reduce using rule 36 (factor -> NOT factor .)
    COLON           reduce using rule 36 (factor -> NOT factor .)
    RRB             reduce using rule 36 (factor -> NOT factor .)
    COMMA           reduce using rule 36 (factor -> NOT factor .)
    RSB             reduce using rule 36 (factor -> NOT factor .)
    KEY_OF          reduce using rule 36 (factor -> NOT factor .)
    RCB             reduce using rule 36 (factor -> NOT factor .)


state 170

    (20) simpleExpression -> PLUS term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (172) empty -> .

    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)

    simpless                       shift and go to state 252
    empty                          shift and go to state 173

state 171

    (144) ifStatement -> KEY_IF expression KEY_THEN . statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF expression KEY_THEN . statementSequence ifss KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)
    KEY_ELSEIF      reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 253
    empty                          shift and go to state 16

state 172

    (21) simpleExpression -> term simpless .
    (23) simpless -> simpless . addOperator term
    (72) addOperator -> . PLUS
    (73) addOperator -> . MINUS
    (74) addOperator -> . OR

    EQUAL           reduce using rule 21 (simpleExpression -> term simpless .)
    NEQUAL          reduce using rule 21 (simpleExpression -> term simpless .)
    LT              reduce using rule 21 (simpleExpression -> term simpless .)
    LTEQ            reduce using rule 21 (simpleExpression -> term simpless .)
    GT              reduce using rule 21 (simpleExpression -> term simpless .)
    GTEQ            reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_IN          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_IS          reduce using rule 21 (simpleExpression -> term simpless .)
    RRB             reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_BEGIN       reduce using rule 21 (simpleExpression -> term simpless .)
    SCOLON          reduce using rule 21 (simpleExpression -> term simpless .)
    RSB             reduce using rule 21 (simpleExpression -> term simpless .)
    COMMA           reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_THEN        reduce using rule 21 (simpleExpression -> term simpless .)
    COLON           reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_OF          reduce using rule 21 (simpleExpression -> term simpless .)
    RCB             reduce using rule 21 (simpleExpression -> term simpless .)
    PLUS            shift and go to state 257
    MINUS           shift and go to state 254
    OR              shift and go to state 256

    addOperator                    shift and go to state 255

state 173

    (24) simpless -> empty .

    PLUS            reduce using rule 24 (simpless -> empty .)
    MINUS           reduce using rule 24 (simpless -> empty .)
    OR              reduce using rule 24 (simpless -> empty .)
    EQUAL           reduce using rule 24 (simpless -> empty .)
    NEQUAL          reduce using rule 24 (simpless -> empty .)
    LT              reduce using rule 24 (simpless -> empty .)
    LTEQ            reduce using rule 24 (simpless -> empty .)
    GT              reduce using rule 24 (simpless -> empty .)
    GTEQ            reduce using rule 24 (simpless -> empty .)
    KEY_IN          reduce using rule 24 (simpless -> empty .)
    KEY_IS          reduce using rule 24 (simpless -> empty .)
    KEY_THEN        reduce using rule 24 (simpless -> empty .)
    SCOLON          reduce using rule 24 (simpless -> empty .)
    KEY_BEGIN       reduce using rule 24 (simpless -> empty .)
    COLON           reduce using rule 24 (simpless -> empty .)
    RRB             reduce using rule 24 (simpless -> empty .)
    COMMA           reduce using rule 24 (simpless -> empty .)
    RSB             reduce using rule 24 (simpless -> empty .)
    KEY_OF          reduce using rule 24 (simpless -> empty .)
    RCB             reduce using rule 24 (simpless -> empty .)


state 174

    (25) term -> factor termss .
    (26) termss -> termss . mulOperator factor
    (68) mulOperator -> . MULTIPLY
    (69) mulOperator -> . DIVIDE
    (70) mulOperator -> . MODULUS
    (71) mulOperator -> . AND

    PLUS            reduce using rule 25 (term -> factor termss .)
    MINUS           reduce using rule 25 (term -> factor termss .)
    OR              reduce using rule 25 (term -> factor termss .)
    EQUAL           reduce using rule 25 (term -> factor termss .)
    NEQUAL          reduce using rule 25 (term -> factor termss .)
    LT              reduce using rule 25 (term -> factor termss .)
    LTEQ            reduce using rule 25 (term -> factor termss .)
    GT              reduce using rule 25 (term -> factor termss .)
    GTEQ            reduce using rule 25 (term -> factor termss .)
    KEY_IN          reduce using rule 25 (term -> factor termss .)
    KEY_IS          reduce using rule 25 (term -> factor termss .)
    RRB             reduce using rule 25 (term -> factor termss .)
    KEY_BEGIN       reduce using rule 25 (term -> factor termss .)
    SCOLON          reduce using rule 25 (term -> factor termss .)
    COLON           reduce using rule 25 (term -> factor termss .)
    KEY_THEN        reduce using rule 25 (term -> factor termss .)
    COMMA           reduce using rule 25 (term -> factor termss .)
    RSB             reduce using rule 25 (term -> factor termss .)
    KEY_OF          reduce using rule 25 (term -> factor termss .)
    RCB             reduce using rule 25 (term -> factor termss .)
    MULTIPLY        shift and go to state 262
    DIVIDE          shift and go to state 258
    MODULUS         shift and go to state 260
    AND             shift and go to state 259

    mulOperator                    shift and go to state 261

state 175

    (27) termss -> empty .

    MULTIPLY        reduce using rule 27 (termss -> empty .)
    DIVIDE          reduce using rule 27 (termss -> empty .)
    MODULUS         reduce using rule 27 (termss -> empty .)
    AND             reduce using rule 27 (termss -> empty .)
    PLUS            reduce using rule 27 (termss -> empty .)
    MINUS           reduce using rule 27 (termss -> empty .)
    OR              reduce using rule 27 (termss -> empty .)
    EQUAL           reduce using rule 27 (termss -> empty .)
    NEQUAL          reduce using rule 27 (termss -> empty .)
    LT              reduce using rule 27 (termss -> empty .)
    LTEQ            reduce using rule 27 (termss -> empty .)
    GT              reduce using rule 27 (termss -> empty .)
    GTEQ            reduce using rule 27 (termss -> empty .)
    KEY_IN          reduce using rule 27 (termss -> empty .)
    KEY_IS          reduce using rule 27 (termss -> empty .)
    KEY_THEN        reduce using rule 27 (termss -> empty .)
    SCOLON          reduce using rule 27 (termss -> empty .)
    KEY_BEGIN       reduce using rule 27 (termss -> empty .)
    COLON           reduce using rule 27 (termss -> empty .)
    RRB             reduce using rule 27 (termss -> empty .)
    COMMA           reduce using rule 27 (termss -> empty .)
    RSB             reduce using rule 27 (termss -> empty .)
    KEY_OF          reduce using rule 27 (termss -> empty .)
    RCB             reduce using rule 27 (termss -> empty .)


state 176

    (22) simpleExpression -> MINUS term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (172) empty -> .

    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)
    KEY_THEN        reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_BEGIN       reduce using rule 172 (empty -> .)
    COLON           reduce using rule 172 (empty -> .)
    RRB             reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)
    RSB             reduce using rule 172 (empty -> .)
    KEY_OF          reduce using rule 172 (empty -> .)
    RCB             reduce using rule 172 (empty -> .)

    simpless                       shift and go to state 263
    empty                          shift and go to state 173

state 177

    (39) factor -> KEY_ORD factor .

    MULTIPLY        reduce using rule 39 (factor -> KEY_ORD factor .)
    DIVIDE          reduce using rule 39 (factor -> KEY_ORD factor .)
    MODULUS         reduce using rule 39 (factor -> KEY_ORD factor .)
    AND             reduce using rule 39 (factor -> KEY_ORD factor .)
    PLUS            reduce using rule 39 (factor -> KEY_ORD factor .)
    MINUS           reduce using rule 39 (factor -> KEY_ORD factor .)
    OR              reduce using rule 39 (factor -> KEY_ORD factor .)
    EQUAL           reduce using rule 39 (factor -> KEY_ORD factor .)
    NEQUAL          reduce using rule 39 (factor -> KEY_ORD factor .)
    LT              reduce using rule 39 (factor -> KEY_ORD factor .)
    LTEQ            reduce using rule 39 (factor -> KEY_ORD factor .)
    GT              reduce using rule 39 (factor -> KEY_ORD factor .)
    GTEQ            reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_IN          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_IS          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_THEN        reduce using rule 39 (factor -> KEY_ORD factor .)
    SCOLON          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_BEGIN       reduce using rule 39 (factor -> KEY_ORD factor .)
    COLON           reduce using rule 39 (factor -> KEY_ORD factor .)
    RRB             reduce using rule 39 (factor -> KEY_ORD factor .)
    COMMA           reduce using rule 39 (factor -> KEY_ORD factor .)
    RSB             reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_OF          reduce using rule 39 (factor -> KEY_ORD factor .)
    RCB             reduce using rule 39 (factor -> KEY_ORD factor .)


state 178

    (47) factor -> KEY_ORD LRB . factor RRB
    (35) factor -> LRB . expression RRB
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (25) term -> . factor termss
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 264
    set                            shift and go to state 110
    string                         shift and go to state 107
    expression                     shift and go to state 192
    char                           shift and go to state 112
    term                           shift and go to state 109
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 179

    (75) relation -> EQUAL .

    PLUS            reduce using rule 75 (relation -> EQUAL .)
    MINUS           reduce using rule 75 (relation -> EQUAL .)
    KEY_NIL         reduce using rule 75 (relation -> EQUAL .)
    LRB             reduce using rule 75 (relation -> EQUAL .)
    NOT             reduce using rule 75 (relation -> EQUAL .)
    KEY_ABS         reduce using rule 75 (relation -> EQUAL .)
    KEY_CHR         reduce using rule 75 (relation -> EQUAL .)
    KEY_ORD         reduce using rule 75 (relation -> EQUAL .)
    KEY_INTEGER     reduce using rule 75 (relation -> EQUAL .)
    KEY_BOOLEAN     reduce using rule 75 (relation -> EQUAL .)
    KEY_CHAR        reduce using rule 75 (relation -> EQUAL .)
    KEY_STRING      reduce using rule 75 (relation -> EQUAL .)
    KEY_REAL        reduce using rule 75 (relation -> EQUAL .)
    KEY_SET         reduce using rule 75 (relation -> EQUAL .)
    VINTEGER        reduce using rule 75 (relation -> EQUAL .)
    VREAL           reduce using rule 75 (relation -> EQUAL .)
    VCHAR           reduce using rule 75 (relation -> EQUAL .)
    VSTRING         reduce using rule 75 (relation -> EQUAL .)
    LCB             reduce using rule 75 (relation -> EQUAL .)
    IDENT           reduce using rule 75 (relation -> EQUAL .)
    AT              reduce using rule 75 (relation -> EQUAL .)


state 180

    (78) relation -> LTEQ .

    PLUS            reduce using rule 78 (relation -> LTEQ .)
    MINUS           reduce using rule 78 (relation -> LTEQ .)
    KEY_NIL         reduce using rule 78 (relation -> LTEQ .)
    LRB             reduce using rule 78 (relation -> LTEQ .)
    NOT             reduce using rule 78 (relation -> LTEQ .)
    KEY_ABS         reduce using rule 78 (relation -> LTEQ .)
    KEY_CHR         reduce using rule 78 (relation -> LTEQ .)
    KEY_ORD         reduce using rule 78 (relation -> LTEQ .)
    KEY_INTEGER     reduce using rule 78 (relation -> LTEQ .)
    KEY_BOOLEAN     reduce using rule 78 (relation -> LTEQ .)
    KEY_CHAR        reduce using rule 78 (relation -> LTEQ .)
    KEY_STRING      reduce using rule 78 (relation -> LTEQ .)
    KEY_REAL        reduce using rule 78 (relation -> LTEQ .)
    KEY_SET         reduce using rule 78 (relation -> LTEQ .)
    VINTEGER        reduce using rule 78 (relation -> LTEQ .)
    VREAL           reduce using rule 78 (relation -> LTEQ .)
    VCHAR           reduce using rule 78 (relation -> LTEQ .)
    VSTRING         reduce using rule 78 (relation -> LTEQ .)
    LCB             reduce using rule 78 (relation -> LTEQ .)
    IDENT           reduce using rule 78 (relation -> LTEQ .)
    AT              reduce using rule 78 (relation -> LTEQ .)


state 181

    (77) relation -> LT .

    PLUS            reduce using rule 77 (relation -> LT .)
    MINUS           reduce using rule 77 (relation -> LT .)
    KEY_NIL         reduce using rule 77 (relation -> LT .)
    LRB             reduce using rule 77 (relation -> LT .)
    NOT             reduce using rule 77 (relation -> LT .)
    KEY_ABS         reduce using rule 77 (relation -> LT .)
    KEY_CHR         reduce using rule 77 (relation -> LT .)
    KEY_ORD         reduce using rule 77 (relation -> LT .)
    KEY_INTEGER     reduce using rule 77 (relation -> LT .)
    KEY_BOOLEAN     reduce using rule 77 (relation -> LT .)
    KEY_CHAR        reduce using rule 77 (relation -> LT .)
    KEY_STRING      reduce using rule 77 (relation -> LT .)
    KEY_REAL        reduce using rule 77 (relation -> LT .)
    KEY_SET         reduce using rule 77 (relation -> LT .)
    VINTEGER        reduce using rule 77 (relation -> LT .)
    VREAL           reduce using rule 77 (relation -> LT .)
    VCHAR           reduce using rule 77 (relation -> LT .)
    VSTRING         reduce using rule 77 (relation -> LT .)
    LCB             reduce using rule 77 (relation -> LT .)
    IDENT           reduce using rule 77 (relation -> LT .)
    AT              reduce using rule 77 (relation -> LT .)


state 182

    (80) relation -> GTEQ .

    PLUS            reduce using rule 80 (relation -> GTEQ .)
    MINUS           reduce using rule 80 (relation -> GTEQ .)
    KEY_NIL         reduce using rule 80 (relation -> GTEQ .)
    LRB             reduce using rule 80 (relation -> GTEQ .)
    NOT             reduce using rule 80 (relation -> GTEQ .)
    KEY_ABS         reduce using rule 80 (relation -> GTEQ .)
    KEY_CHR         reduce using rule 80 (relation -> GTEQ .)
    KEY_ORD         reduce using rule 80 (relation -> GTEQ .)
    KEY_INTEGER     reduce using rule 80 (relation -> GTEQ .)
    KEY_BOOLEAN     reduce using rule 80 (relation -> GTEQ .)
    KEY_CHAR        reduce using rule 80 (relation -> GTEQ .)
    KEY_STRING      reduce using rule 80 (relation -> GTEQ .)
    KEY_REAL        reduce using rule 80 (relation -> GTEQ .)
    KEY_SET         reduce using rule 80 (relation -> GTEQ .)
    VINTEGER        reduce using rule 80 (relation -> GTEQ .)
    VREAL           reduce using rule 80 (relation -> GTEQ .)
    VCHAR           reduce using rule 80 (relation -> GTEQ .)
    VSTRING         reduce using rule 80 (relation -> GTEQ .)
    LCB             reduce using rule 80 (relation -> GTEQ .)
    IDENT           reduce using rule 80 (relation -> GTEQ .)
    AT              reduce using rule 80 (relation -> GTEQ .)


state 183

    (79) relation -> GT .

    PLUS            reduce using rule 79 (relation -> GT .)
    MINUS           reduce using rule 79 (relation -> GT .)
    KEY_NIL         reduce using rule 79 (relation -> GT .)
    LRB             reduce using rule 79 (relation -> GT .)
    NOT             reduce using rule 79 (relation -> GT .)
    KEY_ABS         reduce using rule 79 (relation -> GT .)
    KEY_CHR         reduce using rule 79 (relation -> GT .)
    KEY_ORD         reduce using rule 79 (relation -> GT .)
    KEY_INTEGER     reduce using rule 79 (relation -> GT .)
    KEY_BOOLEAN     reduce using rule 79 (relation -> GT .)
    KEY_CHAR        reduce using rule 79 (relation -> GT .)
    KEY_STRING      reduce using rule 79 (relation -> GT .)
    KEY_REAL        reduce using rule 79 (relation -> GT .)
    KEY_SET         reduce using rule 79 (relation -> GT .)
    VINTEGER        reduce using rule 79 (relation -> GT .)
    VREAL           reduce using rule 79 (relation -> GT .)
    VCHAR           reduce using rule 79 (relation -> GT .)
    VSTRING         reduce using rule 79 (relation -> GT .)
    LCB             reduce using rule 79 (relation -> GT .)
    IDENT           reduce using rule 79 (relation -> GT .)
    AT              reduce using rule 79 (relation -> GT .)


state 184

    (82) relation -> KEY_IS .

    PLUS            reduce using rule 82 (relation -> KEY_IS .)
    MINUS           reduce using rule 82 (relation -> KEY_IS .)
    KEY_NIL         reduce using rule 82 (relation -> KEY_IS .)
    LRB             reduce using rule 82 (relation -> KEY_IS .)
    NOT             reduce using rule 82 (relation -> KEY_IS .)
    KEY_ABS         reduce using rule 82 (relation -> KEY_IS .)
    KEY_CHR         reduce using rule 82 (relation -> KEY_IS .)
    KEY_ORD         reduce using rule 82 (relation -> KEY_IS .)
    KEY_INTEGER     reduce using rule 82 (relation -> KEY_IS .)
    KEY_BOOLEAN     reduce using rule 82 (relation -> KEY_IS .)
    KEY_CHAR        reduce using rule 82 (relation -> KEY_IS .)
    KEY_STRING      reduce using rule 82 (relation -> KEY_IS .)
    KEY_REAL        reduce using rule 82 (relation -> KEY_IS .)
    KEY_SET         reduce using rule 82 (relation -> KEY_IS .)
    VINTEGER        reduce using rule 82 (relation -> KEY_IS .)
    VREAL           reduce using rule 82 (relation -> KEY_IS .)
    VCHAR           reduce using rule 82 (relation -> KEY_IS .)
    VSTRING         reduce using rule 82 (relation -> KEY_IS .)
    LCB             reduce using rule 82 (relation -> KEY_IS .)
    IDENT           reduce using rule 82 (relation -> KEY_IS .)
    AT              reduce using rule 82 (relation -> KEY_IS .)


state 185

    (19) expression -> simpleExpression relation . simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 111
    set                            shift and go to state 110
    string                         shift and go to state 107
    char                           shift and go to state 112
    simpleExpression               shift and go to state 265
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 186

    (76) relation -> NEQUAL .

    PLUS            reduce using rule 76 (relation -> NEQUAL .)
    MINUS           reduce using rule 76 (relation -> NEQUAL .)
    KEY_NIL         reduce using rule 76 (relation -> NEQUAL .)
    LRB             reduce using rule 76 (relation -> NEQUAL .)
    NOT             reduce using rule 76 (relation -> NEQUAL .)
    KEY_ABS         reduce using rule 76 (relation -> NEQUAL .)
    KEY_CHR         reduce using rule 76 (relation -> NEQUAL .)
    KEY_ORD         reduce using rule 76 (relation -> NEQUAL .)
    KEY_INTEGER     reduce using rule 76 (relation -> NEQUAL .)
    KEY_BOOLEAN     reduce using rule 76 (relation -> NEQUAL .)
    KEY_CHAR        reduce using rule 76 (relation -> NEQUAL .)
    KEY_STRING      reduce using rule 76 (relation -> NEQUAL .)
    KEY_REAL        reduce using rule 76 (relation -> NEQUAL .)
    KEY_SET         reduce using rule 76 (relation -> NEQUAL .)
    VINTEGER        reduce using rule 76 (relation -> NEQUAL .)
    VREAL           reduce using rule 76 (relation -> NEQUAL .)
    VCHAR           reduce using rule 76 (relation -> NEQUAL .)
    VSTRING         reduce using rule 76 (relation -> NEQUAL .)
    LCB             reduce using rule 76 (relation -> NEQUAL .)
    IDENT           reduce using rule 76 (relation -> NEQUAL .)
    AT              reduce using rule 76 (relation -> NEQUAL .)


state 187

    (81) relation -> KEY_IN .

    PLUS            reduce using rule 81 (relation -> KEY_IN .)
    MINUS           reduce using rule 81 (relation -> KEY_IN .)
    KEY_NIL         reduce using rule 81 (relation -> KEY_IN .)
    LRB             reduce using rule 81 (relation -> KEY_IN .)
    NOT             reduce using rule 81 (relation -> KEY_IN .)
    KEY_ABS         reduce using rule 81 (relation -> KEY_IN .)
    KEY_CHR         reduce using rule 81 (relation -> KEY_IN .)
    KEY_ORD         reduce using rule 81 (relation -> KEY_IN .)
    KEY_INTEGER     reduce using rule 81 (relation -> KEY_IN .)
    KEY_BOOLEAN     reduce using rule 81 (relation -> KEY_IN .)
    KEY_CHAR        reduce using rule 81 (relation -> KEY_IN .)
    KEY_STRING      reduce using rule 81 (relation -> KEY_IN .)
    KEY_REAL        reduce using rule 81 (relation -> KEY_IN .)
    KEY_SET         reduce using rule 81 (relation -> KEY_IN .)
    VINTEGER        reduce using rule 81 (relation -> KEY_IN .)
    VREAL           reduce using rule 81 (relation -> KEY_IN .)
    VCHAR           reduce using rule 81 (relation -> KEY_IN .)
    VSTRING         reduce using rule 81 (relation -> KEY_IN .)
    LCB             reduce using rule 81 (relation -> KEY_IN .)
    IDENT           reduce using rule 81 (relation -> KEY_IN .)
    AT              reduce using rule 81 (relation -> KEY_IN .)


state 188

    (37) factor -> KEY_ABS factor .

    MULTIPLY        reduce using rule 37 (factor -> KEY_ABS factor .)
    DIVIDE          reduce using rule 37 (factor -> KEY_ABS factor .)
    MODULUS         reduce using rule 37 (factor -> KEY_ABS factor .)
    AND             reduce using rule 37 (factor -> KEY_ABS factor .)
    PLUS            reduce using rule 37 (factor -> KEY_ABS factor .)
    MINUS           reduce using rule 37 (factor -> KEY_ABS factor .)
    OR              reduce using rule 37 (factor -> KEY_ABS factor .)
    EQUAL           reduce using rule 37 (factor -> KEY_ABS factor .)
    NEQUAL          reduce using rule 37 (factor -> KEY_ABS factor .)
    LT              reduce using rule 37 (factor -> KEY_ABS factor .)
    LTEQ            reduce using rule 37 (factor -> KEY_ABS factor .)
    GT              reduce using rule 37 (factor -> KEY_ABS factor .)
    GTEQ            reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_IN          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_IS          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_THEN        reduce using rule 37 (factor -> KEY_ABS factor .)
    SCOLON          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_BEGIN       reduce using rule 37 (factor -> KEY_ABS factor .)
    COLON           reduce using rule 37 (factor -> KEY_ABS factor .)
    RRB             reduce using rule 37 (factor -> KEY_ABS factor .)
    COMMA           reduce using rule 37 (factor -> KEY_ABS factor .)
    RSB             reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_OF          reduce using rule 37 (factor -> KEY_ABS factor .)
    RCB             reduce using rule 37 (factor -> KEY_ABS factor .)


state 189

    (38) factor -> KEY_CHR factor .

    MULTIPLY        reduce using rule 38 (factor -> KEY_CHR factor .)
    DIVIDE          reduce using rule 38 (factor -> KEY_CHR factor .)
    MODULUS         reduce using rule 38 (factor -> KEY_CHR factor .)
    AND             reduce using rule 38 (factor -> KEY_CHR factor .)
    PLUS            reduce using rule 38 (factor -> KEY_CHR factor .)
    MINUS           reduce using rule 38 (factor -> KEY_CHR factor .)
    OR              reduce using rule 38 (factor -> KEY_CHR factor .)
    EQUAL           reduce using rule 38 (factor -> KEY_CHR factor .)
    NEQUAL          reduce using rule 38 (factor -> KEY_CHR factor .)
    LT              reduce using rule 38 (factor -> KEY_CHR factor .)
    LTEQ            reduce using rule 38 (factor -> KEY_CHR factor .)
    GT              reduce using rule 38 (factor -> KEY_CHR factor .)
    GTEQ            reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_IN          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_IS          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_THEN        reduce using rule 38 (factor -> KEY_CHR factor .)
    SCOLON          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_BEGIN       reduce using rule 38 (factor -> KEY_CHR factor .)
    COLON           reduce using rule 38 (factor -> KEY_CHR factor .)
    RRB             reduce using rule 38 (factor -> KEY_CHR factor .)
    COMMA           reduce using rule 38 (factor -> KEY_CHR factor .)
    RSB             reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_OF          reduce using rule 38 (factor -> KEY_CHR factor .)
    RCB             reduce using rule 38 (factor -> KEY_CHR factor .)


state 190

    (46) factor -> KEY_CHR LRB . factor RRB
    (35) factor -> LRB . expression RRB
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (25) term -> . factor termss
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 266
    set                            shift and go to state 110
    string                         shift and go to state 107
    expression                     shift and go to state 192
    char                           shift and go to state 112
    term                           shift and go to state 109
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 191

    (34) factor -> designator actualParameters .

    MULTIPLY        reduce using rule 34 (factor -> designator actualParameters .)
    DIVIDE          reduce using rule 34 (factor -> designator actualParameters .)
    MODULUS         reduce using rule 34 (factor -> designator actualParameters .)
    AND             reduce using rule 34 (factor -> designator actualParameters .)
    PLUS            reduce using rule 34 (factor -> designator actualParameters .)
    MINUS           reduce using rule 34 (factor -> designator actualParameters .)
    OR              reduce using rule 34 (factor -> designator actualParameters .)
    EQUAL           reduce using rule 34 (factor -> designator actualParameters .)
    NEQUAL          reduce using rule 34 (factor -> designator actualParameters .)
    LT              reduce using rule 34 (factor -> designator actualParameters .)
    LTEQ            reduce using rule 34 (factor -> designator actualParameters .)
    GT              reduce using rule 34 (factor -> designator actualParameters .)
    GTEQ            reduce using rule 34 (factor -> designator actualParameters .)
    KEY_IN          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_IS          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_THEN        reduce using rule 34 (factor -> designator actualParameters .)
    SCOLON          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_BEGIN       reduce using rule 34 (factor -> designator actualParameters .)
    COLON           reduce using rule 34 (factor -> designator actualParameters .)
    RRB             reduce using rule 34 (factor -> designator actualParameters .)
    COMMA           reduce using rule 34 (factor -> designator actualParameters .)
    RSB             reduce using rule 34 (factor -> designator actualParameters .)
    KEY_OF          reduce using rule 34 (factor -> designator actualParameters .)
    RCB             reduce using rule 34 (factor -> designator actualParameters .)


state 192

    (35) factor -> LRB expression . RRB

    RRB             shift and go to state 267


state 193

    (53) set -> LCB RCB .

    MULTIPLY        reduce using rule 53 (set -> LCB RCB .)
    DIVIDE          reduce using rule 53 (set -> LCB RCB .)
    MODULUS         reduce using rule 53 (set -> LCB RCB .)
    AND             reduce using rule 53 (set -> LCB RCB .)
    PLUS            reduce using rule 53 (set -> LCB RCB .)
    MINUS           reduce using rule 53 (set -> LCB RCB .)
    OR              reduce using rule 53 (set -> LCB RCB .)
    EQUAL           reduce using rule 53 (set -> LCB RCB .)
    NEQUAL          reduce using rule 53 (set -> LCB RCB .)
    LT              reduce using rule 53 (set -> LCB RCB .)
    LTEQ            reduce using rule 53 (set -> LCB RCB .)
    GT              reduce using rule 53 (set -> LCB RCB .)
    GTEQ            reduce using rule 53 (set -> LCB RCB .)
    KEY_IN          reduce using rule 53 (set -> LCB RCB .)
    KEY_IS          reduce using rule 53 (set -> LCB RCB .)
    SCOLON          reduce using rule 53 (set -> LCB RCB .)
    KEY_THEN        reduce using rule 53 (set -> LCB RCB .)
    KEY_BEGIN       reduce using rule 53 (set -> LCB RCB .)
    COLON           reduce using rule 53 (set -> LCB RCB .)
    RRB             reduce using rule 53 (set -> LCB RCB .)
    COMMA           reduce using rule 53 (set -> LCB RCB .)
    RSB             reduce using rule 53 (set -> LCB RCB .)
    KEY_OF          reduce using rule 53 (set -> LCB RCB .)
    RCB             reduce using rule 53 (set -> LCB RCB .)


state 194

    (54) element -> expression .

    COMMA           reduce using rule 54 (element -> expression .)
    RCB             reduce using rule 54 (element -> expression .)


state 195

    (52) set -> LCB element . COMMA element RCB

    COMMA           shift and go to state 268


state 196

    (171) fileStatement -> KEY_FREAD LRB identdef . COMMA identdef COMMA VINTEGER RRB

    COMMA           shift and go to state 269


state 197

    (163) ioStatement -> KEY_READ LRB expression . RRB

    RRB             shift and go to state 270


state 198

    (61) qualident -> identdef DOT qualident .

    IDENT           reduce using rule 61 (qualident -> identdef DOT qualident .)
    AT              reduce using rule 61 (qualident -> identdef DOT qualident .)
    DOT             reduce using rule 61 (qualident -> identdef DOT qualident .)
    LSB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    LRB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    MULTIPLY        reduce using rule 61 (qualident -> identdef DOT qualident .)
    DIVIDE          reduce using rule 61 (qualident -> identdef DOT qualident .)
    MODULUS         reduce using rule 61 (qualident -> identdef DOT qualident .)
    AND             reduce using rule 61 (qualident -> identdef DOT qualident .)
    PLUS            reduce using rule 61 (qualident -> identdef DOT qualident .)
    MINUS           reduce using rule 61 (qualident -> identdef DOT qualident .)
    OR              reduce using rule 61 (qualident -> identdef DOT qualident .)
    EQUAL           reduce using rule 61 (qualident -> identdef DOT qualident .)
    NEQUAL          reduce using rule 61 (qualident -> identdef DOT qualident .)
    LT              reduce using rule 61 (qualident -> identdef DOT qualident .)
    LTEQ            reduce using rule 61 (qualident -> identdef DOT qualident .)
    GT              reduce using rule 61 (qualident -> identdef DOT qualident .)
    GTEQ            reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_IN          reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_IS          reduce using rule 61 (qualident -> identdef DOT qualident .)
    COMMA           reduce using rule 61 (qualident -> identdef DOT qualident .)
    SCOLON          reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_THEN        reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_BEGIN       reduce using rule 61 (qualident -> identdef DOT qualident .)
    COLON           reduce using rule 61 (qualident -> identdef DOT qualident .)
    RRB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    RSB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    KEY_OF          reduce using rule 61 (qualident -> identdef DOT qualident .)
    RCB             reduce using rule 61 (qualident -> identdef DOT qualident .)
    ASSIGN          reduce using rule 61 (qualident -> identdef DOT qualident .)


state 199

    (168) fileStatement -> identdef EQUAL KEY_FOPEN . LRB string COMMA char RRB

    LRB             shift and go to state 271


state 200

    (164) ioStatement -> KEY_READINT LRB expression . RRB

    RRB             shift and go to state 272


state 201

    (155) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence . KEY_END KEY_WHILE expression
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 273
    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    switchStatement                shift and go to state 37
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 61
    fileStatement                  shift and go to state 62
    ioStatement                    shift and go to state 59
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 202

    (153) whileStatement -> KEY_WHILE expression KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 274
    empty                          shift and go to state 16

state 203

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN . case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH expression KEY_BEGIN . case casess KEY_END
    (152) case -> . KEY_CASE expression COLON statementSequence

    KEY_CASE        shift and go to state 275

    case                           shift and go to state 276

state 204

    (169) fileStatement -> KEY_FCLOSE LRB identdef . RRB

    RRB             shift and go to state 277


state 205

    (159) ioStatement -> KEY_WRITECHAR LRB expression . RRB

    RRB             shift and go to state 278


state 206

    (66) actualParameters -> LRB expList . RRB
    (64) expList -> expList . COMMA expression

    RRB             shift and go to state 279
    COMMA           shift and go to state 280


state 207

    (65) expList -> expression .

    RRB             reduce using rule 65 (expList -> expression .)
    COMMA           reduce using rule 65 (expList -> expression .)
    RSB             reduce using rule 65 (expList -> expression .)


state 208

    (67) actualParameters -> LRB RRB .

    MULTIPLY        reduce using rule 67 (actualParameters -> LRB RRB .)
    DIVIDE          reduce using rule 67 (actualParameters -> LRB RRB .)
    MODULUS         reduce using rule 67 (actualParameters -> LRB RRB .)
    AND             reduce using rule 67 (actualParameters -> LRB RRB .)
    PLUS            reduce using rule 67 (actualParameters -> LRB RRB .)
    MINUS           reduce using rule 67 (actualParameters -> LRB RRB .)
    OR              reduce using rule 67 (actualParameters -> LRB RRB .)
    EQUAL           reduce using rule 67 (actualParameters -> LRB RRB .)
    NEQUAL          reduce using rule 67 (actualParameters -> LRB RRB .)
    LT              reduce using rule 67 (actualParameters -> LRB RRB .)
    LTEQ            reduce using rule 67 (actualParameters -> LRB RRB .)
    GT              reduce using rule 67 (actualParameters -> LRB RRB .)
    GTEQ            reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_IN          reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_IS          reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_THEN        reduce using rule 67 (actualParameters -> LRB RRB .)
    SCOLON          reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_BEGIN       reduce using rule 67 (actualParameters -> LRB RRB .)
    COLON           reduce using rule 67 (actualParameters -> LRB RRB .)
    RRB             reduce using rule 67 (actualParameters -> LRB RRB .)
    COMMA           reduce using rule 67 (actualParameters -> LRB RRB .)
    RSB             reduce using rule 67 (actualParameters -> LRB RRB .)
    KEY_OF          reduce using rule 67 (actualParameters -> LRB RRB .)
    RCB             reduce using rule 67 (actualParameters -> LRB RRB .)


state 209

    (138) assignment -> designator ASSIGN expression .

    SCOLON          reduce using rule 138 (assignment -> designator ASSIGN expression .)
    RRB             reduce using rule 138 (assignment -> designator ASSIGN expression .)


state 210

    (167) ioStatement -> KEY_READBOOL LRB expression . RRB

    RRB             shift and go to state 281


state 211

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT .

    $end            reduce using rule 1 (module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT .)


state 212

    (106) identList -> identList COMMA IDENT .

    COLON           reduce using rule 106 (identList -> identList COMMA IDENT .)
    COMMA           reduce using rule 106 (identList -> identList COMMA IDENT .)


state 213

    (94) varType -> KEY_SET .

    SCOLON          reduce using rule 94 (varType -> KEY_SET .)
    KEY_END         reduce using rule 94 (varType -> KEY_SET .)
    RRB             reduce using rule 94 (varType -> KEY_SET .)


state 214

    (91) varType -> KEY_CHAR .

    SCOLON          reduce using rule 91 (varType -> KEY_CHAR .)
    KEY_END         reduce using rule 91 (varType -> KEY_CHAR .)
    RRB             reduce using rule 91 (varType -> KEY_CHAR .)


state 215

    (99) recordType -> KEY_RECORD . fieldListSequence KEY_END
    (100) recordType -> KEY_RECORD . LRB baseType RRB fieldListSequence KEY_END
    (102) fieldListSequence -> . fieldListSequence SCOLON fieldList
    (103) fieldListSequence -> . fieldList
    (104) fieldList -> . identList COLON type
    (105) fieldList -> . empty
    (106) identList -> . identList COMMA IDENT
    (107) identList -> . IDENT
    (172) empty -> .

    LRB             shift and go to state 283
    IDENT           shift and go to state 69
    KEY_END         reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    identList                      shift and go to state 286
    empty                          shift and go to state 282
    fieldList                      shift and go to state 285
    fieldListSequence              shift and go to state 284

state 216

    (85) type -> varType .

    SCOLON          reduce using rule 85 (type -> varType .)
    KEY_END         reduce using rule 85 (type -> varType .)
    RRB             reduce using rule 85 (type -> varType .)


state 217

    (89) varType -> KEY_INTEGER .

    SCOLON          reduce using rule 89 (varType -> KEY_INTEGER .)
    KEY_END         reduce using rule 89 (varType -> KEY_INTEGER .)
    RRB             reduce using rule 89 (varType -> KEY_INTEGER .)


state 218

    (84) type -> IDENT .

    SCOLON          reduce using rule 84 (type -> IDENT .)
    KEY_END         reduce using rule 84 (type -> IDENT .)
    RRB             reduce using rule 84 (type -> IDENT .)


state 219

    (108) pointerType -> KEY_POINTER . KEY_TO type

    KEY_TO          shift and go to state 287


state 220

    (95) arrayType -> KEY_ARRAY . length comass KEY_OF type
    (98) length -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 289
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    length                         shift and go to state 288
    number                         shift and go to state 108
    designator                     shift and go to state 121
    set                            shift and go to state 110

state 221

    (92) varType -> KEY_STRING .

    SCOLON          reduce using rule 92 (varType -> KEY_STRING .)
    KEY_END         reduce using rule 92 (varType -> KEY_STRING .)
    RRB             reduce using rule 92 (varType -> KEY_STRING .)


state 222

    (90) varType -> KEY_BOOLEAN .

    SCOLON          reduce using rule 90 (varType -> KEY_BOOLEAN .)
    KEY_END         reduce using rule 90 (varType -> KEY_BOOLEAN .)
    RRB             reduce using rule 90 (varType -> KEY_BOOLEAN .)


state 223

    (109) variableDeclaration -> identList COLON type .

    SCOLON          reduce using rule 109 (variableDeclaration -> identList COLON type .)


state 224

    (86) type -> arrayType .

    SCOLON          reduce using rule 86 (type -> arrayType .)
    KEY_END         reduce using rule 86 (type -> arrayType .)
    RRB             reduce using rule 86 (type -> arrayType .)


state 225

    (87) type -> recordType .

    SCOLON          reduce using rule 87 (type -> recordType .)
    KEY_END         reduce using rule 87 (type -> recordType .)
    RRB             reduce using rule 87 (type -> recordType .)


state 226

    (93) varType -> KEY_REAL .

    SCOLON          reduce using rule 93 (varType -> KEY_REAL .)
    KEY_END         reduce using rule 93 (varType -> KEY_REAL .)
    RRB             reduce using rule 93 (varType -> KEY_REAL .)


state 227

    (88) type -> pointerType .

    SCOLON          reduce using rule 88 (type -> pointerType .)
    KEY_END         reduce using rule 88 (type -> pointerType .)
    RRB             reduce using rule 88 (type -> pointerType .)


state 228

    (83) typeDeclaration -> IDENT EQUAL type .

    SCOLON          reduce using rule 83 (typeDeclaration -> IDENT EQUAL type .)


state 229

    (110) procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT .

    SCOLON          reduce using rule 110 (procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT .)


state 230

    (120) procedureBody -> declarationSequence KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 290
    empty                          shift and go to state 16

state 231

    (111) procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 217
    KEY_BOOLEAN     shift and go to state 222
    KEY_CHAR        shift and go to state 214
    KEY_STRING      shift and go to state 221
    KEY_REAL        shift and go to state 226
    KEY_SET         shift and go to state 213
    KEY_ARRAY       shift and go to state 220
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 219

    type                           shift and go to state 291
    arrayType                      shift and go to state 224
    pointerType                    shift and go to state 227
    varType                        shift and go to state 216
    recordType                     shift and go to state 225

state 232

    (114) formalParameters -> LRB RRB .

    COLON           reduce using rule 114 (formalParameters -> LRB RRB .)
    SCOLON          reduce using rule 114 (formalParameters -> LRB RRB .)


state 233

    (113) formalParameters -> LRB fpSection . formalss RRB
    (115) formalss -> . formalss SCOLON fpSection
    (116) formalss -> . empty
    (172) empty -> .

    RRB             reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    formalss                       shift and go to state 292
    empty                          shift and go to state 293

state 234

    (117) fpSection -> IDENT . fps COLON type
    (118) fps -> . fps COMMA IDENT
    (119) fps -> . empty
    (172) empty -> .

    COLON           reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)

    empty                          shift and go to state 295
    fps                            shift and go to state 294

state 235

    (17) constantDeclaration -> IDENT ASSIGN expression COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 217
    KEY_BOOLEAN     shift and go to state 222
    KEY_CHAR        shift and go to state 214
    KEY_STRING      shift and go to state 221
    KEY_REAL        shift and go to state 226
    KEY_SET         shift and go to state 213
    KEY_ARRAY       shift and go to state 220
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 219

    type                           shift and go to state 296
    arrayType                      shift and go to state 224
    pointerType                    shift and go to state 227
    varType                        shift and go to state 216
    recordType                     shift and go to state 225

state 236

    (139) setStatement -> qualident DOT KEY_ADD LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 297
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 237

    (140) setStatement -> qualident DOT KEY_DEL LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 298
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 238

    (58) designator2 -> designator LRB qualident . RRB

    RRB             shift and go to state 299


state 239

    (56) designator2 -> designator2 DOT identdef .

    DOT             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    LSB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    LRB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    MULTIPLY        reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    DIVIDE          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    MODULUS         reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    AND             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    PLUS            reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    MINUS           reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    OR              reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    EQUAL           reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    NEQUAL          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    LT              reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    LTEQ            reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    GT              reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    GTEQ            reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_IN          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_IS          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_THEN        reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    SCOLON          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_BEGIN       reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    COLON           reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    ASSIGN          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    RRB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    COMMA           reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    RSB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    KEY_OF          reduce using rule 56 (designator2 -> designator2 DOT identdef .)
    RCB             reduce using rule 56 (designator2 -> designator2 DOT identdef .)


state 240

    (57) designator2 -> designator2 LSB expList . RSB
    (64) expList -> expList . COMMA expression

    RSB             shift and go to state 300
    COMMA           shift and go to state 280


state 241

    (154) forStatement -> KEY_FOR LRB assignment SCOLON . expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 301
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 242

    (156) ioStatement -> KEY_WRITE LRB expression RRB .

    SCOLON          reduce using rule 156 (ioStatement -> KEY_WRITE LRB expression RRB .)


state 243

    (141) memoryalloc -> KEY_NEW LRB designator RRB .

    SCOLON          reduce using rule 141 (memoryalloc -> KEY_NEW LRB designator RRB .)


state 244

    (166) ioStatement -> KEY_READCHAR LRB expression RRB .

    SCOLON          reduce using rule 166 (ioStatement -> KEY_READCHAR LRB expression RRB .)


state 245

    (157) ioStatement -> KEY_WRITEINT LRB expression RRB .

    SCOLON          reduce using rule 157 (ioStatement -> KEY_WRITEINT LRB expression RRB .)


state 246

    (165) ioStatement -> KEY_READREAL LRB expression RRB .

    SCOLON          reduce using rule 165 (ioStatement -> KEY_READREAL LRB expression RRB .)


state 247

    (160) ioStatement -> KEY_WRITEBOOL LRB expression RRB .

    SCOLON          reduce using rule 160 (ioStatement -> KEY_WRITEBOOL LRB expression RRB .)


state 248

    (161) ioStatement -> KEY_WRITELN LRB expression RRB .

    SCOLON          reduce using rule 161 (ioStatement -> KEY_WRITELN LRB expression RRB .)


state 249

    (170) fileStatement -> KEY_FPRINTF LRB identdef COMMA . string RRB
    (51) string -> . VSTRING

    VSTRING         shift and go to state 115

    string                         shift and go to state 302

state 250

    (158) ioStatement -> KEY_WRITEREAL LRB expression RRB .

    SCOLON          reduce using rule 158 (ioStatement -> KEY_WRITEREAL LRB expression RRB .)


state 251

    (31) factor -> KEY_NIL LRB designator . RRB

    RRB             shift and go to state 303


state 252

    (20) simpleExpression -> PLUS term simpless .
    (23) simpless -> simpless . addOperator term
    (72) addOperator -> . PLUS
    (73) addOperator -> . MINUS
    (74) addOperator -> . OR

    EQUAL           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    NEQUAL          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    LT              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    LTEQ            reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    GT              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    GTEQ            reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_IN          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_IS          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RRB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_BEGIN       reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    SCOLON          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RSB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    COMMA           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_THEN        reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    COLON           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_OF          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RCB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    PLUS            shift and go to state 257
    MINUS           shift and go to state 254
    OR              shift and go to state 256

    addOperator                    shift and go to state 255

state 253

    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence . ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF expression KEY_THEN statementSequence . ifss KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (146) ifss -> . ifss KEY_ELSEIF expression KEY_THEN statementSequence
    (147) ifss -> . empty
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (172) empty -> .
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)
    KEY_ELSEIF      reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    ifss                           shift and go to state 304
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    ioStatement                    shift and go to state 59
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 305
    fileStatement                  shift and go to state 62
    switchStatement                shift and go to state 37
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 254

    (73) addOperator -> MINUS .

    KEY_NIL         reduce using rule 73 (addOperator -> MINUS .)
    LRB             reduce using rule 73 (addOperator -> MINUS .)
    NOT             reduce using rule 73 (addOperator -> MINUS .)
    KEY_ABS         reduce using rule 73 (addOperator -> MINUS .)
    KEY_CHR         reduce using rule 73 (addOperator -> MINUS .)
    KEY_ORD         reduce using rule 73 (addOperator -> MINUS .)
    KEY_INTEGER     reduce using rule 73 (addOperator -> MINUS .)
    KEY_BOOLEAN     reduce using rule 73 (addOperator -> MINUS .)
    KEY_CHAR        reduce using rule 73 (addOperator -> MINUS .)
    KEY_STRING      reduce using rule 73 (addOperator -> MINUS .)
    KEY_REAL        reduce using rule 73 (addOperator -> MINUS .)
    KEY_SET         reduce using rule 73 (addOperator -> MINUS .)
    VINTEGER        reduce using rule 73 (addOperator -> MINUS .)
    VREAL           reduce using rule 73 (addOperator -> MINUS .)
    VCHAR           reduce using rule 73 (addOperator -> MINUS .)
    VSTRING         reduce using rule 73 (addOperator -> MINUS .)
    LCB             reduce using rule 73 (addOperator -> MINUS .)
    IDENT           reduce using rule 73 (addOperator -> MINUS .)
    AT              reduce using rule 73 (addOperator -> MINUS .)


state 255

    (23) simpless -> simpless addOperator . term
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 111
    set                            shift and go to state 110
    string                         shift and go to state 107
    char                           shift and go to state 112
    term                           shift and go to state 306
    designator                     shift and go to state 121
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 256

    (74) addOperator -> OR .

    KEY_NIL         reduce using rule 74 (addOperator -> OR .)
    LRB             reduce using rule 74 (addOperator -> OR .)
    NOT             reduce using rule 74 (addOperator -> OR .)
    KEY_ABS         reduce using rule 74 (addOperator -> OR .)
    KEY_CHR         reduce using rule 74 (addOperator -> OR .)
    KEY_ORD         reduce using rule 74 (addOperator -> OR .)
    KEY_INTEGER     reduce using rule 74 (addOperator -> OR .)
    KEY_BOOLEAN     reduce using rule 74 (addOperator -> OR .)
    KEY_CHAR        reduce using rule 74 (addOperator -> OR .)
    KEY_STRING      reduce using rule 74 (addOperator -> OR .)
    KEY_REAL        reduce using rule 74 (addOperator -> OR .)
    KEY_SET         reduce using rule 74 (addOperator -> OR .)
    VINTEGER        reduce using rule 74 (addOperator -> OR .)
    VREAL           reduce using rule 74 (addOperator -> OR .)
    VCHAR           reduce using rule 74 (addOperator -> OR .)
    VSTRING         reduce using rule 74 (addOperator -> OR .)
    LCB             reduce using rule 74 (addOperator -> OR .)
    IDENT           reduce using rule 74 (addOperator -> OR .)
    AT              reduce using rule 74 (addOperator -> OR .)


state 257

    (72) addOperator -> PLUS .

    KEY_NIL         reduce using rule 72 (addOperator -> PLUS .)
    LRB             reduce using rule 72 (addOperator -> PLUS .)
    NOT             reduce using rule 72 (addOperator -> PLUS .)
    KEY_ABS         reduce using rule 72 (addOperator -> PLUS .)
    KEY_CHR         reduce using rule 72 (addOperator -> PLUS .)
    KEY_ORD         reduce using rule 72 (addOperator -> PLUS .)
    KEY_INTEGER     reduce using rule 72 (addOperator -> PLUS .)
    KEY_BOOLEAN     reduce using rule 72 (addOperator -> PLUS .)
    KEY_CHAR        reduce using rule 72 (addOperator -> PLUS .)
    KEY_STRING      reduce using rule 72 (addOperator -> PLUS .)
    KEY_REAL        reduce using rule 72 (addOperator -> PLUS .)
    KEY_SET         reduce using rule 72 (addOperator -> PLUS .)
    VINTEGER        reduce using rule 72 (addOperator -> PLUS .)
    VREAL           reduce using rule 72 (addOperator -> PLUS .)
    VCHAR           reduce using rule 72 (addOperator -> PLUS .)
    VSTRING         reduce using rule 72 (addOperator -> PLUS .)
    LCB             reduce using rule 72 (addOperator -> PLUS .)
    IDENT           reduce using rule 72 (addOperator -> PLUS .)
    AT              reduce using rule 72 (addOperator -> PLUS .)


state 258

    (69) mulOperator -> DIVIDE .

    KEY_NIL         reduce using rule 69 (mulOperator -> DIVIDE .)
    LRB             reduce using rule 69 (mulOperator -> DIVIDE .)
    NOT             reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_ABS         reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_CHR         reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_ORD         reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_INTEGER     reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_BOOLEAN     reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_CHAR        reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_STRING      reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_REAL        reduce using rule 69 (mulOperator -> DIVIDE .)
    KEY_SET         reduce using rule 69 (mulOperator -> DIVIDE .)
    VINTEGER        reduce using rule 69 (mulOperator -> DIVIDE .)
    VREAL           reduce using rule 69 (mulOperator -> DIVIDE .)
    VCHAR           reduce using rule 69 (mulOperator -> DIVIDE .)
    VSTRING         reduce using rule 69 (mulOperator -> DIVIDE .)
    LCB             reduce using rule 69 (mulOperator -> DIVIDE .)
    IDENT           reduce using rule 69 (mulOperator -> DIVIDE .)
    AT              reduce using rule 69 (mulOperator -> DIVIDE .)


state 259

    (71) mulOperator -> AND .

    KEY_NIL         reduce using rule 71 (mulOperator -> AND .)
    LRB             reduce using rule 71 (mulOperator -> AND .)
    NOT             reduce using rule 71 (mulOperator -> AND .)
    KEY_ABS         reduce using rule 71 (mulOperator -> AND .)
    KEY_CHR         reduce using rule 71 (mulOperator -> AND .)
    KEY_ORD         reduce using rule 71 (mulOperator -> AND .)
    KEY_INTEGER     reduce using rule 71 (mulOperator -> AND .)
    KEY_BOOLEAN     reduce using rule 71 (mulOperator -> AND .)
    KEY_CHAR        reduce using rule 71 (mulOperator -> AND .)
    KEY_STRING      reduce using rule 71 (mulOperator -> AND .)
    KEY_REAL        reduce using rule 71 (mulOperator -> AND .)
    KEY_SET         reduce using rule 71 (mulOperator -> AND .)
    VINTEGER        reduce using rule 71 (mulOperator -> AND .)
    VREAL           reduce using rule 71 (mulOperator -> AND .)
    VCHAR           reduce using rule 71 (mulOperator -> AND .)
    VSTRING         reduce using rule 71 (mulOperator -> AND .)
    LCB             reduce using rule 71 (mulOperator -> AND .)
    IDENT           reduce using rule 71 (mulOperator -> AND .)
    AT              reduce using rule 71 (mulOperator -> AND .)


state 260

    (70) mulOperator -> MODULUS .

    KEY_NIL         reduce using rule 70 (mulOperator -> MODULUS .)
    LRB             reduce using rule 70 (mulOperator -> MODULUS .)
    NOT             reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_ABS         reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_CHR         reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_ORD         reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_INTEGER     reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_BOOLEAN     reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_CHAR        reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_STRING      reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_REAL        reduce using rule 70 (mulOperator -> MODULUS .)
    KEY_SET         reduce using rule 70 (mulOperator -> MODULUS .)
    VINTEGER        reduce using rule 70 (mulOperator -> MODULUS .)
    VREAL           reduce using rule 70 (mulOperator -> MODULUS .)
    VCHAR           reduce using rule 70 (mulOperator -> MODULUS .)
    VSTRING         reduce using rule 70 (mulOperator -> MODULUS .)
    LCB             reduce using rule 70 (mulOperator -> MODULUS .)
    IDENT           reduce using rule 70 (mulOperator -> MODULUS .)
    AT              reduce using rule 70 (mulOperator -> MODULUS .)


state 261

    (26) termss -> termss mulOperator . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    factor                         shift and go to state 307
    set                            shift and go to state 110
    string                         shift and go to state 107
    char                           shift and go to state 112
    designator                     shift and go to state 121
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 262

    (68) mulOperator -> MULTIPLY .

    KEY_NIL         reduce using rule 68 (mulOperator -> MULTIPLY .)
    LRB             reduce using rule 68 (mulOperator -> MULTIPLY .)
    NOT             reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_ABS         reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_CHR         reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_ORD         reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_INTEGER     reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_BOOLEAN     reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_CHAR        reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_STRING      reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_REAL        reduce using rule 68 (mulOperator -> MULTIPLY .)
    KEY_SET         reduce using rule 68 (mulOperator -> MULTIPLY .)
    VINTEGER        reduce using rule 68 (mulOperator -> MULTIPLY .)
    VREAL           reduce using rule 68 (mulOperator -> MULTIPLY .)
    VCHAR           reduce using rule 68 (mulOperator -> MULTIPLY .)
    VSTRING         reduce using rule 68 (mulOperator -> MULTIPLY .)
    LCB             reduce using rule 68 (mulOperator -> MULTIPLY .)
    IDENT           reduce using rule 68 (mulOperator -> MULTIPLY .)
    AT              reduce using rule 68 (mulOperator -> MULTIPLY .)


state 263

    (22) simpleExpression -> MINUS term simpless .
    (23) simpless -> simpless . addOperator term
    (72) addOperator -> . PLUS
    (73) addOperator -> . MINUS
    (74) addOperator -> . OR

    EQUAL           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    NEQUAL          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    LT              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    LTEQ            reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    GT              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    GTEQ            reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_IN          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_IS          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RRB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_BEGIN       reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    SCOLON          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RSB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    COMMA           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_THEN        reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    COLON           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_OF          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RCB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    PLUS            shift and go to state 257
    MINUS           shift and go to state 254
    OR              shift and go to state 256

    addOperator                    shift and go to state 255

state 264

    (47) factor -> KEY_ORD LRB factor . RRB
    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (172) empty -> .

  ! shift/reduce conflict for RRB resolved as shift
    RRB             shift and go to state 308
    MULTIPLY        reduce using rule 172 (empty -> .)
    DIVIDE          reduce using rule 172 (empty -> .)
    MODULUS         reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)

  ! RRB             [ reduce using rule 172 (empty -> .) ]

    termss                         shift and go to state 174
    empty                          shift and go to state 175

state 265

    (19) expression -> simpleExpression relation simpleExpression .

    SCOLON          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RRB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    COMMA           reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RSB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_BEGIN       reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_THEN        reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    COLON           reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RCB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_OF          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)


state 266

    (46) factor -> KEY_CHR LRB factor . RRB
    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (172) empty -> .

  ! shift/reduce conflict for RRB resolved as shift
    RRB             shift and go to state 309
    MULTIPLY        reduce using rule 172 (empty -> .)
    DIVIDE          reduce using rule 172 (empty -> .)
    MODULUS         reduce using rule 172 (empty -> .)
    AND             reduce using rule 172 (empty -> .)
    PLUS            reduce using rule 172 (empty -> .)
    MINUS           reduce using rule 172 (empty -> .)
    OR              reduce using rule 172 (empty -> .)
    EQUAL           reduce using rule 172 (empty -> .)
    NEQUAL          reduce using rule 172 (empty -> .)
    LT              reduce using rule 172 (empty -> .)
    LTEQ            reduce using rule 172 (empty -> .)
    GT              reduce using rule 172 (empty -> .)
    GTEQ            reduce using rule 172 (empty -> .)
    KEY_IN          reduce using rule 172 (empty -> .)
    KEY_IS          reduce using rule 172 (empty -> .)

  ! RRB             [ reduce using rule 172 (empty -> .) ]

    termss                         shift and go to state 174
    empty                          shift and go to state 175

state 267

    (35) factor -> LRB expression RRB .

    MULTIPLY        reduce using rule 35 (factor -> LRB expression RRB .)
    DIVIDE          reduce using rule 35 (factor -> LRB expression RRB .)
    MODULUS         reduce using rule 35 (factor -> LRB expression RRB .)
    AND             reduce using rule 35 (factor -> LRB expression RRB .)
    PLUS            reduce using rule 35 (factor -> LRB expression RRB .)
    MINUS           reduce using rule 35 (factor -> LRB expression RRB .)
    OR              reduce using rule 35 (factor -> LRB expression RRB .)
    EQUAL           reduce using rule 35 (factor -> LRB expression RRB .)
    NEQUAL          reduce using rule 35 (factor -> LRB expression RRB .)
    LT              reduce using rule 35 (factor -> LRB expression RRB .)
    LTEQ            reduce using rule 35 (factor -> LRB expression RRB .)
    GT              reduce using rule 35 (factor -> LRB expression RRB .)
    GTEQ            reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_IN          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_IS          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_THEN        reduce using rule 35 (factor -> LRB expression RRB .)
    SCOLON          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_BEGIN       reduce using rule 35 (factor -> LRB expression RRB .)
    COLON           reduce using rule 35 (factor -> LRB expression RRB .)
    RRB             reduce using rule 35 (factor -> LRB expression RRB .)
    COMMA           reduce using rule 35 (factor -> LRB expression RRB .)
    RSB             reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_OF          reduce using rule 35 (factor -> LRB expression RRB .)
    RCB             reduce using rule 35 (factor -> LRB expression RRB .)


state 268

    (52) set -> LCB element COMMA . element RCB
    (54) element -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 194
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    element                        shift and go to state 310
    designator                     shift and go to state 121
    term                           shift and go to state 109
    simpleExpression               shift and go to state 117
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 269

    (171) fileStatement -> KEY_FREAD LRB identdef COMMA . identdef COMMA VINTEGER RRB
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    identdef                       shift and go to state 311

state 270

    (163) ioStatement -> KEY_READ LRB expression RRB .

    SCOLON          reduce using rule 163 (ioStatement -> KEY_READ LRB expression RRB .)


state 271

    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB . string COMMA char RRB
    (51) string -> . VSTRING

    VSTRING         shift and go to state 115

    string                         shift and go to state 312

state 272

    (164) ioStatement -> KEY_READINT LRB expression RRB .

    SCOLON          reduce using rule 164 (ioStatement -> KEY_READINT LRB expression RRB .)


state 273

    (155) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END . KEY_WHILE expression

    KEY_WHILE       shift and go to state 313


state 274

    (153) whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 314
    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    switchStatement                shift and go to state 37
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 61
    fileStatement                  shift and go to state 62
    ioStatement                    shift and go to state 59
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 275

    (152) case -> KEY_CASE . expression COLON statementSequence
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 315
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 276

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case . casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH expression KEY_BEGIN case . casess KEY_END
    (150) casess -> . case casess
    (151) casess -> . empty
    (152) case -> . KEY_CASE expression COLON statementSequence
    (172) empty -> .

    KEY_CASE        shift and go to state 275
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)

    case                           shift and go to state 317
    empty                          shift and go to state 318
    casess                         shift and go to state 316

state 277

    (169) fileStatement -> KEY_FCLOSE LRB identdef RRB .

    SCOLON          reduce using rule 169 (fileStatement -> KEY_FCLOSE LRB identdef RRB .)


state 278

    (159) ioStatement -> KEY_WRITECHAR LRB expression RRB .

    SCOLON          reduce using rule 159 (ioStatement -> KEY_WRITECHAR LRB expression RRB .)


state 279

    (66) actualParameters -> LRB expList RRB .

    MULTIPLY        reduce using rule 66 (actualParameters -> LRB expList RRB .)
    DIVIDE          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    MODULUS         reduce using rule 66 (actualParameters -> LRB expList RRB .)
    AND             reduce using rule 66 (actualParameters -> LRB expList RRB .)
    PLUS            reduce using rule 66 (actualParameters -> LRB expList RRB .)
    MINUS           reduce using rule 66 (actualParameters -> LRB expList RRB .)
    OR              reduce using rule 66 (actualParameters -> LRB expList RRB .)
    EQUAL           reduce using rule 66 (actualParameters -> LRB expList RRB .)
    NEQUAL          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    LT              reduce using rule 66 (actualParameters -> LRB expList RRB .)
    LTEQ            reduce using rule 66 (actualParameters -> LRB expList RRB .)
    GT              reduce using rule 66 (actualParameters -> LRB expList RRB .)
    GTEQ            reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_IN          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_IS          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_THEN        reduce using rule 66 (actualParameters -> LRB expList RRB .)
    SCOLON          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_BEGIN       reduce using rule 66 (actualParameters -> LRB expList RRB .)
    COLON           reduce using rule 66 (actualParameters -> LRB expList RRB .)
    RRB             reduce using rule 66 (actualParameters -> LRB expList RRB .)
    COMMA           reduce using rule 66 (actualParameters -> LRB expList RRB .)
    RSB             reduce using rule 66 (actualParameters -> LRB expList RRB .)
    KEY_OF          reduce using rule 66 (actualParameters -> LRB expList RRB .)
    RCB             reduce using rule 66 (actualParameters -> LRB expList RRB .)


state 280

    (64) expList -> expList COMMA . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 319
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 281

    (167) ioStatement -> KEY_READBOOL LRB expression RRB .

    SCOLON          reduce using rule 167 (ioStatement -> KEY_READBOOL LRB expression RRB .)


state 282

    (105) fieldList -> empty .

    KEY_END         reduce using rule 105 (fieldList -> empty .)
    SCOLON          reduce using rule 105 (fieldList -> empty .)


state 283

    (100) recordType -> KEY_RECORD LRB . baseType RRB fieldListSequence KEY_END
    (101) baseType -> . qualident
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 320
    baseType                       shift and go to state 321
    identdef                       shift and go to state 83

state 284

    (99) recordType -> KEY_RECORD fieldListSequence . KEY_END
    (102) fieldListSequence -> fieldListSequence . SCOLON fieldList

    KEY_END         shift and go to state 322
    SCOLON          shift and go to state 323


state 285

    (103) fieldListSequence -> fieldList .

    KEY_END         reduce using rule 103 (fieldListSequence -> fieldList .)
    SCOLON          reduce using rule 103 (fieldListSequence -> fieldList .)


state 286

    (104) fieldList -> identList . COLON type
    (106) identList -> identList . COMMA IDENT

    COLON           shift and go to state 324
    COMMA           shift and go to state 141


state 287

    (108) pointerType -> KEY_POINTER KEY_TO . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 217
    KEY_BOOLEAN     shift and go to state 222
    KEY_CHAR        shift and go to state 214
    KEY_STRING      shift and go to state 221
    KEY_REAL        shift and go to state 226
    KEY_SET         shift and go to state 213
    KEY_ARRAY       shift and go to state 220
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 219

    type                           shift and go to state 325
    arrayType                      shift and go to state 224
    recordType                     shift and go to state 225
    varType                        shift and go to state 216
    pointerType                    shift and go to state 227

state 288

    (95) arrayType -> KEY_ARRAY length . comass KEY_OF type
    (96) comass -> . comass COMMA length
    (97) comass -> . empty
    (172) empty -> .

    KEY_OF          reduce using rule 172 (empty -> .)
    COMMA           reduce using rule 172 (empty -> .)

    empty                          shift and go to state 326
    comass                         shift and go to state 327

state 289

    (98) length -> expression .

    KEY_OF          reduce using rule 98 (length -> expression .)
    COMMA           reduce using rule 98 (length -> expression .)


state 290

    (120) procedureBody -> declarationSequence KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 328
    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    ioStatement                    shift and go to state 59
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 61
    fileStatement                  shift and go to state 62
    switchStatement                shift and go to state 37
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 291

    (111) procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type .

    SCOLON          reduce using rule 111 (procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type .)


state 292

    (113) formalParameters -> LRB fpSection formalss . RRB
    (115) formalss -> formalss . SCOLON fpSection

    RRB             shift and go to state 330
    SCOLON          shift and go to state 329


state 293

    (116) formalss -> empty .

    RRB             reduce using rule 116 (formalss -> empty .)
    SCOLON          reduce using rule 116 (formalss -> empty .)


state 294

    (117) fpSection -> IDENT fps . COLON type
    (118) fps -> fps . COMMA IDENT

    COLON           shift and go to state 332
    COMMA           shift and go to state 331


state 295

    (119) fps -> empty .

    COLON           reduce using rule 119 (fps -> empty .)
    COMMA           reduce using rule 119 (fps -> empty .)


state 296

    (17) constantDeclaration -> IDENT ASSIGN expression COLON type .

    SCOLON          reduce using rule 17 (constantDeclaration -> IDENT ASSIGN expression COLON type .)


state 297

    (139) setStatement -> qualident DOT KEY_ADD LRB expression . RRB

    RRB             shift and go to state 333


state 298

    (140) setStatement -> qualident DOT KEY_DEL LRB expression . RRB

    RRB             shift and go to state 334


state 299

    (58) designator2 -> designator LRB qualident RRB .

    DOT             reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    LSB             reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    LRB             reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    MULTIPLY        reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    DIVIDE          reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    MODULUS         reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    AND             reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    PLUS            reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    MINUS           reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    OR              reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    EQUAL           reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    NEQUAL          reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    LT              reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    LTEQ            reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    GT              reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    GTEQ            reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    KEY_IN          reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    KEY_IS          reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    KEY_THEN        reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    SCOLON          reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    KEY_BEGIN       reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    COLON           reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    ASSIGN          reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    RRB             reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    COMMA           reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    RSB             reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    KEY_OF          reduce using rule 58 (designator2 -> designator LRB qualident RRB .)
    RCB             reduce using rule 58 (designator2 -> designator LRB qualident RRB .)


state 300

    (57) designator2 -> designator2 LSB expList RSB .

    DOT             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    LSB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    LRB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    MULTIPLY        reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    DIVIDE          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    MODULUS         reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    AND             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    PLUS            reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    MINUS           reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    OR              reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    EQUAL           reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    NEQUAL          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    LT              reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    LTEQ            reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    GT              reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    GTEQ            reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_IN          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_IS          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_THEN        reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    SCOLON          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_BEGIN       reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    COLON           reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    ASSIGN          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    RRB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    COMMA           reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    RSB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    KEY_OF          reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)
    RCB             reduce using rule 57 (designator2 -> designator2 LSB expList RSB .)


state 301

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression . SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    SCOLON          shift and go to state 335


state 302

    (170) fileStatement -> KEY_FPRINTF LRB identdef COMMA string . RRB

    RRB             shift and go to state 336


state 303

    (31) factor -> KEY_NIL LRB designator RRB .

    MULTIPLY        reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    DIVIDE          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    MODULUS         reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    AND             reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    PLUS            reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    MINUS           reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    OR              reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    EQUAL           reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    NEQUAL          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    LT              reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    LTEQ            reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    GT              reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    GTEQ            reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_IN          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_IS          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_THEN        reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    SCOLON          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_BEGIN       reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    COLON           reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    RRB             reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    COMMA           reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    RSB             reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    KEY_OF          reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)
    RCB             reduce using rule 31 (factor -> KEY_NIL LRB designator RRB .)


state 304

    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss . KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss . KEY_END
    (146) ifss -> ifss . KEY_ELSEIF expression KEY_THEN statementSequence

    KEY_ELSE        shift and go to state 337
    KEY_END         shift and go to state 338
    KEY_ELSEIF      shift and go to state 339


state 305

    (147) ifss -> empty .
    (135) statement -> empty .

    KEY_ELSE        reduce using rule 147 (ifss -> empty .)
    KEY_END         reduce using rule 147 (ifss -> empty .)
    KEY_ELSEIF      reduce using rule 147 (ifss -> empty .)
    SCOLON          reduce using rule 135 (statement -> empty .)


state 306

    (23) simpless -> simpless addOperator term .

    PLUS            reduce using rule 23 (simpless -> simpless addOperator term .)
    MINUS           reduce using rule 23 (simpless -> simpless addOperator term .)
    OR              reduce using rule 23 (simpless -> simpless addOperator term .)
    EQUAL           reduce using rule 23 (simpless -> simpless addOperator term .)
    NEQUAL          reduce using rule 23 (simpless -> simpless addOperator term .)
    LT              reduce using rule 23 (simpless -> simpless addOperator term .)
    LTEQ            reduce using rule 23 (simpless -> simpless addOperator term .)
    GT              reduce using rule 23 (simpless -> simpless addOperator term .)
    GTEQ            reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_IN          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_IS          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_THEN        reduce using rule 23 (simpless -> simpless addOperator term .)
    SCOLON          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_BEGIN       reduce using rule 23 (simpless -> simpless addOperator term .)
    COLON           reduce using rule 23 (simpless -> simpless addOperator term .)
    RRB             reduce using rule 23 (simpless -> simpless addOperator term .)
    COMMA           reduce using rule 23 (simpless -> simpless addOperator term .)
    RSB             reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_OF          reduce using rule 23 (simpless -> simpless addOperator term .)
    RCB             reduce using rule 23 (simpless -> simpless addOperator term .)


state 307

    (26) termss -> termss mulOperator factor .

    MULTIPLY        reduce using rule 26 (termss -> termss mulOperator factor .)
    DIVIDE          reduce using rule 26 (termss -> termss mulOperator factor .)
    MODULUS         reduce using rule 26 (termss -> termss mulOperator factor .)
    AND             reduce using rule 26 (termss -> termss mulOperator factor .)
    PLUS            reduce using rule 26 (termss -> termss mulOperator factor .)
    MINUS           reduce using rule 26 (termss -> termss mulOperator factor .)
    OR              reduce using rule 26 (termss -> termss mulOperator factor .)
    EQUAL           reduce using rule 26 (termss -> termss mulOperator factor .)
    NEQUAL          reduce using rule 26 (termss -> termss mulOperator factor .)
    LT              reduce using rule 26 (termss -> termss mulOperator factor .)
    LTEQ            reduce using rule 26 (termss -> termss mulOperator factor .)
    GT              reduce using rule 26 (termss -> termss mulOperator factor .)
    GTEQ            reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_IN          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_IS          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_THEN        reduce using rule 26 (termss -> termss mulOperator factor .)
    SCOLON          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_BEGIN       reduce using rule 26 (termss -> termss mulOperator factor .)
    COLON           reduce using rule 26 (termss -> termss mulOperator factor .)
    RRB             reduce using rule 26 (termss -> termss mulOperator factor .)
    COMMA           reduce using rule 26 (termss -> termss mulOperator factor .)
    RSB             reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_OF          reduce using rule 26 (termss -> termss mulOperator factor .)
    RCB             reduce using rule 26 (termss -> termss mulOperator factor .)


state 308

    (47) factor -> KEY_ORD LRB factor RRB .

    MULTIPLY        reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    DIVIDE          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    MODULUS         reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    AND             reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    PLUS            reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    MINUS           reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    OR              reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    EQUAL           reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    NEQUAL          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    LT              reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    LTEQ            reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    GT              reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    GTEQ            reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_IN          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_IS          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_THEN        reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    SCOLON          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_BEGIN       reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    COLON           reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    RRB             reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    COMMA           reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    RSB             reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    KEY_OF          reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)
    RCB             reduce using rule 47 (factor -> KEY_ORD LRB factor RRB .)


state 309

    (46) factor -> KEY_CHR LRB factor RRB .

    MULTIPLY        reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    DIVIDE          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    MODULUS         reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    AND             reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    PLUS            reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    MINUS           reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    OR              reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    EQUAL           reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    NEQUAL          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    LT              reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    LTEQ            reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    GT              reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    GTEQ            reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_IN          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_IS          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_THEN        reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    SCOLON          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_BEGIN       reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    COLON           reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    RRB             reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    COMMA           reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    RSB             reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    KEY_OF          reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)
    RCB             reduce using rule 46 (factor -> KEY_CHR LRB factor RRB .)


state 310

    (52) set -> LCB element COMMA element . RCB

    RCB             shift and go to state 340


state 311

    (171) fileStatement -> KEY_FREAD LRB identdef COMMA identdef . COMMA VINTEGER RRB

    COMMA           shift and go to state 341


state 312

    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB string . COMMA char RRB

    COMMA           shift and go to state 342


state 313

    (155) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 343
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    designator                     shift and go to state 121
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108

state 314

    (153) whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .

    SCOLON          reduce using rule 153 (whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .)


state 315

    (152) case -> KEY_CASE expression . COLON statementSequence

    COLON           shift and go to state 344


state 316

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess . KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess . KEY_END

    KEY_ELSE        shift and go to state 345
    KEY_END         shift and go to state 346


state 317

    (150) casess -> case . casess
    (150) casess -> . case casess
    (151) casess -> . empty
    (152) case -> . KEY_CASE expression COLON statementSequence
    (172) empty -> .

    KEY_CASE        shift and go to state 275
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)

    case                           shift and go to state 317
    empty                          shift and go to state 318
    casess                         shift and go to state 347

state 318

    (151) casess -> empty .

    KEY_ELSE        reduce using rule 151 (casess -> empty .)
    KEY_END         reduce using rule 151 (casess -> empty .)


state 319

    (64) expList -> expList COMMA expression .

    RRB             reduce using rule 64 (expList -> expList COMMA expression .)
    COMMA           reduce using rule 64 (expList -> expList COMMA expression .)
    RSB             reduce using rule 64 (expList -> expList COMMA expression .)


state 320

    (101) baseType -> qualident .

    RRB             reduce using rule 101 (baseType -> qualident .)


state 321

    (100) recordType -> KEY_RECORD LRB baseType . RRB fieldListSequence KEY_END

    RRB             shift and go to state 348


state 322

    (99) recordType -> KEY_RECORD fieldListSequence KEY_END .

    SCOLON          reduce using rule 99 (recordType -> KEY_RECORD fieldListSequence KEY_END .)
    KEY_END         reduce using rule 99 (recordType -> KEY_RECORD fieldListSequence KEY_END .)
    RRB             reduce using rule 99 (recordType -> KEY_RECORD fieldListSequence KEY_END .)


state 323

    (102) fieldListSequence -> fieldListSequence SCOLON . fieldList
    (104) fieldList -> . identList COLON type
    (105) fieldList -> . empty
    (106) identList -> . identList COMMA IDENT
    (107) identList -> . IDENT
    (172) empty -> .

    IDENT           shift and go to state 69
    KEY_END         reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    empty                          shift and go to state 282
    fieldList                      shift and go to state 349
    identList                      shift and go to state 286

state 324

    (104) fieldList -> identList COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 217
    KEY_BOOLEAN     shift and go to state 222
    KEY_CHAR        shift and go to state 214
    KEY_STRING      shift and go to state 221
    KEY_REAL        shift and go to state 226
    KEY_SET         shift and go to state 213
    KEY_ARRAY       shift and go to state 220
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 219

    type                           shift and go to state 350
    arrayType                      shift and go to state 224
    pointerType                    shift and go to state 227
    varType                        shift and go to state 216
    recordType                     shift and go to state 225

state 325

    (108) pointerType -> KEY_POINTER KEY_TO type .

    RRB             reduce using rule 108 (pointerType -> KEY_POINTER KEY_TO type .)
    SCOLON          reduce using rule 108 (pointerType -> KEY_POINTER KEY_TO type .)
    KEY_END         reduce using rule 108 (pointerType -> KEY_POINTER KEY_TO type .)


state 326

    (97) comass -> empty .

    KEY_OF          reduce using rule 97 (comass -> empty .)
    COMMA           reduce using rule 97 (comass -> empty .)


state 327

    (95) arrayType -> KEY_ARRAY length comass . KEY_OF type
    (96) comass -> comass . COMMA length

    KEY_OF          shift and go to state 351
    COMMA           shift and go to state 352


state 328

    (120) procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END .

    IDENT           reduce using rule 120 (procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END .)


state 329

    (115) formalss -> formalss SCOLON . fpSection
    (117) fpSection -> . IDENT fps COLON type

    IDENT           shift and go to state 234

    fpSection                      shift and go to state 353

state 330

    (113) formalParameters -> LRB fpSection formalss RRB .

    COLON           reduce using rule 113 (formalParameters -> LRB fpSection formalss RRB .)
    SCOLON          reduce using rule 113 (formalParameters -> LRB fpSection formalss RRB .)


state 331

    (118) fps -> fps COMMA . IDENT

    IDENT           shift and go to state 354


state 332

    (117) fpSection -> IDENT fps COLON . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 217
    KEY_BOOLEAN     shift and go to state 222
    KEY_CHAR        shift and go to state 214
    KEY_STRING      shift and go to state 221
    KEY_REAL        shift and go to state 226
    KEY_SET         shift and go to state 213
    KEY_ARRAY       shift and go to state 220
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 219

    type                           shift and go to state 355
    arrayType                      shift and go to state 224
    pointerType                    shift and go to state 227
    varType                        shift and go to state 216
    recordType                     shift and go to state 225

state 333

    (139) setStatement -> qualident DOT KEY_ADD LRB expression RRB .

    SCOLON          reduce using rule 139 (setStatement -> qualident DOT KEY_ADD LRB expression RRB .)


state 334

    (140) setStatement -> qualident DOT KEY_DEL LRB expression RRB .

    SCOLON          reduce using rule 140 (setStatement -> qualident DOT KEY_DEL LRB expression RRB .)


state 335

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON . assignment RRB KEY_BEGIN statementSequence KEY_END
    (138) assignment -> . designator ASSIGN expression
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    assignment                     shift and go to state 356
    designator                     shift and go to state 157
    identdef                       shift and go to state 83

state 336

    (170) fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .

    SCOLON          reduce using rule 170 (fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .)


state 337

    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 357
    empty                          shift and go to state 16

state 338

    (145) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .

    SCOLON          reduce using rule 145 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .)


state 339

    (146) ifss -> ifss KEY_ELSEIF . expression KEY_THEN statementSequence
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 358
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    number                         shift and go to state 108
    designator                     shift and go to state 121

state 340

    (52) set -> LCB element COMMA element RCB .

    MULTIPLY        reduce using rule 52 (set -> LCB element COMMA element RCB .)
    DIVIDE          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    MODULUS         reduce using rule 52 (set -> LCB element COMMA element RCB .)
    AND             reduce using rule 52 (set -> LCB element COMMA element RCB .)
    PLUS            reduce using rule 52 (set -> LCB element COMMA element RCB .)
    MINUS           reduce using rule 52 (set -> LCB element COMMA element RCB .)
    OR              reduce using rule 52 (set -> LCB element COMMA element RCB .)
    EQUAL           reduce using rule 52 (set -> LCB element COMMA element RCB .)
    NEQUAL          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    LT              reduce using rule 52 (set -> LCB element COMMA element RCB .)
    LTEQ            reduce using rule 52 (set -> LCB element COMMA element RCB .)
    GT              reduce using rule 52 (set -> LCB element COMMA element RCB .)
    GTEQ            reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_IN          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_IS          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    SCOLON          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_THEN        reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_BEGIN       reduce using rule 52 (set -> LCB element COMMA element RCB .)
    COLON           reduce using rule 52 (set -> LCB element COMMA element RCB .)
    RRB             reduce using rule 52 (set -> LCB element COMMA element RCB .)
    COMMA           reduce using rule 52 (set -> LCB element COMMA element RCB .)
    RSB             reduce using rule 52 (set -> LCB element COMMA element RCB .)
    KEY_OF          reduce using rule 52 (set -> LCB element COMMA element RCB .)
    RCB             reduce using rule 52 (set -> LCB element COMMA element RCB .)


state 341

    (171) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA . VINTEGER RRB

    VINTEGER        shift and go to state 359


state 342

    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA . char RRB
    (50) char -> . VCHAR

    VCHAR           shift and go to state 120

    char                           shift and go to state 360

state 343

    (155) doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression .

    SCOLON          reduce using rule 155 (doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression .)


state 344

    (152) case -> KEY_CASE expression COLON . statementSequence
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_CASE        reduce using rule 172 (empty -> .)
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 361
    empty                          shift and go to state 16

state 345

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE . COLON statementSequence KEY_END

    COLON           shift and go to state 362


state 346

    (149) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .

    SCOLON          reduce using rule 149 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .)


state 347

    (150) casess -> case casess .

    KEY_ELSE        reduce using rule 150 (casess -> case casess .)
    KEY_END         reduce using rule 150 (casess -> case casess .)


state 348

    (100) recordType -> KEY_RECORD LRB baseType RRB . fieldListSequence KEY_END
    (102) fieldListSequence -> . fieldListSequence SCOLON fieldList
    (103) fieldListSequence -> . fieldList
    (104) fieldList -> . identList COLON type
    (105) fieldList -> . empty
    (106) identList -> . identList COMMA IDENT
    (107) identList -> . IDENT
    (172) empty -> .

    IDENT           shift and go to state 69
    KEY_END         reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    identList                      shift and go to state 286
    empty                          shift and go to state 282
    fieldList                      shift and go to state 285
    fieldListSequence              shift and go to state 363

state 349

    (102) fieldListSequence -> fieldListSequence SCOLON fieldList .

    KEY_END         reduce using rule 102 (fieldListSequence -> fieldListSequence SCOLON fieldList .)
    SCOLON          reduce using rule 102 (fieldListSequence -> fieldListSequence SCOLON fieldList .)


state 350

    (104) fieldList -> identList COLON type .

    KEY_END         reduce using rule 104 (fieldList -> identList COLON type .)
    SCOLON          reduce using rule 104 (fieldList -> identList COLON type .)


state 351

    (95) arrayType -> KEY_ARRAY length comass KEY_OF . type
    (84) type -> . IDENT
    (85) type -> . varType
    (86) type -> . arrayType
    (87) type -> . recordType
    (88) type -> . pointerType
    (89) varType -> . KEY_INTEGER
    (90) varType -> . KEY_BOOLEAN
    (91) varType -> . KEY_CHAR
    (92) varType -> . KEY_STRING
    (93) varType -> . KEY_REAL
    (94) varType -> . KEY_SET
    (95) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (99) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (100) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (108) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 218
    KEY_INTEGER     shift and go to state 217
    KEY_BOOLEAN     shift and go to state 222
    KEY_CHAR        shift and go to state 214
    KEY_STRING      shift and go to state 221
    KEY_REAL        shift and go to state 226
    KEY_SET         shift and go to state 213
    KEY_ARRAY       shift and go to state 220
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 219

    type                           shift and go to state 364
    pointerType                    shift and go to state 227
    arrayType                      shift and go to state 224
    recordType                     shift and go to state 225
    varType                        shift and go to state 216

state 352

    (96) comass -> comass COMMA . length
    (98) length -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL LRB designator RRB
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) factor -> . KEY_CHR LRB factor RRB
    (47) factor -> . KEY_ORD LRB factor RRB
    (48) number -> . VINTEGER
    (49) number -> . VREAL
    (50) char -> . VCHAR
    (51) string -> . VSTRING
    (52) set -> . LCB element COMMA element RCB
    (53) set -> . LCB RCB
    (55) designator -> . qualident designator2
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT

    PLUS            shift and go to state 103
    MINUS           shift and go to state 114
    KEY_NIL         shift and go to state 96
    LRB             shift and go to state 122
    NOT             shift and go to state 101
    KEY_ABS         shift and go to state 118
    KEY_CHR         shift and go to state 119
    KEY_ORD         shift and go to state 116
    KEY_INTEGER     shift and go to state 105
    KEY_BOOLEAN     shift and go to state 106
    KEY_CHAR        shift and go to state 98
    KEY_STRING      shift and go to state 102
    KEY_REAL        shift and go to state 113
    KEY_SET         shift and go to state 100
    VINTEGER        shift and go to state 99
    VREAL           shift and go to state 97
    VCHAR           shift and go to state 120
    VSTRING         shift and go to state 115
    LCB             shift and go to state 123
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    qualident                      shift and go to state 79
    expression                     shift and go to state 289
    set                            shift and go to state 110
    string                         shift and go to state 107
    factor                         shift and go to state 111
    char                           shift and go to state 112
    simpleExpression               shift and go to state 117
    term                           shift and go to state 109
    identdef                       shift and go to state 83
    length                         shift and go to state 365
    number                         shift and go to state 108
    designator                     shift and go to state 121

state 353

    (115) formalss -> formalss SCOLON fpSection .

    RRB             reduce using rule 115 (formalss -> formalss SCOLON fpSection .)
    SCOLON          reduce using rule 115 (formalss -> formalss SCOLON fpSection .)


state 354

    (118) fps -> fps COMMA IDENT .

    COLON           reduce using rule 118 (fps -> fps COMMA IDENT .)
    COMMA           reduce using rule 118 (fps -> fps COMMA IDENT .)


state 355

    (117) fpSection -> IDENT fps COLON type .

    RRB             reduce using rule 117 (fpSection -> IDENT fps COLON type .)
    SCOLON          reduce using rule 117 (fpSection -> IDENT fps COLON type .)


state 356

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment . RRB KEY_BEGIN statementSequence KEY_END

    RRB             shift and go to state 366


state 357

    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 367
    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    ioStatement                    shift and go to state 59
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 61
    fileStatement                  shift and go to state 62
    switchStatement                shift and go to state 37
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 358

    (146) ifss -> ifss KEY_ELSEIF expression . KEY_THEN statementSequence

    KEY_THEN        shift and go to state 368


state 359

    (171) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER . RRB

    RRB             shift and go to state 369


state 360

    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char . RRB

    RRB             shift and go to state 370


state 361

    (152) case -> KEY_CASE expression COLON statementSequence .
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_CASE        reduce using rule 152 (case -> KEY_CASE expression COLON statementSequence .)
    KEY_ELSE        reduce using rule 152 (case -> KEY_CASE expression COLON statementSequence .)
    KEY_END         reduce using rule 152 (case -> KEY_CASE expression COLON statementSequence .)
    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    switchStatement                shift and go to state 37
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 61
    fileStatement                  shift and go to state 62
    ioStatement                    shift and go to state 59
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 362

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 371
    empty                          shift and go to state 16

state 363

    (100) recordType -> KEY_RECORD LRB baseType RRB fieldListSequence . KEY_END
    (102) fieldListSequence -> fieldListSequence . SCOLON fieldList

    KEY_END         shift and go to state 372
    SCOLON          shift and go to state 323


state 364

    (95) arrayType -> KEY_ARRAY length comass KEY_OF type .

    SCOLON          reduce using rule 95 (arrayType -> KEY_ARRAY length comass KEY_OF type .)
    RRB             reduce using rule 95 (arrayType -> KEY_ARRAY length comass KEY_OF type .)
    KEY_END         reduce using rule 95 (arrayType -> KEY_ARRAY length comass KEY_OF type .)


state 365

    (96) comass -> comass COMMA length .

    KEY_OF          reduce using rule 96 (comass -> comass COMMA length .)
    COMMA           reduce using rule 96 (comass -> comass COMMA length .)


state 366

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB . KEY_BEGIN statementSequence KEY_END

    KEY_BEGIN       shift and go to state 373


state 367

    (144) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .

    SCOLON          reduce using rule 144 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .)


state 368

    (146) ifss -> ifss KEY_ELSEIF expression KEY_THEN . statementSequence
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_ELSE        reduce using rule 172 (empty -> .)
    KEY_END         reduce using rule 172 (empty -> .)
    KEY_ELSEIF      reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 374
    empty                          shift and go to state 16

state 369

    (171) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .

    SCOLON          reduce using rule 171 (fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .)


state 370

    (168) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .

    SCOLON          reduce using rule 168 (fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .)


state 371

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 375
    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    ioStatement                    shift and go to state 59
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 61
    fileStatement                  shift and go to state 62
    switchStatement                shift and go to state 37
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 372

    (100) recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .

    SCOLON          reduce using rule 100 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)
    KEY_END         reduce using rule 100 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)
    RRB             reduce using rule 100 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)


state 373

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence statement SCOLON
    (16) statementSequence -> . empty
    (172) empty -> .

    KEY_END         reduce using rule 172 (empty -> .)
    KEY_EXIT        reduce using rule 172 (empty -> .)
    KEY_RETURN      reduce using rule 172 (empty -> .)
    KEY_BREAK       reduce using rule 172 (empty -> .)
    KEY_CONTINUE    reduce using rule 172 (empty -> .)
    KEY_IF          reduce using rule 172 (empty -> .)
    KEY_SWITCH      reduce using rule 172 (empty -> .)
    KEY_WHILE       reduce using rule 172 (empty -> .)
    KEY_FOR         reduce using rule 172 (empty -> .)
    KEY_DO          reduce using rule 172 (empty -> .)
    KEY_WRITE       reduce using rule 172 (empty -> .)
    KEY_WRITEINT    reduce using rule 172 (empty -> .)
    KEY_WRITEREAL   reduce using rule 172 (empty -> .)
    KEY_WRITECHAR   reduce using rule 172 (empty -> .)
    KEY_WRITEBOOL   reduce using rule 172 (empty -> .)
    KEY_WRITELN     reduce using rule 172 (empty -> .)
    KEY_READ        reduce using rule 172 (empty -> .)
    KEY_READINT     reduce using rule 172 (empty -> .)
    KEY_READREAL    reduce using rule 172 (empty -> .)
    KEY_READCHAR    reduce using rule 172 (empty -> .)
    KEY_READBOOL    reduce using rule 172 (empty -> .)
    KEY_FCLOSE      reduce using rule 172 (empty -> .)
    KEY_FPRINTF     reduce using rule 172 (empty -> .)
    KEY_FREAD       reduce using rule 172 (empty -> .)
    KEY_NEW         reduce using rule 172 (empty -> .)
    IDENT           reduce using rule 172 (empty -> .)
    AT              reduce using rule 172 (empty -> .)
    SCOLON          reduce using rule 172 (empty -> .)

    statementSequence              shift and go to state 376
    empty                          shift and go to state 16

state 374

    (146) ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_ELSE        reduce using rule 146 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_END         reduce using rule 146 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_ELSEIF      reduce using rule 146 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    ioStatement                    shift and go to state 59
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 61
    fileStatement                  shift and go to state 62
    switchStatement                shift and go to state 37
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 375

    (148) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .

    SCOLON          reduce using rule 148 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .)


state 376

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . statement SCOLON
    (121) statement -> . assignment
    (122) statement -> . procedureCall
    (123) statement -> . ifStatement
    (124) statement -> . switchStatement
    (125) statement -> . whileStatement
    (126) statement -> . forStatement
    (127) statement -> . doWhileStatement
    (128) statement -> . KEY_EXIT
    (129) statement -> . KEY_RETURN expression
    (130) statement -> . KEY_RETURN
    (131) statement -> . ioStatement
    (132) statement -> . fileStatement
    (133) statement -> . KEY_BREAK
    (134) statement -> . KEY_CONTINUE
    (135) statement -> . empty
    (136) statement -> . memoryalloc
    (137) statement -> . setStatement
    (138) assignment -> . designator ASSIGN expression
    (142) procedureCall -> . designator actualParameters
    (143) procedureCall -> . designator
    (144) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (145) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (148) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (149) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (153) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (154) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (155) doWhileStatement -> . KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression
    (156) ioStatement -> . KEY_WRITE LRB expression RRB
    (157) ioStatement -> . KEY_WRITEINT LRB expression RRB
    (158) ioStatement -> . KEY_WRITEREAL LRB expression RRB
    (159) ioStatement -> . KEY_WRITECHAR LRB expression RRB
    (160) ioStatement -> . KEY_WRITEBOOL LRB expression RRB
    (161) ioStatement -> . KEY_WRITELN LRB expression RRB
    (162) ioStatement -> . KEY_WRITELN LRB RRB
    (163) ioStatement -> . KEY_READ LRB expression RRB
    (164) ioStatement -> . KEY_READINT LRB expression RRB
    (165) ioStatement -> . KEY_READREAL LRB expression RRB
    (166) ioStatement -> . KEY_READCHAR LRB expression RRB
    (167) ioStatement -> . KEY_READBOOL LRB expression RRB
    (168) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (169) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (170) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (171) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (172) empty -> .
    (141) memoryalloc -> . KEY_NEW LRB designator RRB
    (139) setStatement -> . qualident DOT KEY_ADD LRB expression RRB
    (140) setStatement -> . qualident DOT KEY_DEL LRB expression RRB
    (55) designator -> . qualident designator2
    (62) identdef -> . IDENT
    (63) identdef -> . AT IDENT
    (60) qualident -> . identdef
    (61) qualident -> . identdef DOT qualident

    KEY_END         shift and go to state 377
    KEY_EXIT        shift and go to state 28
    KEY_RETURN      shift and go to state 47
    KEY_BREAK       shift and go to state 67
    KEY_CONTINUE    shift and go to state 33
    KEY_IF          shift and go to state 45
    KEY_SWITCH      shift and go to state 58
    KEY_WHILE       shift and go to state 56
    KEY_FOR         shift and go to state 27
    KEY_DO          shift and go to state 55
    KEY_WRITE       shift and go to state 29
    KEY_WRITEINT    shift and go to state 34
    KEY_WRITEREAL   shift and go to state 44
    KEY_WRITECHAR   shift and go to state 63
    KEY_WRITEBOOL   shift and go to state 38
    KEY_WRITELN     shift and go to state 40
    KEY_READ        shift and go to state 51
    KEY_READINT     shift and go to state 54
    KEY_READREAL    shift and go to state 35
    KEY_READCHAR    shift and go to state 32
    KEY_READBOOL    shift and go to state 65
    KEY_FCLOSE      shift and go to state 60
    KEY_FPRINTF     shift and go to state 42
    KEY_FREAD       shift and go to state 48
    SCOLON          reduce using rule 172 (empty -> .)
    KEY_NEW         shift and go to state 31
    IDENT           shift and go to state 36
    AT              shift and go to state 53

    whileStatement                 shift and go to state 50
    qualident                      shift and go to state 26
    ifStatement                    shift and go to state 30
    identdef                       shift and go to state 52
    procedureCall                  shift and go to state 57
    switchStatement                shift and go to state 37
    designator                     shift and go to state 64
    statement                      shift and go to state 39
    empty                          shift and go to state 61
    fileStatement                  shift and go to state 62
    ioStatement                    shift and go to state 59
    doWhileStatement               shift and go to state 43
    assignment                     shift and go to state 41
    forStatement                   shift and go to state 46
    memoryalloc                    shift and go to state 66
    setStatement                   shift and go to state 49

state 377

    (154) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .

    SCOLON          reduce using rule 154 (forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KEY_BEGIN in state 6 resolved as shift
WARNING: shift/reduce conflict for KEY_CONST in state 6 resolved as shift
WARNING: shift/reduce conflict for KEY_TYPE in state 6 resolved as shift
WARNING: shift/reduce conflict for KEY_VAR in state 6 resolved as shift
WARNING: shift/reduce conflict for KEY_PROCEDURE in state 11 resolved as shift
WARNING: shift/reduce conflict for DOT in state 26 resolved as shift
WARNING: shift/reduce conflict for DOT in state 52 resolved as shift
WARNING: shift/reduce conflict for DOT in state 83 resolved as shift
WARNING: shift/reduce conflict for KEY_BEGIN in state 147 resolved as shift
WARNING: shift/reduce conflict for KEY_CONST in state 147 resolved as shift
WARNING: shift/reduce conflict for KEY_TYPE in state 147 resolved as shift
WARNING: shift/reduce conflict for KEY_VAR in state 147 resolved as shift
WARNING: shift/reduce conflict for RRB in state 264 resolved as shift
WARNING: shift/reduce conflict for RRB in state 266 resolved as shift
