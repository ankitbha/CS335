Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    VBOOLEAN
    KEY_NEW

Grammar

Rule 0     S' -> module
Rule 1     module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT
Rule 2     declarationSequence -> declarationSequence KEY_CONST conss
Rule 3     declarationSequence -> declarationSequence KEY_TYPE typess
Rule 4     declarationSequence -> declarationSequence KEY_VAR varss
Rule 5     declarationSequence -> declarationSequence procss
Rule 6     declarationSequence -> empty
Rule 7     conss -> conss constantDeclaration SCOLON
Rule 8     conss -> empty
Rule 9     typess -> typess typeDeclaration SCOLON
Rule 10    typess -> empty
Rule 11    varss -> varss variableDeclaration SCOLON
Rule 12    varss -> empty
Rule 13    procss -> procss procedureDeclaration SCOLON
Rule 14    procss -> empty
Rule 15    statementSequence -> statementSequence SCOLON statement
Rule 16    statementSequence -> statement
Rule 17    constantDeclaration -> IDENT ASSIGN expression
Rule 18    expression -> simpleExpression
Rule 19    expression -> simpleExpression relation simpleExpression
Rule 20    simpleExpression -> PLUS term simpless
Rule 21    simpleExpression -> term simpless
Rule 22    simpleExpression -> MINUS term simpless
Rule 23    simpless -> simpless addOperator term
Rule 24    simpless -> empty
Rule 25    term -> factor termss
Rule 26    termss -> termss mulOperator factor
Rule 27    termss -> empty
Rule 28    factor -> number
Rule 29    factor -> char
Rule 30    factor -> string
Rule 31    factor -> KEY_NIL
Rule 32    factor -> set
Rule 33    factor -> designator
Rule 34    factor -> designator actualParameters
Rule 35    factor -> LRB expression RRB
Rule 36    factor -> NOT factor
Rule 37    factor -> KEY_ABS factor
Rule 38    factor -> KEY_CHR factor
Rule 39    factor -> KEY_ORD factor
Rule 40    factor -> KEY_INTEGER
Rule 41    factor -> KEY_BOOLEAN
Rule 42    factor -> KEY_CHAR
Rule 43    factor -> KEY_STRING
Rule 44    factor -> KEY_REAL
Rule 45    factor -> KEY_SET
Rule 46    number -> VINTEGER
Rule 47    number -> VREAL
Rule 48    char -> VCHAR
Rule 49    string -> VSTRING
Rule 50    set -> LCB element COMMA element RCB
Rule 51    set -> LCB RCB
Rule 52    element -> expression
Rule 53    designator -> qualident designator2
Rule 54    designator -> qualident
Rule 55    designator2 -> designator2 DOT identdef
Rule 56    designator2 -> designator2 LSB expList RSB
Rule 57    designator2 -> designator LRB qualident RRB
Rule 58    qualident -> identdef
Rule 59    qualident -> identdef DOT qualident
Rule 60    identdef -> IDENT
Rule 61    identdef -> AT IDENT
Rule 62    expList -> expList COMMA expression
Rule 63    expList -> expression
Rule 64    actualParameters -> LRB expList RRB
Rule 65    actualParameters -> LRB RRB
Rule 66    mulOperator -> MULTIPLY
Rule 67    mulOperator -> DIVIDE
Rule 68    mulOperator -> MODULUS
Rule 69    mulOperator -> AND
Rule 70    addOperator -> PLUS
Rule 71    addOperator -> MINUS
Rule 72    addOperator -> OR
Rule 73    relation -> EQUAL
Rule 74    relation -> NEQUAL
Rule 75    relation -> LT
Rule 76    relation -> LTEQ
Rule 77    relation -> GT
Rule 78    relation -> GTEQ
Rule 79    relation -> KEY_IN
Rule 80    relation -> KEY_IS
Rule 81    typeDeclaration -> IDENT EQUAL type
Rule 82    type -> IDENT
Rule 83    type -> varType
Rule 84    type -> arrayType
Rule 85    type -> recordType
Rule 86    type -> pointerType
Rule 87    varType -> KEY_INTEGER
Rule 88    varType -> KEY_BOOLEAN
Rule 89    varType -> KEY_CHAR
Rule 90    varType -> KEY_STRING
Rule 91    varType -> KEY_REAL
Rule 92    varType -> KEY_SET
Rule 93    arrayType -> KEY_ARRAY length comass KEY_OF type
Rule 94    comass -> comass COMMA length
Rule 95    comass -> empty
Rule 96    length -> expression
Rule 97    recordType -> KEY_RECORD fieldListSequence KEY_END
Rule 98    recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
Rule 99    baseType -> qualident
Rule 100   fieldListSequence -> fieldListSequence SCOLON fieldList
Rule 101   fieldListSequence -> fieldList
Rule 102   fieldList -> identList COLON type
Rule 103   fieldList -> empty
Rule 104   identList -> identList COMMA IDENT
Rule 105   identList -> IDENT
Rule 106   pointerType -> KEY_POINTER KEY_TO type
Rule 107   variableDeclaration -> identList COLON type
Rule 108   procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT
Rule 109   procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type
Rule 110   procedureHeading -> KEY_PROCEDURE IDENT formalParameters
Rule 111   formalParameters -> LRB FPSection formalss RRB
Rule 112   formalParameters -> LRB RRB
Rule 113   formalss -> formalss SCOLON FPSection
Rule 114   formalss -> empty
Rule 115   FPSection -> IDENT FPs COLON type
Rule 116   FPs -> FPs COMMA IDENT
Rule 117   FPs -> empty
Rule 118   procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END
Rule 119   statement -> assignment
Rule 120   statement -> procedureCall
Rule 121   statement -> ifStatement
Rule 122   statement -> switchStatement
Rule 123   statement -> whileStatement
Rule 124   statement -> forStatement
Rule 125   statement -> doWhileStatement
Rule 126   statement -> KEY_EXIT
Rule 127   statement -> KEY_RETURN expression
Rule 128   statement -> KEY_RETURN
Rule 129   statement -> ioStatement
Rule 130   statement -> fileStatement
Rule 131   statement -> KEY_BREAK
Rule 132   statement -> KEY_CONTINUE
Rule 133   statement -> empty
Rule 134   assignment -> designator ASSIGN expression
Rule 135   procedureCall -> designator actualParameters
Rule 136   procedureCall -> designator
Rule 137   ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
Rule 138   ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END
Rule 139   ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence
Rule 140   ifss -> empty
Rule 141   switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
Rule 142   switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END
Rule 143   casess -> casess OR case
Rule 144   casess -> empty
Rule 145   case -> KEY_CASE COLON expression statementSequence
Rule 146   whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
Rule 147   forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
Rule 148   doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression
Rule 149   ioStatement -> KEY_WRITE LRB expression RRB
Rule 150   ioStatement -> KEY_WRITELN LRB expression RRB
Rule 151   ioStatement -> KEY_READ LRB expression RRB
Rule 152   fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
Rule 153   fileStatement -> KEY_FCLOSE LRB identdef RRB
Rule 154   fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB
Rule 155   fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
Rule 156   empty -> <empty>

Terminals, with rules where they appear

AND                  : 69
ASSIGN               : 17 134
AT                   : 61
COLON                : 102 107 109 115 141 145
COMMA                : 50 62 94 104 116 152 154 155 155
DIVIDE               : 67
DOT                  : 1 55 59
EQUAL                : 73 81 152
GT                   : 77
GTEQ                 : 78
IDENT                : 1 1 17 60 61 81 82 104 105 108 109 110 115 116
KEY_ABS              : 37
KEY_ARRAY            : 93
KEY_BEGIN            : 1 118 141 142 146 147
KEY_BOOLEAN          : 41 88
KEY_BREAK            : 131
KEY_CASE             : 145
KEY_CHAR             : 42 89
KEY_CHR              : 38
KEY_CONST            : 2
KEY_CONTINUE         : 132
KEY_DO               : 148
KEY_ELSE             : 137 141
KEY_ELSEIF           : 139
KEY_END              : 1 97 98 118 137 138 141 142 146 147
KEY_EXIT             : 126
KEY_FCLOSE           : 153
KEY_FOPEN            : 152
KEY_FOR              : 147
KEY_FPRINTF          : 154
KEY_FREAD            : 155
KEY_IF               : 137 138
KEY_IN               : 79
KEY_INTEGER          : 40 87
KEY_IS               : 80
KEY_MODULE           : 1
KEY_NEW              : 
KEY_NIL              : 31
KEY_OF               : 93
KEY_ORD              : 39
KEY_POINTER          : 106
KEY_PROCEDURE        : 109 110
KEY_READ             : 151
KEY_REAL             : 44 91
KEY_RECORD           : 97 98
KEY_RETURN           : 127 128
KEY_SET              : 45 92
KEY_STRING           : 43 90
KEY_SWITCH           : 141 142
KEY_THEN             : 137 138 139
KEY_TO               : 106
KEY_TYPE             : 3
KEY_VAR              : 4
KEY_WHILE            : 146 148
KEY_WRITE            : 149
KEY_WRITELN          : 150
LCB                  : 50 51
LRB                  : 35 57 64 65 98 111 112 147 149 150 151 152 153 154 155
LSB                  : 56
LT                   : 75
LTEQ                 : 76
MINUS                : 22 71
MODULUS              : 68
MULTIPLY             : 66
NEQUAL               : 74
NOT                  : 36
OR                   : 72 143
PLUS                 : 20 70
RCB                  : 50 51
RRB                  : 35 57 64 65 98 111 112 147 149 150 151 152 153 154 155
RSB                  : 56
SCOLON               : 1 7 9 11 13 15 100 108 113 147 147
VBOOLEAN             : 
VCHAR                : 48
VINTEGER             : 46 155
VREAL                : 47
VSTRING              : 49
error                : 

Nonterminals, with rules where they appear

FPSection            : 111 113
FPs                  : 115 116
actualParameters     : 34 135
addOperator          : 23
arrayType            : 84
assignment           : 119 147 147
baseType             : 98
case                 : 141 142 143
casess               : 141 142 143
char                 : 29 152
comass               : 93 94
conss                : 2 7
constantDeclaration  : 7
declarationSequence  : 1 2 3 4 5 118
designator           : 33 34 57 134 135 136
designator2          : 53 55 56
doWhileStatement     : 125
element              : 50 50
empty                : 6 8 10 12 14 24 27 95 103 114 117 133 140 144
expList              : 56 62 64
expression           : 17 35 52 62 63 96 127 134 137 138 139 141 142 145 146 147 148 149 150 151
factor               : 25 26 36 37 38 39
fieldList            : 100 101
fieldListSequence    : 97 98 100
fileStatement        : 130
forStatement         : 124
formalParameters     : 109 110
formalss             : 111 113
identList            : 102 104 107
identdef             : 55 58 59 152 153 154 155 155
ifStatement          : 121
ifss                 : 137 138 139
ioStatement          : 129
length               : 93 94
module               : 0
mulOperator          : 26
number               : 28
pointerType          : 86
procedureBody        : 108
procedureCall        : 120
procedureDeclaration : 13
procedureHeading     : 108
procss               : 5 13
qualident            : 53 54 57 59 99
recordType           : 85
relation             : 19
set                  : 32
simpleExpression     : 18 19 19
simpless             : 20 21 22 23
statement            : 15 16
statementSequence    : 1 15 118 137 137 138 139 141 145 146 147 148
string               : 30 152 154
switchStatement      : 122
term                 : 20 21 22 23
termss               : 25 26
type                 : 81 93 102 106 107 109 115
typeDeclaration      : 9
typess               : 3 9
varType              : 83
variableDeclaration  : 11
varss                : 4 11
whileStatement       : 123

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT

    KEY_MODULE      shift and go to state 2

    module                         shift and go to state 1

state 1

    (0) S' -> module .



state 2

    (1) module -> KEY_MODULE . IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT

    IDENT           shift and go to state 3


state 3

    (1) module -> KEY_MODULE IDENT . SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT

    SCOLON          shift and go to state 4


state 4

    (1) module -> KEY_MODULE IDENT SCOLON . declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT
    (2) declarationSequence -> . declarationSequence KEY_CONST conss
    (3) declarationSequence -> . declarationSequence KEY_TYPE typess
    (4) declarationSequence -> . declarationSequence KEY_VAR varss
    (5) declarationSequence -> . declarationSequence procss
    (6) declarationSequence -> . empty
    (156) empty -> .

    KEY_BEGIN       reduce using rule 156 (empty -> .)
    KEY_CONST       reduce using rule 156 (empty -> .)
    KEY_TYPE        reduce using rule 156 (empty -> .)
    KEY_VAR         reduce using rule 156 (empty -> .)
    KEY_PROCEDURE   reduce using rule 156 (empty -> .)

    empty                          shift and go to state 5
    declarationSequence            shift and go to state 6

state 5

    (6) declarationSequence -> empty .

    KEY_BEGIN       reduce using rule 6 (declarationSequence -> empty .)
    KEY_CONST       reduce using rule 6 (declarationSequence -> empty .)
    KEY_TYPE        reduce using rule 6 (declarationSequence -> empty .)
    KEY_VAR         reduce using rule 6 (declarationSequence -> empty .)
    KEY_PROCEDURE   reduce using rule 6 (declarationSequence -> empty .)


state 6

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence . KEY_BEGIN statementSequence KEY_END IDENT DOT
    (2) declarationSequence -> declarationSequence . KEY_CONST conss
    (3) declarationSequence -> declarationSequence . KEY_TYPE typess
    (4) declarationSequence -> declarationSequence . KEY_VAR varss
    (5) declarationSequence -> declarationSequence . procss
    (13) procss -> . procss procedureDeclaration SCOLON
    (14) procss -> . empty
    (156) empty -> .

  ! shift/reduce conflict for KEY_BEGIN resolved as shift
  ! shift/reduce conflict for KEY_CONST resolved as shift
  ! shift/reduce conflict for KEY_TYPE resolved as shift
  ! shift/reduce conflict for KEY_VAR resolved as shift
    KEY_BEGIN       shift and go to state 9
    KEY_CONST       shift and go to state 8
    KEY_TYPE        shift and go to state 10
    KEY_VAR         shift and go to state 12
    KEY_PROCEDURE   reduce using rule 156 (empty -> .)

  ! KEY_BEGIN       [ reduce using rule 156 (empty -> .) ]
  ! KEY_CONST       [ reduce using rule 156 (empty -> .) ]
  ! KEY_TYPE        [ reduce using rule 156 (empty -> .) ]
  ! KEY_VAR         [ reduce using rule 156 (empty -> .) ]

    empty                          shift and go to state 7
    procss                         shift and go to state 11

state 7

    (14) procss -> empty .

    KEY_PROCEDURE   reduce using rule 14 (procss -> empty .)
    KEY_BEGIN       reduce using rule 14 (procss -> empty .)
    KEY_CONST       reduce using rule 14 (procss -> empty .)
    KEY_TYPE        reduce using rule 14 (procss -> empty .)
    KEY_VAR         reduce using rule 14 (procss -> empty .)


state 8

    (2) declarationSequence -> declarationSequence KEY_CONST . conss
    (7) conss -> . conss constantDeclaration SCOLON
    (8) conss -> . empty
    (156) empty -> .

    IDENT           reduce using rule 156 (empty -> .)
    KEY_BEGIN       reduce using rule 156 (empty -> .)
    KEY_CONST       reduce using rule 156 (empty -> .)
    KEY_TYPE        reduce using rule 156 (empty -> .)
    KEY_VAR         reduce using rule 156 (empty -> .)
    KEY_PROCEDURE   reduce using rule 156 (empty -> .)

    empty                          shift and go to state 13
    conss                          shift and go to state 14

state 9

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN . statementSequence KEY_END IDENT DOT
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    empty                          shift and go to state 15
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    qualident                      shift and go to state 22
    statementSequence              shift and go to state 21
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 10

    (3) declarationSequence -> declarationSequence KEY_TYPE . typess
    (9) typess -> . typess typeDeclaration SCOLON
    (10) typess -> . empty
    (156) empty -> .

    IDENT           reduce using rule 156 (empty -> .)
    KEY_BEGIN       reduce using rule 156 (empty -> .)
    KEY_CONST       reduce using rule 156 (empty -> .)
    KEY_TYPE        reduce using rule 156 (empty -> .)
    KEY_VAR         reduce using rule 156 (empty -> .)
    KEY_PROCEDURE   reduce using rule 156 (empty -> .)

    empty                          shift and go to state 47
    typess                         shift and go to state 48

state 11

    (5) declarationSequence -> declarationSequence procss .
    (13) procss -> procss . procedureDeclaration SCOLON
    (108) procedureDeclaration -> . procedureHeading SCOLON procedureBody IDENT
    (109) procedureHeading -> . KEY_PROCEDURE IDENT formalParameters COLON type
    (110) procedureHeading -> . KEY_PROCEDURE IDENT formalParameters

  ! shift/reduce conflict for KEY_PROCEDURE resolved as shift
    KEY_BEGIN       reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_CONST       reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_TYPE        reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_VAR         reduce using rule 5 (declarationSequence -> declarationSequence procss .)
    KEY_PROCEDURE   shift and go to state 50

  ! KEY_PROCEDURE   [ reduce using rule 5 (declarationSequence -> declarationSequence procss .) ]

    procedureHeading               shift and go to state 49
    procedureDeclaration           shift and go to state 51

state 12

    (4) declarationSequence -> declarationSequence KEY_VAR . varss
    (11) varss -> . varss variableDeclaration SCOLON
    (12) varss -> . empty
    (156) empty -> .

    IDENT           reduce using rule 156 (empty -> .)
    KEY_BEGIN       reduce using rule 156 (empty -> .)
    KEY_CONST       reduce using rule 156 (empty -> .)
    KEY_TYPE        reduce using rule 156 (empty -> .)
    KEY_VAR         reduce using rule 156 (empty -> .)
    KEY_PROCEDURE   reduce using rule 156 (empty -> .)

    varss                          shift and go to state 53
    empty                          shift and go to state 52

state 13

    (8) conss -> empty .

    IDENT           reduce using rule 8 (conss -> empty .)
    KEY_BEGIN       reduce using rule 8 (conss -> empty .)
    KEY_CONST       reduce using rule 8 (conss -> empty .)
    KEY_TYPE        reduce using rule 8 (conss -> empty .)
    KEY_VAR         reduce using rule 8 (conss -> empty .)
    KEY_PROCEDURE   reduce using rule 8 (conss -> empty .)


state 14

    (2) declarationSequence -> declarationSequence KEY_CONST conss .
    (7) conss -> conss . constantDeclaration SCOLON
    (17) constantDeclaration -> . IDENT ASSIGN expression

    KEY_BEGIN       reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_CONST       reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_TYPE        reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_VAR         reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    KEY_PROCEDURE   reduce using rule 2 (declarationSequence -> declarationSequence KEY_CONST conss .)
    IDENT           shift and go to state 54

    constantDeclaration            shift and go to state 55

state 15

    (133) statement -> empty .

    SCOLON          reduce using rule 133 (statement -> empty .)
    KEY_ELSE        reduce using rule 133 (statement -> empty .)
    KEY_END         reduce using rule 133 (statement -> empty .)
    KEY_ELSEIF      reduce using rule 133 (statement -> empty .)
    KEY_WHILE       reduce using rule 133 (statement -> empty .)
    OR              reduce using rule 133 (statement -> empty .)


state 16

    (121) statement -> ifStatement .

    SCOLON          reduce using rule 121 (statement -> ifStatement .)
    KEY_ELSE        reduce using rule 121 (statement -> ifStatement .)
    KEY_END         reduce using rule 121 (statement -> ifStatement .)
    KEY_ELSEIF      reduce using rule 121 (statement -> ifStatement .)
    KEY_WHILE       reduce using rule 121 (statement -> ifStatement .)
    OR              reduce using rule 121 (statement -> ifStatement .)


state 17

    (129) statement -> ioStatement .

    SCOLON          reduce using rule 129 (statement -> ioStatement .)
    KEY_ELSE        reduce using rule 129 (statement -> ioStatement .)
    KEY_END         reduce using rule 129 (statement -> ioStatement .)
    KEY_ELSEIF      reduce using rule 129 (statement -> ioStatement .)
    KEY_WHILE       reduce using rule 129 (statement -> ioStatement .)
    OR              reduce using rule 129 (statement -> ioStatement .)


state 18

    (148) doWhileStatement -> KEY_DO . statementSequence KEY_WHILE expression
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

  ! shift/reduce conflict for KEY_WHILE resolved as shift
    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    SCOLON          reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

  ! KEY_WHILE       [ reduce using rule 156 (empty -> .) ]

    empty                          shift and go to state 15
    qualident                      shift and go to state 22
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    statementSequence              shift and go to state 56
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 19

    (127) statement -> KEY_RETURN . expression
    (128) statement -> KEY_RETURN .
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    SCOLON          reduce using rule 128 (statement -> KEY_RETURN .)
    KEY_ELSE        reduce using rule 128 (statement -> KEY_RETURN .)
    KEY_END         reduce using rule 128 (statement -> KEY_RETURN .)
    KEY_ELSEIF      reduce using rule 128 (statement -> KEY_RETURN .)
    KEY_WHILE       reduce using rule 128 (statement -> KEY_RETURN .)
    OR              reduce using rule 128 (statement -> KEY_RETURN .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 61
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 20

    (16) statementSequence -> statement .

    SCOLON          reduce using rule 16 (statementSequence -> statement .)
    KEY_ELSE        reduce using rule 16 (statementSequence -> statement .)
    KEY_END         reduce using rule 16 (statementSequence -> statement .)
    KEY_ELSEIF      reduce using rule 16 (statementSequence -> statement .)
    OR              reduce using rule 16 (statementSequence -> statement .)
    KEY_WHILE       reduce using rule 16 (statementSequence -> statement .)


state 21

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence . KEY_END IDENT DOT
    (15) statementSequence -> statementSequence . SCOLON statement

    KEY_END         shift and go to state 87
    SCOLON          shift and go to state 86


state 22

    (53) designator -> qualident . designator2
    (54) designator -> qualident .
    (55) designator2 -> . designator2 DOT identdef
    (56) designator2 -> . designator2 LSB expList RSB
    (57) designator2 -> . designator LRB qualident RRB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    LRB             reduce using rule 54 (designator -> qualident .)
    MULTIPLY        reduce using rule 54 (designator -> qualident .)
    DIVIDE          reduce using rule 54 (designator -> qualident .)
    MODULUS         reduce using rule 54 (designator -> qualident .)
    AND             reduce using rule 54 (designator -> qualident .)
    PLUS            reduce using rule 54 (designator -> qualident .)
    MINUS           reduce using rule 54 (designator -> qualident .)
    OR              reduce using rule 54 (designator -> qualident .)
    EQUAL           reduce using rule 54 (designator -> qualident .)
    NEQUAL          reduce using rule 54 (designator -> qualident .)
    LT              reduce using rule 54 (designator -> qualident .)
    LTEQ            reduce using rule 54 (designator -> qualident .)
    GT              reduce using rule 54 (designator -> qualident .)
    GTEQ            reduce using rule 54 (designator -> qualident .)
    KEY_IN          reduce using rule 54 (designator -> qualident .)
    KEY_IS          reduce using rule 54 (designator -> qualident .)
    KEY_BEGIN       reduce using rule 54 (designator -> qualident .)
    ASSIGN          reduce using rule 54 (designator -> qualident .)
    KEY_END         reduce using rule 54 (designator -> qualident .)
    SCOLON          reduce using rule 54 (designator -> qualident .)
    RRB             reduce using rule 54 (designator -> qualident .)
    KEY_WHILE       reduce using rule 54 (designator -> qualident .)
    KEY_ELSE        reduce using rule 54 (designator -> qualident .)
    KEY_ELSEIF      reduce using rule 54 (designator -> qualident .)
    KEY_THEN        reduce using rule 54 (designator -> qualident .)
    COMMA           reduce using rule 54 (designator -> qualident .)
    RSB             reduce using rule 54 (designator -> qualident .)
    RCB             reduce using rule 54 (designator -> qualident .)
    KEY_OF          reduce using rule 54 (designator -> qualident .)
    KEY_EXIT        reduce using rule 54 (designator -> qualident .)
    KEY_RETURN      reduce using rule 54 (designator -> qualident .)
    KEY_BREAK       reduce using rule 54 (designator -> qualident .)
    KEY_CONTINUE    reduce using rule 54 (designator -> qualident .)
    KEY_IF          reduce using rule 54 (designator -> qualident .)
    KEY_SWITCH      reduce using rule 54 (designator -> qualident .)
    KEY_FOR         reduce using rule 54 (designator -> qualident .)
    KEY_DO          reduce using rule 54 (designator -> qualident .)
    KEY_WRITE       reduce using rule 54 (designator -> qualident .)
    KEY_WRITELN     reduce using rule 54 (designator -> qualident .)
    KEY_READ        reduce using rule 54 (designator -> qualident .)
    KEY_FCLOSE      reduce using rule 54 (designator -> qualident .)
    KEY_FPRINTF     reduce using rule 54 (designator -> qualident .)
    KEY_FREAD       reduce using rule 54 (designator -> qualident .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

  ! IDENT           [ reduce using rule 54 (designator -> qualident .) ]
  ! AT              [ reduce using rule 54 (designator -> qualident .) ]

    qualident                      shift and go to state 22
    designator                     shift and go to state 88
    designator2                    shift and go to state 89
    identdef                       shift and go to state 79

state 23

    (155) fileStatement -> KEY_FREAD . LRB identdef COMMA identdef COMMA VINTEGER RRB

    LRB             shift and go to state 90


state 24

    (141) switchStatement -> KEY_SWITCH . expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> KEY_SWITCH . expression KEY_BEGIN case casess KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    set                            shift and go to state 63
    expression                     shift and go to state 91
    term                           shift and go to state 80
    qualident                      shift and go to state 22
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    char                           shift and go to state 70
    simpleExpression               shift and go to state 85

state 25

    (119) statement -> assignment .

    SCOLON          reduce using rule 119 (statement -> assignment .)
    KEY_ELSE        reduce using rule 119 (statement -> assignment .)
    KEY_END         reduce using rule 119 (statement -> assignment .)
    KEY_ELSEIF      reduce using rule 119 (statement -> assignment .)
    KEY_WHILE       reduce using rule 119 (statement -> assignment .)
    OR              reduce using rule 119 (statement -> assignment .)


state 26

    (149) ioStatement -> KEY_WRITE . LRB expression RRB

    LRB             shift and go to state 92


state 27

    (137) ifStatement -> KEY_IF . expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> KEY_IF . expression KEY_THEN statementSequence ifss KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 93
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 28

    (151) ioStatement -> KEY_READ . LRB expression RRB

    LRB             shift and go to state 94


state 29

    (122) statement -> switchStatement .

    SCOLON          reduce using rule 122 (statement -> switchStatement .)
    KEY_ELSE        reduce using rule 122 (statement -> switchStatement .)
    KEY_END         reduce using rule 122 (statement -> switchStatement .)
    KEY_ELSEIF      reduce using rule 122 (statement -> switchStatement .)
    KEY_WHILE       reduce using rule 122 (statement -> switchStatement .)
    OR              reduce using rule 122 (statement -> switchStatement .)


state 30

    (61) identdef -> AT . IDENT

    IDENT           shift and go to state 95


state 31

    (126) statement -> KEY_EXIT .

    SCOLON          reduce using rule 126 (statement -> KEY_EXIT .)
    KEY_ELSE        reduce using rule 126 (statement -> KEY_EXIT .)
    KEY_END         reduce using rule 126 (statement -> KEY_EXIT .)
    KEY_ELSEIF      reduce using rule 126 (statement -> KEY_EXIT .)
    KEY_WHILE       reduce using rule 126 (statement -> KEY_EXIT .)
    OR              reduce using rule 126 (statement -> KEY_EXIT .)


state 32

    (124) statement -> forStatement .

    SCOLON          reduce using rule 124 (statement -> forStatement .)
    KEY_ELSE        reduce using rule 124 (statement -> forStatement .)
    KEY_END         reduce using rule 124 (statement -> forStatement .)
    KEY_ELSEIF      reduce using rule 124 (statement -> forStatement .)
    KEY_WHILE       reduce using rule 124 (statement -> forStatement .)
    OR              reduce using rule 124 (statement -> forStatement .)


state 33

    (130) statement -> fileStatement .

    SCOLON          reduce using rule 130 (statement -> fileStatement .)
    KEY_ELSE        reduce using rule 130 (statement -> fileStatement .)
    KEY_END         reduce using rule 130 (statement -> fileStatement .)
    KEY_ELSEIF      reduce using rule 130 (statement -> fileStatement .)
    KEY_WHILE       reduce using rule 130 (statement -> fileStatement .)
    OR              reduce using rule 130 (statement -> fileStatement .)


state 34

    (123) statement -> whileStatement .

    SCOLON          reduce using rule 123 (statement -> whileStatement .)
    KEY_ELSE        reduce using rule 123 (statement -> whileStatement .)
    KEY_END         reduce using rule 123 (statement -> whileStatement .)
    KEY_ELSEIF      reduce using rule 123 (statement -> whileStatement .)
    KEY_WHILE       reduce using rule 123 (statement -> whileStatement .)
    OR              reduce using rule 123 (statement -> whileStatement .)


state 35

    (146) whileStatement -> KEY_WHILE . expression KEY_BEGIN statementSequence KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 96
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 36

    (134) assignment -> designator . ASSIGN expression
    (135) procedureCall -> designator . actualParameters
    (136) procedureCall -> designator .
    (64) actualParameters -> . LRB expList RRB
    (65) actualParameters -> . LRB RRB

    ASSIGN          shift and go to state 97
    KEY_END         reduce using rule 136 (procedureCall -> designator .)
    SCOLON          reduce using rule 136 (procedureCall -> designator .)
    KEY_WHILE       reduce using rule 136 (procedureCall -> designator .)
    KEY_ELSE        reduce using rule 136 (procedureCall -> designator .)
    KEY_ELSEIF      reduce using rule 136 (procedureCall -> designator .)
    OR              reduce using rule 136 (procedureCall -> designator .)
    LRB             shift and go to state 98

    actualParameters               shift and go to state 99

state 37

    (154) fileStatement -> KEY_FPRINTF . LRB identdef COMMA string RRB

    LRB             shift and go to state 100


state 38

    (131) statement -> KEY_BREAK .

    SCOLON          reduce using rule 131 (statement -> KEY_BREAK .)
    KEY_ELSE        reduce using rule 131 (statement -> KEY_BREAK .)
    KEY_END         reduce using rule 131 (statement -> KEY_BREAK .)
    KEY_ELSEIF      reduce using rule 131 (statement -> KEY_BREAK .)
    KEY_WHILE       reduce using rule 131 (statement -> KEY_BREAK .)
    OR              reduce using rule 131 (statement -> KEY_BREAK .)


state 39

    (150) ioStatement -> KEY_WRITELN . LRB expression RRB

    LRB             shift and go to state 101


state 40

    (125) statement -> doWhileStatement .

    SCOLON          reduce using rule 125 (statement -> doWhileStatement .)
    KEY_ELSE        reduce using rule 125 (statement -> doWhileStatement .)
    KEY_END         reduce using rule 125 (statement -> doWhileStatement .)
    KEY_ELSEIF      reduce using rule 125 (statement -> doWhileStatement .)
    KEY_WHILE       reduce using rule 125 (statement -> doWhileStatement .)
    OR              reduce using rule 125 (statement -> doWhileStatement .)


state 41

    (120) statement -> procedureCall .

    SCOLON          reduce using rule 120 (statement -> procedureCall .)
    KEY_ELSE        reduce using rule 120 (statement -> procedureCall .)
    KEY_END         reduce using rule 120 (statement -> procedureCall .)
    KEY_ELSEIF      reduce using rule 120 (statement -> procedureCall .)
    KEY_WHILE       reduce using rule 120 (statement -> procedureCall .)
    OR              reduce using rule 120 (statement -> procedureCall .)


state 42

    (147) forStatement -> KEY_FOR . LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    LRB             shift and go to state 102


state 43

    (152) fileStatement -> identdef . EQUAL KEY_FOPEN LRB string COMMA char RRB
    (58) qualident -> identdef .
    (59) qualident -> identdef . DOT qualident

    EQUAL           shift and go to state 104
    IDENT           reduce using rule 58 (qualident -> identdef .)
    AT              reduce using rule 58 (qualident -> identdef .)
    ASSIGN          reduce using rule 58 (qualident -> identdef .)
    LRB             reduce using rule 58 (qualident -> identdef .)
    SCOLON          reduce using rule 58 (qualident -> identdef .)
    KEY_ELSE        reduce using rule 58 (qualident -> identdef .)
    KEY_END         reduce using rule 58 (qualident -> identdef .)
    KEY_ELSEIF      reduce using rule 58 (qualident -> identdef .)
    KEY_WHILE       reduce using rule 58 (qualident -> identdef .)
    OR              reduce using rule 58 (qualident -> identdef .)
    DOT             shift and go to state 103


state 44

    (153) fileStatement -> KEY_FCLOSE . LRB identdef RRB

    LRB             shift and go to state 105


state 45

    (132) statement -> KEY_CONTINUE .

    SCOLON          reduce using rule 132 (statement -> KEY_CONTINUE .)
    KEY_ELSE        reduce using rule 132 (statement -> KEY_CONTINUE .)
    KEY_END         reduce using rule 132 (statement -> KEY_CONTINUE .)
    KEY_ELSEIF      reduce using rule 132 (statement -> KEY_CONTINUE .)
    KEY_WHILE       reduce using rule 132 (statement -> KEY_CONTINUE .)
    OR              reduce using rule 132 (statement -> KEY_CONTINUE .)


state 46

    (60) identdef -> IDENT .

    DOT             reduce using rule 60 (identdef -> IDENT .)
    IDENT           reduce using rule 60 (identdef -> IDENT .)
    AT              reduce using rule 60 (identdef -> IDENT .)
    LRB             reduce using rule 60 (identdef -> IDENT .)
    MULTIPLY        reduce using rule 60 (identdef -> IDENT .)
    DIVIDE          reduce using rule 60 (identdef -> IDENT .)
    MODULUS         reduce using rule 60 (identdef -> IDENT .)
    AND             reduce using rule 60 (identdef -> IDENT .)
    PLUS            reduce using rule 60 (identdef -> IDENT .)
    MINUS           reduce using rule 60 (identdef -> IDENT .)
    OR              reduce using rule 60 (identdef -> IDENT .)
    EQUAL           reduce using rule 60 (identdef -> IDENT .)
    NEQUAL          reduce using rule 60 (identdef -> IDENT .)
    LT              reduce using rule 60 (identdef -> IDENT .)
    LTEQ            reduce using rule 60 (identdef -> IDENT .)
    GT              reduce using rule 60 (identdef -> IDENT .)
    GTEQ            reduce using rule 60 (identdef -> IDENT .)
    KEY_IN          reduce using rule 60 (identdef -> IDENT .)
    KEY_IS          reduce using rule 60 (identdef -> IDENT .)
    RRB             reduce using rule 60 (identdef -> IDENT .)
    KEY_END         reduce using rule 60 (identdef -> IDENT .)
    SCOLON          reduce using rule 60 (identdef -> IDENT .)
    KEY_WHILE       reduce using rule 60 (identdef -> IDENT .)
    KEY_ELSE        reduce using rule 60 (identdef -> IDENT .)
    KEY_ELSEIF      reduce using rule 60 (identdef -> IDENT .)
    KEY_BEGIN       reduce using rule 60 (identdef -> IDENT .)
    KEY_THEN        reduce using rule 60 (identdef -> IDENT .)
    COMMA           reduce using rule 60 (identdef -> IDENT .)
    RSB             reduce using rule 60 (identdef -> IDENT .)
    RCB             reduce using rule 60 (identdef -> IDENT .)
    KEY_OF          reduce using rule 60 (identdef -> IDENT .)
    KEY_EXIT        reduce using rule 60 (identdef -> IDENT .)
    KEY_RETURN      reduce using rule 60 (identdef -> IDENT .)
    KEY_BREAK       reduce using rule 60 (identdef -> IDENT .)
    KEY_CONTINUE    reduce using rule 60 (identdef -> IDENT .)
    KEY_IF          reduce using rule 60 (identdef -> IDENT .)
    KEY_SWITCH      reduce using rule 60 (identdef -> IDENT .)
    KEY_FOR         reduce using rule 60 (identdef -> IDENT .)
    KEY_DO          reduce using rule 60 (identdef -> IDENT .)
    KEY_WRITE       reduce using rule 60 (identdef -> IDENT .)
    KEY_WRITELN     reduce using rule 60 (identdef -> IDENT .)
    KEY_READ        reduce using rule 60 (identdef -> IDENT .)
    KEY_FCLOSE      reduce using rule 60 (identdef -> IDENT .)
    KEY_FPRINTF     reduce using rule 60 (identdef -> IDENT .)
    KEY_FREAD       reduce using rule 60 (identdef -> IDENT .)
    ASSIGN          reduce using rule 60 (identdef -> IDENT .)
    LSB             reduce using rule 60 (identdef -> IDENT .)


state 47

    (10) typess -> empty .

    IDENT           reduce using rule 10 (typess -> empty .)
    KEY_BEGIN       reduce using rule 10 (typess -> empty .)
    KEY_CONST       reduce using rule 10 (typess -> empty .)
    KEY_TYPE        reduce using rule 10 (typess -> empty .)
    KEY_VAR         reduce using rule 10 (typess -> empty .)
    KEY_PROCEDURE   reduce using rule 10 (typess -> empty .)


state 48

    (3) declarationSequence -> declarationSequence KEY_TYPE typess .
    (9) typess -> typess . typeDeclaration SCOLON
    (81) typeDeclaration -> . IDENT EQUAL type

    KEY_BEGIN       reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_CONST       reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_TYPE        reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_VAR         reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    KEY_PROCEDURE   reduce using rule 3 (declarationSequence -> declarationSequence KEY_TYPE typess .)
    IDENT           shift and go to state 107

    typeDeclaration                shift and go to state 106

state 49

    (108) procedureDeclaration -> procedureHeading . SCOLON procedureBody IDENT

    SCOLON          shift and go to state 108


state 50

    (109) procedureHeading -> KEY_PROCEDURE . IDENT formalParameters COLON type
    (110) procedureHeading -> KEY_PROCEDURE . IDENT formalParameters

    IDENT           shift and go to state 109


state 51

    (13) procss -> procss procedureDeclaration . SCOLON

    SCOLON          shift and go to state 110


state 52

    (12) varss -> empty .

    IDENT           reduce using rule 12 (varss -> empty .)
    KEY_BEGIN       reduce using rule 12 (varss -> empty .)
    KEY_CONST       reduce using rule 12 (varss -> empty .)
    KEY_TYPE        reduce using rule 12 (varss -> empty .)
    KEY_VAR         reduce using rule 12 (varss -> empty .)
    KEY_PROCEDURE   reduce using rule 12 (varss -> empty .)


state 53

    (4) declarationSequence -> declarationSequence KEY_VAR varss .
    (11) varss -> varss . variableDeclaration SCOLON
    (107) variableDeclaration -> . identList COLON type
    (104) identList -> . identList COMMA IDENT
    (105) identList -> . IDENT

    KEY_BEGIN       reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_CONST       reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_TYPE        reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_VAR         reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    KEY_PROCEDURE   reduce using rule 4 (declarationSequence -> declarationSequence KEY_VAR varss .)
    IDENT           shift and go to state 112

    variableDeclaration            shift and go to state 111
    identList                      shift and go to state 113

state 54

    (17) constantDeclaration -> IDENT . ASSIGN expression

    ASSIGN          shift and go to state 114


state 55

    (7) conss -> conss constantDeclaration . SCOLON

    SCOLON          shift and go to state 115


state 56

    (148) doWhileStatement -> KEY_DO statementSequence . KEY_WHILE expression
    (15) statementSequence -> statementSequence . SCOLON statement

    KEY_WHILE       shift and go to state 116
    SCOLON          shift and go to state 86


state 57

    (22) simpleExpression -> MINUS . term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    term                           shift and go to state 117
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    char                           shift and go to state 70

state 58

    (20) simpleExpression -> PLUS . term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    term                           shift and go to state 118
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    char                           shift and go to state 70

state 59

    (37) factor -> KEY_ABS . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    designator                     shift and go to state 74
    set                            shift and go to state 63
    factor                         shift and go to state 119
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    char                           shift and go to state 70

state 60

    (36) factor -> NOT . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    designator                     shift and go to state 74
    set                            shift and go to state 63
    factor                         shift and go to state 120
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    char                           shift and go to state 70

state 61

    (127) statement -> KEY_RETURN expression .

    SCOLON          reduce using rule 127 (statement -> KEY_RETURN expression .)
    KEY_ELSE        reduce using rule 127 (statement -> KEY_RETURN expression .)
    KEY_END         reduce using rule 127 (statement -> KEY_RETURN expression .)
    KEY_ELSEIF      reduce using rule 127 (statement -> KEY_RETURN expression .)
    KEY_WHILE       reduce using rule 127 (statement -> KEY_RETURN expression .)
    OR              reduce using rule 127 (statement -> KEY_RETURN expression .)


state 62

    (49) string -> VSTRING .

    MULTIPLY        reduce using rule 49 (string -> VSTRING .)
    DIVIDE          reduce using rule 49 (string -> VSTRING .)
    MODULUS         reduce using rule 49 (string -> VSTRING .)
    AND             reduce using rule 49 (string -> VSTRING .)
    PLUS            reduce using rule 49 (string -> VSTRING .)
    MINUS           reduce using rule 49 (string -> VSTRING .)
    OR              reduce using rule 49 (string -> VSTRING .)
    EQUAL           reduce using rule 49 (string -> VSTRING .)
    NEQUAL          reduce using rule 49 (string -> VSTRING .)
    LT              reduce using rule 49 (string -> VSTRING .)
    LTEQ            reduce using rule 49 (string -> VSTRING .)
    GT              reduce using rule 49 (string -> VSTRING .)
    GTEQ            reduce using rule 49 (string -> VSTRING .)
    KEY_IN          reduce using rule 49 (string -> VSTRING .)
    KEY_IS          reduce using rule 49 (string -> VSTRING .)
    KEY_END         reduce using rule 49 (string -> VSTRING .)
    SCOLON          reduce using rule 49 (string -> VSTRING .)
    KEY_WHILE       reduce using rule 49 (string -> VSTRING .)
    KEY_ELSE        reduce using rule 49 (string -> VSTRING .)
    KEY_ELSEIF      reduce using rule 49 (string -> VSTRING .)
    KEY_BEGIN       reduce using rule 49 (string -> VSTRING .)
    KEY_THEN        reduce using rule 49 (string -> VSTRING .)
    RRB             reduce using rule 49 (string -> VSTRING .)
    COMMA           reduce using rule 49 (string -> VSTRING .)
    RSB             reduce using rule 49 (string -> VSTRING .)
    RCB             reduce using rule 49 (string -> VSTRING .)
    KEY_OF          reduce using rule 49 (string -> VSTRING .)
    KEY_EXIT        reduce using rule 49 (string -> VSTRING .)
    KEY_RETURN      reduce using rule 49 (string -> VSTRING .)
    KEY_BREAK       reduce using rule 49 (string -> VSTRING .)
    KEY_CONTINUE    reduce using rule 49 (string -> VSTRING .)
    KEY_IF          reduce using rule 49 (string -> VSTRING .)
    KEY_SWITCH      reduce using rule 49 (string -> VSTRING .)
    KEY_FOR         reduce using rule 49 (string -> VSTRING .)
    KEY_DO          reduce using rule 49 (string -> VSTRING .)
    KEY_WRITE       reduce using rule 49 (string -> VSTRING .)
    KEY_WRITELN     reduce using rule 49 (string -> VSTRING .)
    KEY_READ        reduce using rule 49 (string -> VSTRING .)
    KEY_FCLOSE      reduce using rule 49 (string -> VSTRING .)
    KEY_FPRINTF     reduce using rule 49 (string -> VSTRING .)
    KEY_FREAD       reduce using rule 49 (string -> VSTRING .)
    IDENT           reduce using rule 49 (string -> VSTRING .)
    AT              reduce using rule 49 (string -> VSTRING .)


state 63

    (32) factor -> set .

    MULTIPLY        reduce using rule 32 (factor -> set .)
    DIVIDE          reduce using rule 32 (factor -> set .)
    MODULUS         reduce using rule 32 (factor -> set .)
    AND             reduce using rule 32 (factor -> set .)
    PLUS            reduce using rule 32 (factor -> set .)
    MINUS           reduce using rule 32 (factor -> set .)
    OR              reduce using rule 32 (factor -> set .)
    EQUAL           reduce using rule 32 (factor -> set .)
    NEQUAL          reduce using rule 32 (factor -> set .)
    LT              reduce using rule 32 (factor -> set .)
    LTEQ            reduce using rule 32 (factor -> set .)
    GT              reduce using rule 32 (factor -> set .)
    GTEQ            reduce using rule 32 (factor -> set .)
    KEY_IN          reduce using rule 32 (factor -> set .)
    KEY_IS          reduce using rule 32 (factor -> set .)
    KEY_OF          reduce using rule 32 (factor -> set .)
    COMMA           reduce using rule 32 (factor -> set .)
    KEY_EXIT        reduce using rule 32 (factor -> set .)
    KEY_RETURN      reduce using rule 32 (factor -> set .)
    KEY_BREAK       reduce using rule 32 (factor -> set .)
    KEY_CONTINUE    reduce using rule 32 (factor -> set .)
    KEY_IF          reduce using rule 32 (factor -> set .)
    KEY_SWITCH      reduce using rule 32 (factor -> set .)
    KEY_WHILE       reduce using rule 32 (factor -> set .)
    KEY_FOR         reduce using rule 32 (factor -> set .)
    KEY_DO          reduce using rule 32 (factor -> set .)
    KEY_WRITE       reduce using rule 32 (factor -> set .)
    KEY_WRITELN     reduce using rule 32 (factor -> set .)
    KEY_READ        reduce using rule 32 (factor -> set .)
    KEY_FCLOSE      reduce using rule 32 (factor -> set .)
    KEY_FPRINTF     reduce using rule 32 (factor -> set .)
    KEY_FREAD       reduce using rule 32 (factor -> set .)
    IDENT           reduce using rule 32 (factor -> set .)
    AT              reduce using rule 32 (factor -> set .)
    SCOLON          reduce using rule 32 (factor -> set .)
    KEY_ELSE        reduce using rule 32 (factor -> set .)
    KEY_END         reduce using rule 32 (factor -> set .)
    KEY_ELSEIF      reduce using rule 32 (factor -> set .)
    KEY_BEGIN       reduce using rule 32 (factor -> set .)
    KEY_THEN        reduce using rule 32 (factor -> set .)
    RRB             reduce using rule 32 (factor -> set .)
    RSB             reduce using rule 32 (factor -> set .)
    RCB             reduce using rule 32 (factor -> set .)


state 64

    (25) term -> factor . termss
    (26) termss -> . termss mulOperator factor
    (27) termss -> . empty
    (156) empty -> .

    MULTIPLY        reduce using rule 156 (empty -> .)
    DIVIDE          reduce using rule 156 (empty -> .)
    MODULUS         reduce using rule 156 (empty -> .)
    AND             reduce using rule 156 (empty -> .)
    PLUS            reduce using rule 156 (empty -> .)
    MINUS           reduce using rule 156 (empty -> .)
    OR              reduce using rule 156 (empty -> .)
    EQUAL           reduce using rule 156 (empty -> .)
    NEQUAL          reduce using rule 156 (empty -> .)
    LT              reduce using rule 156 (empty -> .)
    LTEQ            reduce using rule 156 (empty -> .)
    GT              reduce using rule 156 (empty -> .)
    GTEQ            reduce using rule 156 (empty -> .)
    KEY_IN          reduce using rule 156 (empty -> .)
    KEY_IS          reduce using rule 156 (empty -> .)
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    KEY_WHILE       reduce using rule 156 (empty -> .)
    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_ELSEIF      reduce using rule 156 (empty -> .)
    KEY_BEGIN       reduce using rule 156 (empty -> .)
    KEY_THEN        reduce using rule 156 (empty -> .)
    RRB             reduce using rule 156 (empty -> .)
    COMMA           reduce using rule 156 (empty -> .)
    RSB             reduce using rule 156 (empty -> .)
    RCB             reduce using rule 156 (empty -> .)
    KEY_OF          reduce using rule 156 (empty -> .)
    KEY_EXIT        reduce using rule 156 (empty -> .)
    KEY_RETURN      reduce using rule 156 (empty -> .)
    KEY_BREAK       reduce using rule 156 (empty -> .)
    KEY_CONTINUE    reduce using rule 156 (empty -> .)
    KEY_IF          reduce using rule 156 (empty -> .)
    KEY_SWITCH      reduce using rule 156 (empty -> .)
    KEY_FOR         reduce using rule 156 (empty -> .)
    KEY_DO          reduce using rule 156 (empty -> .)
    KEY_WRITE       reduce using rule 156 (empty -> .)
    KEY_WRITELN     reduce using rule 156 (empty -> .)
    KEY_READ        reduce using rule 156 (empty -> .)
    KEY_FCLOSE      reduce using rule 156 (empty -> .)
    KEY_FPRINTF     reduce using rule 156 (empty -> .)
    KEY_FREAD       reduce using rule 156 (empty -> .)
    IDENT           reduce using rule 156 (empty -> .)
    AT              reduce using rule 156 (empty -> .)

    empty                          shift and go to state 121
    termss                         shift and go to state 122

state 65

    (48) char -> VCHAR .

    MULTIPLY        reduce using rule 48 (char -> VCHAR .)
    DIVIDE          reduce using rule 48 (char -> VCHAR .)
    MODULUS         reduce using rule 48 (char -> VCHAR .)
    AND             reduce using rule 48 (char -> VCHAR .)
    PLUS            reduce using rule 48 (char -> VCHAR .)
    MINUS           reduce using rule 48 (char -> VCHAR .)
    OR              reduce using rule 48 (char -> VCHAR .)
    EQUAL           reduce using rule 48 (char -> VCHAR .)
    NEQUAL          reduce using rule 48 (char -> VCHAR .)
    LT              reduce using rule 48 (char -> VCHAR .)
    LTEQ            reduce using rule 48 (char -> VCHAR .)
    GT              reduce using rule 48 (char -> VCHAR .)
    GTEQ            reduce using rule 48 (char -> VCHAR .)
    KEY_IN          reduce using rule 48 (char -> VCHAR .)
    KEY_IS          reduce using rule 48 (char -> VCHAR .)
    KEY_EXIT        reduce using rule 48 (char -> VCHAR .)
    KEY_RETURN      reduce using rule 48 (char -> VCHAR .)
    KEY_BREAK       reduce using rule 48 (char -> VCHAR .)
    KEY_CONTINUE    reduce using rule 48 (char -> VCHAR .)
    KEY_IF          reduce using rule 48 (char -> VCHAR .)
    KEY_SWITCH      reduce using rule 48 (char -> VCHAR .)
    KEY_WHILE       reduce using rule 48 (char -> VCHAR .)
    KEY_FOR         reduce using rule 48 (char -> VCHAR .)
    KEY_DO          reduce using rule 48 (char -> VCHAR .)
    KEY_WRITE       reduce using rule 48 (char -> VCHAR .)
    KEY_WRITELN     reduce using rule 48 (char -> VCHAR .)
    KEY_READ        reduce using rule 48 (char -> VCHAR .)
    KEY_FCLOSE      reduce using rule 48 (char -> VCHAR .)
    KEY_FPRINTF     reduce using rule 48 (char -> VCHAR .)
    KEY_FREAD       reduce using rule 48 (char -> VCHAR .)
    IDENT           reduce using rule 48 (char -> VCHAR .)
    AT              reduce using rule 48 (char -> VCHAR .)
    SCOLON          reduce using rule 48 (char -> VCHAR .)
    KEY_ELSE        reduce using rule 48 (char -> VCHAR .)
    KEY_END         reduce using rule 48 (char -> VCHAR .)
    KEY_ELSEIF      reduce using rule 48 (char -> VCHAR .)
    KEY_BEGIN       reduce using rule 48 (char -> VCHAR .)
    KEY_THEN        reduce using rule 48 (char -> VCHAR .)
    RRB             reduce using rule 48 (char -> VCHAR .)
    COMMA           reduce using rule 48 (char -> VCHAR .)
    RSB             reduce using rule 48 (char -> VCHAR .)
    RCB             reduce using rule 48 (char -> VCHAR .)
    KEY_OF          reduce using rule 48 (char -> VCHAR .)


state 66

    (38) factor -> KEY_CHR . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    designator                     shift and go to state 74
    set                            shift and go to state 63
    factor                         shift and go to state 123
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    char                           shift and go to state 70

state 67

    (28) factor -> number .

    MULTIPLY        reduce using rule 28 (factor -> number .)
    DIVIDE          reduce using rule 28 (factor -> number .)
    MODULUS         reduce using rule 28 (factor -> number .)
    AND             reduce using rule 28 (factor -> number .)
    PLUS            reduce using rule 28 (factor -> number .)
    MINUS           reduce using rule 28 (factor -> number .)
    OR              reduce using rule 28 (factor -> number .)
    EQUAL           reduce using rule 28 (factor -> number .)
    NEQUAL          reduce using rule 28 (factor -> number .)
    LT              reduce using rule 28 (factor -> number .)
    LTEQ            reduce using rule 28 (factor -> number .)
    GT              reduce using rule 28 (factor -> number .)
    GTEQ            reduce using rule 28 (factor -> number .)
    KEY_IN          reduce using rule 28 (factor -> number .)
    KEY_IS          reduce using rule 28 (factor -> number .)
    KEY_OF          reduce using rule 28 (factor -> number .)
    COMMA           reduce using rule 28 (factor -> number .)
    KEY_EXIT        reduce using rule 28 (factor -> number .)
    KEY_RETURN      reduce using rule 28 (factor -> number .)
    KEY_BREAK       reduce using rule 28 (factor -> number .)
    KEY_CONTINUE    reduce using rule 28 (factor -> number .)
    KEY_IF          reduce using rule 28 (factor -> number .)
    KEY_SWITCH      reduce using rule 28 (factor -> number .)
    KEY_WHILE       reduce using rule 28 (factor -> number .)
    KEY_FOR         reduce using rule 28 (factor -> number .)
    KEY_DO          reduce using rule 28 (factor -> number .)
    KEY_WRITE       reduce using rule 28 (factor -> number .)
    KEY_WRITELN     reduce using rule 28 (factor -> number .)
    KEY_READ        reduce using rule 28 (factor -> number .)
    KEY_FCLOSE      reduce using rule 28 (factor -> number .)
    KEY_FPRINTF     reduce using rule 28 (factor -> number .)
    KEY_FREAD       reduce using rule 28 (factor -> number .)
    IDENT           reduce using rule 28 (factor -> number .)
    AT              reduce using rule 28 (factor -> number .)
    SCOLON          reduce using rule 28 (factor -> number .)
    KEY_ELSE        reduce using rule 28 (factor -> number .)
    KEY_END         reduce using rule 28 (factor -> number .)
    KEY_ELSEIF      reduce using rule 28 (factor -> number .)
    KEY_BEGIN       reduce using rule 28 (factor -> number .)
    KEY_THEN        reduce using rule 28 (factor -> number .)
    RRB             reduce using rule 28 (factor -> number .)
    RSB             reduce using rule 28 (factor -> number .)
    RCB             reduce using rule 28 (factor -> number .)


state 68

    (30) factor -> string .

    MULTIPLY        reduce using rule 30 (factor -> string .)
    DIVIDE          reduce using rule 30 (factor -> string .)
    MODULUS         reduce using rule 30 (factor -> string .)
    AND             reduce using rule 30 (factor -> string .)
    PLUS            reduce using rule 30 (factor -> string .)
    MINUS           reduce using rule 30 (factor -> string .)
    OR              reduce using rule 30 (factor -> string .)
    EQUAL           reduce using rule 30 (factor -> string .)
    NEQUAL          reduce using rule 30 (factor -> string .)
    LT              reduce using rule 30 (factor -> string .)
    LTEQ            reduce using rule 30 (factor -> string .)
    GT              reduce using rule 30 (factor -> string .)
    GTEQ            reduce using rule 30 (factor -> string .)
    KEY_IN          reduce using rule 30 (factor -> string .)
    KEY_IS          reduce using rule 30 (factor -> string .)
    KEY_OF          reduce using rule 30 (factor -> string .)
    COMMA           reduce using rule 30 (factor -> string .)
    KEY_EXIT        reduce using rule 30 (factor -> string .)
    KEY_RETURN      reduce using rule 30 (factor -> string .)
    KEY_BREAK       reduce using rule 30 (factor -> string .)
    KEY_CONTINUE    reduce using rule 30 (factor -> string .)
    KEY_IF          reduce using rule 30 (factor -> string .)
    KEY_SWITCH      reduce using rule 30 (factor -> string .)
    KEY_WHILE       reduce using rule 30 (factor -> string .)
    KEY_FOR         reduce using rule 30 (factor -> string .)
    KEY_DO          reduce using rule 30 (factor -> string .)
    KEY_WRITE       reduce using rule 30 (factor -> string .)
    KEY_WRITELN     reduce using rule 30 (factor -> string .)
    KEY_READ        reduce using rule 30 (factor -> string .)
    KEY_FCLOSE      reduce using rule 30 (factor -> string .)
    KEY_FPRINTF     reduce using rule 30 (factor -> string .)
    KEY_FREAD       reduce using rule 30 (factor -> string .)
    IDENT           reduce using rule 30 (factor -> string .)
    AT              reduce using rule 30 (factor -> string .)
    SCOLON          reduce using rule 30 (factor -> string .)
    KEY_ELSE        reduce using rule 30 (factor -> string .)
    KEY_END         reduce using rule 30 (factor -> string .)
    KEY_ELSEIF      reduce using rule 30 (factor -> string .)
    KEY_BEGIN       reduce using rule 30 (factor -> string .)
    KEY_THEN        reduce using rule 30 (factor -> string .)
    RRB             reduce using rule 30 (factor -> string .)
    RSB             reduce using rule 30 (factor -> string .)
    RCB             reduce using rule 30 (factor -> string .)


state 69

    (35) factor -> LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 124
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 70

    (29) factor -> char .

    MULTIPLY        reduce using rule 29 (factor -> char .)
    DIVIDE          reduce using rule 29 (factor -> char .)
    MODULUS         reduce using rule 29 (factor -> char .)
    AND             reduce using rule 29 (factor -> char .)
    PLUS            reduce using rule 29 (factor -> char .)
    MINUS           reduce using rule 29 (factor -> char .)
    OR              reduce using rule 29 (factor -> char .)
    EQUAL           reduce using rule 29 (factor -> char .)
    NEQUAL          reduce using rule 29 (factor -> char .)
    LT              reduce using rule 29 (factor -> char .)
    LTEQ            reduce using rule 29 (factor -> char .)
    GT              reduce using rule 29 (factor -> char .)
    GTEQ            reduce using rule 29 (factor -> char .)
    KEY_IN          reduce using rule 29 (factor -> char .)
    KEY_IS          reduce using rule 29 (factor -> char .)
    KEY_OF          reduce using rule 29 (factor -> char .)
    COMMA           reduce using rule 29 (factor -> char .)
    KEY_EXIT        reduce using rule 29 (factor -> char .)
    KEY_RETURN      reduce using rule 29 (factor -> char .)
    KEY_BREAK       reduce using rule 29 (factor -> char .)
    KEY_CONTINUE    reduce using rule 29 (factor -> char .)
    KEY_IF          reduce using rule 29 (factor -> char .)
    KEY_SWITCH      reduce using rule 29 (factor -> char .)
    KEY_WHILE       reduce using rule 29 (factor -> char .)
    KEY_FOR         reduce using rule 29 (factor -> char .)
    KEY_DO          reduce using rule 29 (factor -> char .)
    KEY_WRITE       reduce using rule 29 (factor -> char .)
    KEY_WRITELN     reduce using rule 29 (factor -> char .)
    KEY_READ        reduce using rule 29 (factor -> char .)
    KEY_FCLOSE      reduce using rule 29 (factor -> char .)
    KEY_FPRINTF     reduce using rule 29 (factor -> char .)
    KEY_FREAD       reduce using rule 29 (factor -> char .)
    IDENT           reduce using rule 29 (factor -> char .)
    AT              reduce using rule 29 (factor -> char .)
    SCOLON          reduce using rule 29 (factor -> char .)
    KEY_ELSE        reduce using rule 29 (factor -> char .)
    KEY_END         reduce using rule 29 (factor -> char .)
    KEY_ELSEIF      reduce using rule 29 (factor -> char .)
    KEY_BEGIN       reduce using rule 29 (factor -> char .)
    KEY_THEN        reduce using rule 29 (factor -> char .)
    RRB             reduce using rule 29 (factor -> char .)
    RSB             reduce using rule 29 (factor -> char .)
    RCB             reduce using rule 29 (factor -> char .)


state 71

    (45) factor -> KEY_SET .

    MULTIPLY        reduce using rule 45 (factor -> KEY_SET .)
    DIVIDE          reduce using rule 45 (factor -> KEY_SET .)
    MODULUS         reduce using rule 45 (factor -> KEY_SET .)
    AND             reduce using rule 45 (factor -> KEY_SET .)
    PLUS            reduce using rule 45 (factor -> KEY_SET .)
    MINUS           reduce using rule 45 (factor -> KEY_SET .)
    OR              reduce using rule 45 (factor -> KEY_SET .)
    EQUAL           reduce using rule 45 (factor -> KEY_SET .)
    NEQUAL          reduce using rule 45 (factor -> KEY_SET .)
    LT              reduce using rule 45 (factor -> KEY_SET .)
    LTEQ            reduce using rule 45 (factor -> KEY_SET .)
    GT              reduce using rule 45 (factor -> KEY_SET .)
    GTEQ            reduce using rule 45 (factor -> KEY_SET .)
    KEY_IN          reduce using rule 45 (factor -> KEY_SET .)
    KEY_IS          reduce using rule 45 (factor -> KEY_SET .)
    KEY_OF          reduce using rule 45 (factor -> KEY_SET .)
    COMMA           reduce using rule 45 (factor -> KEY_SET .)
    KEY_EXIT        reduce using rule 45 (factor -> KEY_SET .)
    KEY_RETURN      reduce using rule 45 (factor -> KEY_SET .)
    KEY_BREAK       reduce using rule 45 (factor -> KEY_SET .)
    KEY_CONTINUE    reduce using rule 45 (factor -> KEY_SET .)
    KEY_IF          reduce using rule 45 (factor -> KEY_SET .)
    KEY_SWITCH      reduce using rule 45 (factor -> KEY_SET .)
    KEY_WHILE       reduce using rule 45 (factor -> KEY_SET .)
    KEY_FOR         reduce using rule 45 (factor -> KEY_SET .)
    KEY_DO          reduce using rule 45 (factor -> KEY_SET .)
    KEY_WRITE       reduce using rule 45 (factor -> KEY_SET .)
    KEY_WRITELN     reduce using rule 45 (factor -> KEY_SET .)
    KEY_READ        reduce using rule 45 (factor -> KEY_SET .)
    KEY_FCLOSE      reduce using rule 45 (factor -> KEY_SET .)
    KEY_FPRINTF     reduce using rule 45 (factor -> KEY_SET .)
    KEY_FREAD       reduce using rule 45 (factor -> KEY_SET .)
    IDENT           reduce using rule 45 (factor -> KEY_SET .)
    AT              reduce using rule 45 (factor -> KEY_SET .)
    SCOLON          reduce using rule 45 (factor -> KEY_SET .)
    KEY_ELSE        reduce using rule 45 (factor -> KEY_SET .)
    KEY_END         reduce using rule 45 (factor -> KEY_SET .)
    KEY_ELSEIF      reduce using rule 45 (factor -> KEY_SET .)
    KEY_BEGIN       reduce using rule 45 (factor -> KEY_SET .)
    KEY_THEN        reduce using rule 45 (factor -> KEY_SET .)
    RRB             reduce using rule 45 (factor -> KEY_SET .)
    RSB             reduce using rule 45 (factor -> KEY_SET .)
    RCB             reduce using rule 45 (factor -> KEY_SET .)


state 72

    (47) number -> VREAL .

    MULTIPLY        reduce using rule 47 (number -> VREAL .)
    DIVIDE          reduce using rule 47 (number -> VREAL .)
    MODULUS         reduce using rule 47 (number -> VREAL .)
    AND             reduce using rule 47 (number -> VREAL .)
    PLUS            reduce using rule 47 (number -> VREAL .)
    MINUS           reduce using rule 47 (number -> VREAL .)
    OR              reduce using rule 47 (number -> VREAL .)
    EQUAL           reduce using rule 47 (number -> VREAL .)
    NEQUAL          reduce using rule 47 (number -> VREAL .)
    LT              reduce using rule 47 (number -> VREAL .)
    LTEQ            reduce using rule 47 (number -> VREAL .)
    GT              reduce using rule 47 (number -> VREAL .)
    GTEQ            reduce using rule 47 (number -> VREAL .)
    KEY_IN          reduce using rule 47 (number -> VREAL .)
    KEY_IS          reduce using rule 47 (number -> VREAL .)
    KEY_BEGIN       reduce using rule 47 (number -> VREAL .)
    RRB             reduce using rule 47 (number -> VREAL .)
    COMMA           reduce using rule 47 (number -> VREAL .)
    KEY_OF          reduce using rule 47 (number -> VREAL .)
    KEY_END         reduce using rule 47 (number -> VREAL .)
    SCOLON          reduce using rule 47 (number -> VREAL .)
    KEY_WHILE       reduce using rule 47 (number -> VREAL .)
    KEY_ELSE        reduce using rule 47 (number -> VREAL .)
    KEY_ELSEIF      reduce using rule 47 (number -> VREAL .)
    KEY_THEN        reduce using rule 47 (number -> VREAL .)
    RSB             reduce using rule 47 (number -> VREAL .)
    RCB             reduce using rule 47 (number -> VREAL .)
    KEY_EXIT        reduce using rule 47 (number -> VREAL .)
    KEY_RETURN      reduce using rule 47 (number -> VREAL .)
    KEY_BREAK       reduce using rule 47 (number -> VREAL .)
    KEY_CONTINUE    reduce using rule 47 (number -> VREAL .)
    KEY_IF          reduce using rule 47 (number -> VREAL .)
    KEY_SWITCH      reduce using rule 47 (number -> VREAL .)
    KEY_FOR         reduce using rule 47 (number -> VREAL .)
    KEY_DO          reduce using rule 47 (number -> VREAL .)
    KEY_WRITE       reduce using rule 47 (number -> VREAL .)
    KEY_WRITELN     reduce using rule 47 (number -> VREAL .)
    KEY_READ        reduce using rule 47 (number -> VREAL .)
    KEY_FCLOSE      reduce using rule 47 (number -> VREAL .)
    KEY_FPRINTF     reduce using rule 47 (number -> VREAL .)
    KEY_FREAD       reduce using rule 47 (number -> VREAL .)
    IDENT           reduce using rule 47 (number -> VREAL .)
    AT              reduce using rule 47 (number -> VREAL .)


state 73

    (46) number -> VINTEGER .

    MULTIPLY        reduce using rule 46 (number -> VINTEGER .)
    DIVIDE          reduce using rule 46 (number -> VINTEGER .)
    MODULUS         reduce using rule 46 (number -> VINTEGER .)
    AND             reduce using rule 46 (number -> VINTEGER .)
    PLUS            reduce using rule 46 (number -> VINTEGER .)
    MINUS           reduce using rule 46 (number -> VINTEGER .)
    OR              reduce using rule 46 (number -> VINTEGER .)
    EQUAL           reduce using rule 46 (number -> VINTEGER .)
    NEQUAL          reduce using rule 46 (number -> VINTEGER .)
    LT              reduce using rule 46 (number -> VINTEGER .)
    LTEQ            reduce using rule 46 (number -> VINTEGER .)
    GT              reduce using rule 46 (number -> VINTEGER .)
    GTEQ            reduce using rule 46 (number -> VINTEGER .)
    KEY_IN          reduce using rule 46 (number -> VINTEGER .)
    KEY_IS          reduce using rule 46 (number -> VINTEGER .)
    KEY_BEGIN       reduce using rule 46 (number -> VINTEGER .)
    RRB             reduce using rule 46 (number -> VINTEGER .)
    COMMA           reduce using rule 46 (number -> VINTEGER .)
    KEY_OF          reduce using rule 46 (number -> VINTEGER .)
    KEY_END         reduce using rule 46 (number -> VINTEGER .)
    SCOLON          reduce using rule 46 (number -> VINTEGER .)
    KEY_WHILE       reduce using rule 46 (number -> VINTEGER .)
    KEY_ELSE        reduce using rule 46 (number -> VINTEGER .)
    KEY_ELSEIF      reduce using rule 46 (number -> VINTEGER .)
    KEY_THEN        reduce using rule 46 (number -> VINTEGER .)
    RSB             reduce using rule 46 (number -> VINTEGER .)
    RCB             reduce using rule 46 (number -> VINTEGER .)
    KEY_EXIT        reduce using rule 46 (number -> VINTEGER .)
    KEY_RETURN      reduce using rule 46 (number -> VINTEGER .)
    KEY_BREAK       reduce using rule 46 (number -> VINTEGER .)
    KEY_CONTINUE    reduce using rule 46 (number -> VINTEGER .)
    KEY_IF          reduce using rule 46 (number -> VINTEGER .)
    KEY_SWITCH      reduce using rule 46 (number -> VINTEGER .)
    KEY_FOR         reduce using rule 46 (number -> VINTEGER .)
    KEY_DO          reduce using rule 46 (number -> VINTEGER .)
    KEY_WRITE       reduce using rule 46 (number -> VINTEGER .)
    KEY_WRITELN     reduce using rule 46 (number -> VINTEGER .)
    KEY_READ        reduce using rule 46 (number -> VINTEGER .)
    KEY_FCLOSE      reduce using rule 46 (number -> VINTEGER .)
    KEY_FPRINTF     reduce using rule 46 (number -> VINTEGER .)
    KEY_FREAD       reduce using rule 46 (number -> VINTEGER .)
    IDENT           reduce using rule 46 (number -> VINTEGER .)
    AT              reduce using rule 46 (number -> VINTEGER .)


state 74

    (33) factor -> designator .
    (34) factor -> designator . actualParameters
    (64) actualParameters -> . LRB expList RRB
    (65) actualParameters -> . LRB RRB

    MULTIPLY        reduce using rule 33 (factor -> designator .)
    DIVIDE          reduce using rule 33 (factor -> designator .)
    MODULUS         reduce using rule 33 (factor -> designator .)
    AND             reduce using rule 33 (factor -> designator .)
    PLUS            reduce using rule 33 (factor -> designator .)
    MINUS           reduce using rule 33 (factor -> designator .)
    OR              reduce using rule 33 (factor -> designator .)
    EQUAL           reduce using rule 33 (factor -> designator .)
    NEQUAL          reduce using rule 33 (factor -> designator .)
    LT              reduce using rule 33 (factor -> designator .)
    LTEQ            reduce using rule 33 (factor -> designator .)
    GT              reduce using rule 33 (factor -> designator .)
    GTEQ            reduce using rule 33 (factor -> designator .)
    KEY_IN          reduce using rule 33 (factor -> designator .)
    KEY_IS          reduce using rule 33 (factor -> designator .)
    KEY_OF          reduce using rule 33 (factor -> designator .)
    COMMA           reduce using rule 33 (factor -> designator .)
    KEY_EXIT        reduce using rule 33 (factor -> designator .)
    KEY_RETURN      reduce using rule 33 (factor -> designator .)
    KEY_BREAK       reduce using rule 33 (factor -> designator .)
    KEY_CONTINUE    reduce using rule 33 (factor -> designator .)
    KEY_IF          reduce using rule 33 (factor -> designator .)
    KEY_SWITCH      reduce using rule 33 (factor -> designator .)
    KEY_WHILE       reduce using rule 33 (factor -> designator .)
    KEY_FOR         reduce using rule 33 (factor -> designator .)
    KEY_DO          reduce using rule 33 (factor -> designator .)
    KEY_WRITE       reduce using rule 33 (factor -> designator .)
    KEY_WRITELN     reduce using rule 33 (factor -> designator .)
    KEY_READ        reduce using rule 33 (factor -> designator .)
    KEY_FCLOSE      reduce using rule 33 (factor -> designator .)
    KEY_FPRINTF     reduce using rule 33 (factor -> designator .)
    KEY_FREAD       reduce using rule 33 (factor -> designator .)
    IDENT           reduce using rule 33 (factor -> designator .)
    AT              reduce using rule 33 (factor -> designator .)
    SCOLON          reduce using rule 33 (factor -> designator .)
    KEY_ELSE        reduce using rule 33 (factor -> designator .)
    KEY_END         reduce using rule 33 (factor -> designator .)
    KEY_ELSEIF      reduce using rule 33 (factor -> designator .)
    KEY_BEGIN       reduce using rule 33 (factor -> designator .)
    KEY_THEN        reduce using rule 33 (factor -> designator .)
    RRB             reduce using rule 33 (factor -> designator .)
    RSB             reduce using rule 33 (factor -> designator .)
    RCB             reduce using rule 33 (factor -> designator .)
    LRB             shift and go to state 98

    actualParameters               shift and go to state 125

state 75

    (40) factor -> KEY_INTEGER .

    MULTIPLY        reduce using rule 40 (factor -> KEY_INTEGER .)
    DIVIDE          reduce using rule 40 (factor -> KEY_INTEGER .)
    MODULUS         reduce using rule 40 (factor -> KEY_INTEGER .)
    AND             reduce using rule 40 (factor -> KEY_INTEGER .)
    PLUS            reduce using rule 40 (factor -> KEY_INTEGER .)
    MINUS           reduce using rule 40 (factor -> KEY_INTEGER .)
    OR              reduce using rule 40 (factor -> KEY_INTEGER .)
    EQUAL           reduce using rule 40 (factor -> KEY_INTEGER .)
    NEQUAL          reduce using rule 40 (factor -> KEY_INTEGER .)
    LT              reduce using rule 40 (factor -> KEY_INTEGER .)
    LTEQ            reduce using rule 40 (factor -> KEY_INTEGER .)
    GT              reduce using rule 40 (factor -> KEY_INTEGER .)
    GTEQ            reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_IN          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_IS          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_OF          reduce using rule 40 (factor -> KEY_INTEGER .)
    COMMA           reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_EXIT        reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_RETURN      reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_BREAK       reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_CONTINUE    reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_IF          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_SWITCH      reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_WHILE       reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_FOR         reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_DO          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_WRITE       reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_WRITELN     reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_READ        reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_FCLOSE      reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_FPRINTF     reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_FREAD       reduce using rule 40 (factor -> KEY_INTEGER .)
    IDENT           reduce using rule 40 (factor -> KEY_INTEGER .)
    AT              reduce using rule 40 (factor -> KEY_INTEGER .)
    SCOLON          reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_ELSE        reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_END         reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_ELSEIF      reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_BEGIN       reduce using rule 40 (factor -> KEY_INTEGER .)
    KEY_THEN        reduce using rule 40 (factor -> KEY_INTEGER .)
    RRB             reduce using rule 40 (factor -> KEY_INTEGER .)
    RSB             reduce using rule 40 (factor -> KEY_INTEGER .)
    RCB             reduce using rule 40 (factor -> KEY_INTEGER .)


state 76

    (42) factor -> KEY_CHAR .

    MULTIPLY        reduce using rule 42 (factor -> KEY_CHAR .)
    DIVIDE          reduce using rule 42 (factor -> KEY_CHAR .)
    MODULUS         reduce using rule 42 (factor -> KEY_CHAR .)
    AND             reduce using rule 42 (factor -> KEY_CHAR .)
    PLUS            reduce using rule 42 (factor -> KEY_CHAR .)
    MINUS           reduce using rule 42 (factor -> KEY_CHAR .)
    OR              reduce using rule 42 (factor -> KEY_CHAR .)
    EQUAL           reduce using rule 42 (factor -> KEY_CHAR .)
    NEQUAL          reduce using rule 42 (factor -> KEY_CHAR .)
    LT              reduce using rule 42 (factor -> KEY_CHAR .)
    LTEQ            reduce using rule 42 (factor -> KEY_CHAR .)
    GT              reduce using rule 42 (factor -> KEY_CHAR .)
    GTEQ            reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_IN          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_IS          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_OF          reduce using rule 42 (factor -> KEY_CHAR .)
    COMMA           reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_EXIT        reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_RETURN      reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_BREAK       reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_CONTINUE    reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_IF          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_SWITCH      reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_WHILE       reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_FOR         reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_DO          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_WRITE       reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_WRITELN     reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_READ        reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_FCLOSE      reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_FPRINTF     reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_FREAD       reduce using rule 42 (factor -> KEY_CHAR .)
    IDENT           reduce using rule 42 (factor -> KEY_CHAR .)
    AT              reduce using rule 42 (factor -> KEY_CHAR .)
    SCOLON          reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_ELSE        reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_END         reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_ELSEIF      reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_BEGIN       reduce using rule 42 (factor -> KEY_CHAR .)
    KEY_THEN        reduce using rule 42 (factor -> KEY_CHAR .)
    RRB             reduce using rule 42 (factor -> KEY_CHAR .)
    RSB             reduce using rule 42 (factor -> KEY_CHAR .)
    RCB             reduce using rule 42 (factor -> KEY_CHAR .)


state 77

    (44) factor -> KEY_REAL .

    MULTIPLY        reduce using rule 44 (factor -> KEY_REAL .)
    DIVIDE          reduce using rule 44 (factor -> KEY_REAL .)
    MODULUS         reduce using rule 44 (factor -> KEY_REAL .)
    AND             reduce using rule 44 (factor -> KEY_REAL .)
    PLUS            reduce using rule 44 (factor -> KEY_REAL .)
    MINUS           reduce using rule 44 (factor -> KEY_REAL .)
    OR              reduce using rule 44 (factor -> KEY_REAL .)
    EQUAL           reduce using rule 44 (factor -> KEY_REAL .)
    NEQUAL          reduce using rule 44 (factor -> KEY_REAL .)
    LT              reduce using rule 44 (factor -> KEY_REAL .)
    LTEQ            reduce using rule 44 (factor -> KEY_REAL .)
    GT              reduce using rule 44 (factor -> KEY_REAL .)
    GTEQ            reduce using rule 44 (factor -> KEY_REAL .)
    KEY_IN          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_IS          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_OF          reduce using rule 44 (factor -> KEY_REAL .)
    COMMA           reduce using rule 44 (factor -> KEY_REAL .)
    KEY_EXIT        reduce using rule 44 (factor -> KEY_REAL .)
    KEY_RETURN      reduce using rule 44 (factor -> KEY_REAL .)
    KEY_BREAK       reduce using rule 44 (factor -> KEY_REAL .)
    KEY_CONTINUE    reduce using rule 44 (factor -> KEY_REAL .)
    KEY_IF          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_SWITCH      reduce using rule 44 (factor -> KEY_REAL .)
    KEY_WHILE       reduce using rule 44 (factor -> KEY_REAL .)
    KEY_FOR         reduce using rule 44 (factor -> KEY_REAL .)
    KEY_DO          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_WRITE       reduce using rule 44 (factor -> KEY_REAL .)
    KEY_WRITELN     reduce using rule 44 (factor -> KEY_REAL .)
    KEY_READ        reduce using rule 44 (factor -> KEY_REAL .)
    KEY_FCLOSE      reduce using rule 44 (factor -> KEY_REAL .)
    KEY_FPRINTF     reduce using rule 44 (factor -> KEY_REAL .)
    KEY_FREAD       reduce using rule 44 (factor -> KEY_REAL .)
    IDENT           reduce using rule 44 (factor -> KEY_REAL .)
    AT              reduce using rule 44 (factor -> KEY_REAL .)
    SCOLON          reduce using rule 44 (factor -> KEY_REAL .)
    KEY_ELSE        reduce using rule 44 (factor -> KEY_REAL .)
    KEY_END         reduce using rule 44 (factor -> KEY_REAL .)
    KEY_ELSEIF      reduce using rule 44 (factor -> KEY_REAL .)
    KEY_BEGIN       reduce using rule 44 (factor -> KEY_REAL .)
    KEY_THEN        reduce using rule 44 (factor -> KEY_REAL .)
    RRB             reduce using rule 44 (factor -> KEY_REAL .)
    RSB             reduce using rule 44 (factor -> KEY_REAL .)
    RCB             reduce using rule 44 (factor -> KEY_REAL .)


state 78

    (50) set -> LCB . element COMMA element RCB
    (51) set -> LCB . RCB
    (52) element -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    RCB             shift and go to state 127
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    term                           shift and go to state 80
    expression                     shift and go to state 126
    set                            shift and go to state 63
    simpleExpression               shift and go to state 85
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    element                        shift and go to state 128
    char                           shift and go to state 70

state 79

    (58) qualident -> identdef .
    (59) qualident -> identdef . DOT qualident

    IDENT           reduce using rule 58 (qualident -> identdef .)
    AT              reduce using rule 58 (qualident -> identdef .)
    LRB             reduce using rule 58 (qualident -> identdef .)
    MULTIPLY        reduce using rule 58 (qualident -> identdef .)
    DIVIDE          reduce using rule 58 (qualident -> identdef .)
    MODULUS         reduce using rule 58 (qualident -> identdef .)
    AND             reduce using rule 58 (qualident -> identdef .)
    PLUS            reduce using rule 58 (qualident -> identdef .)
    MINUS           reduce using rule 58 (qualident -> identdef .)
    OR              reduce using rule 58 (qualident -> identdef .)
    EQUAL           reduce using rule 58 (qualident -> identdef .)
    NEQUAL          reduce using rule 58 (qualident -> identdef .)
    LT              reduce using rule 58 (qualident -> identdef .)
    LTEQ            reduce using rule 58 (qualident -> identdef .)
    GT              reduce using rule 58 (qualident -> identdef .)
    GTEQ            reduce using rule 58 (qualident -> identdef .)
    KEY_IN          reduce using rule 58 (qualident -> identdef .)
    KEY_IS          reduce using rule 58 (qualident -> identdef .)
    RCB             reduce using rule 58 (qualident -> identdef .)
    KEY_END         reduce using rule 58 (qualident -> identdef .)
    SCOLON          reduce using rule 58 (qualident -> identdef .)
    KEY_WHILE       reduce using rule 58 (qualident -> identdef .)
    KEY_ELSE        reduce using rule 58 (qualident -> identdef .)
    KEY_ELSEIF      reduce using rule 58 (qualident -> identdef .)
    KEY_BEGIN       reduce using rule 58 (qualident -> identdef .)
    KEY_THEN        reduce using rule 58 (qualident -> identdef .)
    RRB             reduce using rule 58 (qualident -> identdef .)
    COMMA           reduce using rule 58 (qualident -> identdef .)
    RSB             reduce using rule 58 (qualident -> identdef .)
    KEY_OF          reduce using rule 58 (qualident -> identdef .)
    KEY_EXIT        reduce using rule 58 (qualident -> identdef .)
    KEY_RETURN      reduce using rule 58 (qualident -> identdef .)
    KEY_BREAK       reduce using rule 58 (qualident -> identdef .)
    KEY_CONTINUE    reduce using rule 58 (qualident -> identdef .)
    KEY_IF          reduce using rule 58 (qualident -> identdef .)
    KEY_SWITCH      reduce using rule 58 (qualident -> identdef .)
    KEY_FOR         reduce using rule 58 (qualident -> identdef .)
    KEY_DO          reduce using rule 58 (qualident -> identdef .)
    KEY_WRITE       reduce using rule 58 (qualident -> identdef .)
    KEY_WRITELN     reduce using rule 58 (qualident -> identdef .)
    KEY_READ        reduce using rule 58 (qualident -> identdef .)
    KEY_FCLOSE      reduce using rule 58 (qualident -> identdef .)
    KEY_FPRINTF     reduce using rule 58 (qualident -> identdef .)
    KEY_FREAD       reduce using rule 58 (qualident -> identdef .)
    ASSIGN          reduce using rule 58 (qualident -> identdef .)
    DOT             shift and go to state 103


state 80

    (21) simpleExpression -> term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (156) empty -> .

    PLUS            reduce using rule 156 (empty -> .)
    MINUS           reduce using rule 156 (empty -> .)
    OR              reduce using rule 156 (empty -> .)
    EQUAL           reduce using rule 156 (empty -> .)
    NEQUAL          reduce using rule 156 (empty -> .)
    LT              reduce using rule 156 (empty -> .)
    LTEQ            reduce using rule 156 (empty -> .)
    GT              reduce using rule 156 (empty -> .)
    GTEQ            reduce using rule 156 (empty -> .)
    KEY_IN          reduce using rule 156 (empty -> .)
    KEY_IS          reduce using rule 156 (empty -> .)
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    KEY_WHILE       reduce using rule 156 (empty -> .)
    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_ELSEIF      reduce using rule 156 (empty -> .)
    KEY_BEGIN       reduce using rule 156 (empty -> .)
    KEY_THEN        reduce using rule 156 (empty -> .)
    RRB             reduce using rule 156 (empty -> .)
    COMMA           reduce using rule 156 (empty -> .)
    RSB             reduce using rule 156 (empty -> .)
    RCB             reduce using rule 156 (empty -> .)
    KEY_OF          reduce using rule 156 (empty -> .)
    KEY_EXIT        reduce using rule 156 (empty -> .)
    KEY_RETURN      reduce using rule 156 (empty -> .)
    KEY_BREAK       reduce using rule 156 (empty -> .)
    KEY_CONTINUE    reduce using rule 156 (empty -> .)
    KEY_IF          reduce using rule 156 (empty -> .)
    KEY_SWITCH      reduce using rule 156 (empty -> .)
    KEY_FOR         reduce using rule 156 (empty -> .)
    KEY_DO          reduce using rule 156 (empty -> .)
    KEY_WRITE       reduce using rule 156 (empty -> .)
    KEY_WRITELN     reduce using rule 156 (empty -> .)
    KEY_READ        reduce using rule 156 (empty -> .)
    KEY_FCLOSE      reduce using rule 156 (empty -> .)
    KEY_FPRINTF     reduce using rule 156 (empty -> .)
    KEY_FREAD       reduce using rule 156 (empty -> .)
    IDENT           reduce using rule 156 (empty -> .)
    AT              reduce using rule 156 (empty -> .)

    empty                          shift and go to state 129
    simpless                       shift and go to state 130

state 81

    (31) factor -> KEY_NIL .

    MULTIPLY        reduce using rule 31 (factor -> KEY_NIL .)
    DIVIDE          reduce using rule 31 (factor -> KEY_NIL .)
    MODULUS         reduce using rule 31 (factor -> KEY_NIL .)
    AND             reduce using rule 31 (factor -> KEY_NIL .)
    PLUS            reduce using rule 31 (factor -> KEY_NIL .)
    MINUS           reduce using rule 31 (factor -> KEY_NIL .)
    OR              reduce using rule 31 (factor -> KEY_NIL .)
    EQUAL           reduce using rule 31 (factor -> KEY_NIL .)
    NEQUAL          reduce using rule 31 (factor -> KEY_NIL .)
    LT              reduce using rule 31 (factor -> KEY_NIL .)
    LTEQ            reduce using rule 31 (factor -> KEY_NIL .)
    GT              reduce using rule 31 (factor -> KEY_NIL .)
    GTEQ            reduce using rule 31 (factor -> KEY_NIL .)
    KEY_IN          reduce using rule 31 (factor -> KEY_NIL .)
    KEY_IS          reduce using rule 31 (factor -> KEY_NIL .)
    KEY_OF          reduce using rule 31 (factor -> KEY_NIL .)
    COMMA           reduce using rule 31 (factor -> KEY_NIL .)
    KEY_EXIT        reduce using rule 31 (factor -> KEY_NIL .)
    KEY_RETURN      reduce using rule 31 (factor -> KEY_NIL .)
    KEY_BREAK       reduce using rule 31 (factor -> KEY_NIL .)
    KEY_CONTINUE    reduce using rule 31 (factor -> KEY_NIL .)
    KEY_IF          reduce using rule 31 (factor -> KEY_NIL .)
    KEY_SWITCH      reduce using rule 31 (factor -> KEY_NIL .)
    KEY_WHILE       reduce using rule 31 (factor -> KEY_NIL .)
    KEY_FOR         reduce using rule 31 (factor -> KEY_NIL .)
    KEY_DO          reduce using rule 31 (factor -> KEY_NIL .)
    KEY_WRITE       reduce using rule 31 (factor -> KEY_NIL .)
    KEY_WRITELN     reduce using rule 31 (factor -> KEY_NIL .)
    KEY_READ        reduce using rule 31 (factor -> KEY_NIL .)
    KEY_FCLOSE      reduce using rule 31 (factor -> KEY_NIL .)
    KEY_FPRINTF     reduce using rule 31 (factor -> KEY_NIL .)
    KEY_FREAD       reduce using rule 31 (factor -> KEY_NIL .)
    IDENT           reduce using rule 31 (factor -> KEY_NIL .)
    AT              reduce using rule 31 (factor -> KEY_NIL .)
    SCOLON          reduce using rule 31 (factor -> KEY_NIL .)
    KEY_ELSE        reduce using rule 31 (factor -> KEY_NIL .)
    KEY_END         reduce using rule 31 (factor -> KEY_NIL .)
    KEY_ELSEIF      reduce using rule 31 (factor -> KEY_NIL .)
    KEY_BEGIN       reduce using rule 31 (factor -> KEY_NIL .)
    KEY_THEN        reduce using rule 31 (factor -> KEY_NIL .)
    RRB             reduce using rule 31 (factor -> KEY_NIL .)
    RSB             reduce using rule 31 (factor -> KEY_NIL .)
    RCB             reduce using rule 31 (factor -> KEY_NIL .)


state 82

    (39) factor -> KEY_ORD . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    designator                     shift and go to state 74
    set                            shift and go to state 63
    factor                         shift and go to state 131
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    char                           shift and go to state 70

state 83

    (41) factor -> KEY_BOOLEAN .

    MULTIPLY        reduce using rule 41 (factor -> KEY_BOOLEAN .)
    DIVIDE          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    MODULUS         reduce using rule 41 (factor -> KEY_BOOLEAN .)
    AND             reduce using rule 41 (factor -> KEY_BOOLEAN .)
    PLUS            reduce using rule 41 (factor -> KEY_BOOLEAN .)
    MINUS           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    OR              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    EQUAL           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    NEQUAL          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    LT              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    LTEQ            reduce using rule 41 (factor -> KEY_BOOLEAN .)
    GT              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    GTEQ            reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_IN          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_IS          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_OF          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    COMMA           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_EXIT        reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_RETURN      reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_BREAK       reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_CONTINUE    reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_IF          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_SWITCH      reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_WHILE       reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_FOR         reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_DO          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_WRITE       reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_WRITELN     reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_READ        reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_FCLOSE      reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_FPRINTF     reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_FREAD       reduce using rule 41 (factor -> KEY_BOOLEAN .)
    IDENT           reduce using rule 41 (factor -> KEY_BOOLEAN .)
    AT              reduce using rule 41 (factor -> KEY_BOOLEAN .)
    SCOLON          reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_ELSE        reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_END         reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_ELSEIF      reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_BEGIN       reduce using rule 41 (factor -> KEY_BOOLEAN .)
    KEY_THEN        reduce using rule 41 (factor -> KEY_BOOLEAN .)
    RRB             reduce using rule 41 (factor -> KEY_BOOLEAN .)
    RSB             reduce using rule 41 (factor -> KEY_BOOLEAN .)
    RCB             reduce using rule 41 (factor -> KEY_BOOLEAN .)


state 84

    (43) factor -> KEY_STRING .

    MULTIPLY        reduce using rule 43 (factor -> KEY_STRING .)
    DIVIDE          reduce using rule 43 (factor -> KEY_STRING .)
    MODULUS         reduce using rule 43 (factor -> KEY_STRING .)
    AND             reduce using rule 43 (factor -> KEY_STRING .)
    PLUS            reduce using rule 43 (factor -> KEY_STRING .)
    MINUS           reduce using rule 43 (factor -> KEY_STRING .)
    OR              reduce using rule 43 (factor -> KEY_STRING .)
    EQUAL           reduce using rule 43 (factor -> KEY_STRING .)
    NEQUAL          reduce using rule 43 (factor -> KEY_STRING .)
    LT              reduce using rule 43 (factor -> KEY_STRING .)
    LTEQ            reduce using rule 43 (factor -> KEY_STRING .)
    GT              reduce using rule 43 (factor -> KEY_STRING .)
    GTEQ            reduce using rule 43 (factor -> KEY_STRING .)
    KEY_IN          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_IS          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_OF          reduce using rule 43 (factor -> KEY_STRING .)
    COMMA           reduce using rule 43 (factor -> KEY_STRING .)
    KEY_EXIT        reduce using rule 43 (factor -> KEY_STRING .)
    KEY_RETURN      reduce using rule 43 (factor -> KEY_STRING .)
    KEY_BREAK       reduce using rule 43 (factor -> KEY_STRING .)
    KEY_CONTINUE    reduce using rule 43 (factor -> KEY_STRING .)
    KEY_IF          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_SWITCH      reduce using rule 43 (factor -> KEY_STRING .)
    KEY_WHILE       reduce using rule 43 (factor -> KEY_STRING .)
    KEY_FOR         reduce using rule 43 (factor -> KEY_STRING .)
    KEY_DO          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_WRITE       reduce using rule 43 (factor -> KEY_STRING .)
    KEY_WRITELN     reduce using rule 43 (factor -> KEY_STRING .)
    KEY_READ        reduce using rule 43 (factor -> KEY_STRING .)
    KEY_FCLOSE      reduce using rule 43 (factor -> KEY_STRING .)
    KEY_FPRINTF     reduce using rule 43 (factor -> KEY_STRING .)
    KEY_FREAD       reduce using rule 43 (factor -> KEY_STRING .)
    IDENT           reduce using rule 43 (factor -> KEY_STRING .)
    AT              reduce using rule 43 (factor -> KEY_STRING .)
    SCOLON          reduce using rule 43 (factor -> KEY_STRING .)
    KEY_ELSE        reduce using rule 43 (factor -> KEY_STRING .)
    KEY_END         reduce using rule 43 (factor -> KEY_STRING .)
    KEY_ELSEIF      reduce using rule 43 (factor -> KEY_STRING .)
    KEY_BEGIN       reduce using rule 43 (factor -> KEY_STRING .)
    KEY_THEN        reduce using rule 43 (factor -> KEY_STRING .)
    RRB             reduce using rule 43 (factor -> KEY_STRING .)
    RSB             reduce using rule 43 (factor -> KEY_STRING .)
    RCB             reduce using rule 43 (factor -> KEY_STRING .)


state 85

    (18) expression -> simpleExpression .
    (19) expression -> simpleExpression . relation simpleExpression
    (73) relation -> . EQUAL
    (74) relation -> . NEQUAL
    (75) relation -> . LT
    (76) relation -> . LTEQ
    (77) relation -> . GT
    (78) relation -> . GTEQ
    (79) relation -> . KEY_IN
    (80) relation -> . KEY_IS

    SCOLON          reduce using rule 18 (expression -> simpleExpression .)
    KEY_OF          reduce using rule 18 (expression -> simpleExpression .)
    COMMA           reduce using rule 18 (expression -> simpleExpression .)
    KEY_END         reduce using rule 18 (expression -> simpleExpression .)
    KEY_WHILE       reduce using rule 18 (expression -> simpleExpression .)
    KEY_ELSE        reduce using rule 18 (expression -> simpleExpression .)
    KEY_ELSEIF      reduce using rule 18 (expression -> simpleExpression .)
    OR              reduce using rule 18 (expression -> simpleExpression .)
    RRB             reduce using rule 18 (expression -> simpleExpression .)
    RSB             reduce using rule 18 (expression -> simpleExpression .)
    KEY_THEN        reduce using rule 18 (expression -> simpleExpression .)
    KEY_BEGIN       reduce using rule 18 (expression -> simpleExpression .)
    KEY_EXIT        reduce using rule 18 (expression -> simpleExpression .)
    KEY_RETURN      reduce using rule 18 (expression -> simpleExpression .)
    KEY_BREAK       reduce using rule 18 (expression -> simpleExpression .)
    KEY_CONTINUE    reduce using rule 18 (expression -> simpleExpression .)
    KEY_IF          reduce using rule 18 (expression -> simpleExpression .)
    KEY_SWITCH      reduce using rule 18 (expression -> simpleExpression .)
    KEY_FOR         reduce using rule 18 (expression -> simpleExpression .)
    KEY_DO          reduce using rule 18 (expression -> simpleExpression .)
    KEY_WRITE       reduce using rule 18 (expression -> simpleExpression .)
    KEY_WRITELN     reduce using rule 18 (expression -> simpleExpression .)
    KEY_READ        reduce using rule 18 (expression -> simpleExpression .)
    KEY_FCLOSE      reduce using rule 18 (expression -> simpleExpression .)
    KEY_FPRINTF     reduce using rule 18 (expression -> simpleExpression .)
    KEY_FREAD       reduce using rule 18 (expression -> simpleExpression .)
    IDENT           reduce using rule 18 (expression -> simpleExpression .)
    AT              reduce using rule 18 (expression -> simpleExpression .)
    RCB             reduce using rule 18 (expression -> simpleExpression .)
    EQUAL           shift and go to state 140
    NEQUAL          shift and go to state 134
    LT              shift and go to state 138
    LTEQ            shift and go to state 135
    GT              shift and go to state 139
    GTEQ            shift and go to state 133
    KEY_IN          shift and go to state 136
    KEY_IS          shift and go to state 137

    relation                       shift and go to state 132

state 86

    (15) statementSequence -> statementSequence SCOLON . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

  ! shift/reduce conflict for KEY_WHILE resolved as shift
    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_ELSEIF      reduce using rule 156 (empty -> .)
    OR              reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

  ! KEY_WHILE       [ reduce using rule 156 (empty -> .) ]

    empty                          shift and go to state 15
    qualident                      shift and go to state 22
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 141
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 87

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END . IDENT DOT

    IDENT           shift and go to state 142


state 88

    (57) designator2 -> designator . LRB qualident RRB

    LRB             shift and go to state 143


state 89

    (53) designator -> qualident designator2 .
    (55) designator2 -> designator2 . DOT identdef
    (56) designator2 -> designator2 . LSB expList RSB

    LRB             reduce using rule 53 (designator -> qualident designator2 .)
    MULTIPLY        reduce using rule 53 (designator -> qualident designator2 .)
    DIVIDE          reduce using rule 53 (designator -> qualident designator2 .)
    MODULUS         reduce using rule 53 (designator -> qualident designator2 .)
    AND             reduce using rule 53 (designator -> qualident designator2 .)
    PLUS            reduce using rule 53 (designator -> qualident designator2 .)
    MINUS           reduce using rule 53 (designator -> qualident designator2 .)
    OR              reduce using rule 53 (designator -> qualident designator2 .)
    EQUAL           reduce using rule 53 (designator -> qualident designator2 .)
    NEQUAL          reduce using rule 53 (designator -> qualident designator2 .)
    LT              reduce using rule 53 (designator -> qualident designator2 .)
    LTEQ            reduce using rule 53 (designator -> qualident designator2 .)
    GT              reduce using rule 53 (designator -> qualident designator2 .)
    GTEQ            reduce using rule 53 (designator -> qualident designator2 .)
    KEY_IN          reduce using rule 53 (designator -> qualident designator2 .)
    KEY_IS          reduce using rule 53 (designator -> qualident designator2 .)
    KEY_BEGIN       reduce using rule 53 (designator -> qualident designator2 .)
    ASSIGN          reduce using rule 53 (designator -> qualident designator2 .)
    KEY_END         reduce using rule 53 (designator -> qualident designator2 .)
    SCOLON          reduce using rule 53 (designator -> qualident designator2 .)
    RRB             reduce using rule 53 (designator -> qualident designator2 .)
    KEY_WHILE       reduce using rule 53 (designator -> qualident designator2 .)
    KEY_ELSE        reduce using rule 53 (designator -> qualident designator2 .)
    KEY_ELSEIF      reduce using rule 53 (designator -> qualident designator2 .)
    KEY_THEN        reduce using rule 53 (designator -> qualident designator2 .)
    COMMA           reduce using rule 53 (designator -> qualident designator2 .)
    RSB             reduce using rule 53 (designator -> qualident designator2 .)
    RCB             reduce using rule 53 (designator -> qualident designator2 .)
    KEY_OF          reduce using rule 53 (designator -> qualident designator2 .)
    KEY_EXIT        reduce using rule 53 (designator -> qualident designator2 .)
    KEY_RETURN      reduce using rule 53 (designator -> qualident designator2 .)
    KEY_BREAK       reduce using rule 53 (designator -> qualident designator2 .)
    KEY_CONTINUE    reduce using rule 53 (designator -> qualident designator2 .)
    KEY_IF          reduce using rule 53 (designator -> qualident designator2 .)
    KEY_SWITCH      reduce using rule 53 (designator -> qualident designator2 .)
    KEY_FOR         reduce using rule 53 (designator -> qualident designator2 .)
    KEY_DO          reduce using rule 53 (designator -> qualident designator2 .)
    KEY_WRITE       reduce using rule 53 (designator -> qualident designator2 .)
    KEY_WRITELN     reduce using rule 53 (designator -> qualident designator2 .)
    KEY_READ        reduce using rule 53 (designator -> qualident designator2 .)
    KEY_FCLOSE      reduce using rule 53 (designator -> qualident designator2 .)
    KEY_FPRINTF     reduce using rule 53 (designator -> qualident designator2 .)
    KEY_FREAD       reduce using rule 53 (designator -> qualident designator2 .)
    IDENT           reduce using rule 53 (designator -> qualident designator2 .)
    AT              reduce using rule 53 (designator -> qualident designator2 .)
    DOT             shift and go to state 144
    LSB             shift and go to state 145


state 90

    (155) fileStatement -> KEY_FREAD LRB . identdef COMMA identdef COMMA VINTEGER RRB
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    identdef                       shift and go to state 146

state 91

    (141) switchStatement -> KEY_SWITCH expression . KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> KEY_SWITCH expression . KEY_BEGIN case casess KEY_END

    KEY_BEGIN       shift and go to state 147


state 92

    (149) ioStatement -> KEY_WRITE LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 148
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 93

    (137) ifStatement -> KEY_IF expression . KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> KEY_IF expression . KEY_THEN statementSequence ifss KEY_END

    KEY_THEN        shift and go to state 149


state 94

    (151) ioStatement -> KEY_READ LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 150
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 95

    (61) identdef -> AT IDENT .

    DOT             reduce using rule 61 (identdef -> AT IDENT .)
    IDENT           reduce using rule 61 (identdef -> AT IDENT .)
    AT              reduce using rule 61 (identdef -> AT IDENT .)
    LRB             reduce using rule 61 (identdef -> AT IDENT .)
    MULTIPLY        reduce using rule 61 (identdef -> AT IDENT .)
    DIVIDE          reduce using rule 61 (identdef -> AT IDENT .)
    MODULUS         reduce using rule 61 (identdef -> AT IDENT .)
    AND             reduce using rule 61 (identdef -> AT IDENT .)
    PLUS            reduce using rule 61 (identdef -> AT IDENT .)
    MINUS           reduce using rule 61 (identdef -> AT IDENT .)
    OR              reduce using rule 61 (identdef -> AT IDENT .)
    EQUAL           reduce using rule 61 (identdef -> AT IDENT .)
    NEQUAL          reduce using rule 61 (identdef -> AT IDENT .)
    LT              reduce using rule 61 (identdef -> AT IDENT .)
    LTEQ            reduce using rule 61 (identdef -> AT IDENT .)
    GT              reduce using rule 61 (identdef -> AT IDENT .)
    GTEQ            reduce using rule 61 (identdef -> AT IDENT .)
    KEY_IN          reduce using rule 61 (identdef -> AT IDENT .)
    KEY_IS          reduce using rule 61 (identdef -> AT IDENT .)
    RRB             reduce using rule 61 (identdef -> AT IDENT .)
    KEY_END         reduce using rule 61 (identdef -> AT IDENT .)
    SCOLON          reduce using rule 61 (identdef -> AT IDENT .)
    KEY_WHILE       reduce using rule 61 (identdef -> AT IDENT .)
    KEY_ELSE        reduce using rule 61 (identdef -> AT IDENT .)
    KEY_ELSEIF      reduce using rule 61 (identdef -> AT IDENT .)
    KEY_BEGIN       reduce using rule 61 (identdef -> AT IDENT .)
    KEY_THEN        reduce using rule 61 (identdef -> AT IDENT .)
    COMMA           reduce using rule 61 (identdef -> AT IDENT .)
    RSB             reduce using rule 61 (identdef -> AT IDENT .)
    RCB             reduce using rule 61 (identdef -> AT IDENT .)
    KEY_OF          reduce using rule 61 (identdef -> AT IDENT .)
    KEY_EXIT        reduce using rule 61 (identdef -> AT IDENT .)
    KEY_RETURN      reduce using rule 61 (identdef -> AT IDENT .)
    KEY_BREAK       reduce using rule 61 (identdef -> AT IDENT .)
    KEY_CONTINUE    reduce using rule 61 (identdef -> AT IDENT .)
    KEY_IF          reduce using rule 61 (identdef -> AT IDENT .)
    KEY_SWITCH      reduce using rule 61 (identdef -> AT IDENT .)
    KEY_FOR         reduce using rule 61 (identdef -> AT IDENT .)
    KEY_DO          reduce using rule 61 (identdef -> AT IDENT .)
    KEY_WRITE       reduce using rule 61 (identdef -> AT IDENT .)
    KEY_WRITELN     reduce using rule 61 (identdef -> AT IDENT .)
    KEY_READ        reduce using rule 61 (identdef -> AT IDENT .)
    KEY_FCLOSE      reduce using rule 61 (identdef -> AT IDENT .)
    KEY_FPRINTF     reduce using rule 61 (identdef -> AT IDENT .)
    KEY_FREAD       reduce using rule 61 (identdef -> AT IDENT .)
    ASSIGN          reduce using rule 61 (identdef -> AT IDENT .)
    LSB             reduce using rule 61 (identdef -> AT IDENT .)


state 96

    (146) whileStatement -> KEY_WHILE expression . KEY_BEGIN statementSequence KEY_END

    KEY_BEGIN       shift and go to state 151


state 97

    (134) assignment -> designator ASSIGN . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    designator                     shift and go to state 74
    term                           shift and go to state 80
    expression                     shift and go to state 152
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 98

    (64) actualParameters -> LRB . expList RRB
    (65) actualParameters -> LRB . RRB
    (62) expList -> . expList COMMA expression
    (63) expList -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    RRB             shift and go to state 154
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 155
    expList                        shift and go to state 153
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 99

    (135) procedureCall -> designator actualParameters .

    KEY_END         reduce using rule 135 (procedureCall -> designator actualParameters .)
    SCOLON          reduce using rule 135 (procedureCall -> designator actualParameters .)
    KEY_WHILE       reduce using rule 135 (procedureCall -> designator actualParameters .)
    KEY_ELSE        reduce using rule 135 (procedureCall -> designator actualParameters .)
    KEY_ELSEIF      reduce using rule 135 (procedureCall -> designator actualParameters .)
    OR              reduce using rule 135 (procedureCall -> designator actualParameters .)


state 100

    (154) fileStatement -> KEY_FPRINTF LRB . identdef COMMA string RRB
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    identdef                       shift and go to state 156

state 101

    (150) ioStatement -> KEY_WRITELN LRB . expression RRB
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 157
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 102

    (147) forStatement -> KEY_FOR LRB . assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (134) assignment -> . designator ASSIGN expression
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    designator                     shift and go to state 158
    assignment                     shift and go to state 159
    identdef                       shift and go to state 79

state 103

    (59) qualident -> identdef DOT . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 160
    identdef                       shift and go to state 79

state 104

    (152) fileStatement -> identdef EQUAL . KEY_FOPEN LRB string COMMA char RRB

    KEY_FOPEN       shift and go to state 161


state 105

    (153) fileStatement -> KEY_FCLOSE LRB . identdef RRB
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    identdef                       shift and go to state 162

state 106

    (9) typess -> typess typeDeclaration . SCOLON

    SCOLON          shift and go to state 163


state 107

    (81) typeDeclaration -> IDENT . EQUAL type

    EQUAL           shift and go to state 164


state 108

    (108) procedureDeclaration -> procedureHeading SCOLON . procedureBody IDENT
    (118) procedureBody -> . declarationSequence KEY_BEGIN statementSequence KEY_END
    (2) declarationSequence -> . declarationSequence KEY_CONST conss
    (3) declarationSequence -> . declarationSequence KEY_TYPE typess
    (4) declarationSequence -> . declarationSequence KEY_VAR varss
    (5) declarationSequence -> . declarationSequence procss
    (6) declarationSequence -> . empty
    (156) empty -> .

    KEY_BEGIN       reduce using rule 156 (empty -> .)
    KEY_CONST       reduce using rule 156 (empty -> .)
    KEY_TYPE        reduce using rule 156 (empty -> .)
    KEY_VAR         reduce using rule 156 (empty -> .)
    KEY_PROCEDURE   reduce using rule 156 (empty -> .)

    empty                          shift and go to state 5
    declarationSequence            shift and go to state 165
    procedureBody                  shift and go to state 166

state 109

    (109) procedureHeading -> KEY_PROCEDURE IDENT . formalParameters COLON type
    (110) procedureHeading -> KEY_PROCEDURE IDENT . formalParameters
    (111) formalParameters -> . LRB FPSection formalss RRB
    (112) formalParameters -> . LRB RRB

    LRB             shift and go to state 168

    formalParameters               shift and go to state 167

state 110

    (13) procss -> procss procedureDeclaration SCOLON .

    KEY_PROCEDURE   reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_CONST       reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)
    KEY_VAR         reduce using rule 13 (procss -> procss procedureDeclaration SCOLON .)


state 111

    (11) varss -> varss variableDeclaration . SCOLON

    SCOLON          shift and go to state 169


state 112

    (105) identList -> IDENT .

    COLON           reduce using rule 105 (identList -> IDENT .)
    COMMA           reduce using rule 105 (identList -> IDENT .)


state 113

    (107) variableDeclaration -> identList . COLON type
    (104) identList -> identList . COMMA IDENT

    COLON           shift and go to state 170
    COMMA           shift and go to state 171


state 114

    (17) constantDeclaration -> IDENT ASSIGN . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 172
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 115

    (7) conss -> conss constantDeclaration SCOLON .

    IDENT           reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_CONST       reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_VAR         reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 7 (conss -> conss constantDeclaration SCOLON .)


state 116

    (148) doWhileStatement -> KEY_DO statementSequence KEY_WHILE . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 173
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 117

    (22) simpleExpression -> MINUS term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (156) empty -> .

    PLUS            reduce using rule 156 (empty -> .)
    MINUS           reduce using rule 156 (empty -> .)
    OR              reduce using rule 156 (empty -> .)
    EQUAL           reduce using rule 156 (empty -> .)
    NEQUAL          reduce using rule 156 (empty -> .)
    LT              reduce using rule 156 (empty -> .)
    LTEQ            reduce using rule 156 (empty -> .)
    GT              reduce using rule 156 (empty -> .)
    GTEQ            reduce using rule 156 (empty -> .)
    KEY_IN          reduce using rule 156 (empty -> .)
    KEY_IS          reduce using rule 156 (empty -> .)
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    KEY_WHILE       reduce using rule 156 (empty -> .)
    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_ELSEIF      reduce using rule 156 (empty -> .)
    KEY_BEGIN       reduce using rule 156 (empty -> .)
    KEY_THEN        reduce using rule 156 (empty -> .)
    RRB             reduce using rule 156 (empty -> .)
    COMMA           reduce using rule 156 (empty -> .)
    RSB             reduce using rule 156 (empty -> .)
    RCB             reduce using rule 156 (empty -> .)
    KEY_OF          reduce using rule 156 (empty -> .)
    KEY_EXIT        reduce using rule 156 (empty -> .)
    KEY_RETURN      reduce using rule 156 (empty -> .)
    KEY_BREAK       reduce using rule 156 (empty -> .)
    KEY_CONTINUE    reduce using rule 156 (empty -> .)
    KEY_IF          reduce using rule 156 (empty -> .)
    KEY_SWITCH      reduce using rule 156 (empty -> .)
    KEY_FOR         reduce using rule 156 (empty -> .)
    KEY_DO          reduce using rule 156 (empty -> .)
    KEY_WRITE       reduce using rule 156 (empty -> .)
    KEY_WRITELN     reduce using rule 156 (empty -> .)
    KEY_READ        reduce using rule 156 (empty -> .)
    KEY_FCLOSE      reduce using rule 156 (empty -> .)
    KEY_FPRINTF     reduce using rule 156 (empty -> .)
    KEY_FREAD       reduce using rule 156 (empty -> .)
    IDENT           reduce using rule 156 (empty -> .)
    AT              reduce using rule 156 (empty -> .)

    empty                          shift and go to state 129
    simpless                       shift and go to state 174

state 118

    (20) simpleExpression -> PLUS term . simpless
    (23) simpless -> . simpless addOperator term
    (24) simpless -> . empty
    (156) empty -> .

    PLUS            reduce using rule 156 (empty -> .)
    MINUS           reduce using rule 156 (empty -> .)
    OR              reduce using rule 156 (empty -> .)
    EQUAL           reduce using rule 156 (empty -> .)
    NEQUAL          reduce using rule 156 (empty -> .)
    LT              reduce using rule 156 (empty -> .)
    LTEQ            reduce using rule 156 (empty -> .)
    GT              reduce using rule 156 (empty -> .)
    GTEQ            reduce using rule 156 (empty -> .)
    KEY_IN          reduce using rule 156 (empty -> .)
    KEY_IS          reduce using rule 156 (empty -> .)
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    KEY_WHILE       reduce using rule 156 (empty -> .)
    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_ELSEIF      reduce using rule 156 (empty -> .)
    KEY_BEGIN       reduce using rule 156 (empty -> .)
    KEY_THEN        reduce using rule 156 (empty -> .)
    RRB             reduce using rule 156 (empty -> .)
    COMMA           reduce using rule 156 (empty -> .)
    RSB             reduce using rule 156 (empty -> .)
    RCB             reduce using rule 156 (empty -> .)
    KEY_OF          reduce using rule 156 (empty -> .)
    KEY_EXIT        reduce using rule 156 (empty -> .)
    KEY_RETURN      reduce using rule 156 (empty -> .)
    KEY_BREAK       reduce using rule 156 (empty -> .)
    KEY_CONTINUE    reduce using rule 156 (empty -> .)
    KEY_IF          reduce using rule 156 (empty -> .)
    KEY_SWITCH      reduce using rule 156 (empty -> .)
    KEY_FOR         reduce using rule 156 (empty -> .)
    KEY_DO          reduce using rule 156 (empty -> .)
    KEY_WRITE       reduce using rule 156 (empty -> .)
    KEY_WRITELN     reduce using rule 156 (empty -> .)
    KEY_READ        reduce using rule 156 (empty -> .)
    KEY_FCLOSE      reduce using rule 156 (empty -> .)
    KEY_FPRINTF     reduce using rule 156 (empty -> .)
    KEY_FREAD       reduce using rule 156 (empty -> .)
    IDENT           reduce using rule 156 (empty -> .)
    AT              reduce using rule 156 (empty -> .)

    empty                          shift and go to state 129
    simpless                       shift and go to state 175

state 119

    (37) factor -> KEY_ABS factor .

    MULTIPLY        reduce using rule 37 (factor -> KEY_ABS factor .)
    DIVIDE          reduce using rule 37 (factor -> KEY_ABS factor .)
    MODULUS         reduce using rule 37 (factor -> KEY_ABS factor .)
    AND             reduce using rule 37 (factor -> KEY_ABS factor .)
    PLUS            reduce using rule 37 (factor -> KEY_ABS factor .)
    MINUS           reduce using rule 37 (factor -> KEY_ABS factor .)
    OR              reduce using rule 37 (factor -> KEY_ABS factor .)
    EQUAL           reduce using rule 37 (factor -> KEY_ABS factor .)
    NEQUAL          reduce using rule 37 (factor -> KEY_ABS factor .)
    LT              reduce using rule 37 (factor -> KEY_ABS factor .)
    LTEQ            reduce using rule 37 (factor -> KEY_ABS factor .)
    GT              reduce using rule 37 (factor -> KEY_ABS factor .)
    GTEQ            reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_IN          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_IS          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_OF          reduce using rule 37 (factor -> KEY_ABS factor .)
    COMMA           reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_EXIT        reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_RETURN      reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_BREAK       reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_CONTINUE    reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_IF          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_SWITCH      reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_WHILE       reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_FOR         reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_DO          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_WRITE       reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_WRITELN     reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_READ        reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_FCLOSE      reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_FPRINTF     reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_FREAD       reduce using rule 37 (factor -> KEY_ABS factor .)
    IDENT           reduce using rule 37 (factor -> KEY_ABS factor .)
    AT              reduce using rule 37 (factor -> KEY_ABS factor .)
    SCOLON          reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_ELSE        reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_END         reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_ELSEIF      reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_BEGIN       reduce using rule 37 (factor -> KEY_ABS factor .)
    KEY_THEN        reduce using rule 37 (factor -> KEY_ABS factor .)
    RRB             reduce using rule 37 (factor -> KEY_ABS factor .)
    RSB             reduce using rule 37 (factor -> KEY_ABS factor .)
    RCB             reduce using rule 37 (factor -> KEY_ABS factor .)


state 120

    (36) factor -> NOT factor .

    MULTIPLY        reduce using rule 36 (factor -> NOT factor .)
    DIVIDE          reduce using rule 36 (factor -> NOT factor .)
    MODULUS         reduce using rule 36 (factor -> NOT factor .)
    AND             reduce using rule 36 (factor -> NOT factor .)
    PLUS            reduce using rule 36 (factor -> NOT factor .)
    MINUS           reduce using rule 36 (factor -> NOT factor .)
    OR              reduce using rule 36 (factor -> NOT factor .)
    EQUAL           reduce using rule 36 (factor -> NOT factor .)
    NEQUAL          reduce using rule 36 (factor -> NOT factor .)
    LT              reduce using rule 36 (factor -> NOT factor .)
    LTEQ            reduce using rule 36 (factor -> NOT factor .)
    GT              reduce using rule 36 (factor -> NOT factor .)
    GTEQ            reduce using rule 36 (factor -> NOT factor .)
    KEY_IN          reduce using rule 36 (factor -> NOT factor .)
    KEY_IS          reduce using rule 36 (factor -> NOT factor .)
    KEY_OF          reduce using rule 36 (factor -> NOT factor .)
    COMMA           reduce using rule 36 (factor -> NOT factor .)
    KEY_EXIT        reduce using rule 36 (factor -> NOT factor .)
    KEY_RETURN      reduce using rule 36 (factor -> NOT factor .)
    KEY_BREAK       reduce using rule 36 (factor -> NOT factor .)
    KEY_CONTINUE    reduce using rule 36 (factor -> NOT factor .)
    KEY_IF          reduce using rule 36 (factor -> NOT factor .)
    KEY_SWITCH      reduce using rule 36 (factor -> NOT factor .)
    KEY_WHILE       reduce using rule 36 (factor -> NOT factor .)
    KEY_FOR         reduce using rule 36 (factor -> NOT factor .)
    KEY_DO          reduce using rule 36 (factor -> NOT factor .)
    KEY_WRITE       reduce using rule 36 (factor -> NOT factor .)
    KEY_WRITELN     reduce using rule 36 (factor -> NOT factor .)
    KEY_READ        reduce using rule 36 (factor -> NOT factor .)
    KEY_FCLOSE      reduce using rule 36 (factor -> NOT factor .)
    KEY_FPRINTF     reduce using rule 36 (factor -> NOT factor .)
    KEY_FREAD       reduce using rule 36 (factor -> NOT factor .)
    IDENT           reduce using rule 36 (factor -> NOT factor .)
    AT              reduce using rule 36 (factor -> NOT factor .)
    SCOLON          reduce using rule 36 (factor -> NOT factor .)
    KEY_ELSE        reduce using rule 36 (factor -> NOT factor .)
    KEY_END         reduce using rule 36 (factor -> NOT factor .)
    KEY_ELSEIF      reduce using rule 36 (factor -> NOT factor .)
    KEY_BEGIN       reduce using rule 36 (factor -> NOT factor .)
    KEY_THEN        reduce using rule 36 (factor -> NOT factor .)
    RRB             reduce using rule 36 (factor -> NOT factor .)
    RSB             reduce using rule 36 (factor -> NOT factor .)
    RCB             reduce using rule 36 (factor -> NOT factor .)


state 121

    (27) termss -> empty .

    MULTIPLY        reduce using rule 27 (termss -> empty .)
    DIVIDE          reduce using rule 27 (termss -> empty .)
    MODULUS         reduce using rule 27 (termss -> empty .)
    AND             reduce using rule 27 (termss -> empty .)
    PLUS            reduce using rule 27 (termss -> empty .)
    MINUS           reduce using rule 27 (termss -> empty .)
    OR              reduce using rule 27 (termss -> empty .)
    EQUAL           reduce using rule 27 (termss -> empty .)
    NEQUAL          reduce using rule 27 (termss -> empty .)
    LT              reduce using rule 27 (termss -> empty .)
    LTEQ            reduce using rule 27 (termss -> empty .)
    GT              reduce using rule 27 (termss -> empty .)
    GTEQ            reduce using rule 27 (termss -> empty .)
    KEY_IN          reduce using rule 27 (termss -> empty .)
    KEY_IS          reduce using rule 27 (termss -> empty .)
    KEY_END         reduce using rule 27 (termss -> empty .)
    SCOLON          reduce using rule 27 (termss -> empty .)
    KEY_WHILE       reduce using rule 27 (termss -> empty .)
    KEY_ELSE        reduce using rule 27 (termss -> empty .)
    KEY_ELSEIF      reduce using rule 27 (termss -> empty .)
    KEY_BEGIN       reduce using rule 27 (termss -> empty .)
    KEY_THEN        reduce using rule 27 (termss -> empty .)
    RRB             reduce using rule 27 (termss -> empty .)
    COMMA           reduce using rule 27 (termss -> empty .)
    RSB             reduce using rule 27 (termss -> empty .)
    RCB             reduce using rule 27 (termss -> empty .)
    KEY_OF          reduce using rule 27 (termss -> empty .)
    KEY_EXIT        reduce using rule 27 (termss -> empty .)
    KEY_RETURN      reduce using rule 27 (termss -> empty .)
    KEY_BREAK       reduce using rule 27 (termss -> empty .)
    KEY_CONTINUE    reduce using rule 27 (termss -> empty .)
    KEY_IF          reduce using rule 27 (termss -> empty .)
    KEY_SWITCH      reduce using rule 27 (termss -> empty .)
    KEY_FOR         reduce using rule 27 (termss -> empty .)
    KEY_DO          reduce using rule 27 (termss -> empty .)
    KEY_WRITE       reduce using rule 27 (termss -> empty .)
    KEY_WRITELN     reduce using rule 27 (termss -> empty .)
    KEY_READ        reduce using rule 27 (termss -> empty .)
    KEY_FCLOSE      reduce using rule 27 (termss -> empty .)
    KEY_FPRINTF     reduce using rule 27 (termss -> empty .)
    KEY_FREAD       reduce using rule 27 (termss -> empty .)
    IDENT           reduce using rule 27 (termss -> empty .)
    AT              reduce using rule 27 (termss -> empty .)


state 122

    (25) term -> factor termss .
    (26) termss -> termss . mulOperator factor
    (66) mulOperator -> . MULTIPLY
    (67) mulOperator -> . DIVIDE
    (68) mulOperator -> . MODULUS
    (69) mulOperator -> . AND

    PLUS            reduce using rule 25 (term -> factor termss .)
    MINUS           reduce using rule 25 (term -> factor termss .)
    OR              reduce using rule 25 (term -> factor termss .)
    EQUAL           reduce using rule 25 (term -> factor termss .)
    NEQUAL          reduce using rule 25 (term -> factor termss .)
    LT              reduce using rule 25 (term -> factor termss .)
    LTEQ            reduce using rule 25 (term -> factor termss .)
    GT              reduce using rule 25 (term -> factor termss .)
    GTEQ            reduce using rule 25 (term -> factor termss .)
    KEY_IN          reduce using rule 25 (term -> factor termss .)
    KEY_IS          reduce using rule 25 (term -> factor termss .)
    KEY_END         reduce using rule 25 (term -> factor termss .)
    SCOLON          reduce using rule 25 (term -> factor termss .)
    KEY_WHILE       reduce using rule 25 (term -> factor termss .)
    KEY_ELSE        reduce using rule 25 (term -> factor termss .)
    KEY_ELSEIF      reduce using rule 25 (term -> factor termss .)
    KEY_BEGIN       reduce using rule 25 (term -> factor termss .)
    KEY_THEN        reduce using rule 25 (term -> factor termss .)
    RRB             reduce using rule 25 (term -> factor termss .)
    COMMA           reduce using rule 25 (term -> factor termss .)
    RSB             reduce using rule 25 (term -> factor termss .)
    RCB             reduce using rule 25 (term -> factor termss .)
    KEY_OF          reduce using rule 25 (term -> factor termss .)
    KEY_EXIT        reduce using rule 25 (term -> factor termss .)
    KEY_RETURN      reduce using rule 25 (term -> factor termss .)
    KEY_BREAK       reduce using rule 25 (term -> factor termss .)
    KEY_CONTINUE    reduce using rule 25 (term -> factor termss .)
    KEY_IF          reduce using rule 25 (term -> factor termss .)
    KEY_SWITCH      reduce using rule 25 (term -> factor termss .)
    KEY_FOR         reduce using rule 25 (term -> factor termss .)
    KEY_DO          reduce using rule 25 (term -> factor termss .)
    KEY_WRITE       reduce using rule 25 (term -> factor termss .)
    KEY_WRITELN     reduce using rule 25 (term -> factor termss .)
    KEY_READ        reduce using rule 25 (term -> factor termss .)
    KEY_FCLOSE      reduce using rule 25 (term -> factor termss .)
    KEY_FPRINTF     reduce using rule 25 (term -> factor termss .)
    KEY_FREAD       reduce using rule 25 (term -> factor termss .)
    IDENT           reduce using rule 25 (term -> factor termss .)
    AT              reduce using rule 25 (term -> factor termss .)
    MULTIPLY        shift and go to state 180
    DIVIDE          shift and go to state 176
    MODULUS         shift and go to state 178
    AND             shift and go to state 179

    mulOperator                    shift and go to state 177

state 123

    (38) factor -> KEY_CHR factor .

    MULTIPLY        reduce using rule 38 (factor -> KEY_CHR factor .)
    DIVIDE          reduce using rule 38 (factor -> KEY_CHR factor .)
    MODULUS         reduce using rule 38 (factor -> KEY_CHR factor .)
    AND             reduce using rule 38 (factor -> KEY_CHR factor .)
    PLUS            reduce using rule 38 (factor -> KEY_CHR factor .)
    MINUS           reduce using rule 38 (factor -> KEY_CHR factor .)
    OR              reduce using rule 38 (factor -> KEY_CHR factor .)
    EQUAL           reduce using rule 38 (factor -> KEY_CHR factor .)
    NEQUAL          reduce using rule 38 (factor -> KEY_CHR factor .)
    LT              reduce using rule 38 (factor -> KEY_CHR factor .)
    LTEQ            reduce using rule 38 (factor -> KEY_CHR factor .)
    GT              reduce using rule 38 (factor -> KEY_CHR factor .)
    GTEQ            reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_IN          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_IS          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_OF          reduce using rule 38 (factor -> KEY_CHR factor .)
    COMMA           reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_EXIT        reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_RETURN      reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_BREAK       reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_CONTINUE    reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_IF          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_SWITCH      reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_WHILE       reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_FOR         reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_DO          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_WRITE       reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_WRITELN     reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_READ        reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_FCLOSE      reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_FPRINTF     reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_FREAD       reduce using rule 38 (factor -> KEY_CHR factor .)
    IDENT           reduce using rule 38 (factor -> KEY_CHR factor .)
    AT              reduce using rule 38 (factor -> KEY_CHR factor .)
    SCOLON          reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_ELSE        reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_END         reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_ELSEIF      reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_BEGIN       reduce using rule 38 (factor -> KEY_CHR factor .)
    KEY_THEN        reduce using rule 38 (factor -> KEY_CHR factor .)
    RRB             reduce using rule 38 (factor -> KEY_CHR factor .)
    RSB             reduce using rule 38 (factor -> KEY_CHR factor .)
    RCB             reduce using rule 38 (factor -> KEY_CHR factor .)


state 124

    (35) factor -> LRB expression . RRB

    RRB             shift and go to state 181


state 125

    (34) factor -> designator actualParameters .

    MULTIPLY        reduce using rule 34 (factor -> designator actualParameters .)
    DIVIDE          reduce using rule 34 (factor -> designator actualParameters .)
    MODULUS         reduce using rule 34 (factor -> designator actualParameters .)
    AND             reduce using rule 34 (factor -> designator actualParameters .)
    PLUS            reduce using rule 34 (factor -> designator actualParameters .)
    MINUS           reduce using rule 34 (factor -> designator actualParameters .)
    OR              reduce using rule 34 (factor -> designator actualParameters .)
    EQUAL           reduce using rule 34 (factor -> designator actualParameters .)
    NEQUAL          reduce using rule 34 (factor -> designator actualParameters .)
    LT              reduce using rule 34 (factor -> designator actualParameters .)
    LTEQ            reduce using rule 34 (factor -> designator actualParameters .)
    GT              reduce using rule 34 (factor -> designator actualParameters .)
    GTEQ            reduce using rule 34 (factor -> designator actualParameters .)
    KEY_IN          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_IS          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_OF          reduce using rule 34 (factor -> designator actualParameters .)
    COMMA           reduce using rule 34 (factor -> designator actualParameters .)
    KEY_EXIT        reduce using rule 34 (factor -> designator actualParameters .)
    KEY_RETURN      reduce using rule 34 (factor -> designator actualParameters .)
    KEY_BREAK       reduce using rule 34 (factor -> designator actualParameters .)
    KEY_CONTINUE    reduce using rule 34 (factor -> designator actualParameters .)
    KEY_IF          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_SWITCH      reduce using rule 34 (factor -> designator actualParameters .)
    KEY_WHILE       reduce using rule 34 (factor -> designator actualParameters .)
    KEY_FOR         reduce using rule 34 (factor -> designator actualParameters .)
    KEY_DO          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_WRITE       reduce using rule 34 (factor -> designator actualParameters .)
    KEY_WRITELN     reduce using rule 34 (factor -> designator actualParameters .)
    KEY_READ        reduce using rule 34 (factor -> designator actualParameters .)
    KEY_FCLOSE      reduce using rule 34 (factor -> designator actualParameters .)
    KEY_FPRINTF     reduce using rule 34 (factor -> designator actualParameters .)
    KEY_FREAD       reduce using rule 34 (factor -> designator actualParameters .)
    IDENT           reduce using rule 34 (factor -> designator actualParameters .)
    AT              reduce using rule 34 (factor -> designator actualParameters .)
    SCOLON          reduce using rule 34 (factor -> designator actualParameters .)
    KEY_ELSE        reduce using rule 34 (factor -> designator actualParameters .)
    KEY_END         reduce using rule 34 (factor -> designator actualParameters .)
    KEY_ELSEIF      reduce using rule 34 (factor -> designator actualParameters .)
    KEY_BEGIN       reduce using rule 34 (factor -> designator actualParameters .)
    KEY_THEN        reduce using rule 34 (factor -> designator actualParameters .)
    RRB             reduce using rule 34 (factor -> designator actualParameters .)
    RSB             reduce using rule 34 (factor -> designator actualParameters .)
    RCB             reduce using rule 34 (factor -> designator actualParameters .)


state 126

    (52) element -> expression .

    COMMA           reduce using rule 52 (element -> expression .)
    RCB             reduce using rule 52 (element -> expression .)


state 127

    (51) set -> LCB RCB .

    MULTIPLY        reduce using rule 51 (set -> LCB RCB .)
    DIVIDE          reduce using rule 51 (set -> LCB RCB .)
    MODULUS         reduce using rule 51 (set -> LCB RCB .)
    AND             reduce using rule 51 (set -> LCB RCB .)
    PLUS            reduce using rule 51 (set -> LCB RCB .)
    MINUS           reduce using rule 51 (set -> LCB RCB .)
    OR              reduce using rule 51 (set -> LCB RCB .)
    EQUAL           reduce using rule 51 (set -> LCB RCB .)
    NEQUAL          reduce using rule 51 (set -> LCB RCB .)
    LT              reduce using rule 51 (set -> LCB RCB .)
    LTEQ            reduce using rule 51 (set -> LCB RCB .)
    GT              reduce using rule 51 (set -> LCB RCB .)
    GTEQ            reduce using rule 51 (set -> LCB RCB .)
    KEY_IN          reduce using rule 51 (set -> LCB RCB .)
    KEY_IS          reduce using rule 51 (set -> LCB RCB .)
    KEY_END         reduce using rule 51 (set -> LCB RCB .)
    SCOLON          reduce using rule 51 (set -> LCB RCB .)
    KEY_WHILE       reduce using rule 51 (set -> LCB RCB .)
    KEY_ELSE        reduce using rule 51 (set -> LCB RCB .)
    KEY_ELSEIF      reduce using rule 51 (set -> LCB RCB .)
    RCB             reduce using rule 51 (set -> LCB RCB .)
    RRB             reduce using rule 51 (set -> LCB RCB .)
    KEY_BEGIN       reduce using rule 51 (set -> LCB RCB .)
    KEY_THEN        reduce using rule 51 (set -> LCB RCB .)
    COMMA           reduce using rule 51 (set -> LCB RCB .)
    RSB             reduce using rule 51 (set -> LCB RCB .)
    KEY_OF          reduce using rule 51 (set -> LCB RCB .)
    KEY_EXIT        reduce using rule 51 (set -> LCB RCB .)
    KEY_RETURN      reduce using rule 51 (set -> LCB RCB .)
    KEY_BREAK       reduce using rule 51 (set -> LCB RCB .)
    KEY_CONTINUE    reduce using rule 51 (set -> LCB RCB .)
    KEY_IF          reduce using rule 51 (set -> LCB RCB .)
    KEY_SWITCH      reduce using rule 51 (set -> LCB RCB .)
    KEY_FOR         reduce using rule 51 (set -> LCB RCB .)
    KEY_DO          reduce using rule 51 (set -> LCB RCB .)
    KEY_WRITE       reduce using rule 51 (set -> LCB RCB .)
    KEY_WRITELN     reduce using rule 51 (set -> LCB RCB .)
    KEY_READ        reduce using rule 51 (set -> LCB RCB .)
    KEY_FCLOSE      reduce using rule 51 (set -> LCB RCB .)
    KEY_FPRINTF     reduce using rule 51 (set -> LCB RCB .)
    KEY_FREAD       reduce using rule 51 (set -> LCB RCB .)
    IDENT           reduce using rule 51 (set -> LCB RCB .)
    AT              reduce using rule 51 (set -> LCB RCB .)


state 128

    (50) set -> LCB element . COMMA element RCB

    COMMA           shift and go to state 182


state 129

    (24) simpless -> empty .

    PLUS            reduce using rule 24 (simpless -> empty .)
    MINUS           reduce using rule 24 (simpless -> empty .)
    OR              reduce using rule 24 (simpless -> empty .)
    EQUAL           reduce using rule 24 (simpless -> empty .)
    NEQUAL          reduce using rule 24 (simpless -> empty .)
    LT              reduce using rule 24 (simpless -> empty .)
    LTEQ            reduce using rule 24 (simpless -> empty .)
    GT              reduce using rule 24 (simpless -> empty .)
    GTEQ            reduce using rule 24 (simpless -> empty .)
    KEY_IN          reduce using rule 24 (simpless -> empty .)
    KEY_IS          reduce using rule 24 (simpless -> empty .)
    KEY_END         reduce using rule 24 (simpless -> empty .)
    SCOLON          reduce using rule 24 (simpless -> empty .)
    KEY_WHILE       reduce using rule 24 (simpless -> empty .)
    KEY_ELSE        reduce using rule 24 (simpless -> empty .)
    KEY_ELSEIF      reduce using rule 24 (simpless -> empty .)
    KEY_BEGIN       reduce using rule 24 (simpless -> empty .)
    KEY_THEN        reduce using rule 24 (simpless -> empty .)
    RRB             reduce using rule 24 (simpless -> empty .)
    COMMA           reduce using rule 24 (simpless -> empty .)
    RSB             reduce using rule 24 (simpless -> empty .)
    RCB             reduce using rule 24 (simpless -> empty .)
    KEY_OF          reduce using rule 24 (simpless -> empty .)
    KEY_EXIT        reduce using rule 24 (simpless -> empty .)
    KEY_RETURN      reduce using rule 24 (simpless -> empty .)
    KEY_BREAK       reduce using rule 24 (simpless -> empty .)
    KEY_CONTINUE    reduce using rule 24 (simpless -> empty .)
    KEY_IF          reduce using rule 24 (simpless -> empty .)
    KEY_SWITCH      reduce using rule 24 (simpless -> empty .)
    KEY_FOR         reduce using rule 24 (simpless -> empty .)
    KEY_DO          reduce using rule 24 (simpless -> empty .)
    KEY_WRITE       reduce using rule 24 (simpless -> empty .)
    KEY_WRITELN     reduce using rule 24 (simpless -> empty .)
    KEY_READ        reduce using rule 24 (simpless -> empty .)
    KEY_FCLOSE      reduce using rule 24 (simpless -> empty .)
    KEY_FPRINTF     reduce using rule 24 (simpless -> empty .)
    KEY_FREAD       reduce using rule 24 (simpless -> empty .)
    IDENT           reduce using rule 24 (simpless -> empty .)
    AT              reduce using rule 24 (simpless -> empty .)


state 130

    (21) simpleExpression -> term simpless .
    (23) simpless -> simpless . addOperator term
    (70) addOperator -> . PLUS
    (71) addOperator -> . MINUS
    (72) addOperator -> . OR

  ! shift/reduce conflict for OR resolved as shift
    EQUAL           reduce using rule 21 (simpleExpression -> term simpless .)
    NEQUAL          reduce using rule 21 (simpleExpression -> term simpless .)
    LT              reduce using rule 21 (simpleExpression -> term simpless .)
    LTEQ            reduce using rule 21 (simpleExpression -> term simpless .)
    GT              reduce using rule 21 (simpleExpression -> term simpless .)
    GTEQ            reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_IN          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_IS          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_BEGIN       reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_END         reduce using rule 21 (simpleExpression -> term simpless .)
    SCOLON          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_WHILE       reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_ELSE        reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_ELSEIF      reduce using rule 21 (simpleExpression -> term simpless .)
    COMMA           reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_THEN        reduce using rule 21 (simpleExpression -> term simpless .)
    RCB             reduce using rule 21 (simpleExpression -> term simpless .)
    RRB             reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_EXIT        reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_RETURN      reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_BREAK       reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_CONTINUE    reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_IF          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_SWITCH      reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_FOR         reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_DO          reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_WRITE       reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_WRITELN     reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_READ        reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_FCLOSE      reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_FPRINTF     reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_FREAD       reduce using rule 21 (simpleExpression -> term simpless .)
    IDENT           reduce using rule 21 (simpleExpression -> term simpless .)
    AT              reduce using rule 21 (simpleExpression -> term simpless .)
    KEY_OF          reduce using rule 21 (simpleExpression -> term simpless .)
    RSB             reduce using rule 21 (simpleExpression -> term simpless .)
    PLUS            shift and go to state 185
    MINUS           shift and go to state 183
    OR              shift and go to state 186

  ! OR              [ reduce using rule 21 (simpleExpression -> term simpless .) ]

    addOperator                    shift and go to state 184

state 131

    (39) factor -> KEY_ORD factor .

    MULTIPLY        reduce using rule 39 (factor -> KEY_ORD factor .)
    DIVIDE          reduce using rule 39 (factor -> KEY_ORD factor .)
    MODULUS         reduce using rule 39 (factor -> KEY_ORD factor .)
    AND             reduce using rule 39 (factor -> KEY_ORD factor .)
    PLUS            reduce using rule 39 (factor -> KEY_ORD factor .)
    MINUS           reduce using rule 39 (factor -> KEY_ORD factor .)
    OR              reduce using rule 39 (factor -> KEY_ORD factor .)
    EQUAL           reduce using rule 39 (factor -> KEY_ORD factor .)
    NEQUAL          reduce using rule 39 (factor -> KEY_ORD factor .)
    LT              reduce using rule 39 (factor -> KEY_ORD factor .)
    LTEQ            reduce using rule 39 (factor -> KEY_ORD factor .)
    GT              reduce using rule 39 (factor -> KEY_ORD factor .)
    GTEQ            reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_IN          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_IS          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_OF          reduce using rule 39 (factor -> KEY_ORD factor .)
    COMMA           reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_EXIT        reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_RETURN      reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_BREAK       reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_CONTINUE    reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_IF          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_SWITCH      reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_WHILE       reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_FOR         reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_DO          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_WRITE       reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_WRITELN     reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_READ        reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_FCLOSE      reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_FPRINTF     reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_FREAD       reduce using rule 39 (factor -> KEY_ORD factor .)
    IDENT           reduce using rule 39 (factor -> KEY_ORD factor .)
    AT              reduce using rule 39 (factor -> KEY_ORD factor .)
    SCOLON          reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_ELSE        reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_END         reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_ELSEIF      reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_BEGIN       reduce using rule 39 (factor -> KEY_ORD factor .)
    KEY_THEN        reduce using rule 39 (factor -> KEY_ORD factor .)
    RRB             reduce using rule 39 (factor -> KEY_ORD factor .)
    RSB             reduce using rule 39 (factor -> KEY_ORD factor .)
    RCB             reduce using rule 39 (factor -> KEY_ORD factor .)


state 132

    (19) expression -> simpleExpression relation . simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 187
    char                           shift and go to state 70

state 133

    (78) relation -> GTEQ .

    PLUS            reduce using rule 78 (relation -> GTEQ .)
    MINUS           reduce using rule 78 (relation -> GTEQ .)
    KEY_NIL         reduce using rule 78 (relation -> GTEQ .)
    LRB             reduce using rule 78 (relation -> GTEQ .)
    NOT             reduce using rule 78 (relation -> GTEQ .)
    KEY_ABS         reduce using rule 78 (relation -> GTEQ .)
    KEY_CHR         reduce using rule 78 (relation -> GTEQ .)
    KEY_ORD         reduce using rule 78 (relation -> GTEQ .)
    KEY_INTEGER     reduce using rule 78 (relation -> GTEQ .)
    KEY_BOOLEAN     reduce using rule 78 (relation -> GTEQ .)
    KEY_CHAR        reduce using rule 78 (relation -> GTEQ .)
    KEY_STRING      reduce using rule 78 (relation -> GTEQ .)
    KEY_REAL        reduce using rule 78 (relation -> GTEQ .)
    KEY_SET         reduce using rule 78 (relation -> GTEQ .)
    VINTEGER        reduce using rule 78 (relation -> GTEQ .)
    VREAL           reduce using rule 78 (relation -> GTEQ .)
    VCHAR           reduce using rule 78 (relation -> GTEQ .)
    VSTRING         reduce using rule 78 (relation -> GTEQ .)
    LCB             reduce using rule 78 (relation -> GTEQ .)
    IDENT           reduce using rule 78 (relation -> GTEQ .)
    AT              reduce using rule 78 (relation -> GTEQ .)


state 134

    (74) relation -> NEQUAL .

    PLUS            reduce using rule 74 (relation -> NEQUAL .)
    MINUS           reduce using rule 74 (relation -> NEQUAL .)
    KEY_NIL         reduce using rule 74 (relation -> NEQUAL .)
    LRB             reduce using rule 74 (relation -> NEQUAL .)
    NOT             reduce using rule 74 (relation -> NEQUAL .)
    KEY_ABS         reduce using rule 74 (relation -> NEQUAL .)
    KEY_CHR         reduce using rule 74 (relation -> NEQUAL .)
    KEY_ORD         reduce using rule 74 (relation -> NEQUAL .)
    KEY_INTEGER     reduce using rule 74 (relation -> NEQUAL .)
    KEY_BOOLEAN     reduce using rule 74 (relation -> NEQUAL .)
    KEY_CHAR        reduce using rule 74 (relation -> NEQUAL .)
    KEY_STRING      reduce using rule 74 (relation -> NEQUAL .)
    KEY_REAL        reduce using rule 74 (relation -> NEQUAL .)
    KEY_SET         reduce using rule 74 (relation -> NEQUAL .)
    VINTEGER        reduce using rule 74 (relation -> NEQUAL .)
    VREAL           reduce using rule 74 (relation -> NEQUAL .)
    VCHAR           reduce using rule 74 (relation -> NEQUAL .)
    VSTRING         reduce using rule 74 (relation -> NEQUAL .)
    LCB             reduce using rule 74 (relation -> NEQUAL .)
    IDENT           reduce using rule 74 (relation -> NEQUAL .)
    AT              reduce using rule 74 (relation -> NEQUAL .)


state 135

    (76) relation -> LTEQ .

    PLUS            reduce using rule 76 (relation -> LTEQ .)
    MINUS           reduce using rule 76 (relation -> LTEQ .)
    KEY_NIL         reduce using rule 76 (relation -> LTEQ .)
    LRB             reduce using rule 76 (relation -> LTEQ .)
    NOT             reduce using rule 76 (relation -> LTEQ .)
    KEY_ABS         reduce using rule 76 (relation -> LTEQ .)
    KEY_CHR         reduce using rule 76 (relation -> LTEQ .)
    KEY_ORD         reduce using rule 76 (relation -> LTEQ .)
    KEY_INTEGER     reduce using rule 76 (relation -> LTEQ .)
    KEY_BOOLEAN     reduce using rule 76 (relation -> LTEQ .)
    KEY_CHAR        reduce using rule 76 (relation -> LTEQ .)
    KEY_STRING      reduce using rule 76 (relation -> LTEQ .)
    KEY_REAL        reduce using rule 76 (relation -> LTEQ .)
    KEY_SET         reduce using rule 76 (relation -> LTEQ .)
    VINTEGER        reduce using rule 76 (relation -> LTEQ .)
    VREAL           reduce using rule 76 (relation -> LTEQ .)
    VCHAR           reduce using rule 76 (relation -> LTEQ .)
    VSTRING         reduce using rule 76 (relation -> LTEQ .)
    LCB             reduce using rule 76 (relation -> LTEQ .)
    IDENT           reduce using rule 76 (relation -> LTEQ .)
    AT              reduce using rule 76 (relation -> LTEQ .)


state 136

    (79) relation -> KEY_IN .

    PLUS            reduce using rule 79 (relation -> KEY_IN .)
    MINUS           reduce using rule 79 (relation -> KEY_IN .)
    KEY_NIL         reduce using rule 79 (relation -> KEY_IN .)
    LRB             reduce using rule 79 (relation -> KEY_IN .)
    NOT             reduce using rule 79 (relation -> KEY_IN .)
    KEY_ABS         reduce using rule 79 (relation -> KEY_IN .)
    KEY_CHR         reduce using rule 79 (relation -> KEY_IN .)
    KEY_ORD         reduce using rule 79 (relation -> KEY_IN .)
    KEY_INTEGER     reduce using rule 79 (relation -> KEY_IN .)
    KEY_BOOLEAN     reduce using rule 79 (relation -> KEY_IN .)
    KEY_CHAR        reduce using rule 79 (relation -> KEY_IN .)
    KEY_STRING      reduce using rule 79 (relation -> KEY_IN .)
    KEY_REAL        reduce using rule 79 (relation -> KEY_IN .)
    KEY_SET         reduce using rule 79 (relation -> KEY_IN .)
    VINTEGER        reduce using rule 79 (relation -> KEY_IN .)
    VREAL           reduce using rule 79 (relation -> KEY_IN .)
    VCHAR           reduce using rule 79 (relation -> KEY_IN .)
    VSTRING         reduce using rule 79 (relation -> KEY_IN .)
    LCB             reduce using rule 79 (relation -> KEY_IN .)
    IDENT           reduce using rule 79 (relation -> KEY_IN .)
    AT              reduce using rule 79 (relation -> KEY_IN .)


state 137

    (80) relation -> KEY_IS .

    PLUS            reduce using rule 80 (relation -> KEY_IS .)
    MINUS           reduce using rule 80 (relation -> KEY_IS .)
    KEY_NIL         reduce using rule 80 (relation -> KEY_IS .)
    LRB             reduce using rule 80 (relation -> KEY_IS .)
    NOT             reduce using rule 80 (relation -> KEY_IS .)
    KEY_ABS         reduce using rule 80 (relation -> KEY_IS .)
    KEY_CHR         reduce using rule 80 (relation -> KEY_IS .)
    KEY_ORD         reduce using rule 80 (relation -> KEY_IS .)
    KEY_INTEGER     reduce using rule 80 (relation -> KEY_IS .)
    KEY_BOOLEAN     reduce using rule 80 (relation -> KEY_IS .)
    KEY_CHAR        reduce using rule 80 (relation -> KEY_IS .)
    KEY_STRING      reduce using rule 80 (relation -> KEY_IS .)
    KEY_REAL        reduce using rule 80 (relation -> KEY_IS .)
    KEY_SET         reduce using rule 80 (relation -> KEY_IS .)
    VINTEGER        reduce using rule 80 (relation -> KEY_IS .)
    VREAL           reduce using rule 80 (relation -> KEY_IS .)
    VCHAR           reduce using rule 80 (relation -> KEY_IS .)
    VSTRING         reduce using rule 80 (relation -> KEY_IS .)
    LCB             reduce using rule 80 (relation -> KEY_IS .)
    IDENT           reduce using rule 80 (relation -> KEY_IS .)
    AT              reduce using rule 80 (relation -> KEY_IS .)


state 138

    (75) relation -> LT .

    PLUS            reduce using rule 75 (relation -> LT .)
    MINUS           reduce using rule 75 (relation -> LT .)
    KEY_NIL         reduce using rule 75 (relation -> LT .)
    LRB             reduce using rule 75 (relation -> LT .)
    NOT             reduce using rule 75 (relation -> LT .)
    KEY_ABS         reduce using rule 75 (relation -> LT .)
    KEY_CHR         reduce using rule 75 (relation -> LT .)
    KEY_ORD         reduce using rule 75 (relation -> LT .)
    KEY_INTEGER     reduce using rule 75 (relation -> LT .)
    KEY_BOOLEAN     reduce using rule 75 (relation -> LT .)
    KEY_CHAR        reduce using rule 75 (relation -> LT .)
    KEY_STRING      reduce using rule 75 (relation -> LT .)
    KEY_REAL        reduce using rule 75 (relation -> LT .)
    KEY_SET         reduce using rule 75 (relation -> LT .)
    VINTEGER        reduce using rule 75 (relation -> LT .)
    VREAL           reduce using rule 75 (relation -> LT .)
    VCHAR           reduce using rule 75 (relation -> LT .)
    VSTRING         reduce using rule 75 (relation -> LT .)
    LCB             reduce using rule 75 (relation -> LT .)
    IDENT           reduce using rule 75 (relation -> LT .)
    AT              reduce using rule 75 (relation -> LT .)


state 139

    (77) relation -> GT .

    PLUS            reduce using rule 77 (relation -> GT .)
    MINUS           reduce using rule 77 (relation -> GT .)
    KEY_NIL         reduce using rule 77 (relation -> GT .)
    LRB             reduce using rule 77 (relation -> GT .)
    NOT             reduce using rule 77 (relation -> GT .)
    KEY_ABS         reduce using rule 77 (relation -> GT .)
    KEY_CHR         reduce using rule 77 (relation -> GT .)
    KEY_ORD         reduce using rule 77 (relation -> GT .)
    KEY_INTEGER     reduce using rule 77 (relation -> GT .)
    KEY_BOOLEAN     reduce using rule 77 (relation -> GT .)
    KEY_CHAR        reduce using rule 77 (relation -> GT .)
    KEY_STRING      reduce using rule 77 (relation -> GT .)
    KEY_REAL        reduce using rule 77 (relation -> GT .)
    KEY_SET         reduce using rule 77 (relation -> GT .)
    VINTEGER        reduce using rule 77 (relation -> GT .)
    VREAL           reduce using rule 77 (relation -> GT .)
    VCHAR           reduce using rule 77 (relation -> GT .)
    VSTRING         reduce using rule 77 (relation -> GT .)
    LCB             reduce using rule 77 (relation -> GT .)
    IDENT           reduce using rule 77 (relation -> GT .)
    AT              reduce using rule 77 (relation -> GT .)


state 140

    (73) relation -> EQUAL .

    PLUS            reduce using rule 73 (relation -> EQUAL .)
    MINUS           reduce using rule 73 (relation -> EQUAL .)
    KEY_NIL         reduce using rule 73 (relation -> EQUAL .)
    LRB             reduce using rule 73 (relation -> EQUAL .)
    NOT             reduce using rule 73 (relation -> EQUAL .)
    KEY_ABS         reduce using rule 73 (relation -> EQUAL .)
    KEY_CHR         reduce using rule 73 (relation -> EQUAL .)
    KEY_ORD         reduce using rule 73 (relation -> EQUAL .)
    KEY_INTEGER     reduce using rule 73 (relation -> EQUAL .)
    KEY_BOOLEAN     reduce using rule 73 (relation -> EQUAL .)
    KEY_CHAR        reduce using rule 73 (relation -> EQUAL .)
    KEY_STRING      reduce using rule 73 (relation -> EQUAL .)
    KEY_REAL        reduce using rule 73 (relation -> EQUAL .)
    KEY_SET         reduce using rule 73 (relation -> EQUAL .)
    VINTEGER        reduce using rule 73 (relation -> EQUAL .)
    VREAL           reduce using rule 73 (relation -> EQUAL .)
    VCHAR           reduce using rule 73 (relation -> EQUAL .)
    VSTRING         reduce using rule 73 (relation -> EQUAL .)
    LCB             reduce using rule 73 (relation -> EQUAL .)
    IDENT           reduce using rule 73 (relation -> EQUAL .)
    AT              reduce using rule 73 (relation -> EQUAL .)


state 141

    (15) statementSequence -> statementSequence SCOLON statement .

    SCOLON          reduce using rule 15 (statementSequence -> statementSequence SCOLON statement .)
    KEY_ELSE        reduce using rule 15 (statementSequence -> statementSequence SCOLON statement .)
    KEY_END         reduce using rule 15 (statementSequence -> statementSequence SCOLON statement .)
    KEY_ELSEIF      reduce using rule 15 (statementSequence -> statementSequence SCOLON statement .)
    OR              reduce using rule 15 (statementSequence -> statementSequence SCOLON statement .)
    KEY_WHILE       reduce using rule 15 (statementSequence -> statementSequence SCOLON statement .)


state 142

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT . DOT

    DOT             shift and go to state 188


state 143

    (57) designator2 -> designator LRB . qualident RRB
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 189
    identdef                       shift and go to state 79

state 144

    (55) designator2 -> designator2 DOT . identdef
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    identdef                       shift and go to state 190

state 145

    (56) designator2 -> designator2 LSB . expList RSB
    (62) expList -> . expList COMMA expression
    (63) expList -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 155
    expList                        shift and go to state 191
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 146

    (155) fileStatement -> KEY_FREAD LRB identdef . COMMA identdef COMMA VINTEGER RRB

    COMMA           shift and go to state 192


state 147

    (141) switchStatement -> KEY_SWITCH expression KEY_BEGIN . case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> KEY_SWITCH expression KEY_BEGIN . case casess KEY_END
    (145) case -> . KEY_CASE COLON expression statementSequence

    KEY_CASE        shift and go to state 193

    case                           shift and go to state 194

state 148

    (149) ioStatement -> KEY_WRITE LRB expression . RRB

    RRB             shift and go to state 195


state 149

    (137) ifStatement -> KEY_IF expression KEY_THEN . statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> KEY_IF expression KEY_THEN . statementSequence ifss KEY_END
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    SCOLON          reduce using rule 156 (empty -> .)
    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_END         reduce using rule 156 (empty -> .)
    KEY_ELSEIF      reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    empty                          shift and go to state 15
    qualident                      shift and go to state 22
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    statementSequence              shift and go to state 196
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 150

    (151) ioStatement -> KEY_READ LRB expression . RRB

    RRB             shift and go to state 197


state 151

    (146) whileStatement -> KEY_WHILE expression KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    empty                          shift and go to state 15
    qualident                      shift and go to state 22
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    statementSequence              shift and go to state 198
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 152

    (134) assignment -> designator ASSIGN expression .

    KEY_END         reduce using rule 134 (assignment -> designator ASSIGN expression .)
    SCOLON          reduce using rule 134 (assignment -> designator ASSIGN expression .)
    KEY_WHILE       reduce using rule 134 (assignment -> designator ASSIGN expression .)
    KEY_ELSE        reduce using rule 134 (assignment -> designator ASSIGN expression .)
    KEY_ELSEIF      reduce using rule 134 (assignment -> designator ASSIGN expression .)
    OR              reduce using rule 134 (assignment -> designator ASSIGN expression .)
    RRB             reduce using rule 134 (assignment -> designator ASSIGN expression .)


state 153

    (64) actualParameters -> LRB expList . RRB
    (62) expList -> expList . COMMA expression

    RRB             shift and go to state 199
    COMMA           shift and go to state 200


state 154

    (65) actualParameters -> LRB RRB .

    MULTIPLY        reduce using rule 65 (actualParameters -> LRB RRB .)
    DIVIDE          reduce using rule 65 (actualParameters -> LRB RRB .)
    MODULUS         reduce using rule 65 (actualParameters -> LRB RRB .)
    AND             reduce using rule 65 (actualParameters -> LRB RRB .)
    PLUS            reduce using rule 65 (actualParameters -> LRB RRB .)
    MINUS           reduce using rule 65 (actualParameters -> LRB RRB .)
    OR              reduce using rule 65 (actualParameters -> LRB RRB .)
    EQUAL           reduce using rule 65 (actualParameters -> LRB RRB .)
    NEQUAL          reduce using rule 65 (actualParameters -> LRB RRB .)
    LT              reduce using rule 65 (actualParameters -> LRB RRB .)
    LTEQ            reduce using rule 65 (actualParameters -> LRB RRB .)
    GT              reduce using rule 65 (actualParameters -> LRB RRB .)
    GTEQ            reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_IN          reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_IS          reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_END         reduce using rule 65 (actualParameters -> LRB RRB .)
    SCOLON          reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_WHILE       reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_ELSE        reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_ELSEIF      reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_BEGIN       reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_THEN        reduce using rule 65 (actualParameters -> LRB RRB .)
    RRB             reduce using rule 65 (actualParameters -> LRB RRB .)
    COMMA           reduce using rule 65 (actualParameters -> LRB RRB .)
    RSB             reduce using rule 65 (actualParameters -> LRB RRB .)
    RCB             reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_OF          reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_EXIT        reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_RETURN      reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_BREAK       reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_CONTINUE    reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_IF          reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_SWITCH      reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_FOR         reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_DO          reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_WRITE       reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_WRITELN     reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_READ        reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_FCLOSE      reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_FPRINTF     reduce using rule 65 (actualParameters -> LRB RRB .)
    KEY_FREAD       reduce using rule 65 (actualParameters -> LRB RRB .)
    IDENT           reduce using rule 65 (actualParameters -> LRB RRB .)
    AT              reduce using rule 65 (actualParameters -> LRB RRB .)


state 155

    (63) expList -> expression .

    RSB             reduce using rule 63 (expList -> expression .)
    COMMA           reduce using rule 63 (expList -> expression .)
    RRB             reduce using rule 63 (expList -> expression .)


state 156

    (154) fileStatement -> KEY_FPRINTF LRB identdef . COMMA string RRB

    COMMA           shift and go to state 201


state 157

    (150) ioStatement -> KEY_WRITELN LRB expression . RRB

    RRB             shift and go to state 202


state 158

    (134) assignment -> designator . ASSIGN expression

    ASSIGN          shift and go to state 97


state 159

    (147) forStatement -> KEY_FOR LRB assignment . SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    SCOLON          shift and go to state 203


state 160

    (59) qualident -> identdef DOT qualident .

    IDENT           reduce using rule 59 (qualident -> identdef DOT qualident .)
    AT              reduce using rule 59 (qualident -> identdef DOT qualident .)
    LRB             reduce using rule 59 (qualident -> identdef DOT qualident .)
    MULTIPLY        reduce using rule 59 (qualident -> identdef DOT qualident .)
    DIVIDE          reduce using rule 59 (qualident -> identdef DOT qualident .)
    MODULUS         reduce using rule 59 (qualident -> identdef DOT qualident .)
    AND             reduce using rule 59 (qualident -> identdef DOT qualident .)
    PLUS            reduce using rule 59 (qualident -> identdef DOT qualident .)
    MINUS           reduce using rule 59 (qualident -> identdef DOT qualident .)
    OR              reduce using rule 59 (qualident -> identdef DOT qualident .)
    EQUAL           reduce using rule 59 (qualident -> identdef DOT qualident .)
    NEQUAL          reduce using rule 59 (qualident -> identdef DOT qualident .)
    LT              reduce using rule 59 (qualident -> identdef DOT qualident .)
    LTEQ            reduce using rule 59 (qualident -> identdef DOT qualident .)
    GT              reduce using rule 59 (qualident -> identdef DOT qualident .)
    GTEQ            reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_IN          reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_IS          reduce using rule 59 (qualident -> identdef DOT qualident .)
    RCB             reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_END         reduce using rule 59 (qualident -> identdef DOT qualident .)
    SCOLON          reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_WHILE       reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_ELSE        reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_ELSEIF      reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_BEGIN       reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_THEN        reduce using rule 59 (qualident -> identdef DOT qualident .)
    RRB             reduce using rule 59 (qualident -> identdef DOT qualident .)
    COMMA           reduce using rule 59 (qualident -> identdef DOT qualident .)
    RSB             reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_OF          reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_EXIT        reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_RETURN      reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_BREAK       reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_CONTINUE    reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_IF          reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_SWITCH      reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_FOR         reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_DO          reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_WRITE       reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_WRITELN     reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_READ        reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_FCLOSE      reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_FPRINTF     reduce using rule 59 (qualident -> identdef DOT qualident .)
    KEY_FREAD       reduce using rule 59 (qualident -> identdef DOT qualident .)
    ASSIGN          reduce using rule 59 (qualident -> identdef DOT qualident .)


state 161

    (152) fileStatement -> identdef EQUAL KEY_FOPEN . LRB string COMMA char RRB

    LRB             shift and go to state 204


state 162

    (153) fileStatement -> KEY_FCLOSE LRB identdef . RRB

    RRB             shift and go to state 205


state 163

    (9) typess -> typess typeDeclaration SCOLON .

    IDENT           reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_CONST       reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_VAR         reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 9 (typess -> typess typeDeclaration SCOLON .)


state 164

    (81) typeDeclaration -> IDENT EQUAL . type
    (82) type -> . IDENT
    (83) type -> . varType
    (84) type -> . arrayType
    (85) type -> . recordType
    (86) type -> . pointerType
    (87) varType -> . KEY_INTEGER
    (88) varType -> . KEY_BOOLEAN
    (89) varType -> . KEY_CHAR
    (90) varType -> . KEY_STRING
    (91) varType -> . KEY_REAL
    (92) varType -> . KEY_SET
    (93) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (97) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (98) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (106) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 211
    KEY_INTEGER     shift and go to state 216
    KEY_BOOLEAN     shift and go to state 214
    KEY_CHAR        shift and go to state 213
    KEY_STRING      shift and go to state 208
    KEY_REAL        shift and go to state 220
    KEY_SET         shift and go to state 209
    KEY_ARRAY       shift and go to state 217
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 210

    recordType                     shift and go to state 206
    pointerType                    shift and go to state 219
    type                           shift and go to state 212
    arrayType                      shift and go to state 207
    varType                        shift and go to state 218

state 165

    (118) procedureBody -> declarationSequence . KEY_BEGIN statementSequence KEY_END
    (2) declarationSequence -> declarationSequence . KEY_CONST conss
    (3) declarationSequence -> declarationSequence . KEY_TYPE typess
    (4) declarationSequence -> declarationSequence . KEY_VAR varss
    (5) declarationSequence -> declarationSequence . procss
    (13) procss -> . procss procedureDeclaration SCOLON
    (14) procss -> . empty
    (156) empty -> .

  ! shift/reduce conflict for KEY_BEGIN resolved as shift
  ! shift/reduce conflict for KEY_CONST resolved as shift
  ! shift/reduce conflict for KEY_TYPE resolved as shift
  ! shift/reduce conflict for KEY_VAR resolved as shift
    KEY_BEGIN       shift and go to state 221
    KEY_CONST       shift and go to state 8
    KEY_TYPE        shift and go to state 10
    KEY_VAR         shift and go to state 12
    KEY_PROCEDURE   reduce using rule 156 (empty -> .)

  ! KEY_BEGIN       [ reduce using rule 156 (empty -> .) ]
  ! KEY_CONST       [ reduce using rule 156 (empty -> .) ]
  ! KEY_TYPE        [ reduce using rule 156 (empty -> .) ]
  ! KEY_VAR         [ reduce using rule 156 (empty -> .) ]

    empty                          shift and go to state 7
    procss                         shift and go to state 11

state 166

    (108) procedureDeclaration -> procedureHeading SCOLON procedureBody . IDENT

    IDENT           shift and go to state 222


state 167

    (109) procedureHeading -> KEY_PROCEDURE IDENT formalParameters . COLON type
    (110) procedureHeading -> KEY_PROCEDURE IDENT formalParameters .

    COLON           shift and go to state 223
    SCOLON          reduce using rule 110 (procedureHeading -> KEY_PROCEDURE IDENT formalParameters .)


state 168

    (111) formalParameters -> LRB . FPSection formalss RRB
    (112) formalParameters -> LRB . RRB
    (115) FPSection -> . IDENT FPs COLON type

    RRB             shift and go to state 225
    IDENT           shift and go to state 224

    FPSection                      shift and go to state 226

state 169

    (11) varss -> varss variableDeclaration SCOLON .

    IDENT           reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_BEGIN       reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_CONST       reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_TYPE        reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_VAR         reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)
    KEY_PROCEDURE   reduce using rule 11 (varss -> varss variableDeclaration SCOLON .)


state 170

    (107) variableDeclaration -> identList COLON . type
    (82) type -> . IDENT
    (83) type -> . varType
    (84) type -> . arrayType
    (85) type -> . recordType
    (86) type -> . pointerType
    (87) varType -> . KEY_INTEGER
    (88) varType -> . KEY_BOOLEAN
    (89) varType -> . KEY_CHAR
    (90) varType -> . KEY_STRING
    (91) varType -> . KEY_REAL
    (92) varType -> . KEY_SET
    (93) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (97) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (98) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (106) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 211
    KEY_INTEGER     shift and go to state 216
    KEY_BOOLEAN     shift and go to state 214
    KEY_CHAR        shift and go to state 213
    KEY_STRING      shift and go to state 208
    KEY_REAL        shift and go to state 220
    KEY_SET         shift and go to state 209
    KEY_ARRAY       shift and go to state 217
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 210

    recordType                     shift and go to state 206
    pointerType                    shift and go to state 219
    type                           shift and go to state 227
    arrayType                      shift and go to state 207
    varType                        shift and go to state 218

state 171

    (104) identList -> identList COMMA . IDENT

    IDENT           shift and go to state 228


state 172

    (17) constantDeclaration -> IDENT ASSIGN expression .

    SCOLON          reduce using rule 17 (constantDeclaration -> IDENT ASSIGN expression .)


state 173

    (148) doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression .

    KEY_END         reduce using rule 148 (doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression .)
    SCOLON          reduce using rule 148 (doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression .)
    KEY_ELSE        reduce using rule 148 (doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression .)
    KEY_ELSEIF      reduce using rule 148 (doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression .)
    OR              reduce using rule 148 (doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression .)
    KEY_WHILE       reduce using rule 148 (doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression .)


state 174

    (22) simpleExpression -> MINUS term simpless .
    (23) simpless -> simpless . addOperator term
    (70) addOperator -> . PLUS
    (71) addOperator -> . MINUS
    (72) addOperator -> . OR

    EQUAL           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    NEQUAL          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    LT              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    LTEQ            reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    GT              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    GTEQ            reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_IN          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_IS          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_BEGIN       reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_END         reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    SCOLON          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_WHILE       reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_ELSE        reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_ELSEIF      reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    OR              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    COMMA           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_THEN        reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RCB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RRB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_EXIT        reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_RETURN      reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_BREAK       reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_CONTINUE    reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_IF          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_SWITCH      reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_FOR         reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_DO          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_WRITE       reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_WRITELN     reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_READ        reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_FCLOSE      reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_FPRINTF     reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_FREAD       reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    IDENT           reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    AT              reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    KEY_OF          reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    RSB             reduce using rule 22 (simpleExpression -> MINUS term simpless .)
    PLUS            shift and go to state 185
    MINUS           shift and go to state 183

  ! OR              [ shift and go to state 186 ]

    addOperator                    shift and go to state 184

state 175

    (20) simpleExpression -> PLUS term simpless .
    (23) simpless -> simpless . addOperator term
    (70) addOperator -> . PLUS
    (71) addOperator -> . MINUS
    (72) addOperator -> . OR

    EQUAL           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    NEQUAL          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    LT              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    LTEQ            reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    GT              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    GTEQ            reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_IN          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_IS          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_BEGIN       reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_END         reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    SCOLON          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_WHILE       reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_ELSE        reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_ELSEIF      reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    OR              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    COMMA           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_THEN        reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RCB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RRB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_EXIT        reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_RETURN      reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_BREAK       reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_CONTINUE    reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_IF          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_SWITCH      reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_FOR         reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_DO          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_WRITE       reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_WRITELN     reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_READ        reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_FCLOSE      reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_FPRINTF     reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_FREAD       reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    IDENT           reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    AT              reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    KEY_OF          reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    RSB             reduce using rule 20 (simpleExpression -> PLUS term simpless .)
    PLUS            shift and go to state 185
    MINUS           shift and go to state 183

  ! OR              [ shift and go to state 186 ]

    addOperator                    shift and go to state 184

state 176

    (67) mulOperator -> DIVIDE .

    KEY_NIL         reduce using rule 67 (mulOperator -> DIVIDE .)
    LRB             reduce using rule 67 (mulOperator -> DIVIDE .)
    NOT             reduce using rule 67 (mulOperator -> DIVIDE .)
    KEY_ABS         reduce using rule 67 (mulOperator -> DIVIDE .)
    KEY_CHR         reduce using rule 67 (mulOperator -> DIVIDE .)
    KEY_ORD         reduce using rule 67 (mulOperator -> DIVIDE .)
    KEY_INTEGER     reduce using rule 67 (mulOperator -> DIVIDE .)
    KEY_BOOLEAN     reduce using rule 67 (mulOperator -> DIVIDE .)
    KEY_CHAR        reduce using rule 67 (mulOperator -> DIVIDE .)
    KEY_STRING      reduce using rule 67 (mulOperator -> DIVIDE .)
    KEY_REAL        reduce using rule 67 (mulOperator -> DIVIDE .)
    KEY_SET         reduce using rule 67 (mulOperator -> DIVIDE .)
    VINTEGER        reduce using rule 67 (mulOperator -> DIVIDE .)
    VREAL           reduce using rule 67 (mulOperator -> DIVIDE .)
    VCHAR           reduce using rule 67 (mulOperator -> DIVIDE .)
    VSTRING         reduce using rule 67 (mulOperator -> DIVIDE .)
    LCB             reduce using rule 67 (mulOperator -> DIVIDE .)
    IDENT           reduce using rule 67 (mulOperator -> DIVIDE .)
    AT              reduce using rule 67 (mulOperator -> DIVIDE .)


state 177

    (26) termss -> termss mulOperator . factor
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    designator                     shift and go to state 74
    set                            shift and go to state 63
    factor                         shift and go to state 229
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    char                           shift and go to state 70

state 178

    (68) mulOperator -> MODULUS .

    KEY_NIL         reduce using rule 68 (mulOperator -> MODULUS .)
    LRB             reduce using rule 68 (mulOperator -> MODULUS .)
    NOT             reduce using rule 68 (mulOperator -> MODULUS .)
    KEY_ABS         reduce using rule 68 (mulOperator -> MODULUS .)
    KEY_CHR         reduce using rule 68 (mulOperator -> MODULUS .)
    KEY_ORD         reduce using rule 68 (mulOperator -> MODULUS .)
    KEY_INTEGER     reduce using rule 68 (mulOperator -> MODULUS .)
    KEY_BOOLEAN     reduce using rule 68 (mulOperator -> MODULUS .)
    KEY_CHAR        reduce using rule 68 (mulOperator -> MODULUS .)
    KEY_STRING      reduce using rule 68 (mulOperator -> MODULUS .)
    KEY_REAL        reduce using rule 68 (mulOperator -> MODULUS .)
    KEY_SET         reduce using rule 68 (mulOperator -> MODULUS .)
    VINTEGER        reduce using rule 68 (mulOperator -> MODULUS .)
    VREAL           reduce using rule 68 (mulOperator -> MODULUS .)
    VCHAR           reduce using rule 68 (mulOperator -> MODULUS .)
    VSTRING         reduce using rule 68 (mulOperator -> MODULUS .)
    LCB             reduce using rule 68 (mulOperator -> MODULUS .)
    IDENT           reduce using rule 68 (mulOperator -> MODULUS .)
    AT              reduce using rule 68 (mulOperator -> MODULUS .)


state 179

    (69) mulOperator -> AND .

    KEY_NIL         reduce using rule 69 (mulOperator -> AND .)
    LRB             reduce using rule 69 (mulOperator -> AND .)
    NOT             reduce using rule 69 (mulOperator -> AND .)
    KEY_ABS         reduce using rule 69 (mulOperator -> AND .)
    KEY_CHR         reduce using rule 69 (mulOperator -> AND .)
    KEY_ORD         reduce using rule 69 (mulOperator -> AND .)
    KEY_INTEGER     reduce using rule 69 (mulOperator -> AND .)
    KEY_BOOLEAN     reduce using rule 69 (mulOperator -> AND .)
    KEY_CHAR        reduce using rule 69 (mulOperator -> AND .)
    KEY_STRING      reduce using rule 69 (mulOperator -> AND .)
    KEY_REAL        reduce using rule 69 (mulOperator -> AND .)
    KEY_SET         reduce using rule 69 (mulOperator -> AND .)
    VINTEGER        reduce using rule 69 (mulOperator -> AND .)
    VREAL           reduce using rule 69 (mulOperator -> AND .)
    VCHAR           reduce using rule 69 (mulOperator -> AND .)
    VSTRING         reduce using rule 69 (mulOperator -> AND .)
    LCB             reduce using rule 69 (mulOperator -> AND .)
    IDENT           reduce using rule 69 (mulOperator -> AND .)
    AT              reduce using rule 69 (mulOperator -> AND .)


state 180

    (66) mulOperator -> MULTIPLY .

    KEY_NIL         reduce using rule 66 (mulOperator -> MULTIPLY .)
    LRB             reduce using rule 66 (mulOperator -> MULTIPLY .)
    NOT             reduce using rule 66 (mulOperator -> MULTIPLY .)
    KEY_ABS         reduce using rule 66 (mulOperator -> MULTIPLY .)
    KEY_CHR         reduce using rule 66 (mulOperator -> MULTIPLY .)
    KEY_ORD         reduce using rule 66 (mulOperator -> MULTIPLY .)
    KEY_INTEGER     reduce using rule 66 (mulOperator -> MULTIPLY .)
    KEY_BOOLEAN     reduce using rule 66 (mulOperator -> MULTIPLY .)
    KEY_CHAR        reduce using rule 66 (mulOperator -> MULTIPLY .)
    KEY_STRING      reduce using rule 66 (mulOperator -> MULTIPLY .)
    KEY_REAL        reduce using rule 66 (mulOperator -> MULTIPLY .)
    KEY_SET         reduce using rule 66 (mulOperator -> MULTIPLY .)
    VINTEGER        reduce using rule 66 (mulOperator -> MULTIPLY .)
    VREAL           reduce using rule 66 (mulOperator -> MULTIPLY .)
    VCHAR           reduce using rule 66 (mulOperator -> MULTIPLY .)
    VSTRING         reduce using rule 66 (mulOperator -> MULTIPLY .)
    LCB             reduce using rule 66 (mulOperator -> MULTIPLY .)
    IDENT           reduce using rule 66 (mulOperator -> MULTIPLY .)
    AT              reduce using rule 66 (mulOperator -> MULTIPLY .)


state 181

    (35) factor -> LRB expression RRB .

    MULTIPLY        reduce using rule 35 (factor -> LRB expression RRB .)
    DIVIDE          reduce using rule 35 (factor -> LRB expression RRB .)
    MODULUS         reduce using rule 35 (factor -> LRB expression RRB .)
    AND             reduce using rule 35 (factor -> LRB expression RRB .)
    PLUS            reduce using rule 35 (factor -> LRB expression RRB .)
    MINUS           reduce using rule 35 (factor -> LRB expression RRB .)
    OR              reduce using rule 35 (factor -> LRB expression RRB .)
    EQUAL           reduce using rule 35 (factor -> LRB expression RRB .)
    NEQUAL          reduce using rule 35 (factor -> LRB expression RRB .)
    LT              reduce using rule 35 (factor -> LRB expression RRB .)
    LTEQ            reduce using rule 35 (factor -> LRB expression RRB .)
    GT              reduce using rule 35 (factor -> LRB expression RRB .)
    GTEQ            reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_IN          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_IS          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_OF          reduce using rule 35 (factor -> LRB expression RRB .)
    COMMA           reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_EXIT        reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_RETURN      reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_BREAK       reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_CONTINUE    reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_IF          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_SWITCH      reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_WHILE       reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_FOR         reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_DO          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_WRITE       reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_WRITELN     reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_READ        reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_FCLOSE      reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_FPRINTF     reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_FREAD       reduce using rule 35 (factor -> LRB expression RRB .)
    IDENT           reduce using rule 35 (factor -> LRB expression RRB .)
    AT              reduce using rule 35 (factor -> LRB expression RRB .)
    SCOLON          reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_ELSE        reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_END         reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_ELSEIF      reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_BEGIN       reduce using rule 35 (factor -> LRB expression RRB .)
    KEY_THEN        reduce using rule 35 (factor -> LRB expression RRB .)
    RRB             reduce using rule 35 (factor -> LRB expression RRB .)
    RSB             reduce using rule 35 (factor -> LRB expression RRB .)
    RCB             reduce using rule 35 (factor -> LRB expression RRB .)


state 182

    (50) set -> LCB element COMMA . element RCB
    (52) element -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    term                           shift and go to state 80
    expression                     shift and go to state 126
    set                            shift and go to state 63
    simpleExpression               shift and go to state 85
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    element                        shift and go to state 230
    char                           shift and go to state 70

state 183

    (71) addOperator -> MINUS .

    KEY_NIL         reduce using rule 71 (addOperator -> MINUS .)
    LRB             reduce using rule 71 (addOperator -> MINUS .)
    NOT             reduce using rule 71 (addOperator -> MINUS .)
    KEY_ABS         reduce using rule 71 (addOperator -> MINUS .)
    KEY_CHR         reduce using rule 71 (addOperator -> MINUS .)
    KEY_ORD         reduce using rule 71 (addOperator -> MINUS .)
    KEY_INTEGER     reduce using rule 71 (addOperator -> MINUS .)
    KEY_BOOLEAN     reduce using rule 71 (addOperator -> MINUS .)
    KEY_CHAR        reduce using rule 71 (addOperator -> MINUS .)
    KEY_STRING      reduce using rule 71 (addOperator -> MINUS .)
    KEY_REAL        reduce using rule 71 (addOperator -> MINUS .)
    KEY_SET         reduce using rule 71 (addOperator -> MINUS .)
    VINTEGER        reduce using rule 71 (addOperator -> MINUS .)
    VREAL           reduce using rule 71 (addOperator -> MINUS .)
    VCHAR           reduce using rule 71 (addOperator -> MINUS .)
    VSTRING         reduce using rule 71 (addOperator -> MINUS .)
    LCB             reduce using rule 71 (addOperator -> MINUS .)
    IDENT           reduce using rule 71 (addOperator -> MINUS .)
    AT              reduce using rule 71 (addOperator -> MINUS .)


state 184

    (23) simpless -> simpless addOperator . term
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    term                           shift and go to state 231
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    identdef                       shift and go to state 79
    string                         shift and go to state 68
    char                           shift and go to state 70

state 185

    (70) addOperator -> PLUS .

    KEY_NIL         reduce using rule 70 (addOperator -> PLUS .)
    LRB             reduce using rule 70 (addOperator -> PLUS .)
    NOT             reduce using rule 70 (addOperator -> PLUS .)
    KEY_ABS         reduce using rule 70 (addOperator -> PLUS .)
    KEY_CHR         reduce using rule 70 (addOperator -> PLUS .)
    KEY_ORD         reduce using rule 70 (addOperator -> PLUS .)
    KEY_INTEGER     reduce using rule 70 (addOperator -> PLUS .)
    KEY_BOOLEAN     reduce using rule 70 (addOperator -> PLUS .)
    KEY_CHAR        reduce using rule 70 (addOperator -> PLUS .)
    KEY_STRING      reduce using rule 70 (addOperator -> PLUS .)
    KEY_REAL        reduce using rule 70 (addOperator -> PLUS .)
    KEY_SET         reduce using rule 70 (addOperator -> PLUS .)
    VINTEGER        reduce using rule 70 (addOperator -> PLUS .)
    VREAL           reduce using rule 70 (addOperator -> PLUS .)
    VCHAR           reduce using rule 70 (addOperator -> PLUS .)
    VSTRING         reduce using rule 70 (addOperator -> PLUS .)
    LCB             reduce using rule 70 (addOperator -> PLUS .)
    IDENT           reduce using rule 70 (addOperator -> PLUS .)
    AT              reduce using rule 70 (addOperator -> PLUS .)


state 186

    (72) addOperator -> OR .

    KEY_NIL         reduce using rule 72 (addOperator -> OR .)
    LRB             reduce using rule 72 (addOperator -> OR .)
    NOT             reduce using rule 72 (addOperator -> OR .)
    KEY_ABS         reduce using rule 72 (addOperator -> OR .)
    KEY_CHR         reduce using rule 72 (addOperator -> OR .)
    KEY_ORD         reduce using rule 72 (addOperator -> OR .)
    KEY_INTEGER     reduce using rule 72 (addOperator -> OR .)
    KEY_BOOLEAN     reduce using rule 72 (addOperator -> OR .)
    KEY_CHAR        reduce using rule 72 (addOperator -> OR .)
    KEY_STRING      reduce using rule 72 (addOperator -> OR .)
    KEY_REAL        reduce using rule 72 (addOperator -> OR .)
    KEY_SET         reduce using rule 72 (addOperator -> OR .)
    VINTEGER        reduce using rule 72 (addOperator -> OR .)
    VREAL           reduce using rule 72 (addOperator -> OR .)
    VCHAR           reduce using rule 72 (addOperator -> OR .)
    VSTRING         reduce using rule 72 (addOperator -> OR .)
    LCB             reduce using rule 72 (addOperator -> OR .)
    IDENT           reduce using rule 72 (addOperator -> OR .)
    AT              reduce using rule 72 (addOperator -> OR .)


state 187

    (19) expression -> simpleExpression relation simpleExpression .

    SCOLON          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_OF          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    COMMA           reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_END         reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_WHILE       reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_ELSE        reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_ELSEIF      reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    OR              reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RRB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RSB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_THEN        reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_BEGIN       reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_EXIT        reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_RETURN      reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_BREAK       reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_CONTINUE    reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_IF          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_SWITCH      reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_FOR         reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_DO          reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_WRITE       reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_WRITELN     reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_READ        reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_FCLOSE      reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_FPRINTF     reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    KEY_FREAD       reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    IDENT           reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    AT              reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)
    RCB             reduce using rule 19 (expression -> simpleExpression relation simpleExpression .)


state 188

    (1) module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT .

    $end            reduce using rule 1 (module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT .)


state 189

    (57) designator2 -> designator LRB qualident . RRB

    RRB             shift and go to state 232


state 190

    (55) designator2 -> designator2 DOT identdef .

    DOT             reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    LSB             reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    ASSIGN          reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    LRB             reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_END         reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    SCOLON          reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_WHILE       reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    MULTIPLY        reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    DIVIDE          reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    MODULUS         reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    AND             reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    PLUS            reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    MINUS           reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    OR              reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    EQUAL           reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    NEQUAL          reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    LT              reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    LTEQ            reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    GT              reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    GTEQ            reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_IN          reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_IS          reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_ELSE        reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_ELSEIF      reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_BEGIN       reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_THEN        reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    RRB             reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    COMMA           reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    RSB             reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    RCB             reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_OF          reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_EXIT        reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_RETURN      reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_BREAK       reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_CONTINUE    reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_IF          reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_SWITCH      reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_FOR         reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_DO          reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_WRITE       reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_WRITELN     reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_READ        reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_FCLOSE      reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_FPRINTF     reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    KEY_FREAD       reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    IDENT           reduce using rule 55 (designator2 -> designator2 DOT identdef .)
    AT              reduce using rule 55 (designator2 -> designator2 DOT identdef .)


state 191

    (56) designator2 -> designator2 LSB expList . RSB
    (62) expList -> expList . COMMA expression

    RSB             shift and go to state 233
    COMMA           shift and go to state 200


state 192

    (155) fileStatement -> KEY_FREAD LRB identdef COMMA . identdef COMMA VINTEGER RRB
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    identdef                       shift and go to state 234

state 193

    (145) case -> KEY_CASE . COLON expression statementSequence

    COLON           shift and go to state 235


state 194

    (141) switchStatement -> KEY_SWITCH expression KEY_BEGIN case . casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> KEY_SWITCH expression KEY_BEGIN case . casess KEY_END
    (143) casess -> . casess OR case
    (144) casess -> . empty
    (156) empty -> .

    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_END         reduce using rule 156 (empty -> .)
    OR              reduce using rule 156 (empty -> .)

    empty                          shift and go to state 236
    casess                         shift and go to state 237

state 195

    (149) ioStatement -> KEY_WRITE LRB expression RRB .

    KEY_END         reduce using rule 149 (ioStatement -> KEY_WRITE LRB expression RRB .)
    SCOLON          reduce using rule 149 (ioStatement -> KEY_WRITE LRB expression RRB .)
    KEY_WHILE       reduce using rule 149 (ioStatement -> KEY_WRITE LRB expression RRB .)
    KEY_ELSE        reduce using rule 149 (ioStatement -> KEY_WRITE LRB expression RRB .)
    KEY_ELSEIF      reduce using rule 149 (ioStatement -> KEY_WRITE LRB expression RRB .)
    OR              reduce using rule 149 (ioStatement -> KEY_WRITE LRB expression RRB .)


state 196

    (137) ifStatement -> KEY_IF expression KEY_THEN statementSequence . ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> KEY_IF expression KEY_THEN statementSequence . ifss KEY_END
    (15) statementSequence -> statementSequence . SCOLON statement
    (139) ifss -> . ifss KEY_ELSEIF expression KEY_THEN statementSequence
    (140) ifss -> . empty
    (156) empty -> .

    SCOLON          shift and go to state 86
    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_END         reduce using rule 156 (empty -> .)
    KEY_ELSEIF      reduce using rule 156 (empty -> .)

    ifss                           shift and go to state 239
    empty                          shift and go to state 238

state 197

    (151) ioStatement -> KEY_READ LRB expression RRB .

    KEY_END         reduce using rule 151 (ioStatement -> KEY_READ LRB expression RRB .)
    SCOLON          reduce using rule 151 (ioStatement -> KEY_READ LRB expression RRB .)
    KEY_WHILE       reduce using rule 151 (ioStatement -> KEY_READ LRB expression RRB .)
    KEY_ELSE        reduce using rule 151 (ioStatement -> KEY_READ LRB expression RRB .)
    KEY_ELSEIF      reduce using rule 151 (ioStatement -> KEY_READ LRB expression RRB .)
    OR              reduce using rule 151 (ioStatement -> KEY_READ LRB expression RRB .)


state 198

    (146) whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . SCOLON statement

    KEY_END         shift and go to state 240
    SCOLON          shift and go to state 86


state 199

    (64) actualParameters -> LRB expList RRB .

    MULTIPLY        reduce using rule 64 (actualParameters -> LRB expList RRB .)
    DIVIDE          reduce using rule 64 (actualParameters -> LRB expList RRB .)
    MODULUS         reduce using rule 64 (actualParameters -> LRB expList RRB .)
    AND             reduce using rule 64 (actualParameters -> LRB expList RRB .)
    PLUS            reduce using rule 64 (actualParameters -> LRB expList RRB .)
    MINUS           reduce using rule 64 (actualParameters -> LRB expList RRB .)
    OR              reduce using rule 64 (actualParameters -> LRB expList RRB .)
    EQUAL           reduce using rule 64 (actualParameters -> LRB expList RRB .)
    NEQUAL          reduce using rule 64 (actualParameters -> LRB expList RRB .)
    LT              reduce using rule 64 (actualParameters -> LRB expList RRB .)
    LTEQ            reduce using rule 64 (actualParameters -> LRB expList RRB .)
    GT              reduce using rule 64 (actualParameters -> LRB expList RRB .)
    GTEQ            reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_IN          reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_IS          reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_END         reduce using rule 64 (actualParameters -> LRB expList RRB .)
    SCOLON          reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_WHILE       reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_ELSE        reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_ELSEIF      reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_BEGIN       reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_THEN        reduce using rule 64 (actualParameters -> LRB expList RRB .)
    RRB             reduce using rule 64 (actualParameters -> LRB expList RRB .)
    COMMA           reduce using rule 64 (actualParameters -> LRB expList RRB .)
    RSB             reduce using rule 64 (actualParameters -> LRB expList RRB .)
    RCB             reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_OF          reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_EXIT        reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_RETURN      reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_BREAK       reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_CONTINUE    reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_IF          reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_SWITCH      reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_FOR         reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_DO          reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_WRITE       reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_WRITELN     reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_READ        reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_FCLOSE      reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_FPRINTF     reduce using rule 64 (actualParameters -> LRB expList RRB .)
    KEY_FREAD       reduce using rule 64 (actualParameters -> LRB expList RRB .)
    IDENT           reduce using rule 64 (actualParameters -> LRB expList RRB .)
    AT              reduce using rule 64 (actualParameters -> LRB expList RRB .)


state 200

    (62) expList -> expList COMMA . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 241
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 201

    (154) fileStatement -> KEY_FPRINTF LRB identdef COMMA . string RRB
    (49) string -> . VSTRING

    VSTRING         shift and go to state 62

    string                         shift and go to state 242

state 202

    (150) ioStatement -> KEY_WRITELN LRB expression RRB .

    KEY_END         reduce using rule 150 (ioStatement -> KEY_WRITELN LRB expression RRB .)
    SCOLON          reduce using rule 150 (ioStatement -> KEY_WRITELN LRB expression RRB .)
    KEY_WHILE       reduce using rule 150 (ioStatement -> KEY_WRITELN LRB expression RRB .)
    KEY_ELSE        reduce using rule 150 (ioStatement -> KEY_WRITELN LRB expression RRB .)
    KEY_ELSEIF      reduce using rule 150 (ioStatement -> KEY_WRITELN LRB expression RRB .)
    OR              reduce using rule 150 (ioStatement -> KEY_WRITELN LRB expression RRB .)


state 203

    (147) forStatement -> KEY_FOR LRB assignment SCOLON . expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 243
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 204

    (152) fileStatement -> identdef EQUAL KEY_FOPEN LRB . string COMMA char RRB
    (49) string -> . VSTRING

    VSTRING         shift and go to state 62

    string                         shift and go to state 244

state 205

    (153) fileStatement -> KEY_FCLOSE LRB identdef RRB .

    KEY_END         reduce using rule 153 (fileStatement -> KEY_FCLOSE LRB identdef RRB .)
    SCOLON          reduce using rule 153 (fileStatement -> KEY_FCLOSE LRB identdef RRB .)
    KEY_ELSE        reduce using rule 153 (fileStatement -> KEY_FCLOSE LRB identdef RRB .)
    OR              reduce using rule 153 (fileStatement -> KEY_FCLOSE LRB identdef RRB .)
    KEY_ELSEIF      reduce using rule 153 (fileStatement -> KEY_FCLOSE LRB identdef RRB .)
    KEY_WHILE       reduce using rule 153 (fileStatement -> KEY_FCLOSE LRB identdef RRB .)


state 206

    (85) type -> recordType .

    SCOLON          reduce using rule 85 (type -> recordType .)
    KEY_END         reduce using rule 85 (type -> recordType .)
    RRB             reduce using rule 85 (type -> recordType .)


state 207

    (84) type -> arrayType .

    SCOLON          reduce using rule 84 (type -> arrayType .)
    KEY_END         reduce using rule 84 (type -> arrayType .)
    RRB             reduce using rule 84 (type -> arrayType .)


state 208

    (90) varType -> KEY_STRING .

    SCOLON          reduce using rule 90 (varType -> KEY_STRING .)
    KEY_END         reduce using rule 90 (varType -> KEY_STRING .)
    RRB             reduce using rule 90 (varType -> KEY_STRING .)


state 209

    (92) varType -> KEY_SET .

    SCOLON          reduce using rule 92 (varType -> KEY_SET .)
    KEY_END         reduce using rule 92 (varType -> KEY_SET .)
    RRB             reduce using rule 92 (varType -> KEY_SET .)


state 210

    (106) pointerType -> KEY_POINTER . KEY_TO type

    KEY_TO          shift and go to state 245


state 211

    (82) type -> IDENT .

    SCOLON          reduce using rule 82 (type -> IDENT .)
    KEY_END         reduce using rule 82 (type -> IDENT .)
    RRB             reduce using rule 82 (type -> IDENT .)


state 212

    (81) typeDeclaration -> IDENT EQUAL type .

    SCOLON          reduce using rule 81 (typeDeclaration -> IDENT EQUAL type .)


state 213

    (89) varType -> KEY_CHAR .

    SCOLON          reduce using rule 89 (varType -> KEY_CHAR .)
    KEY_END         reduce using rule 89 (varType -> KEY_CHAR .)
    RRB             reduce using rule 89 (varType -> KEY_CHAR .)


state 214

    (88) varType -> KEY_BOOLEAN .

    SCOLON          reduce using rule 88 (varType -> KEY_BOOLEAN .)
    KEY_END         reduce using rule 88 (varType -> KEY_BOOLEAN .)
    RRB             reduce using rule 88 (varType -> KEY_BOOLEAN .)


state 215

    (97) recordType -> KEY_RECORD . fieldListSequence KEY_END
    (98) recordType -> KEY_RECORD . LRB baseType RRB fieldListSequence KEY_END
    (100) fieldListSequence -> . fieldListSequence SCOLON fieldList
    (101) fieldListSequence -> . fieldList
    (102) fieldList -> . identList COLON type
    (103) fieldList -> . empty
    (104) identList -> . identList COMMA IDENT
    (105) identList -> . IDENT
    (156) empty -> .

    LRB             shift and go to state 250
    IDENT           shift and go to state 112
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)

    empty                          shift and go to state 246
    fieldListSequence              shift and go to state 249
    identList                      shift and go to state 247
    fieldList                      shift and go to state 248

state 216

    (87) varType -> KEY_INTEGER .

    SCOLON          reduce using rule 87 (varType -> KEY_INTEGER .)
    KEY_END         reduce using rule 87 (varType -> KEY_INTEGER .)
    RRB             reduce using rule 87 (varType -> KEY_INTEGER .)


state 217

    (93) arrayType -> KEY_ARRAY . length comass KEY_OF type
    (96) length -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 252
    term                           shift and go to state 80
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    identdef                       shift and go to state 79
    char                           shift and go to state 70
    length                         shift and go to state 251
    simpleExpression               shift and go to state 85

state 218

    (83) type -> varType .

    SCOLON          reduce using rule 83 (type -> varType .)
    KEY_END         reduce using rule 83 (type -> varType .)
    RRB             reduce using rule 83 (type -> varType .)


state 219

    (86) type -> pointerType .

    SCOLON          reduce using rule 86 (type -> pointerType .)
    KEY_END         reduce using rule 86 (type -> pointerType .)
    RRB             reduce using rule 86 (type -> pointerType .)


state 220

    (91) varType -> KEY_REAL .

    SCOLON          reduce using rule 91 (varType -> KEY_REAL .)
    KEY_END         reduce using rule 91 (varType -> KEY_REAL .)
    RRB             reduce using rule 91 (varType -> KEY_REAL .)


state 221

    (118) procedureBody -> declarationSequence KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    empty                          shift and go to state 15
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    qualident                      shift and go to state 22
    statementSequence              shift and go to state 253
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 222

    (108) procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT .

    SCOLON          reduce using rule 108 (procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT .)


state 223

    (109) procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON . type
    (82) type -> . IDENT
    (83) type -> . varType
    (84) type -> . arrayType
    (85) type -> . recordType
    (86) type -> . pointerType
    (87) varType -> . KEY_INTEGER
    (88) varType -> . KEY_BOOLEAN
    (89) varType -> . KEY_CHAR
    (90) varType -> . KEY_STRING
    (91) varType -> . KEY_REAL
    (92) varType -> . KEY_SET
    (93) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (97) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (98) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (106) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 211
    KEY_INTEGER     shift and go to state 216
    KEY_BOOLEAN     shift and go to state 214
    KEY_CHAR        shift and go to state 213
    KEY_STRING      shift and go to state 208
    KEY_REAL        shift and go to state 220
    KEY_SET         shift and go to state 209
    KEY_ARRAY       shift and go to state 217
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 210

    recordType                     shift and go to state 206
    pointerType                    shift and go to state 219
    type                           shift and go to state 254
    arrayType                      shift and go to state 207
    varType                        shift and go to state 218

state 224

    (115) FPSection -> IDENT . FPs COLON type
    (116) FPs -> . FPs COMMA IDENT
    (117) FPs -> . empty
    (156) empty -> .

    COLON           reduce using rule 156 (empty -> .)
    COMMA           reduce using rule 156 (empty -> .)

    empty                          shift and go to state 255
    FPs                            shift and go to state 256

state 225

    (112) formalParameters -> LRB RRB .

    COLON           reduce using rule 112 (formalParameters -> LRB RRB .)
    SCOLON          reduce using rule 112 (formalParameters -> LRB RRB .)


state 226

    (111) formalParameters -> LRB FPSection . formalss RRB
    (113) formalss -> . formalss SCOLON FPSection
    (114) formalss -> . empty
    (156) empty -> .

    RRB             reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)

    empty                          shift and go to state 257
    formalss                       shift and go to state 258

state 227

    (107) variableDeclaration -> identList COLON type .

    SCOLON          reduce using rule 107 (variableDeclaration -> identList COLON type .)


state 228

    (104) identList -> identList COMMA IDENT .

    COLON           reduce using rule 104 (identList -> identList COMMA IDENT .)
    COMMA           reduce using rule 104 (identList -> identList COMMA IDENT .)


state 229

    (26) termss -> termss mulOperator factor .

    MULTIPLY        reduce using rule 26 (termss -> termss mulOperator factor .)
    DIVIDE          reduce using rule 26 (termss -> termss mulOperator factor .)
    MODULUS         reduce using rule 26 (termss -> termss mulOperator factor .)
    AND             reduce using rule 26 (termss -> termss mulOperator factor .)
    PLUS            reduce using rule 26 (termss -> termss mulOperator factor .)
    MINUS           reduce using rule 26 (termss -> termss mulOperator factor .)
    OR              reduce using rule 26 (termss -> termss mulOperator factor .)
    EQUAL           reduce using rule 26 (termss -> termss mulOperator factor .)
    NEQUAL          reduce using rule 26 (termss -> termss mulOperator factor .)
    LT              reduce using rule 26 (termss -> termss mulOperator factor .)
    LTEQ            reduce using rule 26 (termss -> termss mulOperator factor .)
    GT              reduce using rule 26 (termss -> termss mulOperator factor .)
    GTEQ            reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_IN          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_IS          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_END         reduce using rule 26 (termss -> termss mulOperator factor .)
    SCOLON          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_WHILE       reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_ELSE        reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_ELSEIF      reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_BEGIN       reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_THEN        reduce using rule 26 (termss -> termss mulOperator factor .)
    RRB             reduce using rule 26 (termss -> termss mulOperator factor .)
    COMMA           reduce using rule 26 (termss -> termss mulOperator factor .)
    RSB             reduce using rule 26 (termss -> termss mulOperator factor .)
    RCB             reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_OF          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_EXIT        reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_RETURN      reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_BREAK       reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_CONTINUE    reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_IF          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_SWITCH      reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_FOR         reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_DO          reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_WRITE       reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_WRITELN     reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_READ        reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_FCLOSE      reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_FPRINTF     reduce using rule 26 (termss -> termss mulOperator factor .)
    KEY_FREAD       reduce using rule 26 (termss -> termss mulOperator factor .)
    IDENT           reduce using rule 26 (termss -> termss mulOperator factor .)
    AT              reduce using rule 26 (termss -> termss mulOperator factor .)


state 230

    (50) set -> LCB element COMMA element . RCB

    RCB             shift and go to state 259


state 231

    (23) simpless -> simpless addOperator term .

    PLUS            reduce using rule 23 (simpless -> simpless addOperator term .)
    MINUS           reduce using rule 23 (simpless -> simpless addOperator term .)
    OR              reduce using rule 23 (simpless -> simpless addOperator term .)
    EQUAL           reduce using rule 23 (simpless -> simpless addOperator term .)
    NEQUAL          reduce using rule 23 (simpless -> simpless addOperator term .)
    LT              reduce using rule 23 (simpless -> simpless addOperator term .)
    LTEQ            reduce using rule 23 (simpless -> simpless addOperator term .)
    GT              reduce using rule 23 (simpless -> simpless addOperator term .)
    GTEQ            reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_IN          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_IS          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_END         reduce using rule 23 (simpless -> simpless addOperator term .)
    SCOLON          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_WHILE       reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_ELSE        reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_ELSEIF      reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_BEGIN       reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_THEN        reduce using rule 23 (simpless -> simpless addOperator term .)
    RRB             reduce using rule 23 (simpless -> simpless addOperator term .)
    COMMA           reduce using rule 23 (simpless -> simpless addOperator term .)
    RSB             reduce using rule 23 (simpless -> simpless addOperator term .)
    RCB             reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_OF          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_EXIT        reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_RETURN      reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_BREAK       reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_CONTINUE    reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_IF          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_SWITCH      reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_FOR         reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_DO          reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_WRITE       reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_WRITELN     reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_READ        reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_FCLOSE      reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_FPRINTF     reduce using rule 23 (simpless -> simpless addOperator term .)
    KEY_FREAD       reduce using rule 23 (simpless -> simpless addOperator term .)
    IDENT           reduce using rule 23 (simpless -> simpless addOperator term .)
    AT              reduce using rule 23 (simpless -> simpless addOperator term .)


state 232

    (57) designator2 -> designator LRB qualident RRB .

    DOT             reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    LSB             reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    ASSIGN          reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    LRB             reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_END         reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    SCOLON          reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_WHILE       reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    MULTIPLY        reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    DIVIDE          reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    MODULUS         reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    AND             reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    PLUS            reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    MINUS           reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    OR              reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    EQUAL           reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    NEQUAL          reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    LT              reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    LTEQ            reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    GT              reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    GTEQ            reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_IN          reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_IS          reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_ELSE        reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_ELSEIF      reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_BEGIN       reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_THEN        reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    RRB             reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    COMMA           reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    RSB             reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    RCB             reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_OF          reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_EXIT        reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_RETURN      reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_BREAK       reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_CONTINUE    reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_IF          reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_SWITCH      reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_FOR         reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_DO          reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_WRITE       reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_WRITELN     reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_READ        reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_FCLOSE      reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_FPRINTF     reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    KEY_FREAD       reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    IDENT           reduce using rule 57 (designator2 -> designator LRB qualident RRB .)
    AT              reduce using rule 57 (designator2 -> designator LRB qualident RRB .)


state 233

    (56) designator2 -> designator2 LSB expList RSB .

    DOT             reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    LSB             reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    ASSIGN          reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    LRB             reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_END         reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    SCOLON          reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_WHILE       reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    MULTIPLY        reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    DIVIDE          reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    MODULUS         reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    AND             reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    PLUS            reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    MINUS           reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    OR              reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    EQUAL           reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    NEQUAL          reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    LT              reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    LTEQ            reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    GT              reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    GTEQ            reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_IN          reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_IS          reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_ELSE        reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_ELSEIF      reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_BEGIN       reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_THEN        reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    RRB             reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    COMMA           reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    RSB             reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    RCB             reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_OF          reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_EXIT        reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_RETURN      reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_BREAK       reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_CONTINUE    reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_IF          reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_SWITCH      reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_FOR         reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_DO          reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_WRITE       reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_WRITELN     reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_READ        reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_FCLOSE      reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_FPRINTF     reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    KEY_FREAD       reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    IDENT           reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)
    AT              reduce using rule 56 (designator2 -> designator2 LSB expList RSB .)


state 234

    (155) fileStatement -> KEY_FREAD LRB identdef COMMA identdef . COMMA VINTEGER RRB

    COMMA           shift and go to state 260


state 235

    (145) case -> KEY_CASE COLON . expression statementSequence
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 261
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 236

    (144) casess -> empty .

    KEY_ELSE        reduce using rule 144 (casess -> empty .)
    KEY_END         reduce using rule 144 (casess -> empty .)
    OR              reduce using rule 144 (casess -> empty .)


state 237

    (141) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess . KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess . KEY_END
    (143) casess -> casess . OR case

    KEY_ELSE        shift and go to state 263
    KEY_END         shift and go to state 262
    OR              shift and go to state 264


state 238

    (140) ifss -> empty .

    KEY_ELSE        reduce using rule 140 (ifss -> empty .)
    KEY_END         reduce using rule 140 (ifss -> empty .)
    KEY_ELSEIF      reduce using rule 140 (ifss -> empty .)


state 239

    (137) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss . KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss . KEY_END
    (139) ifss -> ifss . KEY_ELSEIF expression KEY_THEN statementSequence

    KEY_ELSE        shift and go to state 267
    KEY_END         shift and go to state 265
    KEY_ELSEIF      shift and go to state 266


state 240

    (146) whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .

    KEY_END         reduce using rule 146 (whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .)
    SCOLON          reduce using rule 146 (whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .)
    KEY_ELSE        reduce using rule 146 (whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .)
    OR              reduce using rule 146 (whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .)
    KEY_WHILE       reduce using rule 146 (whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .)
    KEY_ELSEIF      reduce using rule 146 (whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END .)


state 241

    (62) expList -> expList COMMA expression .

    RSB             reduce using rule 62 (expList -> expList COMMA expression .)
    COMMA           reduce using rule 62 (expList -> expList COMMA expression .)
    RRB             reduce using rule 62 (expList -> expList COMMA expression .)


state 242

    (154) fileStatement -> KEY_FPRINTF LRB identdef COMMA string . RRB

    RRB             shift and go to state 268


state 243

    (147) forStatement -> KEY_FOR LRB assignment SCOLON expression . SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END

    SCOLON          shift and go to state 269


state 244

    (152) fileStatement -> identdef EQUAL KEY_FOPEN LRB string . COMMA char RRB

    COMMA           shift and go to state 270


state 245

    (106) pointerType -> KEY_POINTER KEY_TO . type
    (82) type -> . IDENT
    (83) type -> . varType
    (84) type -> . arrayType
    (85) type -> . recordType
    (86) type -> . pointerType
    (87) varType -> . KEY_INTEGER
    (88) varType -> . KEY_BOOLEAN
    (89) varType -> . KEY_CHAR
    (90) varType -> . KEY_STRING
    (91) varType -> . KEY_REAL
    (92) varType -> . KEY_SET
    (93) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (97) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (98) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (106) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 211
    KEY_INTEGER     shift and go to state 216
    KEY_BOOLEAN     shift and go to state 214
    KEY_CHAR        shift and go to state 213
    KEY_STRING      shift and go to state 208
    KEY_REAL        shift and go to state 220
    KEY_SET         shift and go to state 209
    KEY_ARRAY       shift and go to state 217
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 210

    recordType                     shift and go to state 206
    pointerType                    shift and go to state 219
    type                           shift and go to state 271
    arrayType                      shift and go to state 207
    varType                        shift and go to state 218

state 246

    (103) fieldList -> empty .

    KEY_END         reduce using rule 103 (fieldList -> empty .)
    SCOLON          reduce using rule 103 (fieldList -> empty .)


state 247

    (102) fieldList -> identList . COLON type
    (104) identList -> identList . COMMA IDENT

    COLON           shift and go to state 272
    COMMA           shift and go to state 171


state 248

    (101) fieldListSequence -> fieldList .

    KEY_END         reduce using rule 101 (fieldListSequence -> fieldList .)
    SCOLON          reduce using rule 101 (fieldListSequence -> fieldList .)


state 249

    (97) recordType -> KEY_RECORD fieldListSequence . KEY_END
    (100) fieldListSequence -> fieldListSequence . SCOLON fieldList

    KEY_END         shift and go to state 274
    SCOLON          shift and go to state 273


state 250

    (98) recordType -> KEY_RECORD LRB . baseType RRB fieldListSequence KEY_END
    (99) baseType -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    baseType                       shift and go to state 275
    qualident                      shift and go to state 276
    identdef                       shift and go to state 79

state 251

    (93) arrayType -> KEY_ARRAY length . comass KEY_OF type
    (94) comass -> . comass COMMA length
    (95) comass -> . empty
    (156) empty -> .

    KEY_OF          reduce using rule 156 (empty -> .)
    COMMA           reduce using rule 156 (empty -> .)

    empty                          shift and go to state 277
    comass                         shift and go to state 278

state 252

    (96) length -> expression .

    KEY_OF          reduce using rule 96 (length -> expression .)
    COMMA           reduce using rule 96 (length -> expression .)


state 253

    (118) procedureBody -> declarationSequence KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . SCOLON statement

    KEY_END         shift and go to state 279
    SCOLON          shift and go to state 86


state 254

    (109) procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type .

    SCOLON          reduce using rule 109 (procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type .)


state 255

    (117) FPs -> empty .

    COLON           reduce using rule 117 (FPs -> empty .)
    COMMA           reduce using rule 117 (FPs -> empty .)


state 256

    (115) FPSection -> IDENT FPs . COLON type
    (116) FPs -> FPs . COMMA IDENT

    COLON           shift and go to state 281
    COMMA           shift and go to state 280


state 257

    (114) formalss -> empty .

    RRB             reduce using rule 114 (formalss -> empty .)
    SCOLON          reduce using rule 114 (formalss -> empty .)


state 258

    (111) formalParameters -> LRB FPSection formalss . RRB
    (113) formalss -> formalss . SCOLON FPSection

    RRB             shift and go to state 283
    SCOLON          shift and go to state 282


state 259

    (50) set -> LCB element COMMA element RCB .

    MULTIPLY        reduce using rule 50 (set -> LCB element COMMA element RCB .)
    DIVIDE          reduce using rule 50 (set -> LCB element COMMA element RCB .)
    MODULUS         reduce using rule 50 (set -> LCB element COMMA element RCB .)
    AND             reduce using rule 50 (set -> LCB element COMMA element RCB .)
    PLUS            reduce using rule 50 (set -> LCB element COMMA element RCB .)
    MINUS           reduce using rule 50 (set -> LCB element COMMA element RCB .)
    OR              reduce using rule 50 (set -> LCB element COMMA element RCB .)
    EQUAL           reduce using rule 50 (set -> LCB element COMMA element RCB .)
    NEQUAL          reduce using rule 50 (set -> LCB element COMMA element RCB .)
    LT              reduce using rule 50 (set -> LCB element COMMA element RCB .)
    LTEQ            reduce using rule 50 (set -> LCB element COMMA element RCB .)
    GT              reduce using rule 50 (set -> LCB element COMMA element RCB .)
    GTEQ            reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_IN          reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_IS          reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_END         reduce using rule 50 (set -> LCB element COMMA element RCB .)
    SCOLON          reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_WHILE       reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_ELSE        reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_ELSEIF      reduce using rule 50 (set -> LCB element COMMA element RCB .)
    RCB             reduce using rule 50 (set -> LCB element COMMA element RCB .)
    RRB             reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_BEGIN       reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_THEN        reduce using rule 50 (set -> LCB element COMMA element RCB .)
    COMMA           reduce using rule 50 (set -> LCB element COMMA element RCB .)
    RSB             reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_OF          reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_EXIT        reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_RETURN      reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_BREAK       reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_CONTINUE    reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_IF          reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_SWITCH      reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_FOR         reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_DO          reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_WRITE       reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_WRITELN     reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_READ        reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_FCLOSE      reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_FPRINTF     reduce using rule 50 (set -> LCB element COMMA element RCB .)
    KEY_FREAD       reduce using rule 50 (set -> LCB element COMMA element RCB .)
    IDENT           reduce using rule 50 (set -> LCB element COMMA element RCB .)
    AT              reduce using rule 50 (set -> LCB element COMMA element RCB .)


state 260

    (155) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA . VINTEGER RRB

    VINTEGER        shift and go to state 284


state 261

    (145) case -> KEY_CASE COLON expression . statementSequence
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    SCOLON          reduce using rule 156 (empty -> .)
    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_END         reduce using rule 156 (empty -> .)
    OR              reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    empty                          shift and go to state 15
    qualident                      shift and go to state 22
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    statementSequence              shift and go to state 285
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 262

    (142) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .

    KEY_END         reduce using rule 142 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .)
    SCOLON          reduce using rule 142 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .)
    KEY_WHILE       reduce using rule 142 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .)
    KEY_ELSE        reduce using rule 142 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .)
    KEY_ELSEIF      reduce using rule 142 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .)
    OR              reduce using rule 142 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END .)


state 263

    (141) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE . COLON statementSequence KEY_END

    COLON           shift and go to state 286


state 264

    (143) casess -> casess OR . case
    (145) case -> . KEY_CASE COLON expression statementSequence

    KEY_CASE        shift and go to state 193

    case                           shift and go to state 287

state 265

    (138) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .

    KEY_END         reduce using rule 138 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .)
    SCOLON          reduce using rule 138 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .)
    KEY_ELSE        reduce using rule 138 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .)
    KEY_ELSEIF      reduce using rule 138 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .)
    OR              reduce using rule 138 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .)
    KEY_WHILE       reduce using rule 138 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END .)


state 266

    (139) ifss -> ifss KEY_ELSEIF . expression KEY_THEN statementSequence
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 288
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    char                           shift and go to state 70

state 267

    (137) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE . statementSequence KEY_END
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    empty                          shift and go to state 15
    qualident                      shift and go to state 22
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    statementSequence              shift and go to state 289
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 268

    (154) fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .

    KEY_END         reduce using rule 154 (fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .)
    SCOLON          reduce using rule 154 (fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .)
    KEY_ELSE        reduce using rule 154 (fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .)
    OR              reduce using rule 154 (fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .)
    KEY_ELSEIF      reduce using rule 154 (fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .)
    KEY_WHILE       reduce using rule 154 (fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB .)


state 269

    (147) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON . assignment RRB KEY_BEGIN statementSequence KEY_END
    (134) assignment -> . designator ASSIGN expression
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    designator                     shift and go to state 158
    assignment                     shift and go to state 290
    identdef                       shift and go to state 79

state 270

    (152) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA . char RRB
    (48) char -> . VCHAR

    VCHAR           shift and go to state 65

    char                           shift and go to state 291

state 271

    (106) pointerType -> KEY_POINTER KEY_TO type .

    KEY_END         reduce using rule 106 (pointerType -> KEY_POINTER KEY_TO type .)
    SCOLON          reduce using rule 106 (pointerType -> KEY_POINTER KEY_TO type .)
    RRB             reduce using rule 106 (pointerType -> KEY_POINTER KEY_TO type .)


state 272

    (102) fieldList -> identList COLON . type
    (82) type -> . IDENT
    (83) type -> . varType
    (84) type -> . arrayType
    (85) type -> . recordType
    (86) type -> . pointerType
    (87) varType -> . KEY_INTEGER
    (88) varType -> . KEY_BOOLEAN
    (89) varType -> . KEY_CHAR
    (90) varType -> . KEY_STRING
    (91) varType -> . KEY_REAL
    (92) varType -> . KEY_SET
    (93) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (97) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (98) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (106) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 211
    KEY_INTEGER     shift and go to state 216
    KEY_BOOLEAN     shift and go to state 214
    KEY_CHAR        shift and go to state 213
    KEY_STRING      shift and go to state 208
    KEY_REAL        shift and go to state 220
    KEY_SET         shift and go to state 209
    KEY_ARRAY       shift and go to state 217
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 210

    recordType                     shift and go to state 206
    pointerType                    shift and go to state 219
    type                           shift and go to state 292
    arrayType                      shift and go to state 207
    varType                        shift and go to state 218

state 273

    (100) fieldListSequence -> fieldListSequence SCOLON . fieldList
    (102) fieldList -> . identList COLON type
    (103) fieldList -> . empty
    (104) identList -> . identList COMMA IDENT
    (105) identList -> . IDENT
    (156) empty -> .

    IDENT           shift and go to state 112
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)

    empty                          shift and go to state 246
    identList                      shift and go to state 247
    fieldList                      shift and go to state 293

state 274

    (97) recordType -> KEY_RECORD fieldListSequence KEY_END .

    SCOLON          reduce using rule 97 (recordType -> KEY_RECORD fieldListSequence KEY_END .)
    KEY_END         reduce using rule 97 (recordType -> KEY_RECORD fieldListSequence KEY_END .)
    RRB             reduce using rule 97 (recordType -> KEY_RECORD fieldListSequence KEY_END .)


state 275

    (98) recordType -> KEY_RECORD LRB baseType . RRB fieldListSequence KEY_END

    RRB             shift and go to state 294


state 276

    (99) baseType -> qualident .

    RRB             reduce using rule 99 (baseType -> qualident .)


state 277

    (95) comass -> empty .

    KEY_OF          reduce using rule 95 (comass -> empty .)
    COMMA           reduce using rule 95 (comass -> empty .)


state 278

    (93) arrayType -> KEY_ARRAY length comass . KEY_OF type
    (94) comass -> comass . COMMA length

    KEY_OF          shift and go to state 295
    COMMA           shift and go to state 296


state 279

    (118) procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END .

    IDENT           reduce using rule 118 (procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END .)


state 280

    (116) FPs -> FPs COMMA . IDENT

    IDENT           shift and go to state 297


state 281

    (115) FPSection -> IDENT FPs COLON . type
    (82) type -> . IDENT
    (83) type -> . varType
    (84) type -> . arrayType
    (85) type -> . recordType
    (86) type -> . pointerType
    (87) varType -> . KEY_INTEGER
    (88) varType -> . KEY_BOOLEAN
    (89) varType -> . KEY_CHAR
    (90) varType -> . KEY_STRING
    (91) varType -> . KEY_REAL
    (92) varType -> . KEY_SET
    (93) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (97) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (98) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (106) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 211
    KEY_INTEGER     shift and go to state 216
    KEY_BOOLEAN     shift and go to state 214
    KEY_CHAR        shift and go to state 213
    KEY_STRING      shift and go to state 208
    KEY_REAL        shift and go to state 220
    KEY_SET         shift and go to state 209
    KEY_ARRAY       shift and go to state 217
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 210

    recordType                     shift and go to state 206
    pointerType                    shift and go to state 219
    type                           shift and go to state 298
    arrayType                      shift and go to state 207
    varType                        shift and go to state 218

state 282

    (113) formalss -> formalss SCOLON . FPSection
    (115) FPSection -> . IDENT FPs COLON type

    IDENT           shift and go to state 224

    FPSection                      shift and go to state 299

state 283

    (111) formalParameters -> LRB FPSection formalss RRB .

    COLON           reduce using rule 111 (formalParameters -> LRB FPSection formalss RRB .)
    SCOLON          reduce using rule 111 (formalParameters -> LRB FPSection formalss RRB .)


state 284

    (155) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER . RRB

    RRB             shift and go to state 300


state 285

    (145) case -> KEY_CASE COLON expression statementSequence .
    (15) statementSequence -> statementSequence . SCOLON statement

    KEY_ELSE        reduce using rule 145 (case -> KEY_CASE COLON expression statementSequence .)
    KEY_END         reduce using rule 145 (case -> KEY_CASE COLON expression statementSequence .)
    OR              reduce using rule 145 (case -> KEY_CASE COLON expression statementSequence .)
    SCOLON          shift and go to state 86


state 286

    (141) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON . statementSequence KEY_END
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    empty                          shift and go to state 15
    qualident                      shift and go to state 22
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    statementSequence              shift and go to state 301
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 287

    (143) casess -> casess OR case .

    KEY_ELSE        reduce using rule 143 (casess -> casess OR case .)
    KEY_END         reduce using rule 143 (casess -> casess OR case .)
    OR              reduce using rule 143 (casess -> casess OR case .)


state 288

    (139) ifss -> ifss KEY_ELSEIF expression . KEY_THEN statementSequence

    KEY_THEN        shift and go to state 302


state 289

    (137) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence . KEY_END
    (15) statementSequence -> statementSequence . SCOLON statement

    KEY_END         shift and go to state 303
    SCOLON          shift and go to state 86


state 290

    (147) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment . RRB KEY_BEGIN statementSequence KEY_END

    RRB             shift and go to state 304


state 291

    (152) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char . RRB

    RRB             shift and go to state 305


state 292

    (102) fieldList -> identList COLON type .

    KEY_END         reduce using rule 102 (fieldList -> identList COLON type .)
    SCOLON          reduce using rule 102 (fieldList -> identList COLON type .)


state 293

    (100) fieldListSequence -> fieldListSequence SCOLON fieldList .

    KEY_END         reduce using rule 100 (fieldListSequence -> fieldListSequence SCOLON fieldList .)
    SCOLON          reduce using rule 100 (fieldListSequence -> fieldListSequence SCOLON fieldList .)


state 294

    (98) recordType -> KEY_RECORD LRB baseType RRB . fieldListSequence KEY_END
    (100) fieldListSequence -> . fieldListSequence SCOLON fieldList
    (101) fieldListSequence -> . fieldList
    (102) fieldList -> . identList COLON type
    (103) fieldList -> . empty
    (104) identList -> . identList COMMA IDENT
    (105) identList -> . IDENT
    (156) empty -> .

    IDENT           shift and go to state 112
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)

    empty                          shift and go to state 246
    fieldListSequence              shift and go to state 306
    identList                      shift and go to state 247
    fieldList                      shift and go to state 248

state 295

    (93) arrayType -> KEY_ARRAY length comass KEY_OF . type
    (82) type -> . IDENT
    (83) type -> . varType
    (84) type -> . arrayType
    (85) type -> . recordType
    (86) type -> . pointerType
    (87) varType -> . KEY_INTEGER
    (88) varType -> . KEY_BOOLEAN
    (89) varType -> . KEY_CHAR
    (90) varType -> . KEY_STRING
    (91) varType -> . KEY_REAL
    (92) varType -> . KEY_SET
    (93) arrayType -> . KEY_ARRAY length comass KEY_OF type
    (97) recordType -> . KEY_RECORD fieldListSequence KEY_END
    (98) recordType -> . KEY_RECORD LRB baseType RRB fieldListSequence KEY_END
    (106) pointerType -> . KEY_POINTER KEY_TO type

    IDENT           shift and go to state 211
    KEY_INTEGER     shift and go to state 216
    KEY_BOOLEAN     shift and go to state 214
    KEY_CHAR        shift and go to state 213
    KEY_STRING      shift and go to state 208
    KEY_REAL        shift and go to state 220
    KEY_SET         shift and go to state 209
    KEY_ARRAY       shift and go to state 217
    KEY_RECORD      shift and go to state 215
    KEY_POINTER     shift and go to state 210

    recordType                     shift and go to state 206
    type                           shift and go to state 307
    arrayType                      shift and go to state 207
    pointerType                    shift and go to state 219
    varType                        shift and go to state 218

state 296

    (94) comass -> comass COMMA . length
    (96) length -> . expression
    (18) expression -> . simpleExpression
    (19) expression -> . simpleExpression relation simpleExpression
    (20) simpleExpression -> . PLUS term simpless
    (21) simpleExpression -> . term simpless
    (22) simpleExpression -> . MINUS term simpless
    (25) term -> . factor termss
    (28) factor -> . number
    (29) factor -> . char
    (30) factor -> . string
    (31) factor -> . KEY_NIL
    (32) factor -> . set
    (33) factor -> . designator
    (34) factor -> . designator actualParameters
    (35) factor -> . LRB expression RRB
    (36) factor -> . NOT factor
    (37) factor -> . KEY_ABS factor
    (38) factor -> . KEY_CHR factor
    (39) factor -> . KEY_ORD factor
    (40) factor -> . KEY_INTEGER
    (41) factor -> . KEY_BOOLEAN
    (42) factor -> . KEY_CHAR
    (43) factor -> . KEY_STRING
    (44) factor -> . KEY_REAL
    (45) factor -> . KEY_SET
    (46) number -> . VINTEGER
    (47) number -> . VREAL
    (48) char -> . VCHAR
    (49) string -> . VSTRING
    (50) set -> . LCB element COMMA element RCB
    (51) set -> . LCB RCB
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT

    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    KEY_NIL         shift and go to state 81
    LRB             shift and go to state 69
    NOT             shift and go to state 60
    KEY_ABS         shift and go to state 59
    KEY_CHR         shift and go to state 66
    KEY_ORD         shift and go to state 82
    KEY_INTEGER     shift and go to state 75
    KEY_BOOLEAN     shift and go to state 83
    KEY_CHAR        shift and go to state 76
    KEY_STRING      shift and go to state 84
    KEY_REAL        shift and go to state 77
    KEY_SET         shift and go to state 71
    VINTEGER        shift and go to state 73
    VREAL           shift and go to state 72
    VCHAR           shift and go to state 65
    VSTRING         shift and go to state 62
    LCB             shift and go to state 78
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    qualident                      shift and go to state 22
    expression                     shift and go to state 252
    term                           shift and go to state 80
    identdef                       shift and go to state 79
    set                            shift and go to state 63
    factor                         shift and go to state 64
    designator                     shift and go to state 74
    number                         shift and go to state 67
    string                         shift and go to state 68
    simpleExpression               shift and go to state 85
    length                         shift and go to state 308
    char                           shift and go to state 70

state 297

    (116) FPs -> FPs COMMA IDENT .

    COLON           reduce using rule 116 (FPs -> FPs COMMA IDENT .)
    COMMA           reduce using rule 116 (FPs -> FPs COMMA IDENT .)


state 298

    (115) FPSection -> IDENT FPs COLON type .

    RRB             reduce using rule 115 (FPSection -> IDENT FPs COLON type .)
    SCOLON          reduce using rule 115 (FPSection -> IDENT FPs COLON type .)


state 299

    (113) formalss -> formalss SCOLON FPSection .

    RRB             reduce using rule 113 (formalss -> formalss SCOLON FPSection .)
    SCOLON          reduce using rule 113 (formalss -> formalss SCOLON FPSection .)


state 300

    (155) fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .

    KEY_END         reduce using rule 155 (fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .)
    SCOLON          reduce using rule 155 (fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .)
    KEY_ELSE        reduce using rule 155 (fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .)
    OR              reduce using rule 155 (fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .)
    KEY_ELSEIF      reduce using rule 155 (fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .)
    KEY_WHILE       reduce using rule 155 (fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB .)


state 301

    (141) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence . KEY_END
    (15) statementSequence -> statementSequence . SCOLON statement

    KEY_END         shift and go to state 309
    SCOLON          shift and go to state 86


state 302

    (139) ifss -> ifss KEY_ELSEIF expression KEY_THEN . statementSequence
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    SCOLON          reduce using rule 156 (empty -> .)
    KEY_ELSE        reduce using rule 156 (empty -> .)
    KEY_END         reduce using rule 156 (empty -> .)
    KEY_ELSEIF      reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    empty                          shift and go to state 15
    qualident                      shift and go to state 22
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    statementSequence              shift and go to state 310
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 303

    (137) ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .

    KEY_END         reduce using rule 137 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .)
    SCOLON          reduce using rule 137 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .)
    KEY_ELSE        reduce using rule 137 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .)
    KEY_ELSEIF      reduce using rule 137 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .)
    OR              reduce using rule 137 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .)
    KEY_WHILE       reduce using rule 137 (ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END .)


state 304

    (147) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB . KEY_BEGIN statementSequence KEY_END

    KEY_BEGIN       shift and go to state 311


state 305

    (152) fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .

    KEY_END         reduce using rule 152 (fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .)
    SCOLON          reduce using rule 152 (fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .)
    KEY_ELSE        reduce using rule 152 (fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .)
    OR              reduce using rule 152 (fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .)
    KEY_ELSEIF      reduce using rule 152 (fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .)
    KEY_WHILE       reduce using rule 152 (fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB .)


state 306

    (98) recordType -> KEY_RECORD LRB baseType RRB fieldListSequence . KEY_END
    (100) fieldListSequence -> fieldListSequence . SCOLON fieldList

    KEY_END         shift and go to state 312
    SCOLON          shift and go to state 273


state 307

    (93) arrayType -> KEY_ARRAY length comass KEY_OF type .

    RRB             reduce using rule 93 (arrayType -> KEY_ARRAY length comass KEY_OF type .)
    SCOLON          reduce using rule 93 (arrayType -> KEY_ARRAY length comass KEY_OF type .)
    KEY_END         reduce using rule 93 (arrayType -> KEY_ARRAY length comass KEY_OF type .)


state 308

    (94) comass -> comass COMMA length .

    KEY_OF          reduce using rule 94 (comass -> comass COMMA length .)
    COMMA           reduce using rule 94 (comass -> comass COMMA length .)


state 309

    (141) switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .

    KEY_END         reduce using rule 141 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .)
    SCOLON          reduce using rule 141 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .)
    KEY_WHILE       reduce using rule 141 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .)
    KEY_ELSE        reduce using rule 141 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .)
    KEY_ELSEIF      reduce using rule 141 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .)
    OR              reduce using rule 141 (switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END .)


state 310

    (139) ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .
    (15) statementSequence -> statementSequence . SCOLON statement

    KEY_ELSE        reduce using rule 139 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_END         reduce using rule 139 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    KEY_ELSEIF      reduce using rule 139 (ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence .)
    SCOLON          shift and go to state 86


state 311

    (147) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN . statementSequence KEY_END
    (15) statementSequence -> . statementSequence SCOLON statement
    (16) statementSequence -> . statement
    (119) statement -> . assignment
    (120) statement -> . procedureCall
    (121) statement -> . ifStatement
    (122) statement -> . switchStatement
    (123) statement -> . whileStatement
    (124) statement -> . forStatement
    (125) statement -> . doWhileStatement
    (126) statement -> . KEY_EXIT
    (127) statement -> . KEY_RETURN expression
    (128) statement -> . KEY_RETURN
    (129) statement -> . ioStatement
    (130) statement -> . fileStatement
    (131) statement -> . KEY_BREAK
    (132) statement -> . KEY_CONTINUE
    (133) statement -> . empty
    (134) assignment -> . designator ASSIGN expression
    (135) procedureCall -> . designator actualParameters
    (136) procedureCall -> . designator
    (137) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END
    (138) ifStatement -> . KEY_IF expression KEY_THEN statementSequence ifss KEY_END
    (141) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END
    (142) switchStatement -> . KEY_SWITCH expression KEY_BEGIN case casess KEY_END
    (146) whileStatement -> . KEY_WHILE expression KEY_BEGIN statementSequence KEY_END
    (147) forStatement -> . KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END
    (148) doWhileStatement -> . KEY_DO statementSequence KEY_WHILE expression
    (149) ioStatement -> . KEY_WRITE LRB expression RRB
    (150) ioStatement -> . KEY_WRITELN LRB expression RRB
    (151) ioStatement -> . KEY_READ LRB expression RRB
    (152) fileStatement -> . identdef EQUAL KEY_FOPEN LRB string COMMA char RRB
    (153) fileStatement -> . KEY_FCLOSE LRB identdef RRB
    (154) fileStatement -> . KEY_FPRINTF LRB identdef COMMA string RRB
    (155) fileStatement -> . KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB
    (156) empty -> .
    (53) designator -> . qualident designator2
    (54) designator -> . qualident
    (60) identdef -> . IDENT
    (61) identdef -> . AT IDENT
    (58) qualident -> . identdef
    (59) qualident -> . identdef DOT qualident

    KEY_EXIT        shift and go to state 31
    KEY_RETURN      shift and go to state 19
    KEY_BREAK       shift and go to state 38
    KEY_CONTINUE    shift and go to state 45
    KEY_IF          shift and go to state 27
    KEY_SWITCH      shift and go to state 24
    KEY_WHILE       shift and go to state 35
    KEY_FOR         shift and go to state 42
    KEY_DO          shift and go to state 18
    KEY_WRITE       shift and go to state 26
    KEY_WRITELN     shift and go to state 39
    KEY_READ        shift and go to state 28
    KEY_FCLOSE      shift and go to state 44
    KEY_FPRINTF     shift and go to state 37
    KEY_FREAD       shift and go to state 23
    KEY_END         reduce using rule 156 (empty -> .)
    SCOLON          reduce using rule 156 (empty -> .)
    IDENT           shift and go to state 46
    AT              shift and go to state 30

    empty                          shift and go to state 15
    qualident                      shift and go to state 22
    switchStatement                shift and go to state 29
    ifStatement                    shift and go to state 16
    ioStatement                    shift and go to state 17
    doWhileStatement               shift and go to state 40
    forStatement                   shift and go to state 32
    fileStatement                  shift and go to state 33
    whileStatement                 shift and go to state 34
    statementSequence              shift and go to state 313
    designator                     shift and go to state 36
    assignment                     shift and go to state 25
    statement                      shift and go to state 20
    procedureCall                  shift and go to state 41
    identdef                       shift and go to state 43

state 312

    (98) recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .

    SCOLON          reduce using rule 98 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)
    KEY_END         reduce using rule 98 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)
    RRB             reduce using rule 98 (recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END .)


state 313

    (147) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence . KEY_END
    (15) statementSequence -> statementSequence . SCOLON statement

    KEY_END         shift and go to state 314
    SCOLON          shift and go to state 86


state 314

    (147) forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .

    KEY_END         reduce using rule 147 (forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .)
    SCOLON          reduce using rule 147 (forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .)
    KEY_ELSE        reduce using rule 147 (forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .)
    KEY_ELSEIF      reduce using rule 147 (forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .)
    KEY_WHILE       reduce using rule 147 (forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .)
    OR              reduce using rule 147 (forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KEY_BEGIN in state 6 resolved as shift
WARNING: shift/reduce conflict for KEY_CONST in state 6 resolved as shift
WARNING: shift/reduce conflict for KEY_TYPE in state 6 resolved as shift
WARNING: shift/reduce conflict for KEY_VAR in state 6 resolved as shift
WARNING: shift/reduce conflict for KEY_PROCEDURE in state 11 resolved as shift
WARNING: shift/reduce conflict for KEY_WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 22 resolved as shift
WARNING: shift/reduce conflict for AT in state 22 resolved as shift
WARNING: shift/reduce conflict for KEY_WHILE in state 86 resolved as shift
WARNING: shift/reduce conflict for OR in state 130 resolved as shift
WARNING: shift/reduce conflict for KEY_BEGIN in state 165 resolved as shift
WARNING: shift/reduce conflict for KEY_CONST in state 165 resolved as shift
WARNING: shift/reduce conflict for KEY_TYPE in state 165 resolved as shift
WARNING: shift/reduce conflict for KEY_VAR in state 165 resolved as shift
