
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence statement SCOLON\n\t\t\t\t\t\t\t  | empty\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | boolean\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tboolean : VBOOLEAN\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB fpSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON fpSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tfpSection : IDENT fps COLON type\n\t\t\n\t\t\tfps : fps COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : KEY_ADD LRB qualident COMMA expression RRB\n\t\t\t\t\t\t | KEY_DEL LRB qualident COMMA expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'VREAL':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,354,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-77,-80,-83,-81,-76,-79,-82,-78,81,81,81,81,-74,-75,81,-73,81,-69,81,-72,-70,-71,81,81,81,81,81,81,81,81,]),'KEY_ARRAY':([146,149,213,295,296,321,328,355,],[222,222,222,222,222,222,222,222,]),'KEY_IF':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,25,-16,-173,-15,-173,25,-173,-173,25,25,25,-173,-173,25,-173,25,-173,25,25,-173,25,]),'DIVIDE':([31,54,80,81,82,84,86,88,89,96,97,98,99,100,101,102,103,104,107,108,110,122,128,129,156,157,159,161,167,168,169,180,188,193,240,242,255,259,271,299,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-61,-28,-31,-33,-45,-173,-30,-29,-49,-44,-42,-52,-64,-60,-57,-35,-40,-38,-37,-55,251,-27,-39,-68,-62,-173,-36,-173,-67,-58,-48,-26,-32,-47,-59,-54,]),'VBOOLEAN':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,354,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-77,-80,-83,-81,-76,-79,-82,-78,88,88,88,88,-74,-75,88,-73,88,-69,88,-72,-70,-71,88,88,88,88,88,88,88,88,]),'KEY_CONTINUE':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,33,-16,-173,-15,-173,33,-173,-173,33,33,33,-173,-173,33,-173,33,-173,33,33,-173,33,]),'KEY_WRITEBOOL':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,37,-16,-173,-15,-173,37,-173,-173,37,37,37,-173,-173,37,-173,37,-173,37,37,-173,37,]),'SCOLON':([3,8,13,14,16,17,27,30,31,32,33,34,36,38,39,41,42,43,44,45,50,53,54,55,62,64,65,73,74,77,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,115,122,126,128,129,130,138,142,154,155,156,157,159,160,161,163,164,167,168,169,180,185,188,193,195,198,199,209,214,215,217,218,219,220,221,223,224,225,226,228,229,230,231,232,233,234,237,238,239,241,242,254,256,257,258,259,261,262,263,265,267,269,271,274,275,278,280,282,283,284,287,288,290,292,298,299,300,302,303,304,309,310,317,319,324,325,331,332,334,335,336,339,340,341,343,345,347,348,349,351,352,353,357,360,361,363,365,366,367,368,369,370,372,373,374,375,376,377,],[4,-173,-173,-16,70,71,-136,-144,-63,-128,-135,-122,-133,-132,-126,-125,-127,-61,-137,-134,-129,-124,-173,130,-138,-131,-123,147,148,151,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,-18,-44,-42,-52,-143,-64,-173,-60,-57,-15,-130,-113,-173,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-139,-68,-62,-163,-173,-173,279,-115,-173,-173,-111,-90,-95,-173,-92,-94,-89,-87,-86,-93,-88,-85,-91,-84,-110,-157,-173,-20,-22,-36,-19,-160,-165,-166,-67,-170,-161,-167,-162,-158,-173,-58,-164,-159,-168,-142,-112,320,-117,-173,324,-106,-104,-136,-48,-23,-26,-32,-47,-154,-59,346,-114,-173,-100,-109,-17,-146,-173,-54,-156,-141,-140,-150,-173,-171,-116,-118,-103,-173,-105,-173,-173,-173,324,-96,-173,-145,-169,-172,-173,-101,-173,-149,-173,-173,-155,]),'KEY_READINT':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,28,-16,-173,-15,-173,28,-173,-173,28,28,28,-173,-173,28,-173,28,-173,28,28,-173,28,]),'MINUS':([25,31,52,54,60,64,79,80,81,82,84,86,88,89,93,94,95,96,97,98,99,100,101,102,103,104,107,108,110,111,112,113,114,116,118,119,122,123,125,128,129,133,134,136,152,155,156,157,158,159,160,161,163,164,167,168,169,171,172,173,174,175,176,177,178,179,180,181,188,193,200,222,239,240,241,242,247,255,259,260,271,272,273,277,279,299,300,302,303,304,308,310,333,336,354,],[91,-63,91,-173,91,91,91,-41,-50,-46,-43,-34,-51,-53,91,-173,91,-61,-28,-31,-33,-45,-173,-30,-29,-49,-44,-42,-52,91,91,91,91,91,91,91,-64,91,91,-60,-57,91,91,91,91,-173,-35,-40,91,-38,-173,-37,243,-24,-55,-25,-27,-77,-80,-83,-81,-76,-79,-82,-78,91,-39,91,-68,-62,91,91,243,-173,243,-36,91,-173,-67,91,-58,91,91,91,91,-48,-23,-26,-32,-47,91,-59,91,-54,91,]),'KEY_FCLOSE':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,35,-16,-173,-15,-173,35,-173,-173,35,35,35,-173,-173,35,-173,35,-173,35,35,-173,35,]),'NOT':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,354,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-77,-80,-83,-81,-76,-79,-82,-78,92,92,92,92,-74,-75,92,-73,92,-69,92,-72,-70,-71,92,92,92,92,92,92,92,92,]),'VCHAR':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,337,354,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-77,-80,-83,-81,-76,-79,-82,-78,110,110,110,110,-74,-75,110,-73,110,-69,110,-72,-70,-71,110,110,110,110,110,110,110,110,110,]),'LRB':([24,25,26,28,29,30,31,35,37,40,43,47,48,49,52,54,56,57,58,59,60,61,63,64,66,67,69,79,85,86,87,90,91,92,93,95,96,105,109,111,112,113,114,116,118,119,122,123,125,128,129,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,192,193,200,221,222,243,244,245,246,247,248,249,250,251,252,260,271,272,273,277,279,308,310,333,354,],[79,93,111,112,113,116,-63,117,118,119,-61,123,124,125,93,-173,131,132,133,134,93,136,137,93,139,140,143,93,93,116,158,93,93,93,93,93,-61,170,181,93,93,93,93,93,93,93,-64,93,93,-60,-57,93,93,93,93,93,-77,-80,-83,-81,-76,-79,-82,-78,93,93,264,-62,93,289,93,-74,-75,93,-73,93,-69,93,-72,-70,-71,93,-58,93,93,93,93,93,-59,93,93,]),'KEY_WRITECHAR':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,26,-16,-173,-15,-173,26,-173,-173,26,26,26,-173,-173,26,-173,26,-173,26,26,-173,26,]),'IDENT':([2,8,10,11,12,13,14,15,18,19,20,21,22,23,25,46,52,60,64,68,79,85,87,90,91,92,93,95,109,111,112,113,114,116,117,118,119,121,123,124,125,126,130,131,132,133,134,136,137,139,140,143,145,146,147,148,149,150,151,152,154,158,170,171,172,173,174,175,176,177,178,179,181,198,199,200,201,213,217,221,222,238,243,244,245,246,247,248,249,250,251,252,260,266,269,272,273,277,279,287,289,295,296,308,320,321,322,323,324,328,333,335,345,346,352,354,355,357,360,361,366,370,373,375,376,],[3,-173,-173,-173,-173,31,-16,69,72,-10,75,-12,78,-8,31,122,31,31,31,141,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-173,-15,31,31,31,31,31,31,31,31,216,218,231,-9,-11,231,235,-7,31,-173,31,31,-77,-80,-83,-81,-76,-79,-82,-78,31,31,31,-173,31,31,231,-173,75,31,31,-74,-75,31,-73,31,-69,31,-72,-70,-71,31,31,31,31,31,31,31,31,31,231,231,31,216,231,350,-121,75,231,31,-173,-173,31,75,31,231,31,-173,31,-173,31,31,-173,31,]),'KEY_END':([8,13,14,126,130,154,198,199,217,219,220,221,223,224,225,226,228,229,230,231,232,238,269,276,287,288,290,292,297,298,313,314,315,324,325,331,335,342,345,351,352,353,357,360,361,363,365,366,370,372,373,375,376,],[-173,68,-16,-173,-15,-173,268,-173,-173,-90,-95,-173,-92,-94,-89,-87,-86,-93,-88,-85,-91,-173,309,-173,323,325,-106,-104,334,-148,-173,343,-152,-173,-100,-109,-173,-151,-173,-103,-173,-105,367,-173,-153,372,-96,-173,374,-101,-147,-173,377,]),'AT':([8,13,14,25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,117,118,119,121,123,124,125,126,130,131,132,133,134,136,137,139,140,152,154,158,170,171,172,173,174,175,176,177,178,179,181,198,199,200,201,217,222,238,243,244,245,246,247,248,249,250,251,252,260,266,269,272,273,277,279,287,289,308,333,335,345,346,354,357,360,361,366,370,373,375,376,],[-173,46,-16,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-173,-15,46,46,46,46,46,46,46,46,46,-173,46,46,-77,-80,-83,-81,-76,-79,-82,-78,46,46,46,-173,46,46,-173,46,46,-74,-75,46,-73,46,-69,46,-72,-70,-71,46,46,46,46,46,46,46,46,46,46,46,-173,-173,46,46,46,-173,46,-173,46,46,-173,46,]),'KEY_TO':([227,],[295,]),'KEY_IN':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,240,241,242,255,259,271,299,300,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,177,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-173,-22,-36,-173,-67,-58,-48,-23,-26,-32,-47,-59,-54,]),'KEY_FOPEN':([120,],[192,]),'RRB':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,116,122,123,128,129,143,153,155,156,157,159,160,161,162,163,164,167,168,169,180,182,183,184,185,186,187,188,189,190,191,193,194,197,204,205,207,210,215,219,220,223,224,225,226,228,229,230,231,232,239,240,241,242,253,254,255,259,271,283,284,299,300,302,303,304,305,310,311,312,318,325,326,327,331,336,348,349,358,359,362,365,372,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,-18,-44,-42,-52,188,-64,195,-60,-57,214,237,-173,-35,-40,-38,-173,-37,242,-21,-24,-55,-25,-27,-39,256,257,258,-139,-66,259,-68,261,262,263,-62,265,267,274,275,278,280,-173,-90,-95,-92,-94,-89,-87,-86,-93,-88,-85,-91,-20,299,-22,-36,303,-19,304,-67,-58,319,-117,-48,-23,-26,-32,-47,-65,-59,340,341,347,-100,352,-102,-109,-54,-116,-118,368,369,371,-96,-101,]),'KEY_PROCEDURE':([4,5,6,7,9,10,11,12,18,19,20,21,22,23,70,71,144,147,148,151,],[-173,-6,-173,-14,15,-173,-173,-173,-3,-10,-4,-12,-2,-8,-13,-173,-173,-9,-11,-7,]),'KEY_WRITELN':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,47,-16,-173,-15,-173,47,-173,-173,47,47,47,-173,-173,47,-173,47,-173,47,47,-173,47,]),'KEY_NEW':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,66,-16,-173,-15,-173,66,-173,-173,66,66,66,-173,-173,66,-173,66,-173,66,66,-173,66,]),'GT':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,240,241,242,255,259,271,299,300,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,172,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-173,-22,-36,-173,-67,-58,-48,-23,-26,-32,-47,-59,-54,]),'KEY_WHILE':([8,13,14,126,130,154,198,199,217,238,268,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,52,-16,-173,-15,-173,52,-173,-173,52,308,52,52,-173,-173,52,-173,52,-173,52,52,-173,52,]),'VINTEGER':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,338,354,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-77,-80,-83,-81,-76,-79,-82,-78,104,104,104,104,-74,-75,104,-73,104,-69,104,-72,-70,-71,104,104,104,104,104,104,104,359,104,]),'MODULUS':([31,54,80,81,82,84,86,88,89,96,97,98,99,100,101,102,103,104,107,108,110,122,128,129,156,157,159,161,167,168,169,180,188,193,240,242,255,259,271,299,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-61,-28,-31,-33,-45,-173,-30,-29,-49,-44,-42,-52,-64,-60,-57,-35,-40,-38,-37,-55,252,-27,-39,-68,-62,-173,-36,-173,-67,-58,-48,-26,-32,-47,-59,-54,]),'KEY_STRING':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,146,149,152,158,171,172,173,174,175,176,177,178,179,181,200,213,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,295,296,308,321,328,333,354,355,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,229,229,107,107,-77,-80,-83,-81,-76,-79,-82,-78,107,107,107,229,107,-74,-75,107,-73,107,-69,107,-72,-70,-71,107,107,107,107,107,229,229,107,229,229,107,107,229,]),'KEY_DEL':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,56,-16,-173,-15,-173,56,-173,-173,56,56,56,-173,-173,56,-173,56,-173,56,56,-173,56,]),'GTEQ':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,240,241,242,255,259,271,299,300,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,174,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-173,-22,-36,-173,-67,-58,-48,-23,-26,-32,-47,-59,-54,]),'EQUAL':([31,43,54,72,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,240,241,242,255,259,271,299,300,302,303,304,310,336,],[-63,120,-173,146,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,175,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-173,-22,-36,-173,-67,-58,-48,-23,-26,-32,-47,-59,-54,]),'KEY_ADD':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,57,-16,-173,-15,-173,57,-173,-173,57,57,57,-173,-173,57,-173,57,-173,57,57,-173,57,]),'KEY_CASE':([14,130,206,276,313,345,361,],[-16,-15,277,277,277,-173,-153,]),'KEY_WRITEREAL':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,59,-16,-173,-15,-173,59,-173,-173,59,59,59,-173,-173,59,-173,59,-173,59,59,-173,59,]),'KEY_SWITCH':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,60,-16,-173,-15,-173,60,-173,-173,60,60,60,-173,-173,60,-173,60,-173,60,60,-173,60,]),'KEY_READBOOL':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,61,-16,-173,-15,-173,61,-173,-173,61,61,61,-173,-173,61,-173,61,-173,61,61,-173,61,]),'LT':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,240,241,242,255,259,271,299,300,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,178,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-173,-22,-36,-173,-67,-58,-48,-23,-26,-32,-47,-59,-54,]),'KEY_FOR':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,63,-16,-173,-15,-173,63,-173,-173,63,63,63,-173,-173,63,-173,63,-173,63,63,-173,63,]),'KEY_ELSEIF':([14,130,154,238,297,298,366,373,],[-16,-15,-173,-173,333,-148,-173,-147,]),'COMMA':([31,54,75,76,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,165,166,167,168,169,180,186,187,188,193,196,202,203,211,216,235,239,241,242,254,259,270,271,285,286,291,293,294,299,300,302,303,304,305,306,307,310,329,330,336,350,364,],[-63,-173,-108,150,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,-18,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-56,247,-55,-25,-27,-39,-66,260,-68,-62,266,272,273,281,-173,-107,-20,-22,-36,-19,-67,260,-58,322,-120,150,-99,-173,-48,-23,-26,-32,-47,-65,337,338,-59,-98,354,-54,-119,-97,]),'RCB':([31,54,80,81,82,84,86,88,89,94,95,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,165,167,168,169,180,188,193,239,241,242,254,259,271,299,300,301,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,167,-61,-28,-31,-33,-45,-173,-30,-29,-49,-18,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-56,-55,-25,-27,-39,-68,-62,-20,-22,-36,-19,-67,-58,-48,-23,336,-26,-32,-47,-59,-54,]),'KEY_NIL':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,354,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-77,-80,-83,-81,-76,-79,-82,-78,105,105,105,105,-74,-75,105,-73,105,-69,105,-72,-70,-71,105,105,105,105,105,105,105,105,]),'KEY_INTEGER':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,146,149,152,158,171,172,173,174,175,176,177,178,179,181,200,213,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,295,296,308,321,328,333,354,355,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,219,219,80,80,-77,-80,-83,-81,-76,-79,-82,-78,80,80,80,219,80,-74,-75,80,-73,80,-69,80,-72,-70,-71,80,80,80,80,80,219,219,80,219,219,80,80,219,]),'KEY_SET':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,146,149,152,158,171,172,173,174,175,176,177,178,179,181,200,213,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,295,296,308,321,328,333,354,355,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,220,220,82,82,-77,-80,-83,-81,-76,-79,-82,-78,82,82,82,220,82,-74,-75,82,-73,82,-69,82,-72,-70,-71,82,82,82,82,82,220,220,82,220,220,82,82,220,]),'KEY_WRITE':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,24,-16,-173,-15,-173,24,-173,-173,24,24,24,-173,-173,24,-173,24,-173,24,24,-173,24,]),'KEY_CHAR':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,146,149,152,158,171,172,173,174,175,176,177,178,179,181,200,213,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,295,296,308,321,328,333,354,355,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,223,223,84,84,-77,-80,-83,-81,-76,-79,-82,-78,84,84,84,223,84,-74,-75,84,-73,84,-69,84,-72,-70,-71,84,84,84,84,84,223,223,84,223,223,84,84,223,]),'KEY_ELSE':([14,130,154,238,276,297,298,313,314,315,342,345,361,366,373,],[-16,-15,-173,-173,-173,335,-148,-173,344,-152,-151,-173,-153,-173,-147,]),'KEY_REAL':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,146,149,152,158,171,172,173,174,175,176,177,178,179,181,200,213,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,295,296,308,321,328,333,354,355,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,224,224,100,100,-77,-80,-83,-81,-76,-79,-82,-78,100,100,100,224,100,-74,-75,100,-73,100,-69,100,-72,-70,-71,100,100,100,100,100,224,224,100,224,224,100,100,224,]),'PLUS':([25,31,52,54,60,64,79,80,81,82,84,86,88,89,93,94,95,96,97,98,99,100,101,102,103,104,107,108,110,111,112,113,114,116,118,119,122,123,125,128,129,133,134,136,152,155,156,157,158,159,160,161,163,164,167,168,169,171,172,173,174,175,176,177,178,179,180,181,188,193,200,222,239,240,241,242,247,255,259,260,271,272,273,277,279,299,300,302,303,304,308,310,333,336,354,],[85,-63,85,-173,85,85,85,-41,-50,-46,-43,-34,-51,-53,85,-173,85,-61,-28,-31,-33,-45,-173,-30,-29,-49,-44,-42,-52,85,85,85,85,85,85,85,-64,85,85,-60,-57,85,85,85,85,-173,-35,-40,85,-38,-173,-37,246,-24,-55,-25,-27,-77,-80,-83,-81,-76,-79,-82,-78,85,-39,85,-68,-62,85,85,246,-173,246,-36,85,-173,-67,85,-58,85,85,85,85,-48,-23,-26,-32,-47,85,-59,85,-54,85,]),'KEY_THEN':([31,54,80,81,82,83,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,241,242,254,259,271,299,300,302,303,304,310,336,356,],[-63,-173,-41,-50,-46,154,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,-18,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-22,-36,-19,-67,-58,-48,-23,-26,-32,-47,-59,-54,366,]),'KEY_READREAL':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,29,-16,-173,-15,-173,29,-173,-173,29,29,29,-173,-173,29,-173,29,-173,29,29,-173,29,]),'KEY_ORD':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,354,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-77,-80,-83,-81,-76,-79,-82,-78,87,87,87,87,-74,-75,87,-73,87,-69,87,-72,-70,-71,87,87,87,87,87,87,87,87,]),'VSTRING':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,264,272,273,277,279,281,308,333,354,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-77,-80,-83,-81,-76,-79,-82,-78,89,89,89,89,-74,-75,89,-73,89,-69,89,-72,-70,-71,89,89,89,89,89,89,89,89,89,89,]),'COLON':([31,54,75,76,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,142,155,156,157,159,160,161,163,164,167,168,169,180,188,193,214,216,235,236,239,241,242,254,259,271,285,286,291,299,300,302,303,304,310,316,319,336,344,350,],[-63,-173,-108,149,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,-18,-44,-42,-52,-64,-60,-57,213,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-115,-173,-107,296,-20,-22,-36,-19,-67,-58,321,-120,328,-48,-23,-26,-32,-47,-59,345,-114,-54,360,-119,]),'RSB':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,186,188,193,239,241,242,254,259,270,271,299,300,302,303,304,305,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,-18,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-66,-68,-62,-20,-22,-36,-19,-67,310,-58,-48,-23,-26,-32,-47,-65,-59,-54,]),'KEY_MODULE':([0,],[2,]),'KEY_READCHAR':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,40,-16,-173,-15,-173,40,-173,-173,40,40,40,-173,-173,40,-173,40,-173,40,40,-173,40,]),'KEY_FPRINTF':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,67,-16,-173,-15,-173,67,-173,-173,67,67,67,-173,-173,67,-173,67,-173,67,67,-173,67,]),'KEY_TYPE':([4,5,6,7,9,10,11,12,18,19,20,21,22,23,70,71,144,147,148,151,],[-173,-6,10,-14,-5,-173,-173,-173,-3,-10,-4,-12,-2,-8,-13,-173,10,-9,-11,-7,]),'ASSIGN':([30,31,43,54,78,96,122,128,129,193,208,271,310,],[114,-63,-61,-173,152,-61,-64,-60,-57,-62,114,-58,-59,]),'KEY_BOOLEAN':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,146,149,152,158,171,172,173,174,175,176,177,178,179,181,200,213,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,295,296,308,321,328,333,354,355,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,232,232,108,108,-77,-80,-83,-81,-76,-79,-82,-78,108,108,108,232,108,-74,-75,108,-73,108,-69,108,-72,-70,-71,108,108,108,108,108,232,232,108,232,232,108,108,232,]),'KEY_ABS':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,354,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-77,-80,-83,-81,-76,-79,-82,-78,90,90,90,90,-74,-75,90,-73,90,-69,90,-72,-70,-71,90,90,90,90,90,90,90,90,]),'OR':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,240,241,242,255,259,271,299,300,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,244,-24,-55,-25,-27,-39,-68,-62,244,-173,244,-36,-173,-67,-58,-48,-23,-26,-32,-47,-59,-54,]),'LCB':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,354,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-77,-80,-83,-81,-76,-79,-82,-78,95,95,95,95,-74,-75,95,-73,95,-69,95,-72,-70,-71,95,95,95,95,95,95,95,95,]),'LTEQ':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,240,241,242,255,259,271,299,300,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,176,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-173,-22,-36,-173,-67,-58,-48,-23,-26,-32,-47,-59,-54,]),'KEY_IS':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,240,241,242,255,259,271,299,300,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,173,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-173,-22,-36,-173,-67,-58,-48,-23,-26,-32,-47,-59,-54,]),'KEY_BREAK':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,45,-16,-173,-15,-173,45,-173,-173,45,45,45,-173,-173,45,-173,45,-173,45,45,-173,45,]),'NEQUAL':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,240,241,242,255,259,271,299,300,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,171,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-173,-22,-36,-173,-67,-58,-48,-23,-26,-32,-47,-59,-54,]),'KEY_BEGIN':([4,5,6,7,9,10,11,12,18,19,20,21,22,23,31,51,54,70,71,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,127,128,129,135,144,147,148,151,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,241,242,254,259,271,299,300,302,303,304,310,336,371,],[-173,-6,8,-14,-5,-173,-173,-173,-3,-10,-4,-12,-2,-8,-63,126,-173,-13,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,-18,-44,-42,-52,-64,199,-60,-57,206,217,-9,-11,-7,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-22,-36,-19,-67,-58,-48,-23,-26,-32,-47,-59,-54,375,]),'KEY_RECORD':([146,149,213,295,296,321,328,355,],[221,221,221,221,221,221,221,221,]),'KEY_OF':([31,54,80,81,82,84,86,88,89,94,96,97,98,99,100,101,102,103,104,106,107,108,110,122,128,129,155,156,157,159,160,161,163,164,167,168,169,180,188,193,239,241,242,254,259,271,293,294,299,300,302,303,304,310,329,330,336,364,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-173,-61,-28,-31,-33,-45,-173,-30,-29,-49,-18,-44,-42,-52,-64,-60,-57,-173,-35,-40,-38,-173,-37,-21,-24,-55,-25,-27,-39,-68,-62,-20,-22,-36,-19,-67,-58,-99,-173,-48,-23,-26,-32,-47,-59,-98,355,-54,-97,]),'KEY_EXIT':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,50,-16,-173,-15,-173,50,-173,-173,50,50,50,-173,-173,50,-173,50,-173,50,50,-173,50,]),'KEY_WRITEINT':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,49,-16,-173,-15,-173,49,-173,-173,49,49,49,-173,-173,49,-173,49,-173,49,49,-173,49,]),'KEY_FREAD':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,48,-16,-173,-15,-173,48,-173,-173,48,48,48,-173,-173,48,-173,48,-173,48,48,-173,48,]),'DOT':([31,43,54,96,122,128,129,141,193,271,310,],[-63,121,-173,121,-64,-60,201,212,-62,-58,-59,]),'KEY_POINTER':([146,149,213,295,296,321,328,355,],[227,227,227,227,227,227,227,227,]),'KEY_CHR':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,171,172,173,174,175,176,177,178,179,181,200,222,243,244,245,246,247,248,249,250,251,252,260,272,273,277,279,308,333,354,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-77,-80,-83,-81,-76,-79,-82,-78,109,109,109,109,-74,-75,109,-73,109,-69,109,-72,-70,-71,109,109,109,109,109,109,109,109,]),'KEY_READ':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,58,-16,-173,-15,-173,58,-173,-173,58,58,58,-173,-173,58,-173,58,-173,58,58,-173,58,]),'MULTIPLY':([31,54,80,81,82,84,86,88,89,96,97,98,99,100,101,102,103,104,107,108,110,122,128,129,156,157,159,161,167,168,169,180,188,193,240,242,255,259,271,299,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-61,-28,-31,-33,-45,-173,-30,-29,-49,-44,-42,-52,-64,-60,-57,-35,-40,-38,-37,-55,248,-27,-39,-68,-62,-173,-36,-173,-67,-58,-48,-26,-32,-47,-59,-54,]),'LSB':([31,43,54,96,122,128,129,193,271,310,],[-63,-61,-173,-61,-64,-60,200,-62,-58,-59,]),'KEY_RETURN':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,64,-16,-173,-15,-173,64,-173,-173,64,64,64,-173,-173,64,-173,64,-173,64,64,-173,64,]),'KEY_DO':([8,13,14,126,130,154,198,199,217,238,269,287,335,345,357,360,361,366,370,373,375,376,],[-173,51,-16,-173,-15,-173,51,-173,-173,51,51,51,-173,-173,51,-173,51,-173,51,51,-173,51,]),'AND':([31,54,80,81,82,84,86,88,89,96,97,98,99,100,101,102,103,104,107,108,110,122,128,129,156,157,159,161,167,168,169,180,188,193,240,242,255,259,271,299,302,303,304,310,336,],[-63,-173,-41,-50,-46,-43,-34,-51,-53,-61,-28,-31,-33,-45,-173,-30,-29,-49,-44,-42,-52,-64,-60,-57,-35,-40,-38,-37,-55,250,-27,-39,-68,-62,-173,-36,-173,-67,-58,-48,-26,-32,-47,-59,-54,]),'KEY_CONST':([4,5,6,7,9,10,11,12,18,19,20,21,22,23,70,71,144,147,148,151,],[-173,-6,12,-14,-5,-173,-173,-173,-3,-10,-4,-12,-2,-8,-13,-173,12,-9,-11,-7,]),'$end':([1,212,],[0,-1,]),'KEY_VAR':([4,5,6,7,9,10,11,12,18,19,20,21,22,23,70,71,144,147,148,151,],[-173,-6,11,-14,-5,-173,-173,-173,-3,-10,-4,-12,-2,-8,-13,-173,11,-9,-11,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'qualident':([13,25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,121,123,125,131,132,133,134,136,137,139,152,158,170,179,181,198,200,222,238,245,247,249,260,269,272,273,277,279,287,289,308,333,346,354,357,361,370,373,376,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,193,54,54,202,203,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,327,54,54,54,54,54,54,54,54,54,]),'expression':([25,52,60,64,79,93,95,111,112,113,114,116,118,119,123,125,133,134,136,152,158,181,200,222,247,260,272,273,277,279,308,333,354,],[83,127,135,138,153,162,165,182,183,184,185,186,190,191,194,197,204,205,207,236,162,162,186,293,165,305,311,312,316,317,339,356,293,]),'doWhileStatement':([13,198,238,269,287,357,361,370,373,376,],[32,32,32,32,32,32,32,32,32,32,]),'baseType':([289,],[326,]),'fieldListSequence':([221,352,],[288,363,]),'case':([206,276,313,],[276,313,313,]),'empty':([4,6,8,10,11,12,13,54,71,94,101,126,144,154,155,160,198,199,215,216,217,221,238,240,255,269,276,287,294,313,324,335,345,352,357,360,361,366,370,373,375,376,],[5,7,14,19,21,23,27,128,5,164,169,14,7,14,164,164,27,14,284,286,14,290,298,169,169,27,315,27,329,315,290,14,14,290,27,14,27,14,27,27,14,27,]),'procedureHeading':([9,],[17,]),'pointerType':([146,149,213,295,296,321,328,355,],[225,225,225,225,225,225,225,225,]),'module':([0,],[1,]),'designator':([13,25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,137,139,152,158,170,179,181,198,200,222,238,245,247,249,260,269,272,273,277,279,287,308,333,346,354,357,361,370,373,376,],[30,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,208,210,86,86,253,86,86,30,86,86,30,86,86,86,86,30,86,86,86,86,30,86,86,208,86,30,30,30,30,30,]),'actualParameters':([30,86,],[115,156,]),'typeDeclaration':([18,],[73,]),'memoryalloc':([13,198,238,269,287,357,361,370,373,376,],[44,44,44,44,44,44,44,44,44,44,]),'formalss':([215,],[283,]),'assignment':([13,137,198,238,269,287,346,357,361,370,373,376,],[34,209,34,34,34,34,362,34,34,34,34,34,]),'varss':([11,],[20,]),'fileStatement':([13,198,238,269,287,357,361,370,373,376,],[36,36,36,36,36,36,36,36,36,36,]),'procss':([6,144,],[9,9,]),'comass':([294,],[330,]),'fps':([216,],[285,]),'ioStatement':([13,198,238,269,287,357,361,370,373,376,],[38,38,38,38,38,38,38,38,38,38,]),'declarationSequence':([4,71,],[6,144,]),'whileStatement':([13,198,238,269,287,357,361,370,373,376,],[39,39,39,39,39,39,39,39,39,39,]),'recordType':([146,149,213,295,296,321,328,355,],[230,230,230,230,230,230,230,230,]),'constantDeclaration':([22,],[77,]),'casess':([276,313,],[314,342,]),'switchStatement':([13,198,238,269,287,357,361,370,373,376,],[41,41,41,41,41,41,41,41,41,41,]),'statementSequence':([8,126,154,199,217,335,345,360,366,375,],[13,198,238,269,287,357,361,370,373,376,]),'identList':([20,221,324,352,],[76,291,291,291,]),'term':([25,52,60,64,79,85,91,93,95,111,112,113,114,116,118,119,123,125,133,134,136,152,158,179,181,200,222,245,247,260,272,273,277,279,308,333,354,],[94,94,94,94,94,155,160,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,300,94,94,94,94,94,94,94,94,94,]),'forStatement':([13,198,238,269,287,357,361,370,373,376,],[42,42,42,42,42,42,42,42,42,42,]),'identdef':([13,25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,117,118,119,121,123,124,125,131,132,133,134,136,137,139,140,152,158,170,179,181,198,200,201,222,238,245,247,249,260,266,269,272,273,277,279,287,289,308,333,346,354,357,361,370,373,376,],[43,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,189,96,96,96,96,196,96,96,96,96,96,96,96,96,211,96,96,96,96,96,43,96,271,96,43,96,96,96,96,307,43,96,96,96,96,43,96,96,96,96,96,43,43,43,43,43,]),'expList':([116,200,],[187,270,]),'addOperator':([163,239,241,],[245,245,245,]),'arrayType':([146,149,213,295,296,321,328,355,],[226,226,226,226,226,226,226,226,]),'procedureDeclaration':([9,],[16,]),'procedureCall':([13,198,238,269,287,357,361,370,373,376,],[65,65,65,65,65,65,65,65,65,65,]),'variableDeclaration':([20,],[74,]),'designator2':([54,],[129,]),'length':([222,354,],[294,364,]),'number':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,179,181,200,222,245,247,249,260,272,273,277,279,308,333,354,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'simpless':([94,155,160,],[163,239,241,]),'typess':([10,],[18,]),'string':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,179,181,200,222,245,247,249,260,264,272,273,277,279,281,308,333,354,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,306,98,98,98,98,318,98,98,98,]),'set':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,179,181,200,222,245,247,249,260,272,273,277,279,308,333,354,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'ifss':([238,],[297,]),'factor':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,179,181,200,222,245,247,249,260,272,273,277,279,308,333,354,],[101,101,101,101,101,101,157,159,101,161,101,101,180,101,101,101,101,101,101,101,101,101,101,101,101,101,240,101,255,101,101,101,101,302,101,101,101,101,101,101,101,101,]),'ifStatement':([13,198,238,269,287,357,361,370,373,376,],[53,53,53,53,53,53,53,53,53,53,]),'char':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,179,181,200,222,245,247,249,260,272,273,277,279,308,333,337,354,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,358,102,]),'termss':([101,240,255,],[168,168,168,]),'element':([95,247,],[166,301,]),'mulOperator':([168,],[249,]),'fpSection':([143,320,],[215,348,]),'simpleExpression':([25,52,60,64,79,93,95,111,112,113,114,116,118,119,123,125,133,134,136,152,158,179,181,200,222,247,260,272,273,277,279,308,333,354,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,254,106,106,106,106,106,106,106,106,106,106,106,106,]),'statement':([13,198,238,269,287,357,361,370,373,376,],[55,55,55,55,55,55,55,55,55,55,]),'varType':([146,149,213,295,296,321,328,355,],[228,228,228,228,228,228,228,228,]),'boolean':([25,52,60,64,79,85,87,90,91,92,93,95,109,111,112,113,114,116,118,119,123,125,133,134,136,152,158,179,181,200,222,245,247,249,260,272,273,277,279,308,333,354,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'relation':([106,],[179,]),'setStatement':([13,198,238,269,287,357,361,370,373,376,],[62,62,62,62,62,62,62,62,62,62,]),'formalParameters':([69,],[142,]),'conss':([12,],[22,]),'fieldList':([221,324,352,],[292,351,292,]),'type':([146,149,213,295,296,321,328,355,],[233,234,282,331,332,349,353,365,]),'procedureBody':([71,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> empty','conss',1,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> empty','typess',1,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> empty','varss',1,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> empty','procss',1,'p_procss','par.py',61),
  ('statementSequence -> statementSequence statement SCOLON','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> empty','statementSequence',1,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> boolean','factor',1,'p_factor','par.py',108),
  ('factor -> char','factor',1,'p_factor','par.py',109),
  ('factor -> string','factor',1,'p_factor','par.py',110),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',111),
  ('factor -> set','factor',1,'p_factor','par.py',112),
  ('factor -> designator','factor',1,'p_factor','par.py',113),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',114),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',115),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',127),
  ('number -> VINTEGER','number',1,'p_number','par.py',132),
  ('number -> VREAL','number',1,'p_number','par.py',133),
  ('boolean -> VBOOLEAN','boolean',1,'p_boolean','par.py',138),
  ('char -> VCHAR','char',1,'p_char','par.py',143),
  ('string -> VSTRING','string',1,'p_string','par.py',148),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',153),
  ('set -> LCB RCB','set',2,'p_set','par.py',154),
  ('element -> expression','element',1,'p_element','par.py',159),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',164),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',169),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',170),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',171),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',176),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',177),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',182),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',183),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',188),
  ('expList -> expression','expList',1,'p_expList','par.py',189),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',194),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',195),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',200),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',201),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',202),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',203),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',208),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',209),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',210),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',215),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',216),
  ('relation -> LT','relation',1,'p_relation','par.py',217),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',218),
  ('relation -> GT','relation',1,'p_relation','par.py',219),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',220),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',221),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',222),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',227),
  ('type -> IDENT','type',1,'p_type','par.py',232),
  ('type -> varType','type',1,'p_type','par.py',233),
  ('type -> arrayType','type',1,'p_type','par.py',234),
  ('type -> recordType','type',1,'p_type','par.py',235),
  ('type -> pointerType','type',1,'p_type','par.py',236),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',241),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',242),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',243),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',244),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',245),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',246),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',251),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',256),
  ('comass -> empty','comass',1,'p_comass','par.py',257),
  ('length -> expression','length',1,'p_length','par.py',262),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',267),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',268),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',273),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',278),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',279),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',284),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',285),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',290),
  ('identList -> IDENT','identList',1,'p_identList','par.py',291),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',296),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',302),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',312),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',313),
  ('formalParameters -> LRB fpSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',318),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',319),
  ('formalss -> formalss SCOLON fpSection','formalss',3,'p_formalss','par.py',324),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',325),
  ('fpSection -> IDENT fps COLON type','fpSection',4,'p_fpSection','par.py',330),
  ('fps -> fps COMMA IDENT','fps',3,'p_fps','par.py',335),
  ('fps -> empty','fps',1,'p_fps','par.py',336),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',341),
  ('statement -> assignment','statement',1,'p_statement','par.py',346),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',347),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',348),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',349),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',350),
  ('statement -> forStatement','statement',1,'p_statement','par.py',351),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',354),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',355),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',356),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',357),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',358),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',359),
  ('statement -> empty','statement',1,'p_statement','par.py',360),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',361),
  ('statement -> setStatement','statement',1,'p_statement','par.py',362),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',367),
  ('setStatement -> KEY_ADD LRB qualident COMMA expression RRB','setStatement',6,'p_setStatement','par.py',372),
  ('setStatement -> KEY_DEL LRB qualident COMMA expression RRB','setStatement',6,'p_setStatement','par.py',373),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',379),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',385),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',386),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',391),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',392),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',397),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',398),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',403),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',404),
  ('casess -> case casess','casess',2,'p_casess','par.py',409),
  ('casess -> empty','casess',1,'p_casess','par.py',410),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',415),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',420),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',425),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',430),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',435),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',441),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',442),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',443),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',444),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',445),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',446),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',451),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',452),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',453),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',454),
  ('empty -> <empty>','empty',0,'p_empty','par.py',459),
]
