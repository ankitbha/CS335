
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence statement SCOLON\n\t\t\t\t\t\t\t  | empty\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator2 LRB qualident RRB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB fpSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON fpSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tfpSection : IDENT fps COLON type\n\t\t\n\t\t\tfps : fps COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : qualident DOT KEY_ADD LRB expression RRB\n\t\t\t\t\t\t | qualident DOT KEY_DEL LRB expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_ARRAY':([81,144,152,242,294,298,303,335,],[155,155,155,155,155,155,155,155,]),'KEY_OF':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,240,241,254,255,257,269,283,291,300,301,310,311,312,313,314,326,327,341,356,],[-62,-32,-40,-44,-49,-18,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-98,-172,-19,-35,-22,-20,-56,-66,335,-97,-46,-47,-26,-23,-31,-58,-57,-52,-96,]),'MODULUS':([46,90,92,93,94,96,97,99,100,102,103,104,105,106,108,109,112,114,115,123,133,134,172,177,191,194,195,196,199,200,203,226,255,256,258,283,291,310,311,312,314,326,327,341,],[-62,-32,-40,-44,-49,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-33,-28,-63,-55,-59,-61,-53,-38,-39,260,-27,-34,-37,-36,-67,-35,-172,-172,-56,-66,-46,-47,-26,-31,-58,-57,-52,]),'KEY_END':([9,18,19,129,141,154,156,157,158,159,160,161,162,163,164,167,168,169,210,213,216,239,244,245,247,275,277,282,302,304,305,317,318,319,324,325,337,338,339,344,347,351,355,357,360,361,364,365,368,370,373,374,375,],[-172,30,-16,-172,-15,-172,-85,-89,-93,-86,-91,-94,-87,-90,-92,-88,-84,-172,-172,279,-172,299,-105,305,-103,-172,321,-172,-108,-172,-99,-172,346,-151,352,-147,-104,-102,-172,-150,-172,-172,-95,365,-172,-152,371,-100,372,-172,-172,-146,376,]),'VREAL':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,323,336,350,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-78,-79,-77,-75,-81,94,-80,-76,-82,94,94,94,94,-68,-70,-71,-69,94,-73,-72,94,-74,94,94,94,94,94,94,94,94,]),'KEY_CHAR':([39,51,52,59,81,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,144,147,152,155,180,181,182,183,184,185,186,187,188,190,193,219,242,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,294,298,303,323,335,336,350,],[97,97,97,97,160,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,160,97,160,97,-78,-79,-77,-75,-81,97,-80,-76,-82,97,97,97,160,97,-68,-70,-71,-69,97,-73,-72,97,-74,97,97,97,97,97,160,160,160,97,160,97,97,]),'LTEQ':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,255,256,257,258,269,283,291,310,311,312,313,314,326,327,341,],[-62,-32,-40,-44,-49,180,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-35,-172,-22,-172,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,]),'GT':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,255,256,257,258,269,283,291,310,311,312,313,314,326,327,341,],[-62,-32,-40,-44,-49,181,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-35,-172,-22,-172,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,]),'KEY_BOOLEAN':([39,51,52,59,81,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,144,147,152,155,180,181,182,183,184,185,186,187,188,190,193,219,242,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,294,298,303,323,335,336,350,],[102,102,102,102,163,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,163,102,163,102,-78,-79,-77,-75,-81,102,-80,-76,-82,102,102,102,163,102,-68,-70,-71,-69,102,-73,-72,102,-74,102,102,102,102,102,163,163,163,102,163,102,102,]),'KEY_WRITE':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,34,-16,-172,-15,-172,-172,34,-172,34,34,34,-172,-172,-172,34,34,34,-172,-172,34,34,]),'LSB':([32,46,60,106,108,123,133,134,172,283,326,327,],[-60,-62,-172,-172,-60,-63,219,-59,-61,-56,-58,-57,]),'VINTEGER':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,323,336,343,350,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-78,-79,-77,-75,-81,104,-80,-76,-82,104,104,104,104,-68,-70,-71,-69,104,-73,-72,104,-74,104,104,104,104,104,104,104,359,104,]),'KEY_CONTINUE':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,38,-16,-172,-15,-172,-172,38,-172,38,38,38,-172,-172,-172,38,38,38,-172,-172,38,38,]),'DOT':([32,46,60,83,106,108,123,133,134,172,283,326,327,],[85,-62,135,170,-172,85,-63,217,-59,-61,-56,-58,-57,]),'KEY_FCLOSE':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,31,-16,-172,-15,-172,-172,31,-172,31,31,31,-172,-172,-172,31,31,31,-172,-172,31,31,]),'LT':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,255,256,257,258,269,283,291,310,311,312,313,314,326,327,341,],[-62,-32,-40,-44,-49,182,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-35,-172,-22,-172,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,]),'KEY_THEN':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,132,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,254,255,257,269,283,291,310,311,312,313,314,326,327,341,363,],[-62,-32,-40,-44,-49,-18,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,216,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-19,-35,-22,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,370,]),'KEY_BREAK':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,44,-16,-172,-15,-172,-172,44,-172,44,44,44,-172,-172,-172,44,44,44,-172,-172,44,44,]),'KEY_WRITECHAR':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,45,-16,-172,-15,-172,-172,45,-172,45,45,45,-172,-172,-172,45,45,45,-172,-172,45,45,]),'KEY_FREAD':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,47,-16,-172,-15,-172,-172,47,-172,47,47,47,-172,-172,-172,47,47,47,-172,-172,47,47,]),'KEY_ELSE':([19,141,216,275,282,317,318,319,324,325,344,347,361,370,374,],[-16,-15,-172,-172,-172,-172,345,-151,351,-147,-150,-172,-152,-172,-146,]),'KEY_NIL':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,323,336,350,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-78,-79,-77,-75,-81,117,-80,-76,-82,117,117,117,117,-68,-70,-71,-69,117,-73,-72,117,-74,117,117,117,117,117,117,117,117,]),'KEY_FOPEN':([86,],[173,]),'KEY_TO':([165,],[242,]),'KEY_SWITCH':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,51,-16,-172,-15,-172,-172,51,-172,51,51,51,-172,-172,-172,51,51,51,-172,-172,51,51,]),'KEY_WRITEINT':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,35,-16,-172,-15,-172,-172,35,-172,35,35,35,-172,-172,-172,35,35,35,-172,-172,35,35,]),'KEY_ELSEIF':([19,141,216,282,324,325,370,374,],[-16,-15,-172,-172,350,-147,-172,-146,]),'MULTIPLY':([46,90,92,93,94,96,97,99,100,102,103,104,105,106,108,109,112,114,115,123,133,134,172,177,191,194,195,196,199,200,203,226,255,256,258,283,291,310,311,312,314,326,327,341,],[-62,-32,-40,-44,-49,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-33,-28,-63,-55,-59,-61,-53,-38,-39,259,-27,-34,-37,-36,-67,-35,-172,-172,-56,-66,-46,-47,-26,-31,-58,-57,-52,]),'KEY_READCHAR':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,58,-16,-172,-15,-172,-172,58,-172,58,58,58,-172,-172,-172,58,58,58,-172,-172,58,58,]),'KEY_IF':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,59,-16,-172,-15,-172,-172,59,-172,59,59,59,-172,-172,-172,59,59,59,-172,-172,59,59,]),'KEY_DEL':([135,],[221,]),'DIVIDE':([46,90,92,93,94,96,97,99,100,102,103,104,105,106,108,109,112,114,115,123,133,134,172,177,191,194,195,196,199,200,203,226,255,256,258,283,291,310,311,312,314,326,327,341,],[-62,-32,-40,-44,-49,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-33,-28,-63,-55,-59,-61,-53,-38,-39,262,-27,-34,-37,-36,-67,-35,-172,-172,-56,-66,-46,-47,-26,-31,-58,-57,-52,]),'MINUS':([39,46,51,52,59,87,88,89,90,91,92,93,94,96,97,99,100,101,102,103,104,105,106,108,109,112,113,114,115,121,123,124,125,131,133,134,136,137,138,140,142,143,147,155,172,177,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,202,203,219,226,253,255,256,257,258,269,276,278,283,286,287,290,291,310,311,312,313,314,323,326,327,336,341,350,],[110,-62,110,110,110,110,110,110,-32,110,-40,-44,-49,-50,-42,-51,-45,110,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,110,-63,110,110,110,-55,-59,110,110,110,110,110,110,110,110,-61,-53,-78,-79,-77,-75,-81,110,-80,-76,-82,110,-38,-172,110,-39,-25,-27,264,-24,-34,-37,-172,-36,110,-67,110,-35,-172,264,-172,264,110,110,-56,110,110,110,-66,-46,-47,-26,-23,-31,110,-58,-57,110,-52,110,]),'KEY_NEW':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,57,-16,-172,-15,-172,-172,57,-172,57,57,57,-172,-172,-172,57,57,57,-172,-172,57,57,]),'KEY_ORD':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,323,336,350,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-78,-79,-77,-75,-81,111,-80,-76,-82,111,111,111,111,-68,-70,-71,-69,111,-73,-72,111,-74,111,111,111,111,111,111,111,111,]),'LRB':([25,31,32,34,35,36,39,43,45,46,47,49,50,51,52,53,57,58,59,60,61,64,65,69,71,87,88,89,91,101,106,107,108,110,111,114,116,117,118,119,121,123,124,125,131,133,134,136,137,138,140,142,143,147,155,169,172,173,180,181,182,183,184,185,186,187,188,190,193,219,220,221,253,259,260,261,262,263,264,265,266,267,276,278,283,286,287,290,323,326,327,336,350,],[77,84,-60,87,88,89,101,120,121,-62,122,124,125,101,101,128,130,131,101,-172,136,137,138,142,143,101,101,101,101,101,-172,190,-60,101,193,138,101,201,101,101,101,-63,101,101,101,218,-59,101,101,101,101,101,101,101,101,246,-61,249,-78,-79,-77,-75,-81,101,-80,-76,-82,101,101,101,286,287,101,-68,-70,-71,-69,101,-73,-72,101,-74,101,101,-56,101,101,101,101,-58,-57,101,101,]),'KEY_MODULE':([0,],[2,]),'AT':([9,18,19,39,51,52,59,84,85,87,88,89,91,101,107,110,111,116,118,119,120,121,122,124,125,128,129,130,131,136,137,138,140,141,142,143,147,154,155,180,181,182,183,184,185,186,187,188,190,193,201,210,213,216,217,218,219,239,246,253,259,260,261,262,263,264,265,266,267,272,276,277,278,282,286,287,290,323,336,347,348,350,351,360,361,364,368,370,373,374,375,],[-172,48,-16,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-172,48,48,48,48,48,48,-15,48,48,48,-172,48,-78,-79,-77,-75,-81,48,-80,-76,-82,48,48,48,-172,48,-172,48,48,48,48,48,48,-68,-70,-71,-69,48,-73,-72,48,-74,48,48,48,48,48,48,48,48,48,48,-172,48,48,-172,-172,48,48,48,-172,-172,48,48,]),'KEY_PROCEDURE':([4,5,6,7,8,10,11,12,16,17,20,21,22,23,24,26,80,82,146,148,],[-172,-172,-6,14,-172,-172,-14,-172,-10,-3,-4,-12,-2,-8,-13,-172,-172,-9,-11,-7,]),'KEY_WRITEREAL':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,64,-16,-172,-15,-172,-172,64,-172,64,64,64,-172,-172,-172,64,64,64,-172,-172,64,64,]),'KEY_RECORD':([81,144,152,242,294,298,303,335,],[169,169,169,169,169,169,169,169,]),'KEY_ABS':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,323,336,350,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-78,-79,-77,-75,-81,116,-80,-76,-82,116,116,116,116,-68,-70,-71,-69,116,-73,-72,116,-74,116,116,116,116,116,116,116,116,]),'KEY_READ':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,69,-16,-172,-15,-172,-172,69,-172,69,69,69,-172,-172,-172,69,69,69,-172,-172,69,69,]),'GTEQ':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,255,256,257,258,269,283,291,310,311,312,313,314,326,327,341,],[-62,-32,-40,-44,-49,186,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-35,-172,-22,-172,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,]),'RRB':([46,77,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,138,143,149,156,157,158,159,160,161,162,163,164,167,168,171,172,174,175,176,177,189,191,192,194,195,196,197,198,199,200,202,203,205,207,208,214,215,222,223,224,225,226,227,228,229,234,235,254,255,256,257,258,268,269,283,284,291,302,305,306,307,310,311,312,313,314,315,326,327,328,329,330,332,334,341,355,358,359,362,365,],[-62,151,-32,-40,-44,-49,-18,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,226,230,-172,-85,-89,-93,-86,-91,-94,-87,-90,-92,-88,-84,248,-61,250,251,252,-53,255,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,271,273,274,280,281,288,289,291,-65,-67,-138,292,293,296,-116,-19,-35,310,-22,311,314,-20,-56,326,-66,-108,-99,339,-101,-46,-47,-26,-23,-31,342,-58,-57,353,354,-64,-115,-117,-52,-95,366,367,369,-100,]),'KEY_IS':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,255,256,257,258,269,283,291,310,311,312,313,314,326,327,341,],[-62,-32,-40,-44,-49,188,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-35,-172,-22,-172,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,]),'KEY_POINTER':([81,144,152,242,294,298,303,335,],[165,165,165,165,165,165,165,165,]),'COLON':([46,72,73,78,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,150,151,172,177,191,192,194,195,196,197,198,199,200,202,203,226,232,233,236,237,243,254,255,257,269,283,291,296,310,311,312,313,314,320,326,327,333,341,345,],[-62,-107,144,152,-32,-40,-44,-49,-18,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-172,-114,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-106,294,298,-119,303,-19,-35,-22,-20,-56,-66,-113,-46,-47,-26,-23,-31,347,-58,-57,-118,-52,360,]),'LCB':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,323,336,350,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-78,-79,-77,-75,-81,91,-80,-76,-82,91,91,91,91,-68,-70,-71,-69,91,-73,-72,91,-74,91,91,91,91,91,91,91,91,]),'KEY_INTEGER':([39,51,52,59,81,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,144,147,152,155,180,181,182,183,184,185,186,187,188,190,193,219,242,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,294,298,303,323,335,336,350,],[92,92,92,92,157,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,157,92,157,92,-78,-79,-77,-75,-81,92,-80,-76,-82,92,92,92,157,92,-68,-70,-71,-69,92,-73,-72,92,-74,92,92,92,92,92,157,157,157,92,157,92,92,]),'KEY_SET':([39,51,52,59,81,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,144,147,152,155,180,181,182,183,184,185,186,187,188,190,193,219,242,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,294,298,303,323,335,336,350,],[100,100,100,100,161,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,161,100,161,100,-78,-79,-77,-75,-81,100,-80,-76,-82,100,100,100,161,100,-68,-70,-71,-69,100,-73,-72,100,-74,100,100,100,100,100,161,161,161,100,161,100,100,]),'NEQUAL':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,255,256,257,258,269,283,291,310,311,312,313,314,326,327,341,],[-62,-32,-40,-44,-49,187,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-35,-172,-22,-172,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,]),'KEY_BEGIN':([4,5,6,7,8,10,11,12,16,17,20,21,22,23,24,26,46,54,80,82,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,126,127,133,134,146,148,172,177,191,192,194,195,196,197,198,199,200,202,203,226,254,255,257,269,283,291,310,311,312,313,314,326,327,341,369,],[-172,9,-6,-5,-172,-172,-14,-172,-10,-3,-4,-12,-2,-8,-13,-172,-62,129,154,-9,-32,-40,-44,-49,-18,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,209,210,-55,-59,-11,-7,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-19,-35,-22,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,373,]),'KEY_VAR':([4,5,6,7,8,10,11,12,16,17,20,21,22,23,24,26,80,82,146,148,],[-172,10,-6,-5,-172,-172,-14,-172,-10,-3,-4,-12,-2,-8,-13,-172,10,-9,-11,-7,]),'KEY_STRING':([39,51,52,59,81,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,144,147,152,155,180,181,182,183,184,185,186,187,188,190,193,219,242,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,294,298,303,323,335,336,350,],[109,109,109,109,164,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,164,109,164,109,-78,-79,-77,-75,-81,109,-80,-76,-82,109,109,109,164,109,-68,-70,-71,-69,109,-73,-72,109,-74,109,109,109,109,109,164,164,164,109,164,109,109,]),'RCB':([46,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,178,191,192,194,195,196,197,198,199,200,202,203,226,254,255,257,269,283,291,309,310,311,312,313,314,326,327,341,],[-62,-32,177,-40,-44,-49,-18,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-54,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-19,-35,-22,-20,-56,-66,341,-46,-47,-26,-23,-31,-58,-57,-52,]),'KEY_READBOOL':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,36,-16,-172,-15,-172,-172,36,-172,36,36,36,-172,-172,-172,36,36,36,-172,-172,36,36,]),'COMMA':([46,72,73,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,150,172,177,178,179,191,192,194,195,196,197,198,199,200,202,203,204,206,224,225,226,232,236,237,240,241,243,254,255,257,269,283,285,291,300,301,308,310,311,312,313,314,316,326,327,330,333,341,356,],[-62,-107,145,-32,-40,-44,-49,-18,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-172,-61,-53,-54,253,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,270,272,290,-65,-67,-106,297,-119,-98,-172,145,-19,-35,-22,-20,-56,290,-66,336,-97,340,-46,-47,-26,-23,-31,343,-58,-57,-64,-118,-52,-96,]),'KEY_DO':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,54,-16,-172,-15,-172,-172,54,-172,54,54,54,-172,-172,-172,54,54,54,-172,-172,54,54,]),'KEY_ADD':([135,],[220,]),'KEY_IN':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,255,256,257,258,269,283,291,310,311,312,313,314,326,327,341,],[-62,-32,-40,-44,-49,184,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-35,-172,-22,-172,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,]),'VSTRING':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,249,253,259,260,261,262,263,264,265,266,267,270,276,278,286,287,290,323,336,350,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-78,-79,-77,-75,-81,99,-80,-76,-82,99,99,99,99,99,-68,-70,-71,-69,99,-73,-72,99,-74,99,99,99,99,99,99,99,99,99,]),'KEY_FPRINTF':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,43,-16,-172,-15,-172,-172,43,-172,43,43,43,-172,-172,-172,43,43,43,-172,-172,43,43,]),'KEY_RETURN':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,39,-16,-172,-15,-172,-172,39,-172,39,39,39,-172,-172,-172,39,39,39,-172,-172,39,39,]),'IDENT':([2,8,9,10,12,14,16,17,18,19,20,21,22,23,30,39,48,51,52,59,77,79,81,82,84,85,87,88,89,91,101,107,110,111,116,118,119,120,121,122,124,125,128,129,130,131,136,137,138,140,141,142,143,144,145,146,147,148,152,154,155,169,180,181,182,183,184,185,186,187,188,190,193,201,210,213,216,217,218,219,239,242,246,253,259,260,261,262,263,264,265,266,267,272,276,277,278,282,286,287,290,294,295,297,298,299,303,304,323,335,336,339,347,348,350,351,360,361,364,368,370,373,374,375,],[3,-172,-172,-172,-172,25,-10,27,46,-16,72,-12,75,-8,83,46,123,46,46,46,150,153,168,-9,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-172,46,46,46,46,46,46,-15,46,46,168,232,-11,46,-7,168,-172,46,72,-78,-79,-77,-75,-81,46,-80,-76,-82,46,46,46,-172,46,-172,46,46,46,46,168,46,46,-68,-70,-71,-69,46,-73,-72,46,-74,46,46,46,46,46,46,46,46,168,150,333,168,-120,168,72,46,168,46,72,-172,46,46,-172,-172,46,46,46,-172,-172,46,46,]),'PLUS':([39,46,51,52,59,87,88,89,90,91,92,93,94,96,97,99,100,101,102,103,104,105,106,108,109,112,113,114,115,121,123,124,125,131,133,134,136,137,138,140,142,143,147,155,172,177,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,202,203,219,226,253,255,256,257,258,269,276,278,283,286,287,290,291,310,311,312,313,314,323,326,327,336,341,350,],[118,-62,118,118,118,118,118,118,-32,118,-40,-44,-49,-50,-42,-51,-45,118,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,118,-63,118,118,118,-55,-59,118,118,118,118,118,118,118,118,-61,-53,-78,-79,-77,-75,-81,118,-80,-76,-82,118,-38,-172,118,-39,-25,-27,265,-24,-34,-37,-172,-36,118,-67,118,-35,-172,265,-172,265,118,118,-56,118,118,118,-66,-46,-47,-26,-23,-31,118,-58,-57,118,-52,118,]),'KEY_READREAL':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,49,-16,-172,-15,-172,-172,49,-172,49,49,49,-172,-172,-172,49,49,49,-172,-172,49,49,]),'OR':([46,90,92,93,94,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,255,256,257,258,269,283,291,310,311,312,313,314,326,327,341,],[-62,-32,-40,-44,-49,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,267,-24,-34,-37,-172,-36,-67,-35,-172,267,-172,267,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,]),'KEY_READINT':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,50,-16,-172,-15,-172,-172,50,-172,50,50,50,-172,-172,-172,50,50,50,-172,-172,50,50,]),'ASSIGN':([32,46,60,65,75,106,108,123,133,134,172,212,283,326,327,],[-60,-62,-172,140,147,-172,-60,-63,-55,-59,-61,140,-56,-58,-57,]),'KEY_CASE':([19,141,209,275,317,347,361,],[-16,-15,276,276,276,-172,-152,]),'KEY_WHILE':([9,18,19,129,141,154,210,213,216,239,277,279,282,347,351,360,361,364,368,370,373,374,375,],[-172,52,-16,-172,-15,-172,-172,52,-172,52,52,323,52,-172,-172,-172,52,52,52,-172,-172,52,52,]),'KEY_FOR':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,53,-16,-172,-15,-172,-172,53,-172,53,53,53,-172,-172,-172,53,53,53,-172,-172,53,53,]),'KEY_REAL':([39,51,52,59,81,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,144,147,152,155,180,181,182,183,184,185,186,187,188,190,193,219,242,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,294,298,303,323,335,336,350,],[93,93,93,93,158,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,158,93,158,93,-78,-79,-77,-75,-81,93,-80,-76,-82,93,93,93,158,93,-68,-70,-71,-69,93,-73,-72,93,-74,93,93,93,93,93,158,158,158,93,158,93,93,]),'VCHAR':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,323,336,340,350,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-78,-79,-77,-75,-81,96,-80,-76,-82,96,96,96,96,-68,-70,-71,-69,96,-73,-72,96,-74,96,96,96,96,96,96,96,96,96,]),'KEY_TYPE':([4,5,6,7,8,10,11,12,16,17,20,21,22,23,24,26,80,82,146,148,],[-172,8,-6,-5,-172,-172,-14,-172,-10,-3,-4,-12,-2,-8,-13,-172,8,-9,-11,-7,]),'NOT':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,323,336,350,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-78,-79,-77,-75,-81,119,-80,-76,-82,119,119,119,119,-68,-70,-71,-69,119,-73,-72,119,-74,119,119,119,119,119,119,119,119,]),'EQUAL':([27,32,46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,226,255,256,257,258,269,283,291,310,311,312,313,314,326,327,341,],[81,86,-62,-32,-40,-44,-49,183,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-67,-35,-172,-22,-172,-20,-56,-66,-46,-47,-26,-23,-31,-58,-57,-52,]),'RSB':([46,90,92,93,94,95,96,97,99,100,102,103,104,105,106,108,109,112,113,114,115,123,133,134,172,177,191,192,194,195,196,197,198,199,200,202,203,225,226,254,255,257,269,283,285,291,310,311,312,313,314,326,327,330,341,],[-62,-32,-40,-44,-49,-18,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-55,-59,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-65,-67,-19,-35,-22,-20,-56,327,-66,-46,-47,-26,-23,-31,-58,-57,-64,-52,]),'KEY_CONST':([4,5,6,7,8,10,11,12,16,17,20,21,22,23,24,26,80,82,146,148,],[-172,12,-6,-5,-172,-172,-14,-172,-10,-3,-4,-12,-2,-8,-13,-172,12,-9,-11,-7,]),'$end':([1,170,],[0,-1,]),'SCOLON':([3,9,13,15,18,19,28,29,32,33,37,38,39,40,41,42,44,46,55,56,60,62,63,65,66,67,68,70,74,76,78,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,112,113,114,115,123,129,133,134,139,141,149,151,153,154,156,157,158,159,160,161,162,163,164,166,167,168,169,172,177,191,192,194,195,196,197,198,199,200,202,203,210,211,213,216,226,227,230,231,234,235,238,239,244,245,247,248,250,251,252,254,255,257,269,271,273,274,277,280,281,282,283,288,289,291,292,293,296,302,304,305,310,311,312,313,314,321,322,325,326,327,331,332,334,337,338,339,341,342,346,347,349,351,352,353,354,355,357,360,361,364,365,366,367,368,370,371,372,373,374,375,376,],[4,-172,24,26,-172,-16,82,-131,-60,-122,-123,-134,-130,-125,-137,-126,-133,-62,-124,-132,-172,-127,-121,-143,141,-136,-128,-135,146,148,-112,-32,-40,-44,-49,-18,-50,-42,-129,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-172,-33,-28,-63,-172,-55,-59,-142,-15,-172,-114,-110,-172,-85,-89,-93,-86,-91,-94,-87,-90,-92,-83,-88,-84,-172,-61,-53,-38,-172,-39,-25,-27,-21,-24,-34,-37,-172,-36,-172,278,-172,-172,-67,-138,-162,-109,295,-116,-111,-172,-105,304,-103,-169,-156,-157,-167,-19,-35,-22,-20,-159,-165,-164,-172,-141,-166,-172,-56,-160,-158,-66,-163,-161,-113,-108,-172,-99,-46,-47,-26,-23,-31,-153,348,-135,-58,-57,-17,-115,-117,-104,-102,-172,-52,-170,-149,-172,-155,-172,-145,-139,-140,-95,304,-172,-172,-172,-100,-168,-171,-172,-172,-144,-148,-172,-172,-172,-154,]),'AND':([46,90,92,93,94,96,97,99,100,102,103,104,105,106,108,109,112,114,115,123,133,134,172,177,191,194,195,196,199,200,203,226,255,256,258,283,291,310,311,312,314,326,327,341,],[-62,-32,-40,-44,-49,-50,-42,-51,-45,-41,-30,-48,-29,-172,-60,-43,-172,-33,-28,-63,-55,-59,-61,-53,-38,-39,261,-27,-34,-37,-36,-67,-35,-172,-172,-56,-66,-46,-47,-26,-31,-58,-57,-52,]),'KEY_WRITEBOOL':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,61,-16,-172,-15,-172,-172,61,-172,61,61,61,-172,-172,-172,61,61,61,-172,-172,61,61,]),'KEY_EXIT':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,68,-16,-172,-15,-172,-172,68,-172,68,68,68,-172,-172,-172,68,68,68,-172,-172,68,68,]),'KEY_WRITELN':([9,18,19,129,141,154,210,213,216,239,277,282,347,351,360,361,364,368,370,373,374,375,],[-172,71,-16,-172,-15,-172,-172,71,-172,71,71,71,-172,-172,-172,71,71,71,-172,-172,71,71,]),'KEY_CHR':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,180,181,182,183,184,185,186,187,188,190,193,219,253,259,260,261,262,263,264,265,266,267,276,278,286,287,290,323,336,350,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-78,-79,-77,-75,-81,107,-80,-76,-82,107,107,107,107,-68,-70,-71,-69,107,-73,-72,107,-74,107,107,107,107,107,107,107,107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ioStatement':([18,213,239,277,282,361,364,368,374,375,],[29,29,29,29,29,29,29,29,29,29,]),'set':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,185,190,193,219,253,263,266,276,278,286,287,290,323,336,350,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'assignment':([18,128,213,239,277,282,348,361,364,368,374,375,],[63,211,63,63,63,63,362,63,63,63,63,63,]),'typeDeclaration':([17,],[28,]),'simpleExpression':([39,51,52,59,87,88,89,91,101,121,124,125,131,136,137,138,140,142,143,147,155,185,190,193,219,253,276,278,286,287,290,323,336,350,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,254,95,95,95,95,95,95,95,95,95,95,95,95,]),'identdef':([18,39,51,52,59,84,85,87,88,89,91,101,107,110,111,116,118,119,120,121,122,124,125,128,130,131,136,137,138,140,142,143,147,155,185,190,193,201,213,217,218,219,239,246,253,263,266,272,276,277,278,282,286,287,290,323,336,348,350,361,364,368,374,375,],[32,108,108,108,108,171,108,108,108,108,108,108,108,108,108,108,108,108,204,108,206,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,32,283,108,108,32,108,108,108,108,316,108,32,108,32,108,108,108,108,108,108,108,32,32,32,32,32,]),'addOperator':([197,257,269,],[266,266,266,]),'expression':([39,51,52,59,87,88,89,91,101,121,124,125,131,136,137,138,140,142,143,147,155,190,193,219,253,276,278,286,287,290,323,336,350,],[98,126,127,132,174,175,176,178,189,205,207,208,215,222,223,225,227,228,229,233,240,189,189,225,178,320,322,328,329,330,349,240,363,]),'switchStatement':([18,213,239,277,282,361,364,368,374,375,],[55,55,55,55,55,55,55,55,55,55,]),'recordType':([81,144,152,242,294,298,303,335,],[162,162,162,162,162,162,162,162,]),'declarationSequence':([4,26,],[5,80,]),'procedureCall':([18,213,239,277,282,361,364,368,374,375,],[33,33,33,33,33,33,33,33,33,33,]),'baseType':([246,],[306,]),'char':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,185,190,193,219,253,263,266,276,278,286,287,290,323,336,340,350,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,358,105,]),'ifss':([282,],[324,]),'statement':([18,213,239,277,282,361,364,368,374,375,],[66,66,66,66,66,66,66,66,66,66,]),'whileStatement':([18,213,239,277,282,361,364,368,374,375,],[40,40,40,40,40,40,40,40,40,40,]),'setStatement':([18,213,239,277,282,361,364,368,374,375,],[41,41,41,41,41,41,41,41,41,41,]),'string':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,185,190,193,219,249,253,263,266,270,276,278,286,287,290,323,336,350,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,308,103,103,103,315,103,103,103,103,103,103,103,103,]),'forStatement':([18,213,239,277,282,361,364,368,374,375,],[42,42,42,42,42,42,42,42,42,42,]),'procedureHeading':([7,],[15,]),'mulOperator':([195,],[263,]),'pointerType':([81,144,152,242,294,298,303,335,],[167,167,167,167,167,167,167,167,]),'arrayType':([81,144,152,242,294,298,303,335,],[159,159,159,159,159,159,159,159,]),'designator2':([60,106,],[133,133,]),'term':([39,51,52,59,87,88,89,91,101,110,118,121,124,125,131,136,137,138,140,142,143,147,155,185,190,193,219,253,266,276,278,286,287,290,323,336,350,],[113,113,113,113,113,113,113,113,113,192,202,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,313,113,113,113,113,113,113,113,113,]),'procedureDeclaration':([7,],[13,]),'number':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,185,190,193,219,253,263,266,276,278,286,287,290,323,336,350,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'termss':([112,256,258,],[195,195,195,]),'comass':([241,],[300,]),'formalParameters':([25,],[78,]),'length':([155,336,],[241,356,]),'case':([209,275,317,],[275,317,317,]),'variableDeclaration':([20,],[74,]),'expList':([138,219,],[224,285,]),'procedureBody':([26,],[79,]),'conss':([12,],[22,]),'relation':([95,],[185,]),'typess':([8,],[17,]),'identList':([20,169,304,339,],[73,243,243,243,]),'fieldListSequence':([169,339,],[245,357,]),'fieldList':([169,304,339,],[247,338,247,]),'fpSection':([77,295,],[149,332,]),'statementSequence':([9,129,154,210,216,347,351,360,370,373,],[18,213,239,277,282,361,364,368,374,375,]),'fps':([150,],[236,]),'qualident':([18,39,51,52,59,85,87,88,89,91,101,107,110,111,116,118,119,121,124,125,128,130,131,136,137,138,140,142,143,147,155,185,190,193,201,213,218,219,239,246,253,263,266,276,277,278,282,286,287,290,323,336,348,350,361,364,368,374,375,],[60,106,106,106,106,172,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,60,284,106,60,307,106,106,106,106,60,106,60,106,106,106,106,106,106,106,60,60,60,60,60,]),'simpless':([113,192,202,],[197,257,269,]),'varType':([81,144,152,242,294,298,303,335,],[156,156,156,156,156,156,156,156,]),'element':([91,253,],[179,309,]),'casess':([275,317,],[318,344,]),'constantDeclaration':([22,],[76,]),'formalss':([149,],[234,]),'doWhileStatement':([18,213,239,277,282,361,364,368,374,375,],[62,62,62,62,62,62,62,62,62,62,]),'factor':([39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,131,136,137,138,140,142,143,147,155,185,190,193,219,253,263,266,276,278,286,287,290,323,336,350,],[112,112,112,112,112,112,112,112,112,191,112,194,200,112,203,112,112,112,112,112,112,112,112,112,112,112,112,112,256,258,112,112,312,112,112,112,112,112,112,112,112,112,]),'type':([81,144,152,242,294,298,303,335,],[166,231,238,302,331,334,337,355,]),'empty':([4,5,8,9,10,12,18,26,60,80,106,112,113,129,149,150,154,169,192,202,210,213,216,239,241,256,258,275,277,282,304,317,339,347,351,360,361,364,368,370,373,374,375,],[6,11,16,19,21,23,70,6,134,11,134,196,198,19,235,237,19,244,198,198,19,70,19,70,301,196,196,319,70,325,244,319,244,19,19,19,70,70,70,19,19,70,70,]),'ifStatement':([18,213,239,277,282,361,364,368,374,375,],[37,37,37,37,37,37,37,37,37,37,]),'module':([0,],[1,]),'actualParameters':([65,114,],[139,199,]),'varss':([10,],[20,]),'fileStatement':([18,213,239,277,282,361,364,368,374,375,],[56,56,56,56,56,56,56,56,56,56,]),'memoryalloc':([18,213,239,277,282,361,364,368,374,375,],[67,67,67,67,67,67,67,67,67,67,]),'procss':([5,80,],[7,7,]),'designator':([18,39,51,52,59,87,88,89,91,101,107,110,111,116,118,119,121,124,125,128,130,131,136,137,138,140,142,143,147,155,185,190,193,201,213,219,239,253,263,266,276,277,278,282,286,287,290,323,336,348,350,361,364,368,374,375,],[65,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,212,214,114,114,114,114,114,114,114,114,114,114,114,114,268,65,114,65,114,114,114,114,65,114,65,114,114,114,114,114,212,114,65,65,65,65,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> empty','conss',1,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> empty','typess',1,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> empty','varss',1,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> empty','procss',1,'p_procss','par.py',61),
  ('statementSequence -> statementSequence statement SCOLON','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> empty','statementSequence',1,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> char','factor',1,'p_factor','par.py',108),
  ('factor -> string','factor',1,'p_factor','par.py',109),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',110),
  ('factor -> set','factor',1,'p_factor','par.py',111),
  ('factor -> designator','factor',1,'p_factor','par.py',112),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',113),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',114),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',115),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',119),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',125),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',163),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',164),
  ('designator2 -> designator2 LRB qualident RRB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB fpSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON fpSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('fpSection -> IDENT fps COLON type','fpSection',4,'p_fpSection','par.py',325),
  ('fps -> fps COMMA IDENT','fps',3,'p_fps','par.py',330),
  ('fps -> empty','fps',1,'p_fps','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',356),
  ('statement -> setStatement','statement',1,'p_statement','par.py',357),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',362),
  ('setStatement -> qualident DOT KEY_ADD LRB expression RRB','setStatement',6,'p_setStatement','par.py',367),
  ('setStatement -> qualident DOT KEY_DEL LRB expression RRB','setStatement',6,'p_setStatement','par.py',368),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',374),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',380),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',381),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',386),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',387),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',392),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',393),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',398),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',399),
  ('casess -> case casess','casess',2,'p_casess','par.py',404),
  ('casess -> empty','casess',1,'p_casess','par.py',405),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',410),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',415),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',420),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',425),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',430),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',431),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',432),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',433),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',434),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',435),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',441),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',446),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',447),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',448),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',449),
  ('empty -> <empty>','empty',0,'p_empty','par.py',454),
]
