
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITELN LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tstatementSequence : statementSequence SCOLON statement\n\t\t\t\t\t\t\t  | statement\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\n\t\t\tnumber : VINTEGER \n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\t\t\t   | qualident\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT identdef\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | MULTIPLY IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT SCOLON\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT COLON type\n\t\t\n\t\t\tformalParameters : LRB FPSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON FPSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tFPSection : IDENT FPs COLON type\n\t\t\n\t\t\tFPs : FPs COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : casess OR case\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE COLON expression statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO statementSequence KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'AND':([15,31,56,58,60,61,62,63,65,66,67,69,71,72,74,76,79,80,82,83,87,90,114,119,120,121,122,133,135,136,151,154,189,197,204,224,226,227,247,],[-60,-54,-46,-58,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-47,-44,-42,-33,-28,-31,-61,-53,-39,-51,-27,184,-38,-36,-37,-34,-65,-59,-35,-55,-64,-26,-57,-56,-50,]),'KEY_OF':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,190,191,192,197,204,211,212,222,224,226,227,235,236,247,269,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-19,-22,-20,-55,-64,-156,-96,-23,-26,-57,-56,255,-95,-50,-94,]),'KEY_IN':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,191,192,197,204,222,224,226,227,247,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,127,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-22,-20,-55,-64,-23,-26,-57,-56,-50,]),'IDENT':([1,7,8,9,10,11,12,13,14,15,18,26,30,31,35,42,45,46,47,48,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,92,93,95,96,97,99,100,106,107,108,109,110,113,114,115,116,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,147,151,154,156,158,159,162,168,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,197,204,205,213,218,222,224,226,227,232,240,241,243,244,245,247,251,255,256,257,266,273,278,],[3,-156,-156,15,-156,49,-10,-12,53,-60,15,87,15,15,15,-58,15,15,105,-8,15,-46,15,-58,-156,-29,-48,-40,-43,15,-45,-41,-156,15,-30,15,-32,-49,-18,-47,15,-44,15,15,-42,-33,15,-28,-31,15,15,15,-61,-53,144,15,15,15,15,15,15,15,161,-9,161,176,-11,15,-39,-24,-21,-51,-27,-25,-38,-78,-76,-77,-79,-75,15,-73,-74,-80,-36,-156,-37,-34,-156,15,15,15,15,-65,-59,15,-7,15,15,53,15,-72,-70,-71,15,15,-69,-67,15,-66,-68,-35,-19,-22,-20,15,-55,-64,15,15,161,-23,-26,-57,-56,15,53,161,15,15,15,-50,15,161,15,53,15,15,15,]),'KEY_ELSEIF':([15,16,20,21,22,25,27,28,29,30,31,34,36,39,40,41,42,43,44,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,88,90,92,98,113,114,115,116,119,120,121,122,133,134,135,136,137,145,151,153,154,178,189,190,191,192,194,195,197,200,202,204,207,220,221,222,224,226,227,228,246,247,249,252,272,273,274,275,279,280,282,],[-60,-125,-119,-120,-132,-123,-124,-121,-122,-128,-54,-16,-126,-130,-136,-131,-58,-129,-133,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-127,-53,-156,-135,-156,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-15,-65,-134,-59,-156,-35,-19,-22,-20,-151,-153,-55,-150,-149,-64,-148,-140,245,-23,-26,-57,-56,-146,-138,-50,-154,-142,-137,-156,-155,-152,-139,-141,-147,]),'KEY_TYPE':([4,5,6,7,8,10,11,12,13,14,47,48,107,110,158,],[-156,-6,7,-156,-156,-156,-3,-10,-12,-4,-2,-8,-9,-11,-7,]),'NEQUAL':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,191,192,197,204,222,224,226,227,247,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,131,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-22,-20,-55,-64,-23,-26,-57,-56,-50,]),'KEY_BREAK':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[41,-60,-54,41,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,41,41,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,41,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,41,-50,41,41,41,41,]),'KEY_IF':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[18,-60,-54,18,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,18,18,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,18,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,18,-50,18,18,18,18,]),'KEY_FREAD':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[19,-60,-54,19,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,19,19,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,19,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,19,-50,19,19,19,19,]),'OR':([15,16,20,21,22,25,27,28,29,30,31,34,36,39,40,41,42,43,44,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,88,90,92,98,114,115,116,119,120,121,122,133,134,135,136,137,145,151,153,154,189,190,191,192,194,195,197,200,202,204,207,209,222,224,226,227,228,233,234,246,247,249,251,252,265,267,272,274,275,280,282,],[-60,-125,-119,-120,-132,-123,-124,-121,-122,-128,-54,-16,-126,-130,-136,-131,-58,-129,-133,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-127,-53,-156,-135,-39,-24,179,-51,-27,-25,-38,-36,-156,-37,-34,-156,-15,-65,-134,-59,-35,-19,-22,-20,-151,-153,-55,-150,-149,-64,-148,-156,-23,-26,-57,-56,-146,254,-144,-138,-50,-154,-156,-142,-145,-143,-137,-155,-152,-141,-147,]),'VINTEGER':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,232,245,248,256,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-78,-76,-77,-79,-75,56,-73,-74,-80,56,56,56,56,56,-72,-70,-71,56,56,-69,-67,56,-66,-68,56,56,56,263,56,]),'$end':([2,199,],[0,-1,]),'KEY_THEN':([15,31,55,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,190,191,192,197,204,222,224,226,227,247,262,],[-60,-54,113,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,-50,273,]),'KEY_READ':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[23,-60,-54,23,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,23,23,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,23,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,23,-50,23,23,23,23,]),'KEY_END':([9,15,16,20,21,22,25,27,28,29,30,31,32,34,36,39,40,41,42,43,44,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,88,90,92,98,113,114,115,116,119,120,121,122,133,134,135,136,137,145,147,151,153,154,161,163,164,165,166,167,168,169,170,171,172,174,178,189,190,191,192,194,195,197,200,201,202,204,207,209,214,215,217,220,221,222,224,226,227,228,233,234,239,240,242,244,246,247,249,251,252,257,258,259,261,265,266,267,268,270,272,273,274,275,276,277,278,279,280,281,282,],[-156,-60,-125,-119,-120,-132,-123,-124,-121,-122,-128,-54,91,-16,-126,-130,-136,-131,-58,-129,-133,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-127,-53,-156,-135,-156,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-15,-156,-65,-134,-59,-82,-91,-83,-86,-84,-87,-156,-85,-90,-92,-88,-89,-156,-35,-19,-22,-20,-151,-153,-55,-150,228,-149,-64,-148,-156,239,-101,-103,-140,246,-23,-26,-57,-56,-146,252,-144,-97,-156,-106,-156,-138,-50,-154,-156,-142,-156,-100,-102,272,-145,-156,-143,-93,277,-137,-156,-155,-152,280,-98,-156,-139,-141,282,-147,]),'KEY_ELSE':([15,16,20,21,22,25,27,28,29,30,31,34,36,39,40,41,42,43,44,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,88,90,92,98,113,114,115,116,119,120,121,122,133,134,135,136,137,145,151,153,154,178,189,190,191,192,194,195,197,200,202,204,207,209,220,221,222,224,226,227,228,233,234,246,247,249,251,252,265,267,272,273,274,275,279,280,282,],[-60,-125,-119,-120,-132,-123,-124,-121,-122,-128,-54,-16,-126,-130,-136,-131,-58,-129,-133,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-127,-53,-156,-135,-156,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-15,-65,-134,-59,-156,-35,-19,-22,-20,-151,-153,-55,-150,-149,-64,-148,-156,-140,244,-23,-26,-57,-56,-146,253,-144,-138,-50,-154,-156,-142,-145,-143,-137,-156,-155,-152,-139,-141,-147,]),'KEY_FOPEN':([101,],[155,]),'DIVIDE':([15,31,56,58,60,61,62,63,65,66,67,69,71,72,74,76,79,80,82,83,87,90,114,119,120,121,122,133,135,136,151,154,189,197,204,224,226,227,247,],[-60,-54,-46,-58,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-47,-44,-42,-33,-28,-31,-61,-53,-39,-51,-27,185,-38,-36,-37,-34,-65,-59,-35,-55,-64,-26,-57,-56,-50,]),'KEY_INTEGER':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,106,108,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,218,232,241,245,255,256,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,167,167,-78,-76,-77,-79,-75,62,-73,-74,-80,62,62,62,62,62,-72,-70,-71,62,62,-69,-67,62,-66,-68,62,167,62,167,62,167,62,]),'GTEQ':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,191,192,197,204,222,224,226,227,247,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,124,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-22,-20,-55,-64,-23,-26,-57,-56,-50,]),'RCB':([15,31,56,58,59,60,61,62,63,64,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,117,119,120,121,122,133,134,135,136,137,151,154,189,190,191,192,197,204,222,223,224,226,227,247,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,119,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-52,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-19,-22,-20,-55,-64,-23,247,-26,-57,-56,-50,]),'MULTIPLY':([9,15,18,30,31,35,42,45,46,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,93,95,96,97,99,100,113,114,115,116,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,147,151,154,156,159,162,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,197,204,205,213,222,224,226,227,232,243,244,245,247,251,256,266,273,278,],[26,-60,26,26,26,26,-58,26,26,26,-46,26,-58,-156,-29,-48,-40,-43,26,-45,-41,-156,26,-30,26,-32,-49,-18,-47,26,-44,26,26,-42,-33,26,-28,-31,26,26,26,-61,-53,26,26,26,26,26,26,26,26,-39,-24,-21,-51,-27,187,-38,-78,-76,-77,-79,-75,26,-73,-74,-80,-36,-156,-37,-34,-156,26,26,26,26,-65,-59,26,26,26,26,-72,-70,-71,26,26,-69,-67,26,-66,-68,-35,-19,-22,-20,26,-55,-64,26,26,-23,-26,-57,-56,26,26,26,26,-50,26,26,26,26,26,]),'KEY_VAR':([4,5,6,7,8,10,11,12,13,14,47,48,107,110,158,],[-156,-6,8,-156,-156,-156,-3,-10,-12,-4,-2,-8,-9,-11,-7,]),'KEY_STRING':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,106,108,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,218,232,241,245,255,256,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,170,170,-78,-76,-77,-79,-75,63,-73,-74,-80,63,63,63,63,63,-72,-70,-71,63,63,-69,-67,63,-66,-68,63,170,63,170,63,170,63,]),'LCB':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,232,245,256,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-78,-76,-77,-79,-75,64,-73,-74,-80,64,64,64,64,64,-72,-70,-71,64,64,-69,-67,64,-66,-68,64,64,64,64,]),'KEY_ARRAY':([106,108,218,241,255,],[162,162,162,162,162,]),'KEY_SET':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,106,108,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,218,232,241,245,255,256,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,171,171,-78,-76,-77,-79,-75,65,-73,-74,-80,65,65,65,65,65,-72,-70,-71,65,65,-69,-67,65,-66,-68,65,171,65,171,65,171,65,]),'KEY_BOOLEAN':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,106,108,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,218,232,241,245,255,256,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,172,172,-78,-76,-77,-79,-75,66,-73,-74,-80,66,66,66,66,66,-72,-70,-71,66,66,-69,-67,66,-66,-68,66,172,66,172,66,172,66,]),'KEY_RECORD':([106,108,218,241,255,],[168,168,168,168,168,]),'RRB':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,97,114,115,116,119,120,121,122,123,133,134,135,136,137,139,140,146,148,150,151,152,153,154,189,190,191,192,196,197,204,222,224,226,227,229,230,237,238,247,260,263,264,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,151,-39,-24,-21,-51,-27,-25,-38,189,-36,-156,-37,-34,-156,194,195,200,202,-63,-65,204,-134,-59,-35,-19,-22,-20,226,-55,-64,-23,-26,-57,-56,249,-62,-99,257,-50,271,274,275,]),'KEY_TO':([173,],[218,]),'KEY_RETURN':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[30,-60,-54,30,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,30,30,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,30,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,30,-50,30,30,30,30,]),'MINUS':([15,18,30,31,35,46,56,58,59,60,61,62,63,64,65,66,67,69,70,71,72,74,76,79,80,82,83,85,87,90,93,95,97,99,114,115,116,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,143,151,154,156,159,162,177,183,189,191,192,197,204,205,222,224,226,227,232,245,247,256,],[-60,77,77,-54,77,77,-46,-58,-156,-29,-48,-40,-43,77,-45,-41,-156,-30,77,-32,-49,-47,-44,-42,-33,-28,-31,77,-61,-53,77,77,77,77,-39,-24,181,-51,-27,-25,-38,-78,-76,-77,-79,-75,77,-73,-74,-80,-36,-156,-37,-34,-156,77,-65,-59,77,77,77,77,77,-35,181,181,-55,-64,77,-23,-26,-57,-56,77,77,-50,77,]),'KEY_CONST':([4,5,6,7,8,10,11,12,13,14,47,48,107,110,158,],[-156,-6,10,-156,-156,-156,-3,-10,-12,-4,-2,-8,-9,-11,-7,]),'RSB':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,150,151,154,189,190,191,192,197,198,204,222,224,226,227,230,247,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-63,-65,-59,-35,-19,-22,-20,-55,227,-64,-23,-26,-57,-56,-62,-50,]),'LRB':([15,17,18,19,23,24,30,31,33,35,37,38,40,42,46,57,58,64,68,70,75,77,78,80,81,85,87,89,90,93,95,97,99,124,125,126,127,128,129,130,131,132,143,154,155,156,159,162,168,177,179,180,181,182,183,184,185,186,187,188,197,205,226,227,232,245,256,],[-60,54,70,84,85,86,70,-54,93,70,95,96,97,-58,70,70,-58,70,70,70,70,70,70,97,70,70,-61,141,-53,70,70,70,70,-78,-76,-77,-79,-75,70,-73,-74,-80,70,-59,206,70,70,70,213,70,-72,-70,-71,70,70,-69,-67,70,-66,-68,-55,70,-57,-56,70,70,70,]),'KEY_IS':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,191,192,197,204,222,224,226,227,247,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,132,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-22,-20,-55,-64,-23,-26,-57,-56,-50,]),'KEY_FCLOSE':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[24,-60,-54,24,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,24,24,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,24,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,24,-50,24,24,24,24,]),'KEY_POINTER':([106,108,218,241,255,],[173,173,173,173,173,]),'KEY_FOR':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[17,-60,-54,17,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,17,17,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,17,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,17,-50,17,17,17,17,]),'KEY_BEGIN':([4,5,6,7,8,10,11,12,13,14,15,31,47,48,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,94,103,107,110,114,115,116,119,120,121,122,133,134,135,136,137,151,154,158,189,190,191,192,197,204,222,224,226,227,247,271,],[-156,-6,9,-156,-156,-156,-3,-10,-12,-4,-60,-54,-2,-8,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,147,157,-9,-11,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-7,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,-50,278,]),'VREAL':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,232,245,256,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-78,-76,-77,-79,-75,74,-73,-74,-80,74,74,74,74,74,-72,-70,-71,74,74,-69,-67,74,-66,-68,74,74,74,74,]),'NOT':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,232,245,256,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-78,-76,-77,-79,-75,75,-73,-74,-80,75,75,75,75,75,-72,-70,-71,75,75,-69,-67,75,-66,-68,75,75,75,75,]),'VSTRING':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,203,205,206,232,245,256,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-78,-76,-77,-79,-75,72,-73,-74,-80,72,72,72,72,72,-72,-70,-71,72,72,-69,-67,72,-66,-68,72,72,72,72,72,72,]),'DOT':([15,42,58,87,90,144,197,226,227,],[-60,100,100,-61,142,199,-55,-57,-56,]),'LTEQ':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,191,192,197,204,222,224,226,227,247,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,125,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-22,-20,-55,-64,-23,-26,-57,-56,-50,]),'KEY_WRITELN':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[33,-60,-54,33,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,33,33,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,33,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,33,-50,33,33,33,33,]),'KEY_CONTINUE':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[22,-60,-54,22,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,22,22,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,22,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,22,-50,22,22,22,22,]),'KEY_WHILE':([9,15,16,20,21,22,25,27,28,29,30,31,34,36,39,40,41,42,43,44,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,88,90,92,98,102,113,114,115,116,119,120,121,122,133,134,135,136,137,145,147,151,153,154,189,190,191,192,194,195,197,200,202,204,207,222,224,226,227,228,244,246,247,249,251,252,266,272,273,274,275,278,280,282,],[35,-60,-125,-119,-120,-132,-123,-124,-121,-122,-128,-54,-16,-126,-130,-136,-131,-58,-129,-133,35,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-127,-53,35,-135,156,35,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-15,35,-65,-134,-59,-35,-19,-22,-20,-151,-153,-55,-150,-149,-64,-148,-23,-26,-57,-56,-146,35,-138,-50,-154,35,-142,35,-137,35,-155,-152,35,-141,-147,]),'KEY_EXIT':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[36,-60,-54,36,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,36,36,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,36,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,36,-50,36,36,36,36,]),'PLUS':([15,18,30,31,35,46,56,58,59,60,61,62,63,64,65,66,67,69,70,71,72,74,76,79,80,82,83,85,87,90,93,95,97,99,114,115,116,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,143,151,154,156,159,162,177,183,189,191,192,197,204,205,222,224,226,227,232,245,247,256,],[-60,81,81,-54,81,81,-46,-58,-156,-29,-48,-40,-43,81,-45,-41,-156,-30,81,-32,-49,-47,-44,-42,-33,-28,-31,81,-61,-53,81,81,81,81,-39,-24,180,-51,-27,-25,-38,-78,-76,-77,-79,-75,81,-73,-74,-80,-36,-156,-37,-34,-156,81,-65,-59,81,81,81,81,81,-35,180,180,-55,-64,81,-23,-26,-57,-56,81,81,-50,81,]),'SCOLON':([3,9,15,16,20,21,22,25,27,28,29,30,31,32,34,36,39,40,41,42,43,44,45,50,52,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,88,90,92,98,102,104,112,113,114,115,116,119,120,121,122,133,134,135,136,137,145,147,151,153,154,160,161,163,164,165,166,167,168,169,170,171,172,174,175,178,189,190,191,192,194,195,197,200,201,202,204,207,210,214,215,217,219,222,224,226,227,228,239,240,242,244,246,247,249,251,252,257,258,259,261,265,266,268,270,272,273,274,275,276,277,278,279,280,281,282,],[4,-156,-60,-125,-119,-120,-132,-123,-124,-121,-122,-128,-54,92,-16,-126,-130,-136,-131,-58,-129,-133,-156,107,110,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-127,-53,-156,-135,92,158,177,-156,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-15,-156,-65,-134,-59,-81,-82,-91,-83,-86,-84,-87,-156,-85,-90,-92,-88,-89,-107,92,-35,-19,-22,-20,-151,-153,-55,-150,92,-149,-64,-148,-17,240,-101,-103,243,-23,-26,-57,-56,-146,-97,-156,-106,-156,-138,-50,-154,-156,-142,-156,-100,-102,92,92,-156,-93,240,-137,-156,-155,-152,92,-98,-156,92,-141,92,-147,]),'KEY_CHR':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,232,245,256,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-78,-76,-77,-79,-75,68,-73,-74,-80,68,68,68,68,68,-72,-70,-71,68,68,-69,-67,68,-66,-68,68,68,68,68,]),'KEY_WRITE':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[37,-60,-54,37,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,37,37,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,37,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,37,-50,37,37,37,37,]),'VCHAR':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,232,245,250,256,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-78,-76,-77,-79,-75,61,-73,-74,-80,61,61,61,61,61,-72,-70,-71,61,61,-69,-67,61,-66,-68,61,61,61,61,61,]),'GT':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,191,192,197,204,222,224,226,227,247,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,126,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-22,-20,-55,-64,-23,-26,-57,-56,-50,]),'LT':([15,31,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,191,192,197,204,222,224,226,227,247,],[-60,-54,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,128,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-22,-20,-55,-64,-23,-26,-57,-56,-50,]),'KEY_CHAR':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,106,108,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,218,232,241,245,255,256,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,174,174,-78,-76,-77,-79,-75,79,-73,-74,-80,79,79,79,79,79,-72,-70,-71,79,79,-69,-67,79,-66,-68,79,174,79,174,79,174,79,]),'KEY_ABS':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,232,245,256,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-78,-76,-77,-79,-75,78,-73,-74,-80,78,78,78,78,78,-72,-70,-71,78,78,-69,-67,78,-66,-68,78,78,78,78,]),'MODULUS':([15,31,56,58,60,61,62,63,65,66,67,69,71,72,74,76,79,80,82,83,87,90,114,119,120,121,122,133,135,136,151,154,189,197,204,224,226,227,247,],[-60,-54,-46,-58,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-47,-44,-42,-33,-28,-31,-61,-53,-39,-51,-27,188,-38,-36,-37,-34,-65,-59,-35,-55,-64,-26,-57,-56,-50,]),'COMMA':([15,31,51,53,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,117,118,119,120,121,122,133,134,135,136,137,138,149,150,151,152,154,176,189,190,191,192,197,198,204,211,212,216,222,224,225,226,227,230,231,235,236,247,269,],[-60,-54,109,-105,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-52,183,-51,-27,-25,-38,-36,-156,-37,-34,-156,193,203,-63,-65,205,-59,-104,-35,-19,-22,-20,-55,205,-64,-156,-96,109,-23,-26,248,-57,-56,-62,250,256,-95,-50,-94,]),'KEY_ORD':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,232,245,256,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-78,-76,-77,-79,-75,57,-73,-74,-80,57,57,57,57,57,-72,-70,-71,57,57,-69,-67,57,-66,-68,57,57,57,57,]),'KEY_CASE':([157,254,],[208,208,]),'LSB':([15,87,90,197,226,227,],[-60,-61,143,-55,-57,-56,]),'ASSIGN':([15,31,40,42,58,87,90,105,111,154,197,226,227,],[-60,-54,99,-58,-58,-61,-53,159,99,-59,-55,-57,-56,]),'KEY_MODULE':([0,],[1,]),'COLON':([51,53,176,208,216,253,],[108,-105,-104,232,241,266,]),'KEY_REAL':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,106,108,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,218,232,241,245,255,256,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,163,163,-78,-76,-77,-79,-75,76,-73,-74,-80,76,76,76,76,76,-72,-70,-71,76,76,-69,-67,76,-66,-68,76,163,76,163,76,163,76,]),'EQUAL':([15,31,42,49,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,114,115,116,119,120,121,122,133,134,135,136,137,151,154,189,191,192,197,204,222,224,226,227,247,],[-60,-54,101,106,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,130,-47,-44,-42,-33,-28,-31,-61,-53,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,-65,-59,-35,-22,-20,-55,-64,-23,-26,-57,-56,-50,]),'KEY_FPRINTF':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[38,-60,-54,38,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,38,38,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,38,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,38,-50,38,38,38,38,]),'KEY_NIL':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,124,125,126,127,128,129,130,131,132,143,156,159,162,177,179,180,181,182,183,184,185,186,187,188,205,232,245,256,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-78,-76,-77,-79,-75,83,-73,-74,-80,83,83,83,83,83,-72,-70,-71,83,83,-69,-67,83,-66,-68,83,83,83,83,]),'KEY_DO':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[45,-60,-54,45,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,45,45,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,45,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,45,-50,45,45,45,45,]),'KEY_SWITCH':([9,15,31,45,56,58,59,60,61,62,63,65,66,67,69,71,72,73,74,76,79,80,82,83,87,90,92,113,114,115,116,119,120,121,122,133,134,135,136,137,147,151,154,189,190,191,192,197,204,222,224,226,227,244,247,251,266,273,278,],[46,-60,-54,46,-46,-58,-156,-29,-48,-40,-43,-45,-41,-156,-30,-32,-49,-18,-47,-44,-42,-33,-28,-31,-61,-53,46,46,-39,-24,-21,-51,-27,-25,-38,-36,-156,-37,-34,-156,46,-65,-59,-35,-19,-22,-20,-55,-64,-23,-26,-57,-56,46,-50,46,46,46,46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([18,30,35,46,64,70,85,93,95,97,99,143,156,159,162,177,183,205,232,245,256,],[55,88,94,103,117,123,139,146,148,150,153,150,207,210,212,219,117,230,251,262,212,]),'mulOperator':([121,],[186,]),'conss':([10,],[47,]),'constantDeclaration':([47,],[104,]),'doWhileStatement':([9,45,92,113,147,244,251,266,273,278,],[16,16,16,16,16,16,16,16,16,16,]),'identdef':([9,18,30,31,35,45,46,54,57,64,68,70,75,77,78,81,84,85,86,92,93,95,96,97,99,100,113,129,141,142,143,147,156,159,162,177,182,183,186,193,205,213,232,243,244,245,251,256,266,273,278,],[42,58,58,58,58,42,58,58,58,58,58,58,58,58,58,58,138,58,140,42,58,58,149,58,58,154,42,58,58,197,58,42,58,58,58,58,58,58,58,225,58,58,58,58,42,58,42,58,42,42,42,]),'type':([106,108,218,241,255,],[160,175,242,259,268,]),'fieldList':([168,240,257,],[215,258,215,]),'pointerType':([106,108,218,241,255,],[165,165,165,165,165,]),'assignment':([9,45,54,92,113,147,243,244,251,266,273,278,],[20,20,112,20,20,20,260,20,20,20,20,20,]),'procedureCall':([9,45,92,113,147,244,251,266,273,278,],[21,21,21,21,21,21,21,21,21,21,]),'varType':([106,108,218,241,255,],[164,164,164,164,164,]),'char':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,129,143,156,159,162,177,182,183,186,205,232,245,250,256,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,264,60,]),'identList':([14,168,240,257,],[51,216,216,216,]),'arrayType':([106,108,218,241,255,],[166,166,166,166,166,]),'addOperator':([116,191,192,],[182,182,182,]),'expList':([97,143,],[152,198,]),'declarationSequence':([4,],[6,]),'casess':([209,],[233,]),'whileStatement':([9,45,92,113,147,244,251,266,273,278,],[25,25,25,25,25,25,25,25,25,25,]),'forStatement':([9,45,92,113,147,244,251,266,273,278,],[27,27,27,27,27,27,27,27,27,27,]),'ifStatement':([9,45,92,113,147,244,251,266,273,278,],[28,28,28,28,28,28,28,28,28,28,]),'termss':([67,],[121,]),'factor':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,129,143,156,159,162,177,182,183,186,205,232,245,256,],[67,67,67,67,114,67,122,67,133,67,135,67,67,67,67,67,67,67,67,67,67,67,67,67,67,224,67,67,67,67,]),'designator':([9,18,30,31,35,45,46,54,57,64,68,70,75,77,78,81,85,92,93,95,97,99,113,129,143,147,156,159,162,177,182,183,186,205,232,243,244,245,251,256,266,273,278,],[40,80,80,89,80,40,80,111,80,80,80,80,80,80,80,80,80,40,80,80,80,80,40,80,80,40,80,80,80,80,80,80,80,80,80,111,40,80,40,80,40,40,40,]),'switchStatement':([9,45,92,113,147,244,251,266,273,278,],[29,29,29,29,29,29,29,29,29,29,]),'simpless':([59,134,137,],[116,191,192,]),'string':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,129,143,156,159,162,177,182,183,186,203,205,206,232,245,256,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,229,69,231,69,69,69,]),'varss':([8,],[14,]),'set':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,129,143,156,159,162,177,182,183,186,205,232,245,256,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'length':([162,256,],[211,269,]),'typess':([7,],[11,]),'variableDeclaration':([14,],[52,]),'simpleExpression':([18,30,35,46,64,70,85,93,95,97,99,129,143,156,159,162,177,183,205,232,245,256,],[73,73,73,73,73,73,73,73,73,73,73,190,73,73,73,73,73,73,73,73,73,73,]),'statementSequence':([9,45,113,147,244,251,266,273,278,],[32,102,178,201,261,265,276,279,281,]),'fieldListSequence':([168,257,],[214,270,]),'case':([157,254,],[209,267,]),'statement':([9,45,92,113,147,244,251,266,273,278,],[34,34,145,34,34,34,34,34,34,34,]),'ifss':([178,],[221,]),'comass':([211,],[235,]),'qualident':([9,18,30,31,35,45,46,54,57,64,68,70,75,77,78,81,85,92,93,95,97,99,113,129,141,143,147,156,159,162,177,182,183,186,205,213,232,243,244,245,251,256,266,273,278,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,196,31,31,31,31,31,31,31,31,31,31,237,31,31,31,31,31,31,31,31,31,]),'empty':([4,7,8,9,10,45,59,67,92,113,134,137,147,168,178,209,211,240,244,251,257,266,273,278,],[5,12,13,44,48,44,115,120,44,44,115,115,44,217,220,234,236,217,44,44,217,44,44,44,]),'actualParameters':([40,80,],[98,136,]),'element':([64,183,],[118,223,]),'fileStatement':([9,45,92,113,147,244,251,266,273,278,],[39,39,39,39,39,39,39,39,39,39,]),'recordType':([106,108,218,241,255,],[169,169,169,169,169,]),'term':([18,30,35,46,64,70,77,81,85,93,95,97,99,129,143,156,159,162,177,182,183,205,232,245,256,],[59,59,59,59,59,59,134,137,59,59,59,59,59,59,59,59,59,59,59,222,59,59,59,59,59,]),'module':([0,],[2,]),'baseType':([213,],[238,]),'relation':([73,],[129,]),'ioStatement':([9,45,92,113,147,244,251,266,273,278,],[43,43,43,43,43,43,43,43,43,43,]),'typeDeclaration':([11,],[50,]),'number':([18,30,35,46,57,64,68,70,75,77,78,81,85,93,95,97,99,129,143,156,159,162,177,182,183,186,205,232,245,256,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'designator2':([31,],[90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',30),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',36),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',37),
  ('declarationSequence -> declarationSequence','declarationSequence',1,'p_declarationSequence','par.py',38),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',39),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',44),
  ('conss -> empty','conss',1,'p_conss','par.py',45),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',50),
  ('typess -> empty','typess',1,'p_typess','par.py',51),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',56),
  ('varss -> empty','varss',1,'p_varss','par.py',57),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',62),
  ('procss -> empty','procss',1,'p_procss','par.py',63),
  ('statementSequence -> statementSequence SCOLON statement','statementSequence',3,'p_statementSequence','par.py',68),
  ('statementSequence -> statement','statementSequence',1,'p_statementSequence','par.py',69),
  ('constantDeclaration -> IDENT ASSIGN expression','constantDeclaration',3,'p_constantDeclaration','par.py',74),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',79),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',80),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',86),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',87),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',92),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',93),
  ('term -> factor termss','term',2,'p_term','par.py',98),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',103),
  ('termss -> empty','termss',1,'p_termss','par.py',104),
  ('factor -> number','factor',1,'p_factor','par.py',109),
  ('factor -> char','factor',1,'p_factor','par.py',110),
  ('factor -> string','factor',1,'p_factor','par.py',111),
  ('factor -> KEY_NIL','factor',1,'p_factor','par.py',112),
  ('factor -> set','factor',1,'p_factor','par.py',113),
  ('factor -> designator','factor',1,'p_factor','par.py',114),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',115),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',116),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',120),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator -> qualident','designator',1,'p_designator','par.py',159),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',164),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT identdef','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> MULTIPLY IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT SCOLON','procedureDeclaration',5,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT COLON type','procedureHeading',4,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB FPSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON FPSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('FPSection -> IDENT FPs COLON type','FPSection',4,'p_FPSection','par.py',325),
  ('FPs -> FPs COMMA IDENT','FPs',3,'p_FPs','par.py',330),
  ('FPs -> empty','FPs',1,'p_FPs','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',360),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',365),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',366),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',371),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',372),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',377),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',378),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',383),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',384),
  ('casess -> casess OR case','casess',3,'p_casess','par.py',389),
  ('casess -> empty','casess',1,'p_casess','par.py',390),
  ('case -> KEY_CASE COLON expression statementSequence','case',4,'p_case','par.py',395),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',400),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',405),
  ('doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression','doWhileStatement',4,'p_doWhileStatement','par.py',410),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',415),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',416),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',417),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',422),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',423),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',424),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',425),
  ('empty -> <empty>','empty',0,'p_empty','par.py',430),
]
