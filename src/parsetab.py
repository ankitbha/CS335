
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FAPPEND KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FREAD KEY_FWRITE KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | constantDeclaration SCOLON\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | typeDeclaration SCOLON\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | variableDeclaration SCOLON\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | procedureDeclaration SCOLON\n\t\t\n\t\t\tstatementSequence : statementSequence statement SCOLON\n\t\t\t\t\t\t\t  | empty\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | boolean\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tboolean : VBOOLEAN\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB fpSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON fpSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tfpSection : IDENT fps COLON type\n\t\t\n\t\t\tfps : fps COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : KEY_ADD LRB qualident COMMA expression RRB\n\t\t\t\t\t\t | KEY_DEL LRB qualident COMMA expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB IDENT COMMA char RRB\n\t\t\t\t\t\t  | identdef EQUAL KEY_FREAD LRB identdef COMMA VINTEGER RRB\n\t\t\t\t\t\t  | KEY_FWRITE LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FAPPEND LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'SCOLON':([3,8,9,14,16,18,19,21,24,29,31,35,37,38,39,40,42,43,44,47,48,51,53,57,58,63,69,71,72,74,75,77,83,87,88,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,125,127,131,134,148,151,152,156,157,158,159,163,165,166,167,168,169,170,171,172,173,174,175,176,180,181,182,183,185,188,189,190,192,194,195,196,208,210,216,217,219,221,227,235,241,243,244,245,248,251,252,255,262,264,270,272,274,275,276,277,278,279,282,283,284,286,289,290,293,294,298,299,302,303,306,311,312,316,317,318,319,321,322,323,325,336,339,340,342,345,346,347,348,350,353,354,357,358,359,360,361,363,365,366,370,371,372,374,376,377,378,379,380,381,382,383,384,385,],[4,-174,20,30,32,-16,-174,81,84,90,91,-128,-137,-123,-131,-122,-125,-133,127,-63,-134,-144,-129,-61,-136,-132,-135,-124,-174,-126,-138,-127,-113,178,179,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,-18,-31,-43,-61,-41,-45,-130,-15,-64,-143,-174,-60,-57,-174,-111,-115,-174,-88,-89,-87,-93,-95,-85,-86,-174,-91,-92,-110,-90,-94,-84,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-163,280,-139,-68,-174,-62,-174,-174,-174,-117,305,-112,-106,311,-104,-36,-17,-20,-19,-22,-162,-166,-160,-157,-167,-67,-174,-168,-159,-164,-142,-158,-173,-165,-58,-174,-161,-114,-174,-100,-109,-26,-48,-23,-47,-32,349,-154,-59,-136,-116,-118,-103,-105,-174,-54,-172,-140,-141,-150,-174,-156,-171,-174,-146,-96,311,-174,-174,-174,-101,-170,-169,-174,-145,-174,-174,-149,-174,-174,-155,]),'KEY_RETURN':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,39,-15,-174,-174,-174,39,-174,39,39,39,-174,-174,-174,39,39,39,-174,-174,39,39,]),'KEY_WRITECHAR':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,41,-15,-174,-174,-174,41,-174,41,41,41,-174,-174,-174,41,41,41,-174,-174,41,41,]),'KEY_ELSE':([18,127,241,295,302,331,332,333,338,339,355,358,371,380,383,],[-16,-15,-174,-174,-174,-174,356,-152,361,-148,-151,-174,-153,-174,-147,]),'KEY_WRITE':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,45,-15,-174,-174,-174,45,-174,45,45,45,-174,-174,-174,45,45,45,-174,-174,45,45,]),'KEY_FREAD':([139,],[225,]),'KEY_STRING':([33,39,52,66,76,86,89,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,161,164,186,187,197,198,199,200,201,202,203,204,205,206,239,256,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,308,313,335,343,344,362,],[96,96,96,96,96,167,167,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,167,96,96,167,96,96,-81,-78,-76,-77,-80,-79,-82,-83,96,167,96,-71,-69,-72,-70,-75,-74,-73,96,96,96,96,96,96,96,167,167,96,96,167,96,]),'VSTRING':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,285,291,292,296,301,335,343,362,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-81,-78,-76,-77,-80,-79,-82,-83,97,97,-71,-69,-72,-70,-75,-74,-73,97,97,97,97,97,97,97,97,97,97,97,97,]),'KEY_BREAK':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,48,-15,-174,-174,-174,48,-174,48,48,48,-174,-174,-174,48,48,48,-174,-174,48,48,]),'KEY_WRITEINT':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,64,-15,-174,-174,-174,64,-174,64,64,64,-174,-174,-174,64,64,64,-174,-174,64,64,]),'KEY_FOR':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,49,-15,-174,-174,-174,49,-174,49,49,49,-174,-174,-174,49,49,49,-174,-174,49,49,]),'PLUS':([33,39,47,52,66,72,76,92,93,94,95,96,97,98,99,100,101,102,104,107,108,109,110,113,116,117,118,120,121,123,124,126,128,129,131,132,133,136,138,141,145,150,151,152,155,164,181,182,183,185,186,188,189,190,192,194,195,196,197,198,199,200,201,202,203,204,205,206,208,219,227,239,262,263,269,270,271,274,280,281,282,291,292,296,299,317,318,319,321,322,335,336,343,348,362,],[111,111,-63,111,111,-174,111,-34,-174,-30,111,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,111,-49,-50,-31,-43,-61,-41,-45,111,111,111,111,111,-64,111,111,111,111,111,111,111,-60,-57,111,111,-35,-27,-25,-40,111,-37,267,-24,-55,-174,-38,-39,111,111,-81,-78,-76,-77,-80,-79,-82,-83,-174,-68,-62,111,-36,-174,111,267,-174,267,111,111,-67,111,111,111,-58,-26,-48,-23,-47,-32,111,-59,111,-54,111,]),'KEY_BOOLEAN':([33,39,52,66,76,86,89,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,161,164,186,187,197,198,199,200,201,202,203,204,205,206,239,256,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,308,313,335,343,344,362,],[101,101,101,101,101,172,172,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,172,101,101,172,101,101,-81,-78,-76,-77,-80,-79,-82,-83,101,172,101,-71,-69,-72,-70,-75,-74,-73,101,101,101,101,101,101,101,172,172,101,101,172,101,]),'KEY_MODULE':([0,],[1,]),'KEY_WHILE':([8,18,19,127,148,156,221,235,241,243,283,297,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,52,-15,-174,-174,-174,52,-174,52,52,335,52,-174,-174,-174,52,52,52,-174,-174,52,52,]),'KEY_THEN':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,154,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,270,272,274,282,299,317,318,319,321,322,336,348,373,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,-18,-31,-43,-61,-41,-45,-64,-60,-57,241,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-20,-19,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,380,]),'MULTIPLY':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,110,113,116,117,118,120,121,131,151,152,181,182,183,185,188,192,195,196,219,227,262,263,271,282,299,317,318,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-49,-50,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,259,-40,-37,-55,-38,-39,-68,-62,-36,-174,-174,-67,-58,-26,-48,-47,-32,-59,-54,]),'LSB':([47,57,72,118,131,151,152,227,299,336,],[-63,-61,-174,-61,-64,-60,239,-62,-58,-59,]),'KEY_READBOOL':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,54,-15,-174,-174,-174,54,-174,54,54,54,-174,-174,-174,54,54,54,-174,-174,54,54,]),'KEY_FAPPEND':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,55,-15,-174,-174,-174,55,-174,55,55,55,-174,-174,-174,55,55,55,-174,-174,55,55,]),'VBOOLEAN':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,362,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-81,-78,-76,-77,-80,-79,-82,-83,104,104,-71,-69,-72,-70,-75,-74,-73,104,104,104,104,104,104,104,104,104,104,]),'KEY_READ':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,59,-15,-174,-174,-174,59,-174,59,59,59,-174,-174,-174,59,59,59,-174,-174,59,59,]),'KEY_ELSEIF':([18,127,241,302,338,339,380,383,],[-16,-15,-174,-174,362,-148,-174,-147,]),'VCHAR':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,352,362,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-81,-78,-76,-77,-80,-79,-82,-83,99,99,-71,-69,-72,-70,-75,-74,-73,99,99,99,99,99,99,99,99,99,99,99,]),'NOT':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,362,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-81,-78,-76,-77,-80,-79,-82,-83,106,106,-71,-69,-72,-70,-75,-74,-73,106,106,106,106,106,106,106,106,106,106,]),'DIVIDE':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,110,113,116,117,118,120,121,131,151,152,181,182,183,185,188,192,195,196,219,227,262,263,271,282,299,317,318,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-49,-50,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,261,-40,-37,-55,-38,-39,-68,-62,-36,-174,-174,-67,-58,-26,-48,-47,-32,-59,-54,]),'MODULUS':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,110,113,116,117,118,120,121,131,151,152,181,182,183,185,188,192,195,196,219,227,262,263,271,282,299,317,318,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-49,-50,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,258,-40,-37,-55,-38,-39,-68,-62,-36,-174,-174,-67,-58,-26,-48,-47,-32,-59,-54,]),'LT':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,263,270,271,274,282,299,317,318,319,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,200,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-174,-20,-174,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,]),'COLON':([23,25,47,72,83,92,93,94,96,97,98,99,100,101,102,104,105,107,108,110,113,115,116,117,118,120,121,131,151,152,158,160,162,181,182,183,185,188,189,190,192,194,195,196,208,219,227,246,247,253,262,270,272,274,282,299,306,317,318,319,321,322,334,336,341,348,356,],[-108,86,-63,-174,161,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,187,-28,-174,-49,-50,-18,-31,-43,-61,-41,-45,-64,-60,-57,-115,-174,-107,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-120,308,313,-36,-20,-19,-22,-67,-58,-114,-26,-48,-23,-47,-32,358,-59,-119,-54,370,]),'VINTEGER':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,351,362,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-81,-78,-76,-77,-80,-79,-82,-83,110,110,-71,-69,-72,-70,-75,-74,-73,110,110,110,110,110,110,110,110,110,368,110,]),'KEY_OF':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,249,250,262,270,272,274,282,299,309,310,317,318,319,321,322,336,348,364,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,-18,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-174,-99,-36,-20,-19,-22,-67,-58,-98,344,-26,-48,-23,-47,-32,-59,-54,-97,]),'ASSIGN':([17,47,51,57,72,118,131,151,152,215,227,299,336,],[33,-63,132,-61,-174,-61,-64,-60,-57,132,-62,-58,-59,]),'KEY_CHR':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,362,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-81,-78,-76,-77,-80,-79,-82,-83,114,114,-71,-69,-72,-70,-75,-74,-73,114,114,114,114,114,114,114,114,114,114,]),'KEY_IS':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,263,270,271,274,282,299,317,318,319,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,206,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-174,-20,-174,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,]),'RRB':([47,72,82,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,123,131,133,151,152,159,163,165,166,167,168,169,170,172,173,175,176,181,182,183,184,185,188,189,190,192,194,195,196,208,209,211,212,213,214,217,218,219,220,222,224,227,228,229,232,233,237,242,244,245,262,263,270,271,272,273,274,282,299,312,314,315,316,317,318,319,321,322,324,326,329,330,336,337,340,342,348,365,367,368,369,374,],[-63,-174,158,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,-18,-31,-43,-61,-41,-45,210,-64,219,-60,-57,-174,-88,-89,-87,-93,-95,-85,-86,-91,-92,-90,-94,-35,-27,-25,262,-40,-37,-21,-24,-55,-174,-38,-39,-174,275,276,277,278,279,-139,-66,-68,282,284,286,-62,289,290,293,294,298,303,-117,306,-36,318,-20,321,-19,322,-22,-67,-58,-100,347,-102,-109,-26,-48,-23,-47,-32,-65,350,353,354,-59,360,-116,-118,-54,-96,375,376,377,-101,]),'KEY_CONTINUE':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,69,-15,-174,-174,-174,69,-174,69,69,69,-174,-174,-174,69,69,69,-174,-174,69,69,]),'RSB':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,218,219,227,262,270,272,274,282,299,300,317,318,319,321,322,324,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,-18,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-66,-68,-62,-36,-20,-19,-22,-67,-58,336,-26,-48,-23,-47,-32,-65,-59,-54,]),'KEY_NEW':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,60,-15,-174,-174,-174,60,-174,60,60,60,-174,-174,-174,60,60,60,-174,-174,60,60,]),'LTEQ':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,263,270,271,274,282,299,317,318,319,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,204,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-174,-20,-174,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,]),'KEY_CHAR':([33,39,52,66,76,86,89,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,161,164,186,187,197,198,199,200,201,202,203,204,205,206,239,256,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,308,313,335,343,344,362,],[117,117,117,117,117,173,173,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,173,117,117,173,117,117,-81,-78,-76,-77,-80,-79,-82,-83,117,173,117,-71,-69,-72,-70,-75,-74,-73,117,117,117,117,117,117,117,173,173,117,117,173,117,]),'KEY_TYPE':([4,5,6,10,15,20,26,27,30,32,79,81,84,90,91,178,179,],[-174,-6,13,-5,-2,-174,-4,-3,-14,-8,13,-13,-12,-10,-7,-11,-9,]),'DOT':([47,57,72,118,131,149,151,152,227,299,336,],[-63,140,-174,140,-64,236,-60,238,-62,-58,-59,]),'KEY_ARRAY':([86,89,161,187,256,308,313,344,],[164,164,164,164,164,164,164,164,]),'NEQUAL':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,263,270,271,274,282,299,317,318,319,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,202,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-174,-20,-174,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,]),'OR':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,263,270,271,274,282,299,317,318,319,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,265,-24,-55,-174,-38,-39,-174,-68,-62,-36,-174,265,-174,265,-67,-58,-26,-48,-23,-47,-32,-59,-54,]),'AND':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,110,113,116,117,118,120,121,131,151,152,181,182,183,185,188,192,195,196,219,227,262,263,271,282,299,317,318,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-49,-50,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,260,-40,-37,-55,-38,-39,-68,-62,-36,-174,-174,-67,-58,-26,-48,-47,-32,-59,-54,]),'KEY_INTEGER':([33,39,52,66,76,86,89,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,161,164,186,187,197,198,199,200,201,202,203,204,205,206,239,256,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,308,313,335,343,344,362,],[120,120,120,120,120,175,175,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,175,120,120,175,120,120,-81,-78,-76,-77,-80,-79,-82,-83,120,175,120,-71,-69,-72,-70,-75,-74,-73,120,120,120,120,120,120,120,175,175,120,120,175,120,]),'KEY_IF':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,76,-15,-174,-174,-174,76,-174,76,76,76,-174,-174,-174,76,76,76,-174,-174,76,76,]),'KEY_REAL':([33,39,52,66,76,86,89,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,161,164,186,187,197,198,199,200,201,202,203,204,205,206,239,256,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,308,313,335,343,344,362,],[121,121,121,121,121,176,176,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,176,121,121,176,121,121,-81,-78,-76,-77,-80,-79,-82,-83,121,176,121,-71,-69,-72,-70,-75,-74,-73,121,121,121,121,121,121,121,176,176,121,121,176,121,]),'KEY_POINTER':([86,89,161,187,256,308,313,344,],[177,177,177,177,177,177,177,177,]),'KEY_WRITEBOOL':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,78,-15,-174,-174,-174,78,-174,78,78,78,-174,-174,-174,78,78,78,-174,-174,78,78,]),'KEY_WRITELN':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,34,-15,-174,-174,-174,34,-174,34,34,34,-174,-174,-174,34,34,34,-174,-174,34,34,]),'KEY_READREAL':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,36,-15,-174,-174,-174,36,-174,36,36,36,-174,-174,-174,36,36,36,-174,-174,36,36,]),'KEY_CASE':([18,127,234,295,331,358,371,],[-16,-15,296,296,296,-174,-153,]),'GTEQ':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,263,270,271,274,282,299,317,318,319,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,199,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-174,-20,-174,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,]),'KEY_READINT':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,70,-15,-174,-174,-174,70,-174,70,70,70,-174,-174,-174,70,70,70,-174,-174,70,70,]),'KEY_SWITCH':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,66,-15,-174,-174,-174,66,-174,66,66,66,-174,-174,-174,66,66,66,-174,-174,66,66,]),'LRB':([22,33,34,36,39,41,45,46,47,49,51,52,54,55,56,57,59,60,61,62,64,65,66,70,72,73,76,78,92,95,103,106,109,111,112,114,118,119,122,123,124,126,128,129,131,132,133,136,138,141,145,150,151,152,155,164,171,186,197,198,199,200,201,202,203,204,205,206,225,226,227,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,299,335,336,343,362,],[82,95,123,124,95,126,128,129,-63,130,133,95,136,137,138,-61,141,142,143,144,145,146,95,150,-174,153,95,155,133,95,186,95,95,95,95,197,-61,207,95,95,95,95,95,95,-64,95,95,95,95,95,95,95,-60,-57,95,95,254,95,95,95,-81,-78,-76,-77,-80,-79,-82,-83,287,288,-62,95,95,-71,-69,-72,-70,-75,-74,-73,95,95,95,95,95,95,95,-58,95,-59,95,95,]),'KEY_READCHAR':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,46,-15,-174,-174,-174,46,-174,46,46,46,-174,-174,-174,46,46,46,-174,-174,46,46,]),'KEY_SET':([33,39,52,66,76,86,89,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,161,164,186,187,197,198,199,200,201,202,203,204,205,206,239,256,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,308,313,335,343,344,362,],[98,98,98,98,98,168,168,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,168,98,98,168,98,98,-81,-78,-76,-77,-80,-79,-82,-83,98,168,98,-71,-69,-72,-70,-75,-74,-73,98,98,98,98,98,98,98,168,168,98,98,168,98,]),'IDENT':([1,7,8,11,12,13,15,18,19,26,27,32,33,39,50,52,66,68,76,80,82,84,85,86,89,90,91,95,103,106,109,111,112,114,122,123,124,126,127,128,129,130,132,133,136,137,138,140,141,142,143,144,145,146,148,150,153,155,156,161,164,171,178,179,186,187,197,198,199,200,201,202,203,204,205,206,207,221,235,238,239,241,243,254,256,257,258,259,260,261,265,266,267,268,269,280,281,283,287,288,291,292,296,302,304,305,307,308,311,313,335,343,344,347,349,358,361,362,370,371,372,378,380,381,383,384,],[3,17,-174,22,23,28,17,-16,47,23,28,-8,47,47,131,47,47,149,47,157,160,-12,162,169,169,-10,-7,47,47,47,47,47,47,47,47,47,47,47,-15,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-174,47,47,47,-174,169,47,23,-11,-9,47,169,47,47,-81,-78,-76,-77,-80,-79,-82,-83,47,-174,47,47,47,-174,47,47,169,47,-71,-69,-72,-70,-75,-74,-73,47,47,47,47,47,47,328,47,47,47,47,-121,160,341,169,23,169,47,47,169,23,47,-174,-174,47,-174,47,47,47,-174,-174,47,47,]),'GT':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,263,270,271,274,282,299,317,318,319,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,203,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-174,-20,-174,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,]),'MINUS':([33,39,47,52,66,72,76,92,93,94,95,96,97,98,99,100,101,102,104,107,108,109,110,113,116,117,118,120,121,123,124,126,128,129,131,132,133,136,138,141,145,150,151,152,155,164,181,182,183,185,186,188,189,190,192,194,195,196,197,198,199,200,201,202,203,204,205,206,208,219,227,239,262,263,269,270,271,274,280,281,282,291,292,296,299,317,318,319,321,322,335,336,343,348,362,],[122,122,-63,122,122,-174,122,-34,-174,-30,122,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,122,-49,-50,-31,-43,-61,-41,-45,122,122,122,122,122,-64,122,122,122,122,122,122,122,-60,-57,122,122,-35,-27,-25,-40,122,-37,266,-24,-55,-174,-38,-39,122,122,-81,-78,-76,-77,-80,-79,-82,-83,-174,-68,-62,122,-36,-174,122,266,-174,266,122,122,-67,122,122,122,-58,-26,-48,-23,-47,-32,122,-59,122,-54,122,]),'EQUAL':([28,47,57,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,263,270,271,274,282,299,317,318,319,321,322,336,348,],[89,-63,139,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,201,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-174,-20,-174,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,]),'$end':([2,236,],[0,-1,]),'KEY_EXIT':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,53,-15,-174,-174,-174,53,-174,53,53,53,-174,-174,-174,53,53,53,-174,-174,53,53,]),'KEY_ORD':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,362,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-81,-78,-76,-77,-80,-79,-82,-83,103,103,-71,-69,-72,-70,-75,-74,-73,103,103,103,103,103,103,103,103,103,103,]),'KEY_WRITEREAL':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,56,-15,-174,-174,-174,56,-174,56,56,56,-174,-174,-174,56,56,56,-174,-174,56,56,]),'KEY_FWRITE':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,73,-15,-174,-174,-174,73,-174,73,73,73,-174,-174,-174,73,73,73,-174,-174,73,73,]),'AT':([8,18,19,33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,127,128,129,130,132,133,136,137,138,140,141,142,143,144,145,146,148,150,153,155,156,164,186,197,198,199,200,201,202,203,204,205,206,207,221,235,238,239,241,243,254,257,258,259,260,261,265,266,267,268,269,280,281,283,287,291,292,296,302,335,343,349,358,361,362,370,371,372,378,380,381,383,384,],[-174,-16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-15,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-174,50,50,50,-174,50,50,50,50,-81,-78,-76,-77,-80,-79,-82,-83,50,-174,50,50,50,-174,50,50,50,-71,-69,-72,-70,-75,-74,-73,50,50,50,50,50,50,50,50,50,50,50,50,50,-174,-174,50,-174,50,50,50,-174,-174,50,50,]),'KEY_CONST':([4,5,6,10,15,20,26,27,30,32,79,81,84,90,91,178,179,],[-174,-6,7,-5,-2,-174,-4,-3,-14,-8,7,-13,-12,-10,-7,-11,-9,]),'KEY_BEGIN':([4,5,6,10,15,20,26,27,30,32,47,67,72,79,81,84,90,91,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,135,147,151,152,178,179,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,270,272,274,282,299,317,318,319,321,322,336,348,375,],[-174,-6,8,-5,-2,-174,-4,-3,-14,-8,-63,148,-174,156,-13,-12,-10,-7,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,-18,-31,-43,-61,-41,-45,-64,221,234,-60,-57,-11,-9,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-20,-19,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,381,]),'KEY_FOPEN':([139,],[226,]),'KEY_ADD':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,61,-15,-174,-174,-174,61,-174,61,61,61,-174,-174,-174,61,61,61,-174,-174,61,61,]),'LCB':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,362,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-81,-78,-76,-77,-80,-79,-82,-83,109,109,-71,-69,-72,-70,-75,-74,-73,109,109,109,109,109,109,109,109,109,109,]),'RCB':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,109,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,191,192,194,195,196,208,219,227,262,270,272,274,282,299,317,318,319,320,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,192,-49,-50,-18,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-56,-55,-174,-38,-39,-174,-68,-62,-36,-20,-19,-22,-67,-58,-26,-48,-23,348,-47,-32,-59,-54,]),'COMMA':([23,25,47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,160,162,181,182,183,185,188,189,190,191,192,193,194,195,196,208,218,219,220,223,227,230,231,240,246,247,249,250,253,262,270,272,274,282,299,300,309,310,317,318,319,321,322,324,327,328,336,341,348,364,],[-108,85,-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,-18,-31,-43,-61,-41,-45,-64,-60,-57,-174,-107,-35,-27,-25,-40,-37,-21,-24,-56,-55,269,-174,-38,-39,-174,-66,-68,281,285,-62,291,292,301,-120,307,-174,-99,85,-36,-20,-19,-22,-67,-58,281,-98,343,-26,-48,-23,-47,-32,-65,351,352,-59,-119,-54,-97,]),'KEY_ABS':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,362,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-81,-78,-76,-77,-80,-79,-82,-83,112,112,-71,-69,-72,-70,-75,-74,-73,112,112,112,112,112,112,112,112,112,112,]),'KEY_FCLOSE':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,65,-15,-174,-174,-174,65,-174,65,65,65,-174,-174,-174,65,65,65,-174,-174,65,65,]),'VREAL':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,362,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-81,-78,-76,-77,-80,-79,-82,-83,113,113,-71,-69,-72,-70,-75,-74,-73,113,113,113,113,113,113,113,113,113,113,]),'KEY_DO':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,67,-15,-174,-174,-174,67,-174,67,67,67,-174,-174,-174,67,67,67,-174,-174,67,67,]),'KEY_END':([8,18,19,127,148,156,163,165,166,167,168,169,170,171,172,173,175,176,221,235,241,243,251,252,255,283,295,302,311,312,316,331,332,333,338,339,345,346,347,355,358,361,365,366,370,371,372,374,378,380,381,383,384,],[-174,-16,68,-15,-174,-174,-88,-89,-87,-93,-95,-85,-86,-174,-91,-92,-90,-94,-174,297,-174,304,-106,312,-104,325,-174,-174,-174,-100,-109,-174,357,-152,363,-148,-103,-105,-174,-151,-174,-174,-96,374,-174,-153,379,-101,382,-174,-174,-147,385,]),'KEY_RECORD':([86,89,161,187,256,308,313,344,],[171,171,171,171,171,171,171,171,]),'KEY_PROCEDURE':([4,5,6,10,15,20,26,27,30,32,79,81,84,90,91,178,179,],[-174,-6,11,11,-2,-174,-4,-3,-14,-8,11,-13,-12,-10,-7,-11,-9,]),'KEY_VAR':([4,5,6,10,15,20,26,27,30,32,79,81,84,90,91,178,179,],[-174,-6,12,-5,-2,-174,-4,-3,-14,-8,12,-13,-12,-10,-7,-11,-9,]),'KEY_DEL':([8,18,19,127,148,156,221,235,241,243,283,302,358,361,370,371,372,378,380,381,383,384,],[-174,-16,62,-15,-174,-174,-174,62,-174,62,62,62,-174,-174,-174,62,62,62,-174,-174,62,62,]),'KEY_TO':([177,],[256,]),'KEY_NIL':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,199,200,201,202,203,204,205,206,239,257,258,259,260,261,265,266,267,268,269,280,281,291,292,296,335,343,362,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-81,-78,-76,-77,-80,-79,-82,-83,119,119,-71,-69,-72,-70,-75,-74,-73,119,119,119,119,119,119,119,119,119,119,]),'KEY_IN':([47,72,92,93,94,96,97,98,99,100,101,102,104,107,108,110,113,115,116,117,118,120,121,131,151,152,181,182,183,185,188,189,190,192,194,195,196,208,219,227,262,263,270,271,274,282,299,317,318,319,321,322,336,348,],[-63,-174,-34,-174,-30,-44,-53,-46,-52,-33,-42,-29,-51,-28,-174,-49,-50,205,-31,-43,-61,-41,-45,-64,-60,-57,-35,-27,-25,-40,-37,-21,-24,-55,-174,-38,-39,-174,-68,-62,-36,-174,-20,-174,-22,-67,-58,-26,-48,-23,-47,-32,-59,-54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'conss':([7,],[15,]),'doWhileStatement':([19,235,243,283,302,371,372,378,383,384,],[35,35,35,35,35,35,35,35,35,35,]),'recordType':([86,89,161,187,256,308,313,344,],[163,163,163,163,163,163,163,163,]),'memoryalloc':([19,235,243,283,302,371,372,378,383,384,],[37,37,37,37,37,37,37,37,37,37,]),'procedureCall':([19,235,243,283,302,371,372,378,383,384,],[38,38,38,38,38,38,38,38,38,38,]),'designator':([19,33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,130,132,133,136,138,141,142,145,150,155,164,186,197,198,207,235,239,243,257,268,269,280,281,283,291,292,296,302,335,343,349,362,371,372,378,383,384,],[51,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,215,92,92,92,92,92,229,92,92,92,92,92,92,92,273,51,92,51,92,92,92,92,92,51,92,92,92,51,92,92,215,92,51,51,51,51,51,]),'actualParameters':([51,92,],[134,181,]),'factor':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,239,257,268,269,280,281,291,292,296,335,343,362,],[93,93,93,93,93,93,185,188,93,93,195,196,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,263,271,93,93,317,93,93,93,93,93,93,93,93,93,93,]),'switchStatement':([19,235,243,283,302,371,372,378,383,384,],[42,42,42,42,42,42,42,42,42,42,]),'fpSection':([82,305,],[159,340,]),'fileStatement':([19,235,243,283,302,371,372,378,383,384,],[43,43,43,43,43,43,43,43,43,43,]),'statement':([19,235,243,283,302,371,372,378,383,384,],[44,44,44,44,44,44,44,44,44,44,]),'constantDeclaration':([7,15,],[16,31,]),'char':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,239,257,268,269,280,281,291,292,296,335,343,352,362,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,369,94,]),'length':([164,343,],[249,364,]),'procedureHeading':([6,10,79,],[9,9,9,]),'module':([0,],[2,]),'mulOperator':([183,],[257,]),'case':([234,295,331,],[295,331,331,]),'formalParameters':([22,],[83,]),'statementSequence':([8,148,156,221,241,358,361,370,380,381,],[19,235,243,283,302,371,372,378,383,384,]),'element':([109,269,],[193,320,]),'varss':([12,],[26,]),'set':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,239,257,268,269,280,281,291,292,296,335,343,362,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'relation':([115,],[198,]),'assignment':([19,130,235,243,283,302,349,371,372,378,383,384,],[40,216,40,40,40,40,367,40,40,40,40,40,]),'boolean':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,239,257,268,269,280,281,291,292,296,335,343,362,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'comass':([249,],[310,]),'procedureBody':([20,],[80,]),'expression':([33,39,52,66,76,95,109,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,239,269,280,281,291,292,296,335,343,362,],[105,125,135,147,154,184,191,209,211,212,213,214,217,218,222,224,228,232,237,242,250,184,184,218,191,323,324,329,330,334,359,250,373,]),'empty':([4,8,19,20,72,93,108,148,156,159,160,171,194,208,221,235,241,243,249,263,271,283,295,302,311,331,347,358,361,370,371,372,378,380,381,383,384,],[5,18,58,5,151,182,190,18,18,244,246,251,190,190,18,58,18,58,309,182,182,58,333,339,251,333,251,18,18,18,58,58,58,18,18,58,58,]),'casess':([295,331,],[332,355,]),'fps':([160,],[247,]),'fieldList':([171,311,347,],[255,345,255,]),'declarationSequence':([4,20,],[6,79,]),'termss':([93,263,271,],[183,183,183,]),'formalss':([159,],[245,]),'identList':([12,26,171,311,347,],[25,25,253,253,253,]),'addOperator':([189,270,274,],[268,268,268,]),'simpless':([108,194,208,],[189,270,274,]),'setStatement':([19,235,243,283,302,371,372,378,383,384,],[75,75,75,75,75,75,75,75,75,75,]),'term':([33,39,52,66,76,95,109,111,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,239,268,269,280,281,291,292,296,335,343,362,],[108,108,108,108,108,108,108,194,208,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,319,108,108,108,108,108,108,108,108,108,]),'ioStatement':([19,235,243,283,302,371,372,378,383,384,],[63,63,63,63,63,63,63,63,63,63,]),'typess':([13,],[27,]),'designator2':([72,],[152,]),'ifss':([302,],[338,]),'type':([86,89,161,187,256,308,313,344,],[174,180,248,264,316,342,346,365,]),'arrayType':([86,89,161,187,256,308,313,344,],[166,166,166,166,166,166,166,166,]),'baseType':([254,],[314,]),'number':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,239,257,268,269,280,281,291,292,296,335,343,362,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'variableDeclaration':([12,26,],[24,87,]),'varType':([86,89,161,187,256,308,313,344,],[170,170,170,170,170,170,170,170,]),'simpleExpression':([33,39,52,66,76,95,109,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,239,269,280,281,291,292,296,335,343,362,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,272,115,115,115,115,115,115,115,115,115,115,]),'pointerType':([86,89,161,187,256,308,313,344,],[165,165,165,165,165,165,165,165,]),'procss':([6,79,],[10,10,]),'string':([33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,132,133,136,138,141,145,150,155,164,186,197,198,239,257,268,269,280,281,285,291,292,296,301,335,343,362,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,326,116,116,116,337,116,116,116,]),'expList':([133,239,],[220,300,]),'ifStatement':([19,235,243,283,302,371,372,378,383,384,],[71,71,71,71,71,71,71,71,71,71,]),'fieldListSequence':([171,347,],[252,366,]),'qualident':([19,33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,130,132,133,136,138,140,141,142,143,144,145,150,155,164,186,197,198,207,235,239,243,254,257,268,269,280,281,283,291,292,296,302,335,343,349,362,371,372,378,383,384,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,227,72,72,230,231,72,72,72,72,72,72,72,72,72,72,72,315,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'identdef':([19,33,39,52,66,76,95,103,106,109,111,112,114,122,123,124,126,128,129,130,132,133,136,137,138,140,141,142,143,144,145,146,150,153,155,164,186,197,198,207,235,238,239,243,254,257,268,269,280,281,283,287,291,292,296,302,335,343,349,362,371,372,378,383,384,],[57,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,223,118,118,118,118,118,118,118,233,118,240,118,118,118,118,118,118,57,299,118,57,118,118,118,118,118,118,57,327,118,118,118,57,118,118,118,118,57,57,57,57,57,]),'whileStatement':([19,235,243,283,302,371,372,378,383,384,],[74,74,74,74,74,74,74,74,74,74,]),'procedureDeclaration':([6,10,79,],[14,21,14,]),'forStatement':([19,235,243,283,302,371,372,378,383,384,],[77,77,77,77,77,77,77,77,77,77,]),'typeDeclaration':([13,27,],[29,88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> constantDeclaration SCOLON','conss',2,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> typeDeclaration SCOLON','typess',2,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> variableDeclaration SCOLON','varss',2,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> procedureDeclaration SCOLON','procss',2,'p_procss','par.py',61),
  ('statementSequence -> statementSequence statement SCOLON','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> empty','statementSequence',1,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> boolean','factor',1,'p_factor','par.py',108),
  ('factor -> char','factor',1,'p_factor','par.py',109),
  ('factor -> string','factor',1,'p_factor','par.py',110),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',111),
  ('factor -> set','factor',1,'p_factor','par.py',112),
  ('factor -> designator','factor',1,'p_factor','par.py',113),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',114),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',115),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',127),
  ('number -> VINTEGER','number',1,'p_number','par.py',132),
  ('number -> VREAL','number',1,'p_number','par.py',133),
  ('boolean -> VBOOLEAN','boolean',1,'p_boolean','par.py',138),
  ('char -> VCHAR','char',1,'p_char','par.py',143),
  ('string -> VSTRING','string',1,'p_string','par.py',148),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',153),
  ('set -> LCB RCB','set',2,'p_set','par.py',154),
  ('element -> expression','element',1,'p_element','par.py',159),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',164),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',169),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',170),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',171),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',176),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',177),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',182),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',183),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',188),
  ('expList -> expression','expList',1,'p_expList','par.py',189),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',194),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',195),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',200),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',201),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',202),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',203),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',208),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',209),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',210),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',215),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',216),
  ('relation -> LT','relation',1,'p_relation','par.py',217),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',218),
  ('relation -> GT','relation',1,'p_relation','par.py',219),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',220),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',221),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',222),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',227),
  ('type -> IDENT','type',1,'p_type','par.py',232),
  ('type -> varType','type',1,'p_type','par.py',233),
  ('type -> arrayType','type',1,'p_type','par.py',234),
  ('type -> recordType','type',1,'p_type','par.py',235),
  ('type -> pointerType','type',1,'p_type','par.py',236),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',241),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',242),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',243),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',244),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',245),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',246),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',251),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',256),
  ('comass -> empty','comass',1,'p_comass','par.py',257),
  ('length -> expression','length',1,'p_length','par.py',262),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',267),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',268),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',273),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',278),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',279),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',284),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',285),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',290),
  ('identList -> IDENT','identList',1,'p_identList','par.py',291),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',296),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',302),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',312),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',313),
  ('formalParameters -> LRB fpSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',318),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',319),
  ('formalss -> formalss SCOLON fpSection','formalss',3,'p_formalss','par.py',324),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',325),
  ('fpSection -> IDENT fps COLON type','fpSection',4,'p_fpSection','par.py',330),
  ('fps -> fps COMMA IDENT','fps',3,'p_fps','par.py',335),
  ('fps -> empty','fps',1,'p_fps','par.py',336),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',341),
  ('statement -> assignment','statement',1,'p_statement','par.py',346),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',347),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',348),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',349),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',350),
  ('statement -> forStatement','statement',1,'p_statement','par.py',351),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',354),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',355),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',356),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',357),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',358),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',359),
  ('statement -> empty','statement',1,'p_statement','par.py',360),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',361),
  ('statement -> setStatement','statement',1,'p_statement','par.py',362),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',367),
  ('setStatement -> KEY_ADD LRB qualident COMMA expression RRB','setStatement',6,'p_setStatement','par.py',372),
  ('setStatement -> KEY_DEL LRB qualident COMMA expression RRB','setStatement',6,'p_setStatement','par.py',373),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',379),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',385),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',386),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',391),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',392),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',397),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',398),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',403),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',404),
  ('casess -> case casess','casess',2,'p_casess','par.py',409),
  ('casess -> empty','casess',1,'p_casess','par.py',410),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',415),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',420),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',425),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',430),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',435),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',441),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',442),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',443),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',444),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',445),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',446),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB IDENT COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',451),
  ('fileStatement -> identdef EQUAL KEY_FREAD LRB identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',452),
  ('fileStatement -> KEY_FWRITE LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',453),
  ('fileStatement -> KEY_FAPPEND LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',454),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',455),
  ('empty -> <empty>','empty',0,'p_empty','par.py',460),
]
