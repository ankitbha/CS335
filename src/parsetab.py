
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence SCOLON statement\n\t\t\t\t\t\t\t  | statement\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB FPSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON FPSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tFPSection : IDENT FPs COLON type\n\t\t\n\t\t\tFPs : FPs COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : qualident DOT KEY_ADD LRB expression RRB\n\t\t\t\t\t\t | qualident DOT KEY_DEL LRB expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_ELSEIF':([14,16,17,19,23,25,27,28,29,30,31,35,37,38,40,41,42,45,46,47,48,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,102,112,120,124,143,144,145,146,147,148,150,162,163,164,166,170,171,172,177,190,195,196,210,215,226,227,229,230,235,236,237,238,239,240,241,242,243,244,248,251,253,255,281,284,285,286,287,288,289,291,301,302,319,320,321,324,327,329,331,363,365,366,367,372,373,377,],[-172,-143,-16,-136,-134,-124,-125,-132,-121,-126,-127,-130,-137,-62,-128,-131,-135,-123,-133,-122,-60,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-142,-129,-63,-172,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-138,-67,-162,-61,-15,-172,-156,-56,-35,-19,-20,-22,-66,-141,-159,-161,-165,-157,-169,-164,-167,-163,-166,-160,-158,-172,-58,-57,-23,-26,-46,-47,-31,-153,-147,330,-140,-139,-52,-149,-155,-170,-145,-171,-168,-172,-144,-148,-146,-154,]),'KEY_FOPEN':([117,],[189,]),'KEY_WRITE':([7,116,124,169,196,278,323,332,350,366,374,],[13,13,13,13,13,13,13,13,13,13,13,]),'KEY_TYPE':([4,5,6,8,9,10,11,12,56,57,58,59,63,64,132,134,200,201,206,209,],[-172,-6,12,-14,-172,-172,-5,-172,-2,-8,-4,-12,-10,-3,-13,-172,-7,-11,12,-9,]),'OR':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,225,226,228,229,230,235,281,284,285,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-42,-29,-48,-63,218,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-172,-35,-172,218,218,-66,-58,-57,-23,-26,-46,-47,-31,-52,]),'KEY_WRITEBOOL':([7,116,124,169,196,278,323,332,350,366,374,],[49,49,49,49,49,49,49,49,49,49,49,]),'KEY_FPRINTF':([7,116,124,169,196,278,323,332,350,366,374,],[51,51,51,51,51,51,51,51,51,51,51,]),'KEY_WRITELN':([7,116,124,169,196,278,323,332,350,366,374,],[21,21,21,21,21,21,21,21,21,21,21,]),'KEY_CONTINUE':([7,116,124,169,196,278,323,332,350,366,374,],[23,23,23,23,23,23,23,23,23,23,23,]),'VSTRING':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,250,252,256,271,298,330,359,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-82,-79,-75,-76,-81,81,-77,-80,-78,81,81,81,81,81,-73,-74,-72,-68,-71,-69,81,-70,81,81,81,81,81,81,81,81,81,81,]),'KEY_ABS':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,298,330,359,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-82,-79,-75,-76,-81,82,-77,-80,-78,82,82,82,82,82,-73,-74,-72,-68,-71,-69,82,-70,82,82,82,82,82,82,82,82,]),'ASSIGN':([14,16,38,48,66,68,70,71,120,127,190,197,215,281,284,],[-172,100,-62,-60,-172,-60,-55,-59,-63,199,-61,100,-56,-58,-57,]),'KEY_STRING':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,202,208,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,274,298,304,312,330,339,343,358,359,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-82,-79,-75,-76,-81,83,-77,-80,-78,83,83,267,267,83,83,83,-73,-74,-72,-68,-71,-69,83,-70,83,83,83,83,83,267,83,267,267,83,267,267,267,83,]),'KEY_WHILE':([7,116,124,169,196,249,278,323,332,350,366,374,],[15,15,15,15,15,298,15,15,15,15,15,15,]),'KEY_ARRAY':([202,208,274,304,312,339,343,358,],[271,271,271,271,271,271,271,271,]),'KEY_READINT':([7,116,124,169,196,278,323,332,350,366,374,],[32,32,32,32,32,32,32,32,32,32,32,]),'KEY_CASE':([14,16,17,19,23,25,27,28,29,30,31,35,37,38,40,41,42,45,46,47,48,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,102,112,120,124,143,144,145,146,147,148,150,162,163,164,166,170,171,172,177,186,190,195,210,215,226,227,229,230,235,236,237,238,239,240,241,242,243,244,247,248,251,253,281,284,285,286,287,288,289,291,297,319,320,321,323,324,327,329,331,349,363,365,367,372,377,],[-172,-143,-16,-136,-134,-124,-125,-132,-121,-126,-127,-130,-137,-62,-128,-131,-135,-123,-133,-122,-60,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-142,-129,-63,-172,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-138,-67,-162,246,-61,-15,-156,-56,-35,-19,-20,-22,-66,-141,-159,-161,-165,-157,-169,-164,-167,-163,246,-166,-160,-158,-58,-57,-23,-26,-46,-47,-31,-153,246,-140,-139,-52,-172,-149,-155,-170,-145,-152,-171,-168,-144,-148,-154,]),'GTEQ':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,225,226,228,229,230,235,281,284,285,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,159,-42,-29,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-172,-35,-172,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,]),'KEY_ADD':([69,],[140,]),'KEY_ORD':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,298,330,359,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-82,-79,-75,-76,-81,90,-77,-80,-78,90,90,90,90,90,-73,-74,-72,-68,-71,-69,90,-70,90,90,90,90,90,90,90,90,]),'KEY_END':([7,14,16,17,19,23,25,27,28,29,30,31,35,37,38,40,41,42,45,46,47,48,53,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,102,112,116,120,124,143,144,145,146,147,148,150,162,163,164,166,169,170,171,172,177,188,190,195,196,210,215,226,227,229,230,233,235,236,237,238,239,240,241,242,243,244,247,248,251,253,255,259,260,261,262,263,264,265,266,267,268,269,270,278,281,284,285,286,287,288,289,291,295,296,297,301,302,305,306,308,318,319,320,321,323,324,326,327,329,331,332,335,336,342,349,350,353,355,356,357,363,364,365,366,367,369,370,372,373,374,375,376,377,],[-172,-172,-143,-16,-136,-134,-124,-125,-132,-121,-126,-127,-130,-137,-62,-128,-131,-135,-123,-133,-122,-60,123,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-142,-129,-172,-63,-172,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-172,-36,-138,-67,-162,249,-61,-15,-172,-156,-56,-35,-19,-20,-22,291,-66,-141,-159,-161,-165,-157,-169,-164,-167,-163,-172,-166,-160,-158,-172,-89,-94,-86,-172,-91,-84,-90,-93,-92,-88,-85,-87,-172,-58,-57,-23,-26,-46,-47,-31,-153,324,-151,-172,-147,331,335,-105,-103,347,-140,-139,-52,-172,-149,-150,-155,-170,-145,-172,-99,-172,-108,-152,-172,367,-102,-172,-104,-171,372,-168,-172,-144,375,-95,-148,-146,-172,-100,377,-154,]),'KEY_RECORD':([202,208,274,304,312,339,343,358,],[262,262,262,262,262,262,262,262,]),'KEY_FREAD':([7,116,124,169,196,278,323,332,350,366,374,],[36,36,36,36,36,36,36,36,36,36,36,]),'IDENT':([2,7,9,10,12,14,15,35,38,39,48,50,54,56,57,58,59,61,63,64,65,66,68,82,84,86,90,92,93,96,99,100,101,103,104,105,106,107,108,109,110,111,113,115,116,118,119,120,121,122,123,124,126,138,141,142,149,152,153,154,155,156,157,158,159,160,161,165,169,190,196,199,200,201,202,203,205,207,208,209,212,213,216,217,218,219,220,221,222,223,224,232,234,245,246,256,262,271,274,278,298,304,307,312,323,330,332,333,336,339,343,344,345,347,350,356,358,359,366,374,],[3,38,-172,-172,-172,38,38,38,-62,38,-60,120,38,127,-8,129,-12,133,-10,135,38,38,-60,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-63,38,38,194,38,38,38,38,38,38,-82,-79,-75,-76,-81,38,-77,-80,-78,38,38,38,-61,38,38,-7,-11,264,273,275,279,264,-9,38,38,38,-73,-74,-72,-68,-71,-69,38,-70,38,38,38,38,38,129,38,264,38,38,264,38,264,38,38,38,38,129,264,264,361,275,-120,38,129,264,38,38,38,]),'KEY_DEL':([69,],[139,]),'MINUS':([15,35,38,39,54,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,86,87,88,91,94,96,97,100,101,104,105,106,107,109,110,111,115,119,120,122,141,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,166,170,172,190,199,212,213,215,225,226,228,229,230,232,234,235,246,256,271,281,284,285,286,287,288,289,298,321,330,359,],[93,93,-62,93,93,93,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,93,-50,-30,-42,-29,93,-48,93,93,93,93,93,93,93,93,93,93,93,-63,93,93,217,-24,-34,-27,-25,-37,93,-38,-82,-79,-75,-76,-81,93,-77,-80,-78,93,-39,-172,-172,-53,-36,-67,-61,93,93,93,-56,-172,-35,-172,217,217,93,93,-66,93,93,93,-58,-57,-23,-26,-46,-47,-31,93,-52,93,93,]),'KEY_NEW':([7,116,124,169,196,278,323,332,350,366,374,],[18,18,18,18,18,18,18,18,18,18,18,]),'KEY_CONST':([4,5,6,8,9,10,11,12,56,57,58,59,63,64,132,134,200,201,206,209,],[-172,-6,9,-14,-172,-172,-5,-172,-2,-8,-4,-12,-10,-3,-13,-172,-7,-11,9,-9,]),'LT':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,225,226,228,229,230,235,281,284,285,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,158,-42,-29,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-172,-35,-172,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,]),'KEY_TO':([272,],[312,]),'LCB':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,298,330,359,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-82,-79,-75,-76,-81,96,-77,-80,-78,96,96,96,96,96,-73,-74,-72,-68,-71,-69,96,-70,96,96,96,96,96,96,96,96,]),'EQUAL':([38,48,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,135,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,225,226,228,229,230,235,281,284,285,286,287,288,289,321,],[-62,117,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,154,-42,-29,-48,-63,208,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-172,-35,-172,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,]),'AT':([7,14,15,35,38,39,48,54,65,66,68,82,84,86,90,92,93,96,99,100,101,103,104,105,106,107,108,109,110,111,113,115,116,118,119,120,121,122,124,126,138,141,142,149,152,153,154,155,156,157,158,159,160,161,165,169,190,196,199,212,213,216,217,218,219,220,221,222,223,224,232,234,245,246,256,271,278,298,307,323,330,332,333,350,359,366,374,],[50,50,50,50,-62,50,-60,50,50,50,-60,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-63,50,50,50,50,50,50,50,50,-82,-79,-75,-76,-81,50,-77,-80,-78,50,50,50,-61,50,50,50,50,50,-73,-74,-72,-68,-71,-69,50,-70,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'RRB':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,101,105,120,137,143,144,145,146,147,148,150,151,162,163,164,166,170,171,172,173,174,175,176,178,179,180,181,182,183,184,187,190,191,193,205,211,215,225,226,227,228,229,230,231,235,259,260,261,263,264,265,266,267,268,269,270,277,281,282,283,284,285,286,287,288,289,292,300,316,317,321,335,337,338,342,348,351,354,360,362,370,375,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,172,177,-63,210,-21,-24,-34,-27,-25,-37,-38,226,-39,-172,-172,-53,-36,-138,-67,-65,235,236,237,238,239,240,241,242,243,244,248,-61,251,253,276,281,-56,287,-35,-19,288,-20,-22,289,-66,-89,-94,-86,-91,-84,-90,-93,-92,-88,-85,-87,-172,-58,319,320,-57,-23,-26,-46,-47,-31,-64,329,-116,346,-52,-99,-101,356,-108,363,365,368,-117,-115,-95,-100,]),'KEY_THEN':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,125,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,226,227,229,230,235,281,284,285,286,287,288,289,321,352,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-63,196,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-35,-19,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,366,]),'KEY_WRITEREAL':([7,116,124,169,196,278,323,332,350,366,374,],[52,52,52,52,52,52,52,52,52,52,52,]),'KEY_OF':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,226,227,229,230,235,281,284,285,286,287,288,289,310,311,321,340,341,371,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-35,-19,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-172,-98,-52,358,-97,-96,]),'DIVIDE':([38,66,68,70,71,72,73,75,76,77,78,79,80,81,83,85,87,88,91,94,97,120,145,146,147,148,150,162,166,170,172,190,215,225,226,228,235,281,284,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-42,-29,-48,-63,-34,-27,222,-37,-38,-39,-53,-36,-67,-61,-56,-172,-35,-172,-66,-58,-57,-26,-46,-47,-31,-52,]),'KEY_ELSE':([14,16,17,19,23,25,27,28,29,30,31,35,37,38,40,41,42,45,46,47,48,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,102,112,120,124,143,144,145,146,147,148,150,162,163,164,166,170,171,172,177,190,195,196,210,215,226,227,229,230,235,236,237,238,239,240,241,242,243,244,247,248,251,253,255,281,284,285,286,287,288,289,291,295,296,297,301,302,319,320,321,323,324,326,327,329,331,349,363,365,366,367,372,373,377,],[-172,-143,-16,-136,-134,-124,-125,-132,-121,-126,-127,-130,-137,-62,-128,-131,-135,-123,-133,-122,-60,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-142,-129,-63,-172,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-138,-67,-162,-61,-15,-172,-156,-56,-35,-19,-20,-22,-66,-141,-159,-161,-165,-157,-169,-164,-167,-163,-172,-166,-160,-158,-172,-58,-57,-23,-26,-46,-47,-31,-153,325,-151,-172,-147,332,-140,-139,-52,-172,-149,-150,-155,-170,-145,-152,-171,-168,-172,-144,-148,-146,-154,]),'KEY_INTEGER':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,202,208,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,274,298,304,312,330,339,343,358,359,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-82,-79,-75,-76,-81,72,-77,-80,-78,72,72,259,259,72,72,72,-73,-74,-72,-68,-71,-69,72,-70,72,72,72,72,72,259,72,259,259,72,259,259,259,72,]),'KEY_SET':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,202,208,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,274,298,304,312,330,339,343,358,359,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-82,-79,-75,-76,-81,73,-77,-80,-78,73,73,260,260,73,73,73,-73,-74,-72,-68,-71,-69,73,-70,73,73,73,73,73,260,73,260,260,73,260,260,260,73,]),'KEY_FCLOSE':([7,116,124,169,196,278,323,332,350,366,374,],[26,26,26,26,26,26,26,26,26,26,26,]),'LRB':([13,14,15,16,18,20,21,22,24,26,32,33,34,35,36,38,39,43,48,49,51,52,54,55,65,66,67,68,70,71,75,82,84,86,90,92,93,95,96,99,100,101,104,105,106,107,109,110,111,115,119,120,122,133,139,140,141,149,152,153,154,155,156,157,158,159,160,161,189,190,199,212,213,215,216,217,218,219,220,221,222,223,224,232,234,246,256,262,271,281,284,298,330,359,],[65,-172,86,101,103,104,105,106,107,108,109,110,111,86,113,-62,86,115,-60,119,121,122,86,126,86,-172,138,-60,-55,-59,101,86,149,86,161,86,86,165,86,86,86,86,86,86,86,86,86,86,86,86,86,-63,86,205,212,213,86,86,-82,-79,-75,-76,-81,86,-77,-80,-78,86,250,-61,86,86,86,-56,86,-73,-74,-72,-68,-71,-69,86,-70,86,86,86,86,307,86,-58,-57,86,86,86,]),'KEY_WRITECHAR':([7,116,124,169,196,278,323,332,350,366,374,],[20,20,20,20,20,20,20,20,20,20,20,]),'KEY_PROCEDURE':([4,5,6,8,9,10,11,12,56,57,58,59,63,64,132,134,200,201,206,209,],[-172,-6,-172,-14,-172,-172,61,-172,-2,-8,-4,-12,-10,-3,-13,-172,-7,-11,-172,-9,]),'KEY_IS':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,225,226,228,229,230,235,281,284,285,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,152,-42,-29,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-172,-35,-172,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,]),'VREAL':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,298,330,359,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-82,-79,-75,-76,-81,77,-77,-80,-78,77,77,77,77,77,-73,-74,-72,-68,-71,-69,77,-70,77,77,77,77,77,77,77,77,]),'NEQUAL':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,225,226,228,229,230,235,281,284,285,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,155,-42,-29,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-172,-35,-172,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,]),'KEY_MODULE':([0,],[2,]),'VINTEGER':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,298,322,330,359,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-82,-79,-75,-76,-81,97,-77,-80,-78,97,97,97,97,97,-73,-74,-72,-68,-71,-69,97,-70,97,97,97,97,97,97,348,97,97,]),'SCOLON':([3,7,14,16,17,19,23,25,27,28,29,30,31,35,37,38,40,41,42,45,46,47,48,53,60,62,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,102,112,116,120,124,128,130,136,143,144,145,146,147,148,150,162,163,164,166,169,170,171,172,177,188,190,195,196,198,204,210,215,226,227,229,230,233,235,236,237,238,239,240,241,242,243,244,248,251,253,255,258,259,260,261,262,263,264,265,266,267,268,269,270,276,277,278,279,280,281,284,285,286,287,288,289,291,303,305,306,308,313,316,317,318,319,320,321,323,324,327,329,331,332,334,335,336,342,346,349,350,353,355,356,357,360,362,363,364,365,366,367,369,370,372,373,374,375,376,377,],[4,-172,-172,-143,-16,-136,-134,-124,-125,-132,-121,-126,-127,-130,-137,-62,-128,-131,-135,-123,-133,-122,-60,124,132,134,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-142,-129,-172,-63,-172,200,201,209,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-172,-36,-138,-67,-162,124,-61,-15,-172,256,-112,-156,-56,-35,-19,-20,-22,124,-66,-141,-159,-161,-165,-157,-169,-164,-167,-163,-166,-160,-158,124,-109,-89,-94,-86,-172,-91,-84,-90,-93,-92,-88,-85,-87,-114,-172,-172,-110,-83,-58,-57,-23,-26,-46,-47,-31,-153,333,336,-105,-103,-111,-116,345,124,-140,-139,-52,-172,-149,-155,-170,-145,-172,-17,-99,-172,-108,-113,124,-172,124,-102,-172,-104,-117,-115,-171,124,-168,-172,-144,336,-95,-148,124,-172,-100,124,-154,]),'KEY_BOOLEAN':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,202,208,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,274,298,304,312,330,339,343,358,359,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-82,-79,-75,-76,-81,79,-77,-80,-78,79,79,265,265,79,79,79,-73,-74,-72,-68,-71,-69,79,-70,79,79,79,79,79,265,79,265,265,79,265,265,265,79,]),'KEY_REAL':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,202,208,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,274,298,304,312,330,339,343,358,359,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-82,-79,-75,-76,-81,80,-77,-80,-78,80,80,266,266,80,80,80,-73,-74,-72,-68,-71,-69,80,-70,80,80,80,80,80,266,80,266,266,80,266,266,266,80,]),'KEY_WRITEINT':([7,116,124,169,196,278,323,332,350,366,374,],[24,24,24,24,24,24,24,24,24,24,24,]),'$end':([1,254,],[0,-1,]),'KEY_CHR':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,298,330,359,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-82,-79,-75,-76,-81,84,-77,-80,-78,84,84,84,84,84,-73,-74,-72,-68,-71,-69,84,-70,84,84,84,84,84,84,84,84,]),'GT':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,225,226,228,229,230,235,281,284,285,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,153,-42,-29,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-172,-35,-172,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,]),'VCHAR':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,298,328,330,359,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-82,-79,-75,-76,-81,87,-77,-80,-78,87,87,87,87,87,-73,-74,-72,-68,-71,-69,87,-70,87,87,87,87,87,87,87,87,87,]),'RCB':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,96,97,120,143,144,145,146,147,148,150,162,163,164,166,168,170,172,190,215,226,227,229,230,235,281,284,285,286,287,288,289,290,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,166,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-54,-36,-67,-61,-56,-35,-19,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,321,-52,]),'KEY_READ':([7,116,124,169,196,278,323,332,350,366,374,],[34,34,34,34,34,34,34,34,34,34,34,]),'LSB':([14,38,48,66,68,70,71,120,190,215,281,284,],[-172,-62,-60,-172,-60,141,-59,-63,-61,-56,-58,-57,]),'KEY_RETURN':([7,116,124,169,196,278,323,332,350,366,374,],[35,35,35,35,35,35,35,35,35,35,35,]),'KEY_VAR':([4,5,6,8,9,10,11,12,56,57,58,59,63,64,132,134,200,201,206,209,],[-172,-6,10,-14,-172,-172,-5,-172,-2,-8,-4,-12,-10,-3,-13,-172,-7,-11,10,-9,]),'KEY_READBOOL':([7,116,124,169,196,278,323,332,350,366,374,],[33,33,33,33,33,33,33,33,33,33,33,]),'DOT':([14,38,48,66,68,70,71,120,190,194,215,281,284,],[69,-62,118,-172,118,142,-59,-63,-61,254,-56,-58,-57,]),'KEY_CHAR':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,202,208,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,274,298,304,312,330,339,343,358,359,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-82,-79,-75,-76,-81,91,-77,-80,-78,91,91,263,263,91,91,91,-73,-74,-72,-68,-71,-69,91,-70,91,91,91,91,91,263,91,263,263,91,263,263,263,91,]),'COLON':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,129,131,143,144,145,146,147,148,150,162,163,164,166,170,172,190,204,215,226,227,229,230,235,257,273,275,276,281,284,285,286,287,288,289,294,309,314,315,321,325,346,361,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-63,-107,202,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,274,-56,-35,-19,-20,-22,-66,304,-106,-172,-114,-58,-57,-23,-26,-46,-47,-31,323,339,343,-119,-52,350,-113,-118,]),'KEY_BEGIN':([4,5,6,8,9,10,11,12,38,44,56,57,58,59,63,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,98,114,120,132,134,143,144,145,146,147,148,150,162,163,164,166,170,172,190,200,201,206,209,215,226,227,229,230,235,281,284,285,286,287,288,289,321,368,],[-172,-6,7,-14,-172,-172,-5,-172,-62,116,-2,-8,-4,-12,-10,-3,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,169,186,-63,-13,-172,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-7,-11,278,-9,-56,-35,-19,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,374,]),'KEY_IF':([7,116,124,169,196,278,323,332,350,366,374,],[54,54,54,54,54,54,54,54,54,54,54,]),'PLUS':([15,35,38,39,54,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,86,87,88,91,94,96,97,100,101,104,105,106,107,109,110,111,115,119,120,122,141,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,166,170,172,190,199,212,213,215,225,226,228,229,230,232,234,235,246,256,271,281,284,285,286,287,288,289,298,321,330,359,],[92,92,-62,92,92,92,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,92,-50,-30,-42,-29,92,-48,92,92,92,92,92,92,92,92,92,92,92,-63,92,92,219,-24,-34,-27,-25,-37,92,-38,-82,-79,-75,-76,-81,92,-77,-80,-78,92,-39,-172,-172,-53,-36,-67,-61,92,92,92,-56,-172,-35,-172,219,219,92,92,-66,92,92,92,-58,-57,-23,-26,-46,-47,-31,92,-52,92,92,]),'KEY_EXIT':([7,116,124,169,196,278,323,332,350,366,374,],[40,40,40,40,40,40,40,40,40,40,40,]),'KEY_NIL':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,298,330,359,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-82,-79,-75,-76,-81,95,-77,-80,-78,95,95,95,95,95,-73,-74,-72,-68,-71,-69,95,-70,95,95,95,95,95,95,95,95,]),'KEY_READREAL':([7,116,124,169,196,278,323,332,350,366,374,],[22,22,22,22,22,22,22,22,22,22,22,]),'KEY_READCHAR':([7,116,124,169,196,278,323,332,350,366,374,],[43,43,43,43,43,43,43,43,43,43,43,]),'KEY_DO':([7,116,124,169,196,278,323,332,350,366,374,],[44,44,44,44,44,44,44,44,44,44,44,]),'KEY_FOR':([7,116,124,169,196,278,323,332,350,366,374,],[55,55,55,55,55,55,55,55,55,55,55,]),'AND':([38,66,68,70,71,72,73,75,76,77,78,79,80,81,83,85,87,88,91,94,97,120,145,146,147,148,150,162,166,170,172,190,215,225,226,228,235,281,284,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-42,-29,-48,-63,-34,-27,221,-37,-38,-39,-53,-36,-67,-61,-56,-172,-35,-172,-66,-58,-57,-26,-46,-47,-31,-52,]),'KEY_IN':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,225,226,228,229,230,235,281,284,285,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,156,-42,-29,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-172,-35,-172,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,]),'MODULUS':([38,66,68,70,71,72,73,75,76,77,78,79,80,81,83,85,87,88,91,94,97,120,145,146,147,148,150,162,166,170,172,190,215,225,226,228,235,281,284,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-42,-29,-48,-63,-34,-27,224,-37,-38,-39,-53,-36,-67,-61,-56,-172,-35,-172,-66,-58,-57,-26,-46,-47,-31,-52,]),'MULTIPLY':([38,66,68,70,71,72,73,75,76,77,78,79,80,81,83,85,87,88,91,94,97,120,145,146,147,148,150,162,166,170,172,190,215,225,226,228,235,281,284,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-42,-29,-48,-63,-34,-27,220,-37,-38,-39,-53,-36,-67,-61,-56,-172,-35,-172,-66,-58,-57,-26,-46,-47,-31,-52,]),'RSB':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,173,190,214,215,226,227,229,230,235,281,284,285,286,287,288,289,292,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-65,-61,284,-56,-35,-19,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-64,-52,]),'NOT':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,152,153,154,155,156,157,158,159,160,161,199,212,213,216,217,218,219,220,221,222,223,224,232,234,246,256,271,298,330,359,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-82,-79,-75,-76,-81,99,-77,-80,-78,99,99,99,99,99,-73,-74,-72,-68,-71,-69,99,-70,99,99,99,99,99,99,99,99,]),'LTEQ':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,143,144,145,146,147,148,150,162,163,164,166,170,172,190,215,225,226,228,229,230,235,281,284,285,286,287,288,289,321,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,160,-42,-29,-48,-63,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,-36,-67,-61,-56,-172,-35,-172,-20,-22,-66,-58,-57,-23,-26,-46,-47,-31,-52,]),'KEY_BREAK':([7,116,124,169,196,278,323,332,350,366,374,],[46,46,46,46,46,46,46,46,46,46,46,]),'COMMA':([38,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,85,87,88,89,91,94,97,120,129,131,143,144,145,146,147,148,150,162,163,164,166,167,168,170,172,173,174,185,190,192,214,215,226,227,229,230,235,273,275,281,284,285,286,287,288,289,292,293,299,309,310,311,314,315,321,340,341,361,371,],[-62,-172,-60,-55,-59,-40,-45,-172,-33,-28,-49,-172,-41,-44,-51,-43,-32,-50,-30,-18,-42,-29,-48,-63,-107,203,-21,-24,-34,-27,-25,-37,-38,-39,-172,-172,-53,232,-54,-36,-67,-65,234,245,-61,252,234,-56,-35,-19,-20,-22,-66,-106,-172,-58,-57,-23,-26,-46,-47,-31,-64,322,328,203,-172,-98,344,-119,-52,359,-97,-118,-96,]),'KEY_POINTER':([202,208,274,304,312,339,343,358,],[272,272,272,272,272,272,272,272,]),'KEY_SWITCH':([7,116,124,169,196,278,323,332,350,366,374,],[39,39,39,39,39,39,39,39,39,39,39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([202,208,274,304,312,339,343,358,],[258,280,313,334,342,357,360,370,]),'addOperator':([143,229,230,],[216,216,216,]),'comass':([310,],[340,]),'pointerType':([202,208,274,304,312,339,343,358,],[268,268,268,268,268,268,268,268,]),'qualident':([7,14,15,35,39,54,65,66,82,84,86,90,92,93,96,99,100,101,103,104,105,106,107,109,110,111,115,116,118,119,122,124,126,138,141,149,157,161,165,169,196,199,212,213,216,223,232,234,246,256,271,278,298,307,323,330,332,333,350,359,366,374,],[14,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,14,190,66,66,14,66,211,66,66,66,66,66,14,14,66,66,66,66,66,66,66,66,66,66,14,66,337,14,66,14,66,14,66,14,14,]),'term':([15,35,39,54,65,86,92,93,96,100,101,104,105,106,107,109,110,111,115,119,122,141,149,157,161,199,212,213,216,232,234,246,256,271,298,330,359,],[74,74,74,74,74,74,163,164,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,285,74,74,74,74,74,74,74,74,]),'relation':([89,],[157,]),'designator':([7,14,15,35,39,54,65,66,82,84,86,90,92,93,96,99,100,101,103,104,105,106,107,109,110,111,115,116,119,122,124,126,141,149,157,161,165,169,196,199,212,213,216,223,232,234,246,256,271,278,298,323,330,332,333,350,359,366,374,],[16,67,75,75,75,75,75,67,75,75,75,75,75,75,75,75,75,75,175,75,75,75,75,75,75,75,75,16,75,75,16,197,75,75,75,75,231,16,16,75,75,75,75,75,75,75,75,75,75,16,75,16,75,16,197,16,75,16,16,]),'statement':([7,116,124,169,196,278,323,332,350,366,374,],[17,17,195,17,17,17,17,17,17,17,17,]),'procedureHeading':([11,],[62,]),'varType':([202,208,274,304,312,339,343,358,],[269,269,269,269,269,269,269,269,]),'conss':([9,],[56,]),'procss':([6,206,],[11,11,]),'module':([0,],[1,]),'factor':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,157,161,199,212,213,216,223,232,234,246,256,271,298,330,359,],[78,78,78,78,78,148,150,78,162,78,78,78,170,78,78,78,78,78,78,78,78,78,78,78,78,78,225,78,228,78,78,78,78,286,78,78,78,78,78,78,78,78,]),'fieldList':([262,336,356,],[308,355,308,]),'procedureBody':([134,],[207,]),'constantDeclaration':([56,],[128,]),'fieldListSequence':([262,356,],[305,369,]),'variableDeclaration':([58,],[130,]),'element':([96,232,],[167,290,]),'switchStatement':([7,116,124,169,196,278,323,332,350,366,374,],[25,25,25,25,25,25,25,25,25,25,25,]),'casess':([247,297,],[295,326,]),'procedureDeclaration':([11,],[60,]),'designator2':([14,66,],[70,70,]),'set':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,157,161,199,212,213,216,223,232,234,246,256,271,298,330,359,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'fileStatement':([7,116,124,169,196,278,323,332,350,366,374,],[28,28,28,28,28,28,28,28,28,28,28,]),'ifss':([255,],[302,]),'number':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,157,161,199,212,213,216,223,232,234,246,256,271,298,330,359,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'assignment':([7,116,124,126,169,196,278,323,332,333,350,366,374,],[29,29,29,198,29,29,29,29,29,354,29,29,29,]),'forStatement':([7,116,124,169,196,278,323,332,350,366,374,],[30,30,30,30,30,30,30,30,30,30,30,]),'formalParameters':([133,],[204,]),'doWhileStatement':([7,116,124,169,196,278,323,332,350,366,374,],[31,31,31,31,31,31,31,31,31,31,31,]),'string':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,157,161,199,212,213,216,223,232,234,246,250,252,256,271,298,330,359,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,299,300,88,88,88,88,88,]),'simpleExpression':([15,35,39,54,65,86,96,100,101,104,105,106,107,109,110,111,115,119,122,141,149,157,161,199,212,213,232,234,246,256,271,298,330,359,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,227,89,89,89,89,89,89,89,89,89,89,89,89,]),'arrayType':([202,208,274,304,312,339,343,358,],[261,261,261,261,261,261,261,261,]),'actualParameters':([16,75,],[102,145,]),'mulOperator':([147,],[223,]),'baseType':([307,],[338,]),'declarationSequence':([4,134,],[6,206,]),'simpless':([74,163,164,],[143,229,230,]),'setStatement':([7,116,124,169,196,278,323,332,350,366,374,],[37,37,37,37,37,37,37,37,37,37,37,]),'typeDeclaration':([64,],[136,]),'char':([15,35,39,54,65,82,84,86,90,92,93,96,99,100,101,104,105,106,107,109,110,111,115,119,122,141,149,157,161,199,212,213,216,223,232,234,246,256,271,298,328,330,359,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,351,94,94,]),'ioStatement':([7,116,124,169,196,278,323,332,350,366,374,],[41,41,41,41,41,41,41,41,41,41,41,]),'empty':([4,6,7,9,10,12,14,66,74,78,116,124,134,163,164,169,196,206,225,228,247,255,262,275,277,278,297,310,323,332,336,350,356,366,374,],[5,8,42,57,59,63,71,71,144,146,42,42,5,144,144,42,42,8,146,146,296,301,306,315,316,42,296,341,42,42,306,42,306,42,42,]),'formalss':([277,],[317,]),'recordType':([202,208,274,304,312,339,343,358,],[270,270,270,270,270,270,270,270,]),'expList':([101,141,],[174,214,]),'ifStatement':([7,116,124,169,196,278,323,332,350,366,374,],[45,45,45,45,45,45,45,45,45,45,45,]),'varss':([10,],[58,]),'FPs':([275,],[314,]),'procedureCall':([7,116,124,169,196,278,323,332,350,366,374,],[47,47,47,47,47,47,47,47,47,47,47,]),'FPSection':([205,345,],[277,362,]),'identdef':([7,14,15,35,39,54,65,66,82,84,86,90,92,93,96,99,100,101,103,104,105,106,107,108,109,110,111,113,115,116,118,119,121,122,124,126,138,141,142,149,157,161,165,169,196,199,212,213,216,223,232,234,245,246,256,271,278,298,307,323,330,332,333,350,359,366,374,],[48,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,181,68,68,68,185,68,48,68,68,192,68,48,68,68,68,215,68,68,68,68,48,48,68,68,68,68,68,68,68,293,68,68,68,48,68,68,48,68,48,68,48,68,48,48,]),'memoryalloc':([7,116,124,169,196,278,323,332,350,366,374,],[19,19,19,19,19,19,19,19,19,19,19,]),'case':([186,247,297,],[247,297,297,]),'whileStatement':([7,116,124,169,196,278,323,332,350,366,374,],[27,27,27,27,27,27,27,27,27,27,27,]),'expression':([15,35,39,54,65,86,96,100,101,104,105,106,107,109,110,111,115,119,122,141,149,161,199,212,213,232,234,246,256,271,298,330,359,],[98,112,114,125,137,151,168,171,173,176,178,179,180,182,183,184,187,191,193,173,151,151,257,282,283,168,292,294,303,311,327,352,311,]),'length':([271,359,],[310,371,]),'termss':([78,225,228,],[147,147,147,]),'statementSequence':([7,116,169,196,278,323,332,350,366,374,],[53,188,233,255,318,349,353,364,373,376,]),'identList':([58,262,336,356,],[131,309,309,309,]),'typess':([12,],[64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> empty','conss',1,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> empty','typess',1,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> empty','varss',1,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> empty','procss',1,'p_procss','par.py',61),
  ('statementSequence -> statementSequence SCOLON statement','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> statement','statementSequence',1,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> char','factor',1,'p_factor','par.py',108),
  ('factor -> string','factor',1,'p_factor','par.py',109),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',110),
  ('factor -> set','factor',1,'p_factor','par.py',111),
  ('factor -> designator','factor',1,'p_factor','par.py',112),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',113),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',114),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',115),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',119),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',125),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',163),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',164),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB FPSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON FPSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('FPSection -> IDENT FPs COLON type','FPSection',4,'p_FPSection','par.py',325),
  ('FPs -> FPs COMMA IDENT','FPs',3,'p_FPs','par.py',330),
  ('FPs -> empty','FPs',1,'p_FPs','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',356),
  ('statement -> setStatement','statement',1,'p_statement','par.py',357),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',362),
  ('setStatement -> qualident DOT KEY_ADD LRB expression RRB','setStatement',6,'p_setStatement','par.py',367),
  ('setStatement -> qualident DOT KEY_DEL LRB expression RRB','setStatement',6,'p_setStatement','par.py',368),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',374),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',380),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',381),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',386),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',387),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',392),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',393),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',398),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',399),
  ('casess -> case casess','casess',2,'p_casess','par.py',404),
  ('casess -> empty','casess',1,'p_casess','par.py',405),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',410),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',415),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',420),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',425),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',430),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',431),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',432),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',433),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',434),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',435),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',441),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',446),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',447),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',448),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',449),
  ('empty -> <empty>','empty',0,'p_empty','par.py',454),
]
