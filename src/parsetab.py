
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence statement SCOLON\n\t\t\t\t\t\t\t  | statement SCOLON\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB fpSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON fpSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tfpSection : IDENT fps COLON type\n\t\t\n\t\t\tfps : fps COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : qualident DOT KEY_ADD LRB expression RRB\n\t\t\t\t\t\t | qualident DOT KEY_DEL LRB expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_VAR':([4,5,6,7,8,10,11,12,13,14,61,62,63,64,131,133,138,206,207,209,],[-172,-6,7,-172,-14,-5,-172,-172,-4,-12,-10,-3,-2,-8,-13,-172,-11,7,-9,-7,]),'LCB':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,290,332,352,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-79,-78,80,-82,-77,-80,-81,-75,-76,80,80,80,80,80,80,80,-69,-70,-71,80,-68,-74,80,-73,-72,80,80,80,80,80,80,80,]),'KEY_OF':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,237,245,252,253,266,273,288,289,294,295,296,297,300,308,309,326,327,331,365,],[-62,-63,-18,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-19,-35,-22,-20,-56,-66,-172,-98,-47,-46,-26,-23,-31,-58,-57,-97,353,-52,-96,]),'LSB':([19,48,52,68,86,105,117,120,194,266,308,309,],[-62,-172,-60,-63,-172,-60,-59,190,-61,-56,-58,-57,]),'IDENT':([2,7,9,11,12,13,14,15,19,29,30,35,48,51,52,54,59,61,62,63,64,68,69,70,71,72,73,74,75,76,77,79,80,82,85,86,92,99,104,105,107,108,110,111,112,114,115,116,121,123,125,127,129,130,138,139,140,141,150,155,156,157,158,159,160,161,162,163,164,166,175,177,189,190,191,193,194,203,205,207,208,209,210,217,224,228,231,236,240,241,242,243,244,246,247,248,249,250,257,262,263,268,272,277,279,282,283,290,318,319,323,325,330,332,334,335,344,345,346,347,349,352,353,357,358,359,369,371,374,375,377,],[3,-172,19,-172,-172,65,-12,68,-62,19,19,19,19,19,-60,19,132,-10,135,137,-8,-63,19,19,19,19,19,19,19,-16,19,151,19,19,19,19,19,19,19,-60,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-11,211,216,19,-15,-79,-78,19,-82,-77,-80,-81,-75,-76,19,19,19,19,19,19,19,19,-61,275,278,-9,216,-7,19,65,19,19,19,19,-69,-70,-71,19,-68,-74,19,-73,-72,19,19,19,19,19,19,216,19,216,19,19,19,216,65,216,19,19,19,19,275,362,216,-120,65,19,216,19,19,19,19,19,19,19,19,]),'KEY_ELSE':([76,150,250,258,298,299,302,303,304,338,358,375,],[-16,-15,-172,-172,-147,334,-151,337,-172,-150,-152,-146,]),'KEY_WRITEBOOL':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[20,20,20,-16,20,-15,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'KEY_BOOLEAN':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,140,155,156,157,158,159,160,161,162,163,164,166,190,208,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,277,282,290,319,325,332,346,352,353,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,225,-79,-78,83,-82,-77,-80,-81,-75,-76,83,83,83,225,83,83,83,83,-69,-70,-71,83,-68,-74,83,-73,-72,83,83,83,83,225,225,83,225,225,83,225,83,225,]),'KEY_FOPEN':([124,],[195,]),'RRB':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,127,130,143,144,147,148,149,152,165,167,168,169,170,171,172,173,174,176,178,179,180,181,182,184,186,192,194,196,198,199,200,201,202,203,214,215,216,218,219,220,221,222,223,225,226,237,238,239,245,251,252,253,264,266,273,274,294,295,296,297,300,305,306,307,308,309,312,313,314,320,321,322,324,331,354,355,360,361,363,366,373,],[-62,-63,-18,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,197,202,229,230,232,233,234,-53,-39,-38,-25,-27,245,-21,-24,-34,-36,-37,-172,-172,254,255,256,259,261,267,-61,270,271,-138,273,-65,-67,276,-92,-86,-84,-89,-85,-94,-91,-93,-88,-90,-87,-19,294,295,-35,300,-22,-20,308,-56,-66,-172,-47,-46,-26,-23,-31,339,340,341,-58,-57,-64,-116,343,-108,-101,349,-99,-52,367,368,372,-115,-117,-95,-100,]),'KEY_WRITE':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[26,26,26,-16,26,-15,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'VCHAR':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,290,332,342,352,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-79,-78,88,-82,-77,-80,-81,-75,-76,88,88,88,88,88,88,88,-69,-70,-71,88,-68,-74,88,-73,-72,88,88,88,88,88,88,88,88,]),'KEY_INTEGER':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,140,155,156,157,158,159,160,161,162,163,164,166,190,208,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,277,282,290,319,325,332,346,352,353,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,218,-79,-78,90,-82,-77,-80,-81,-75,-76,90,90,90,218,90,90,90,90,-69,-70,-71,90,-68,-74,90,-73,-72,90,90,90,90,218,218,90,218,218,90,218,90,218,]),'KEY_WRITEREAL':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[31,31,31,-16,31,-15,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'KEY_IN':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,238,239,245,252,253,266,273,294,295,296,297,300,308,309,331,],[-62,-63,161,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-172,-172,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,]),'KEY_FCLOSE':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[33,33,33,-16,33,-15,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'KEY_READ':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[34,34,34,-16,34,-15,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'VINTEGER':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,290,329,332,352,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-79,-78,91,-82,-77,-80,-81,-75,-76,91,91,91,91,91,91,91,-69,-70,-71,91,-68,-74,91,-73,-72,91,91,91,91,91,354,91,91,]),'KEY_THEN':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,102,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,237,245,252,253,266,273,294,295,296,297,300,308,309,331,356,],[-62,-63,-18,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,175,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-19,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,369,]),'VSTRING':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,260,262,263,269,272,290,332,352,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-79,-78,94,-82,-77,-80,-81,-75,-76,94,94,94,94,94,94,94,-69,-70,-71,94,-68,-74,94,-73,-72,94,94,94,94,94,94,94,94,94,]),'KEY_END':([29,76,141,150,214,215,216,217,218,219,220,221,222,223,225,226,250,258,268,284,286,287,298,299,302,303,304,318,320,323,324,338,349,350,351,357,358,364,366,371,373,375,377,],[79,-16,227,-15,-92,-86,-84,-172,-89,-85,-94,-91,-93,-88,-90,-87,-172,-172,310,324,-103,-105,-147,333,-151,336,-172,347,-108,-172,-99,-150,-172,-102,-104,370,-152,373,-95,376,-100,-146,378,]),'KEY_FPRINTF':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[42,42,42,-16,42,-15,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'KEY_TYPE':([4,5,6,7,8,10,11,12,13,14,61,62,63,64,131,133,138,206,207,209,],[-172,-6,11,-172,-14,-5,-172,-172,-4,-12,-10,-3,-2,-8,-13,-172,-11,11,-9,-7,]),'KEY_IS':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,238,239,245,252,253,266,273,294,295,296,297,300,308,309,331,],[-62,-63,158,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-172,-172,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,]),'SCOLON':([3,9,17,19,24,25,27,29,32,36,37,39,40,41,43,44,45,47,48,49,52,54,56,57,58,60,66,68,69,76,78,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,126,128,134,136,141,146,150,152,165,167,168,169,171,172,173,174,175,176,178,179,193,194,197,199,202,204,212,214,215,216,217,218,219,220,221,222,223,225,226,229,230,232,233,234,237,245,250,252,253,254,255,256,259,261,266,267,268,270,271,273,274,276,278,279,280,284,286,287,292,294,295,296,297,298,300,308,309,310,313,314,317,318,320,323,324,328,331,333,334,335,336,339,340,341,343,348,349,350,351,357,358,359,361,363,364,366,367,369,370,371,372,373,374,375,376,377,378,],[4,-172,-135,-62,-126,-123,76,-172,-125,-136,-137,-128,-131,-124,-121,-134,-122,-127,-172,-133,-60,-130,-143,-132,131,133,138,-63,-172,-16,150,-18,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-129,-142,207,209,-172,231,-15,-53,-39,-38,-25,-27,-21,-24,-34,-36,-172,-37,-172,-172,-172,-61,-162,-138,-67,-112,-109,-92,-86,-84,-172,-89,-85,-94,-91,-93,-88,-90,-87,-160,-164,-141,-156,-157,-19,-35,-172,-22,-20,-158,-169,-163,-166,-167,-56,-165,-172,-159,-161,-66,-172,-114,-110,-172,-83,323,-103,-105,330,-47,-46,-26,-23,-135,-31,-58,-57,-153,-116,344,-111,-172,-108,-172,-99,-155,-52,-145,-172,-172,-149,-170,-139,-140,-113,-17,-172,-102,-104,-172,-172,-172,-115,-117,323,-95,-171,-172,-144,-172,-168,-100,-172,-172,-148,-172,-154,]),'KEY_BREAK':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[49,49,49,-16,49,-15,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'OR':([19,68,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,238,239,245,252,253,266,273,294,295,296,297,300,308,309,331,],[-62,-63,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,246,-24,-34,-36,-37,-172,-172,-61,-67,-172,-172,-35,246,246,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,]),'KEY_SET':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,140,155,156,157,158,159,160,161,162,163,164,166,190,208,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,277,282,290,319,325,332,346,352,353,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,220,-79,-78,100,-82,-77,-80,-81,-75,-76,100,100,100,220,100,100,100,100,-69,-70,-71,100,-68,-74,100,-73,-72,100,100,100,100,220,220,100,220,220,100,220,100,220,]),'KEY_WHILE':([9,29,69,76,141,150,175,193,227,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[51,51,51,-16,51,-15,51,51,290,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'KEY_BEGIN':([4,5,6,7,8,10,11,12,13,14,16,19,61,62,63,64,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,113,117,120,122,131,133,138,152,165,167,168,169,171,172,173,174,176,178,179,194,202,206,207,209,237,245,252,253,266,273,294,295,296,297,300,308,309,331,368,],[-172,-6,9,-172,-14,-5,-172,-172,-4,-12,69,-62,-10,-3,-2,-8,-63,-18,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,183,-59,-55,193,-13,-172,-11,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,279,-9,-7,-19,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,374,]),'NEQUAL':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,238,239,245,252,253,266,273,294,295,296,297,300,308,309,331,],[-62,-63,163,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-172,-172,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,]),'KEY_WRITECHAR':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[53,53,53,-16,53,-15,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'MINUS':([19,30,35,51,54,68,71,72,75,77,80,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,103,105,109,110,112,114,116,117,120,121,125,127,129,130,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,176,178,179,190,194,202,210,224,231,236,238,239,245,252,253,257,262,263,266,272,273,290,294,295,296,297,300,308,309,331,332,352,],[-62,107,107,107,107,-63,107,107,107,107,107,-41,-28,-172,-43,-50,-172,-40,-48,107,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,107,107,107,107,-59,-55,107,107,107,107,107,-53,-79,-78,107,-82,-77,-80,-81,-75,-76,107,-39,107,-38,-25,-27,248,-24,-34,-36,-37,-172,-172,107,-61,-67,107,107,107,107,-172,-172,-35,248,248,107,107,107,-56,107,-66,107,-47,-46,-26,-23,-31,-58,-57,-52,107,107,]),'GTEQ':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,238,239,245,252,253,266,273,294,295,296,297,300,308,309,331,],[-62,-63,160,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-172,-172,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,]),'PLUS':([19,30,35,51,54,68,71,72,75,77,80,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,103,105,109,110,112,114,116,117,120,121,125,127,129,130,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,176,178,179,190,194,202,210,224,231,236,238,239,245,252,253,257,262,263,266,272,273,290,294,295,296,297,300,308,309,331,332,352,],[-62,108,108,108,108,-63,108,108,108,108,108,-41,-28,-172,-43,-50,-172,-40,-48,108,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,108,108,108,108,-59,-55,108,108,108,108,108,-53,-79,-78,108,-82,-77,-80,-81,-75,-76,108,-39,108,-38,-25,-27,249,-24,-34,-36,-37,-172,-172,108,-61,-67,108,108,108,108,-172,-172,-35,249,249,108,108,108,-56,108,-66,108,-47,-46,-26,-23,-31,-58,-57,-52,108,108,]),'VREAL':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,290,332,352,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-79,-78,109,-82,-77,-80,-81,-75,-76,109,109,109,109,109,109,109,-69,-70,-71,109,-68,-74,109,-73,-72,109,109,109,109,109,109,109,]),'AT':([9,19,29,30,35,48,51,52,54,68,69,70,71,72,73,74,75,76,77,80,82,85,86,92,99,104,105,107,108,110,111,112,114,115,116,121,123,125,127,129,130,141,150,155,156,157,158,159,160,161,162,163,164,166,175,177,189,190,191,193,194,210,224,228,231,236,240,241,242,243,244,246,247,248,249,250,257,262,263,268,272,279,283,290,318,330,332,334,335,352,357,358,359,369,371,374,375,377,],[15,-62,15,15,15,15,15,-60,15,-63,15,15,15,15,15,15,15,-16,15,15,15,15,15,15,15,15,-60,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-15,-79,-78,15,-82,-77,-80,-81,-75,-76,15,15,15,15,15,15,15,15,-61,15,15,15,15,15,-69,-70,-71,15,-68,-74,15,-73,-72,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'KEY_DO':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[16,16,16,-16,16,-15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'KEY_FREAD':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[18,18,18,-16,18,-15,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'RSB':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,201,202,237,245,252,253,265,266,273,294,295,296,297,300,308,309,312,331,],[-62,-63,-18,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-65,-67,-19,-35,-22,-20,309,-56,-66,-47,-46,-26,-23,-31,-58,-57,-64,-52,]),'KEY_ORD':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,290,332,352,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-79,-78,82,-82,-77,-80,-81,-75,-76,82,82,82,82,82,82,82,-69,-70,-71,82,-68,-74,82,-73,-72,82,82,82,82,82,82,82,]),'KEY_POINTER':([140,208,277,282,319,325,346,353,],[213,213,213,213,213,213,213,213,]),'KEY_READINT':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[21,21,21,-16,21,-15,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'KEY_FOR':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[22,22,22,-16,22,-15,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'KEY_CHR':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,290,332,352,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-79,-78,85,-82,-77,-80,-81,-75,-76,85,85,85,85,85,85,85,-69,-70,-71,85,-68,-74,85,-73,-72,85,85,85,85,85,85,85,]),'KEY_RECORD':([140,208,277,282,319,325,346,353,],[217,217,217,217,217,217,217,217,]),'COLON':([19,65,67,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,204,211,237,245,252,253,266,273,275,276,281,285,294,295,296,297,300,301,308,309,315,316,331,337,343,362,],[-62,-107,140,-63,-18,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,277,-106,-19,-35,-22,-20,-56,-66,-172,-114,319,325,-47,-46,-26,-23,-31,335,-58,-57,-119,346,-52,359,-113,-118,]),'ASSIGN':([19,48,52,56,68,86,105,117,120,137,145,194,266,308,309,],[-62,-172,-60,129,-63,-172,-60,-59,-55,210,129,-61,-56,-58,-57,]),'KEY_CASE':([76,150,183,258,304,358,],[-16,-15,257,257,257,-152,]),'LTEQ':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,238,239,245,252,253,266,273,294,295,296,297,300,308,309,331,],[-62,-63,156,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-172,-172,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,]),'KEY_READCHAR':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[38,38,38,-16,38,-15,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'KEY_WRITEINT':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[28,28,28,-16,28,-15,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'KEY_IF':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[30,30,30,-16,30,-15,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'$end':([1,235,],[0,-1,]),'KEY_ADD':([118,],[187,]),'KEY_SWITCH':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[35,35,35,-16,35,-15,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'KEY_PROCEDURE':([4,5,6,7,8,10,11,12,13,14,61,62,63,64,131,133,138,206,207,209,],[-172,-6,-172,-172,-14,59,-172,-172,-4,-12,-10,-3,-2,-8,-13,-172,-11,-172,-9,-7,]),'KEY_MODULE':([0,],[2,]),'KEY_EXIT':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[39,39,39,-16,39,-15,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'KEY_STRING':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,140,155,156,157,158,159,160,161,162,163,164,166,190,208,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,277,282,290,319,325,332,346,352,353,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,214,-79,-78,87,-82,-77,-80,-81,-75,-76,87,87,87,214,87,87,87,87,-69,-70,-71,87,-68,-74,87,-73,-72,87,87,87,87,214,214,87,214,214,87,214,87,214,]),'LRB':([18,19,20,21,22,23,26,28,30,31,33,34,35,38,42,46,48,50,51,52,53,54,55,56,68,71,72,75,77,80,82,85,86,92,96,99,104,105,106,107,108,110,112,114,116,117,119,120,121,125,127,129,130,132,155,156,157,158,159,160,161,162,163,164,166,187,188,190,194,195,210,217,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,266,272,290,308,309,332,352,],[70,-62,71,72,73,74,75,77,92,110,111,112,92,114,115,116,-172,121,92,-60,125,92,127,130,-63,92,92,92,92,92,164,166,-172,92,130,92,92,-60,177,92,92,92,92,92,92,-59,189,-55,92,92,92,92,92,203,-79,-78,92,-82,-77,-80,-81,-75,-76,92,92,262,263,92,-61,269,92,283,92,92,92,-69,-70,-71,92,-68,-74,92,-73,-72,92,92,92,-56,92,92,-58,-57,92,92,]),'DOT':([19,48,52,68,86,105,117,120,151,194,266,308,309,],[-62,118,123,-63,-172,123,-59,191,235,-61,-56,-58,-57,]),'KEY_CONTINUE':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[44,44,44,-16,44,-15,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'COMMA':([19,65,67,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,142,152,153,154,165,167,168,169,171,172,173,174,176,178,179,185,194,200,201,202,211,237,245,252,253,265,266,273,275,285,288,289,291,294,295,296,297,300,308,309,311,312,315,316,326,327,331,362,365,],[-62,-107,139,-63,-18,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,228,-53,-54,236,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,260,-61,272,-65,-67,-106,-19,-35,-22,-20,272,-56,-66,-172,139,-172,-98,329,-47,-46,-26,-23,-31,-58,-57,342,-64,-119,345,-97,352,-52,-118,-96,]),'KEY_REAL':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,140,155,156,157,158,159,160,161,162,163,164,166,190,208,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,277,282,290,319,325,332,346,352,353,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,222,-79,-78,98,-82,-77,-80,-81,-75,-76,98,98,98,222,98,98,98,98,-69,-70,-71,98,-68,-74,98,-73,-72,98,98,98,98,222,222,98,222,222,98,222,98,222,]),'RCB':([19,68,80,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,153,165,167,168,169,171,172,173,174,176,178,179,194,202,237,245,252,253,266,273,293,294,295,296,297,300,308,309,331,],[-62,-63,152,-18,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-54,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-19,-35,-22,-20,-56,-66,331,-47,-46,-26,-23,-31,-58,-57,-52,]),'DIVIDE':([19,68,83,84,86,87,88,89,90,91,93,94,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,173,174,176,194,202,238,239,245,266,273,294,295,296,300,308,309,331,],[-62,-63,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,240,-27,-34,-36,-37,-61,-67,-172,-172,-35,-56,-66,-47,-46,-26,-31,-58,-57,-52,]),'KEY_DEL':([118,],[188,]),'MODULUS':([19,68,83,84,86,87,88,89,90,91,93,94,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,173,174,176,194,202,238,239,245,266,273,294,295,296,300,308,309,331,],[-62,-63,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,241,-27,-34,-36,-37,-61,-67,-172,-172,-35,-56,-66,-47,-46,-26,-31,-58,-57,-52,]),'KEY_READBOOL':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[46,46,46,-16,46,-15,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'NOT':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,290,332,352,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-79,-78,99,-82,-77,-80,-81,-75,-76,99,99,99,99,99,99,99,-69,-70,-71,99,-68,-74,99,-73,-72,99,99,99,99,99,99,99,]),'EQUAL':([19,52,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,135,152,165,167,168,169,171,172,173,174,176,178,179,194,202,238,239,245,252,253,266,273,294,295,296,297,300,308,309,331,],[-62,124,-63,162,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,208,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-172,-172,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,]),'KEY_CHAR':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,140,155,156,157,158,159,160,161,162,163,164,166,190,208,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,277,282,290,319,325,332,346,352,353,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,221,-79,-78,103,-82,-77,-80,-81,-75,-76,103,103,103,221,103,103,103,103,-69,-70,-71,103,-68,-74,103,-73,-72,103,103,103,103,221,221,103,221,221,103,221,103,221,]),'KEY_READREAL':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[50,50,50,-16,50,-15,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'KEY_ABS':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,290,332,352,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-79,-78,104,-82,-77,-80,-81,-75,-76,104,104,104,104,104,104,104,-69,-70,-71,104,-68,-74,104,-73,-72,104,104,104,104,104,104,104,]),'AND':([19,68,83,84,86,87,88,89,90,91,93,94,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,173,174,176,194,202,238,239,245,266,273,294,295,296,300,308,309,331,],[-62,-63,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,242,-27,-34,-36,-37,-61,-67,-172,-172,-35,-56,-66,-47,-46,-26,-31,-58,-57,-52,]),'MULTIPLY':([19,68,83,84,86,87,88,89,90,91,93,94,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,173,174,176,194,202,238,239,245,266,273,294,295,296,300,308,309,331,],[-62,-63,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,244,-27,-34,-36,-37,-61,-67,-172,-172,-35,-56,-66,-47,-46,-26,-31,-58,-57,-52,]),'KEY_CONST':([4,5,6,7,8,10,11,12,13,14,61,62,63,64,131,133,138,206,207,209,],[-172,-6,12,-172,-14,-5,-172,-172,-4,-12,-10,-3,-2,-8,-13,-172,-11,12,-9,-7,]),'GT':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,238,239,245,252,253,266,273,294,295,296,297,300,308,309,331,],[-62,-63,155,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-172,-172,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,]),'KEY_NEW':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[23,23,23,-16,23,-15,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'KEY_NIL':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,155,156,157,158,159,160,161,162,163,164,166,190,210,224,231,236,240,241,242,243,244,246,247,248,249,257,262,263,272,290,332,352,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-79,-78,106,-82,-77,-80,-81,-75,-76,106,106,106,106,106,106,106,-69,-70,-71,106,-68,-74,106,-73,-72,106,106,106,106,106,106,106,]),'KEY_RETURN':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[54,54,54,-16,54,-15,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'KEY_WRITELN':([9,29,69,76,141,150,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[55,55,55,-16,55,-15,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LT':([19,68,81,83,84,86,87,88,89,90,91,93,94,95,96,97,98,100,101,103,105,109,117,120,152,165,167,168,169,171,172,173,174,176,178,179,194,202,238,239,245,252,253,266,273,294,295,296,297,300,308,309,331,],[-62,-63,159,-41,-28,-172,-43,-50,-172,-40,-48,-29,-51,-172,-33,-32,-44,-45,-30,-42,-60,-49,-59,-55,-53,-39,-38,-25,-27,-21,-24,-34,-36,-37,-172,-172,-61,-67,-172,-172,-35,-22,-20,-56,-66,-47,-46,-26,-23,-31,-58,-57,-52,]),'KEY_ELSEIF':([76,150,250,298,299,375,],[-16,-15,-172,-147,332,-146,]),'KEY_TO':([213,],[282,]),'KEY_ARRAY':([140,208,277,282,319,325,346,353,],[224,224,224,224,224,224,224,224,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'simpleExpression':([30,35,51,54,71,72,75,77,80,92,110,112,114,116,121,125,127,129,130,157,164,166,190,210,224,231,236,257,262,263,272,290,332,352,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,237,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'empty':([4,6,7,9,11,12,29,48,69,86,89,95,133,141,175,178,179,193,206,217,238,239,250,258,268,274,275,279,288,304,318,323,334,335,349,357,358,359,369,371,374,375,377,],[5,8,14,17,61,64,17,117,17,117,169,172,5,17,17,172,172,17,8,287,169,169,298,302,17,313,315,17,326,302,17,287,17,17,287,17,17,17,17,17,17,17,17,]),'expList':([130,190,],[200,265,]),'case':([183,258,304,],[258,304,304,]),'formalParameters':([132,],[204,]),'fpSection':([203,344,],[274,361,]),'termss':([89,238,239,],[168,168,168,]),'ifss':([250,],[299,]),'number':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,157,164,166,190,210,224,231,236,243,247,257,262,263,272,290,332,352,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'formalss':([274,],[314,]),'ifStatement':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'qualident':([9,29,30,35,48,51,54,69,71,72,73,74,75,77,80,82,85,86,92,99,104,107,108,110,112,114,116,121,123,125,127,129,130,141,157,164,166,175,177,189,190,193,210,224,231,236,243,247,250,257,262,263,268,272,279,283,290,318,330,332,334,335,352,357,358,359,369,371,374,375,377,],[48,48,86,86,86,86,86,48,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,194,86,86,86,86,48,86,86,86,48,86,264,86,48,86,86,86,86,86,86,48,86,86,86,48,86,48,321,86,48,86,86,48,48,86,48,48,48,48,48,48,48,48,]),'memoryalloc':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'procedureBody':([133,],[205,]),'varType':([140,208,277,282,319,325,346,353,],[219,219,219,219,219,219,219,219,]),'length':([224,352,],[288,365,]),'addOperator':([171,252,253,],[247,247,247,]),'constantDeclaration':([63,],[136,]),'factor':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,157,164,166,190,210,224,231,236,243,247,257,262,263,272,290,332,352,],[89,89,89,89,89,89,89,89,89,165,167,89,174,176,89,89,89,89,89,89,89,89,89,89,89,89,238,239,89,89,89,89,89,296,89,89,89,89,89,89,89,89,]),'statement':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[27,78,27,78,27,27,78,78,27,78,27,27,78,78,27,27,78,27,78,78,]),'set':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,157,164,166,190,210,224,231,236,243,247,257,262,263,272,290,332,352,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'element':([80,236,],[154,293,]),'statementSequence':([9,69,175,193,279,334,335,359,369,374,],[29,141,250,268,318,357,358,371,375,377,]),'pointerType':([140,208,277,282,319,325,346,353,],[223,223,223,223,223,223,223,223,]),'mulOperator':([168,],[243,]),'recordType':([140,208,277,282,319,325,346,353,],[226,226,226,226,226,226,226,226,]),'identList':([13,217,323,349,],[67,285,285,285,]),'whileStatement':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'module':([0,],[1,]),'term':([30,35,51,54,71,72,75,77,80,92,107,108,110,112,114,116,121,125,127,129,130,157,164,166,190,210,224,231,236,247,257,262,263,272,290,332,352,],[95,95,95,95,95,95,95,95,95,95,178,179,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,297,95,95,95,95,95,95,95,]),'char':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,157,164,166,190,210,224,231,236,243,247,257,262,263,272,290,332,342,352,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,360,93,]),'typess':([11,],[62,]),'arrayType':([140,208,277,282,319,325,346,353,],[215,215,215,215,215,215,215,215,]),'simpless':([95,178,179,],[171,252,253,]),'fileStatement':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'varss':([7,],[13,]),'type':([140,208,277,282,319,325,346,353,],[212,280,317,320,348,351,363,366,]),'ioStatement':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'switchStatement':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'relation':([81,],[157,]),'casess':([258,304,],[303,338,]),'typeDeclaration':([62,],[134,]),'procss':([6,206,],[10,10,]),'assignment':([9,29,69,73,141,175,193,250,268,279,318,330,334,335,357,358,359,369,371,374,375,377,],[43,43,43,146,43,43,43,43,43,43,43,355,43,43,43,43,43,43,43,43,43,43,]),'designator':([9,29,30,35,48,51,54,69,71,72,73,74,75,77,80,82,85,86,92,99,104,107,108,110,112,114,116,121,125,127,129,130,141,157,164,166,175,177,190,193,210,224,231,236,243,247,250,257,262,263,268,272,279,290,318,330,332,334,335,352,357,358,359,369,371,374,375,377,],[56,56,96,96,119,96,96,56,96,96,145,147,96,96,96,96,96,119,96,96,96,96,96,96,96,96,96,96,96,96,96,96,56,96,96,96,56,251,96,56,96,96,96,96,96,96,56,96,96,96,56,96,56,96,56,145,96,56,56,96,56,56,56,56,56,56,56,56,]),'comass':([288,],[327,]),'procedureCall':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'declarationSequence':([4,133,],[6,206,]),'forStatement':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'procedureHeading':([10,],[60,]),'doWhileStatement':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'fps':([275,],[316,]),'procedureDeclaration':([10,],[58,]),'string':([30,35,51,54,71,72,75,77,80,82,85,92,99,104,107,108,110,112,114,116,121,125,127,129,130,157,164,166,190,210,224,231,236,243,247,257,260,262,263,269,272,290,332,352,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,305,101,101,311,101,101,101,101,]),'expression':([30,35,51,54,71,72,75,77,80,92,110,112,114,116,121,125,127,129,130,164,166,190,210,224,231,236,257,262,263,272,290,332,352,],[102,113,122,126,143,144,148,149,153,170,180,182,184,186,192,196,198,199,201,170,170,201,281,289,292,153,301,306,307,312,328,356,289,]),'actualParameters':([56,96,],[128,173,]),'conss':([12,],[63,]),'fieldListSequence':([217,349,],[284,364,]),'variableDeclaration':([13,],[66,]),'baseType':([283,],[322,]),'fieldList':([217,323,349,],[286,350,286,]),'identdef':([9,29,30,35,48,51,54,69,70,71,72,73,74,75,77,80,82,85,86,92,99,104,107,108,110,111,112,114,115,116,121,123,125,127,129,130,141,157,164,166,175,177,189,190,191,193,210,224,228,231,236,243,247,250,257,262,263,268,272,279,283,290,318,330,332,334,335,352,357,358,359,369,371,374,375,377,],[52,52,105,105,105,105,105,52,142,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,181,105,105,185,105,105,105,105,105,105,105,52,105,105,105,52,105,105,105,266,52,105,105,291,105,105,105,105,52,105,105,105,52,105,52,105,105,52,105,105,52,52,105,52,52,52,52,52,52,52,52,]),'designator2':([48,86,],[120,120,]),'setStatement':([9,29,69,141,175,193,250,268,279,318,334,335,357,358,359,369,371,374,375,377,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> empty','conss',1,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> empty','typess',1,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> empty','varss',1,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> empty','procss',1,'p_procss','par.py',61),
  ('statementSequence -> statementSequence statement SCOLON','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> statement SCOLON','statementSequence',2,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> char','factor',1,'p_factor','par.py',108),
  ('factor -> string','factor',1,'p_factor','par.py',109),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',110),
  ('factor -> set','factor',1,'p_factor','par.py',111),
  ('factor -> designator','factor',1,'p_factor','par.py',112),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',113),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',114),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',115),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',119),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',125),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',163),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',164),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB fpSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON fpSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('fpSection -> IDENT fps COLON type','fpSection',4,'p_fpSection','par.py',325),
  ('fps -> fps COMMA IDENT','fps',3,'p_fps','par.py',330),
  ('fps -> empty','fps',1,'p_fps','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',356),
  ('statement -> setStatement','statement',1,'p_statement','par.py',357),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',362),
  ('setStatement -> qualident DOT KEY_ADD LRB expression RRB','setStatement',6,'p_setStatement','par.py',367),
  ('setStatement -> qualident DOT KEY_DEL LRB expression RRB','setStatement',6,'p_setStatement','par.py',368),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',374),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',380),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',381),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',386),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',387),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',392),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',393),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',398),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',399),
  ('casess -> case casess','casess',2,'p_casess','par.py',404),
  ('casess -> empty','casess',1,'p_casess','par.py',405),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',410),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',415),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',420),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',425),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',430),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',431),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',432),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',433),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',434),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',435),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',441),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',446),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',447),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',448),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',449),
  ('empty -> <empty>','empty',0,'p_empty','par.py',454),
]
