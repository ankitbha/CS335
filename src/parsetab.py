
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence statement SCOLON\n\t\t\t\t\t\t\t  | empty\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB fpSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON fpSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tfpSection : IDENT fps COLON type\n\t\t\n\t\t\tfps : fps COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : qualident DOT KEY_ADD LRB expression RRB\n\t\t\t\t\t\t | qualident DOT KEY_DEL LRB expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_NIL':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,313,339,352,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-75,-78,-77,-80,-79,-82,96,-76,-81,96,96,96,96,96,-73,96,-74,-72,-69,-71,-70,96,-68,96,96,96,96,96,96,]),'VREAL':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,313,339,352,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-75,-78,-77,-80,-79,-82,97,-76,-81,97,97,97,97,97,-73,97,-74,-72,-69,-71,-70,97,-68,97,97,97,97,97,97,]),'KEY_PROCEDURE':([4,5,6,7,9,10,11,12,13,14,17,18,19,20,74,75,78,143,145,147,],[-172,-6,-172,-172,-172,-172,23,-14,-8,-2,-12,-4,-3,-10,-172,-13,-7,-11,-9,-172,]),'LT':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,264,266,267,279,299,300,303,306,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,181,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-172,-172,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,]),'KEY_WRITE':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,29,-16,-15,-172,-172,29,-172,-172,29,29,29,-172,-172,29,29,-172,-172,29,-172,29,29,]),'KEY_ELSEIF':([16,92,171,253,304,305,368,374,],[-16,-15,-172,-172,339,-147,-172,-146,]),'NOT':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,313,339,352,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-75,-78,-77,-80,-79,-82,101,-76,-81,101,101,101,101,101,-73,101,-74,-72,-69,-71,-70,101,-68,101,101,101,101,101,101,]),'KEY_CHAR':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,142,144,155,178,179,180,181,182,183,184,185,186,187,190,220,231,235,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,287,313,324,332,339,351,352,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,214,214,98,98,-75,-78,-77,-80,-79,-82,98,-76,-81,98,98,214,214,98,98,98,-73,98,-74,-72,-69,-71,-70,98,-68,98,98,98,214,98,214,214,98,214,98,]),'KEY_DEL':([80,],[152,]),'KEY_EXIT':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,28,-16,-15,-172,-172,28,-172,-172,28,28,28,-172,-172,28,28,-172,-172,28,-172,28,28,]),'KEY_READREAL':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,35,-16,-15,-172,-172,35,-172,-172,35,35,35,-172,-172,35,35,-172,-172,35,-172,35,35,]),'AND':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,110,111,112,113,115,120,121,129,169,174,175,177,188,189,191,193,198,208,239,264,266,267,279,299,300,303,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-32,-172,-29,-44,-51,-50,-33,-63,-36,259,-27,-39,-37,-38,-34,-53,-61,-67,-56,-172,-172,-35,-66,-58,-57,-31,-26,-47,-46,-52,]),'IDENT':([2,7,8,9,10,13,14,15,16,17,18,19,20,23,26,36,45,47,52,53,56,58,68,77,78,79,83,85,86,87,88,89,90,91,92,93,94,95,101,103,114,116,118,119,122,123,125,126,127,129,130,131,134,135,136,138,139,141,142,143,144,145,146,149,153,154,155,168,171,178,179,180,181,182,183,184,185,186,187,190,198,201,202,215,220,230,231,235,236,237,241,253,254,255,256,257,258,259,260,261,262,268,269,274,275,280,283,287,290,313,323,324,328,329,331,332,335,337,339,344,348,351,352,357,361,362,368,371,373,374,376,],[3,-172,-172,-172,-172,-8,24,36,-16,-12,69,72,-10,76,36,-62,36,36,-60,129,36,36,140,36,-7,36,-60,36,36,36,36,36,36,36,-15,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-63,36,-172,36,36,36,36,36,212,218,-11,218,-9,229,234,36,36,36,36,-172,36,-75,-78,-77,-80,-79,-82,36,-76,-81,36,-61,36,-172,69,36,-172,218,218,36,36,36,36,-73,36,-74,-72,-69,-71,-70,36,-68,36,36,36,36,36,36,218,36,36,69,218,-120,234,354,218,36,-172,36,-172,69,218,36,36,36,-172,-172,36,-172,36,36,]),'KEY_FOPEN':([128,],[199,]),'GT':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,264,266,267,279,299,300,303,306,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,183,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-172,-172,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,]),'KEY_ADD':([80,],[151,]),'RRB':([36,79,81,83,84,93,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,136,149,158,159,160,161,162,163,164,167,169,170,172,173,174,175,176,177,188,189,191,192,193,197,198,200,204,205,206,207,208,209,210,213,214,216,217,218,221,222,224,225,226,227,233,238,239,251,252,263,264,265,266,267,279,292,293,297,298,299,300,302,303,306,307,308,309,319,320,321,322,325,340,353,355,356,359,360,364,372,],[-62,-172,-59,-60,-55,165,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-18,-50,-33,-63,208,232,242,243,244,245,246,247,248,250,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,267,-53,270,-61,272,277,278,279,-65,-67,-138,281,-94,-91,-85,-89,-84,-92,-90,-86,-87,-93,-88,-172,299,-56,303,-20,-22,308,-19,309,-35,-66,330,-116,333,334,-58,-57,336,-31,-23,-26,-47,-46,-64,-101,348,-99,-108,-52,-115,-117,366,369,370,-95,-100,]),'KEY_VAR':([4,5,6,7,9,10,11,12,13,14,17,18,19,20,74,75,78,143,145,147,],[-172,-6,9,-172,-172,-172,-5,-14,-8,-2,-12,-4,-3,-10,-172,-13,-7,-11,-9,9,]),'KEY_THEN':([36,79,81,83,84,97,98,99,100,102,104,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,265,267,279,299,300,303,306,307,308,309,340,358,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,171,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-18,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-19,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,368,]),'MODULUS':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,110,111,112,113,115,120,121,129,169,174,175,177,188,189,191,193,198,208,239,264,266,267,279,299,300,303,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-32,-172,-29,-44,-51,-50,-33,-63,-36,260,-27,-39,-37,-38,-34,-53,-61,-67,-56,-172,-172,-35,-66,-58,-57,-31,-26,-47,-46,-52,]),'KEY_IN':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,264,266,267,279,299,300,303,306,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,187,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-172,-172,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,]),'KEY_SET':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,142,144,155,178,179,180,181,182,183,184,185,186,187,190,220,231,235,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,287,313,324,332,339,351,352,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,213,213,100,100,-75,-78,-77,-80,-79,-82,100,-76,-81,100,100,213,213,100,100,100,-73,100,-74,-72,-69,-71,-70,100,-68,100,100,100,213,100,213,213,100,213,100,]),'KEY_RECORD':([142,144,231,235,287,324,332,351,],[215,215,215,215,215,215,215,215,]),'KEY_CONTINUE':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,33,-16,-15,-172,-172,33,-172,-172,33,33,33,-172,-172,33,33,-172,-172,33,-172,33,33,]),'AT':([8,15,16,26,36,45,47,52,56,58,77,79,83,85,86,87,88,89,90,91,92,93,94,95,101,103,114,116,118,119,122,123,125,126,127,129,130,131,134,135,136,138,139,153,154,155,168,171,178,179,180,181,182,183,184,185,186,187,190,198,201,202,220,230,236,237,241,253,254,255,256,257,258,259,260,261,262,268,269,274,275,280,283,290,313,335,337,339,344,352,357,361,362,368,371,373,374,376,],[-172,53,-16,53,-62,53,53,-60,53,53,53,53,-60,53,53,53,53,53,53,53,-15,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-63,53,-172,53,53,53,53,53,53,53,53,53,-172,53,-75,-78,-77,-80,-79,-82,53,-76,-81,53,-61,53,-172,53,-172,53,53,53,53,-73,53,-74,-72,-69,-71,-70,53,-68,53,53,53,53,53,53,53,53,53,-172,53,-172,53,53,53,-172,-172,53,-172,53,53,]),'KEY_DO':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,55,-16,-15,-172,-172,55,-172,-172,55,55,55,-172,-172,55,55,-172,-172,55,-172,55,55,]),'KEY_IS':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,264,266,267,279,299,300,303,306,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,184,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-172,-172,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,]),'SCOLON':([3,8,15,16,21,22,25,26,28,30,33,36,37,39,41,43,46,47,49,50,52,57,59,61,62,64,66,67,71,73,79,81,83,84,92,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,124,129,131,137,148,156,165,169,170,171,172,173,174,175,176,177,188,189,191,193,198,201,202,208,209,213,214,215,216,217,218,221,222,223,224,225,226,227,228,229,230,232,233,239,242,243,244,245,246,247,248,250,252,253,263,265,267,270,272,274,277,278,279,281,282,284,285,290,291,292,293,296,299,300,301,303,305,306,307,308,309,314,322,323,325,330,333,334,336,337,338,340,343,344,346,348,349,350,353,355,357,361,362,363,364,367,368,369,370,371,372,373,374,375,376,377,],[4,-172,-172,-16,74,75,78,-172,-128,-123,-134,-62,-124,92,-121,-127,-126,-130,-137,-125,-60,-122,-131,-135,-132,-143,-136,-133,143,145,-172,-59,-60,-55,-15,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-18,-50,-33,-129,-63,-172,-142,-112,241,-162,-36,-172,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-172,-172,-67,-138,-94,-91,-172,-85,-89,-84,-92,-90,-109,-86,-87,-93,-88,-83,-110,-172,-114,-172,-56,-156,-141,-166,-157,-165,-160,-161,-158,-20,-172,-22,-19,-35,-163,-164,-172,-169,-159,-66,-167,-105,323,-103,-172,-111,329,-116,-17,-58,-57,335,-31,-135,-23,-26,-47,-46,-153,-99,-172,-108,-113,-139,-140,-170,-172,-145,-52,-155,-172,-149,-172,-102,-104,-115,-117,-172,-172,-172,323,-95,-144,-172,-171,-168,-172,-100,-172,-172,-148,-172,-154,]),'KEY_ORD':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,313,339,352,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-75,-78,-77,-80,-79,-82,116,-76,-81,116,116,116,116,116,-73,116,-74,-72,-69,-71,-70,116,-68,116,116,116,116,116,116,]),'KEY_MODULE':([0,],[2,]),'KEY_ARRAY':([142,144,231,235,287,324,332,351,],[220,220,220,220,220,220,220,220,]),'KEY_FCLOSE':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,60,-16,-15,-172,-172,60,-172,-172,60,60,60,-172,-172,60,60,-172,-172,60,-172,60,60,]),'KEY_CHR':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,313,339,352,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-75,-78,-77,-80,-79,-82,119,-76,-81,119,119,119,119,119,-73,119,-74,-72,-69,-71,-70,119,-68,119,119,119,119,119,119,]),'KEY_TYPE':([4,5,6,7,9,10,11,12,13,14,17,18,19,20,74,75,78,143,145,147,],[-172,-6,10,-172,-172,-172,-5,-14,-8,-2,-12,-4,-3,-10,-172,-13,-7,-11,-9,10,]),'LCB':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,313,339,352,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-75,-78,-77,-80,-79,-82,123,-76,-81,123,123,123,123,123,-73,123,-74,-72,-69,-71,-70,123,-68,123,123,123,123,123,123,]),'KEY_WRITECHAR':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,63,-16,-15,-172,-172,63,-172,-172,63,63,63,-172,-172,63,63,-172,-172,63,-172,63,63,]),'$end':([1,211,],[0,-1,]),'KEY_FPRINTF':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,42,-16,-15,-172,-172,42,-172,-172,42,42,42,-172,-172,42,42,-172,-172,42,-172,42,42,]),'KEY_READBOOL':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,65,-16,-15,-172,-172,65,-172,-172,65,65,65,-172,-172,65,65,-172,-172,65,-172,65,65,]),'KEY_REAL':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,142,144,155,178,179,180,181,182,183,184,185,186,187,190,220,231,235,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,287,313,324,332,339,351,352,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,226,226,113,113,-75,-78,-77,-80,-79,-82,113,-76,-81,113,113,226,226,113,113,113,-73,113,-74,-72,-69,-71,-70,113,-68,113,113,113,226,113,226,226,113,226,113,]),'RSB':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,207,208,239,240,252,263,265,267,279,299,300,303,306,307,308,309,319,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-18,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-65,-67,-56,300,-20,-22,-19,-35,-66,-58,-57,-31,-23,-26,-47,-46,-64,-52,]),'KEY_FOR':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,27,-16,-15,-172,-172,27,-172,-172,27,27,27,-172,-172,27,27,-172,-172,27,-172,27,27,]),'KEY_WHILE':([8,15,16,92,131,171,201,202,230,253,273,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,56,-16,-15,-172,-172,56,-172,-172,56,313,56,56,-172,-172,56,56,-172,-172,56,-172,56,56,]),'COLON':([36,69,70,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,148,150,169,170,172,173,174,175,176,177,188,189,191,193,198,208,212,232,234,239,252,263,265,267,279,286,294,295,299,300,303,306,307,308,309,315,330,340,345,354,],[-62,-107,142,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-18,-50,-33,-63,231,235,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-106,-114,-172,-56,-20,-22,-19,-35,-66,324,332,-119,-58,-57,-31,-23,-26,-47,-46,344,-113,-52,362,-118,]),'VINTEGER':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,313,339,341,352,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-75,-78,-77,-80,-79,-82,99,-76,-81,99,99,99,99,99,-73,99,-74,-72,-69,-71,-70,99,-68,99,99,99,99,99,359,99,]),'KEY_CASE':([16,92,203,276,317,344,361,],[-16,-15,275,275,275,-172,-152,]),'KEY_FREAD':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,48,-16,-15,-172,-172,48,-172,-172,48,48,48,-172,-172,48,48,-172,-172,48,-172,48,48,]),'COMMA':([36,69,70,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,166,169,170,172,173,174,175,176,177,188,189,191,193,194,195,196,198,206,207,208,212,234,239,240,252,263,265,267,279,286,288,289,294,295,299,300,303,306,307,308,309,311,312,319,326,327,340,354,365,],[-62,-107,141,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-18,-50,-33,-63,249,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-54,268,269,-61,280,-65,-67,-106,-172,-56,280,-20,-22,-19,-35,-66,141,-172,-98,331,-119,-58,-57,-31,-23,-26,-47,-46,341,342,-64,-97,352,-52,-118,-96,]),'ASSIGN':([24,26,36,52,64,79,81,83,84,129,157,198,239,299,300,],[77,-172,-62,-60,138,-172,-59,-60,-55,-63,138,-61,-56,-58,-57,]),'KEY_READCHAR':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,32,-16,-15,-172,-172,32,-172,-172,32,32,32,-172,-172,32,32,-172,-172,32,-172,32,32,]),'KEY_WRITELN':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,40,-16,-15,-172,-172,40,-172,-172,40,40,40,-172,-172,40,40,-172,-172,40,-172,40,40,]),'KEY_WRITEINT':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,34,-16,-15,-172,-172,34,-172,-172,34,34,34,-172,-172,34,34,-172,-172,34,-172,34,34,]),'KEY_NEW':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,31,-16,-15,-172,-172,31,-172,-172,31,31,31,-172,-172,31,31,-172,-172,31,-172,31,31,]),'KEY_INTEGER':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,142,144,155,178,179,180,181,182,183,184,185,186,187,190,220,231,235,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,287,313,324,332,339,351,352,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,217,217,105,105,-75,-78,-77,-80,-79,-82,105,-76,-81,105,105,217,217,105,105,105,-73,105,-74,-72,-69,-71,-70,105,-68,105,105,105,217,105,217,217,105,217,105,]),'PLUS':([36,45,47,56,58,77,79,81,83,84,86,88,89,90,91,93,95,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,120,121,122,123,126,129,130,135,136,138,139,155,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,198,208,220,236,237,239,241,252,263,264,266,267,268,275,279,280,299,300,303,306,307,308,309,313,339,340,352,],[-62,103,103,103,103,103,-172,-59,-60,-55,103,103,103,103,103,103,103,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-50,-33,103,103,103,-63,103,103,103,103,103,103,-36,-172,257,-24,-25,-27,-172,-39,103,-75,-78,-77,-80,-79,-82,103,-76,-81,-37,-38,103,-34,-53,-61,-67,103,103,103,-56,103,257,257,-172,-172,-35,103,103,-66,103,-58,-57,-31,-23,-26,-47,-46,103,103,-52,103,]),'KEY_READ':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,51,-16,-15,-172,-172,51,-172,-172,51,51,51,-172,-172,51,51,-172,-172,51,-172,51,51,]),'DOT':([26,36,52,79,81,83,84,129,140,198,239,299,300,],[80,-62,127,-172,-59,127,154,-63,211,-61,-56,-58,-57,]),'KEY_STRING':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,142,144,155,178,179,180,181,182,183,184,185,186,187,190,220,231,235,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,287,313,324,332,339,351,352,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,221,221,102,102,-75,-78,-77,-80,-79,-82,102,-76,-81,102,102,221,221,102,102,102,-73,102,-74,-72,-69,-71,-70,102,-68,102,102,102,221,102,221,221,102,221,102,]),'KEY_BOOLEAN':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,142,144,155,178,179,180,181,182,183,184,185,186,187,190,220,231,235,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,287,313,324,332,339,351,352,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,222,222,106,106,-75,-78,-77,-80,-79,-82,106,-76,-81,106,106,222,222,106,106,106,-73,106,-74,-72,-69,-71,-70,106,-68,106,106,106,222,106,222,222,106,222,106,]),'KEY_BEGIN':([4,5,6,7,9,10,11,12,13,14,17,18,19,20,36,55,74,75,78,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,132,133,143,145,147,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,265,267,279,299,300,303,306,307,308,309,340,366,],[-172,-6,8,-172,-172,-172,-5,-14,-8,-2,-12,-4,-3,-10,-62,131,-172,-13,-7,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-18,-50,-33,-63,202,203,-11,-9,230,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-19,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,373,]),'KEY_ELSE':([16,92,171,253,276,304,305,316,317,318,344,347,361,368,374,],[-16,-15,-172,-172,-172,337,-147,345,-172,-151,-172,-150,-152,-172,-146,]),'GTEQ':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,264,266,267,279,299,300,303,306,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,182,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-172,-172,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,]),'KEY_END':([8,15,16,92,131,171,201,202,213,214,215,216,217,218,221,222,224,225,226,227,230,253,274,276,282,284,285,290,304,305,316,317,318,322,323,325,337,344,347,348,349,350,357,361,362,363,364,368,371,372,373,374,376,],[-172,68,-16,-15,-172,-172,273,-172,-94,-91,-172,-85,-89,-84,-92,-90,-86,-87,-93,-88,-172,-172,314,-172,-105,322,-103,328,338,-147,346,-172,-151,-99,-172,-108,-172,-172,-150,-172,-102,-104,367,-152,-172,372,-95,-172,375,-100,-172,-146,377,]),'KEY_WRITEBOOL':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,38,-16,-15,-172,-172,38,-172,-172,38,38,38,-172,-172,38,38,-172,-172,38,-172,38,38,]),'KEY_WRITEREAL':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,44,-16,-15,-172,-172,44,-172,-172,44,44,44,-172,-172,44,44,-172,-172,44,-172,44,44,]),'KEY_IF':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,45,-16,-15,-172,-172,45,-172,-172,45,45,45,-172,-172,45,45,-172,-172,45,-172,45,45,]),'KEY_RETURN':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,47,-16,-15,-172,-172,47,-172,-172,47,47,47,-172,-172,47,47,-172,-172,47,-172,47,47,]),'KEY_CONST':([4,5,6,7,9,10,11,12,13,14,17,18,19,20,74,75,78,143,145,147,],[-172,-6,7,-172,-172,-172,-5,-14,-8,-2,-12,-4,-3,-10,-172,-13,-7,-11,-9,7,]),'EQUAL':([36,52,72,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,264,266,267,279,299,300,303,306,307,308,309,340,],[-62,128,144,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,179,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-172,-172,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,]),'LTEQ':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,264,266,267,279,299,300,303,306,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,180,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-172,-172,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,]),'KEY_READINT':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,54,-16,-15,-172,-172,54,-172,-172,54,54,54,-172,-172,54,54,-172,-172,54,-172,54,54,]),'MINUS':([36,45,47,56,58,77,79,81,83,84,86,88,89,90,91,93,95,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,120,121,122,123,126,129,130,135,136,138,139,155,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,198,208,220,236,237,239,241,252,263,264,266,267,268,275,279,280,299,300,303,306,307,308,309,313,339,340,352,],[-62,114,114,114,114,114,-172,-59,-60,-55,114,114,114,114,114,114,114,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-50,-33,114,114,114,-63,114,114,114,114,114,114,-36,-172,254,-24,-25,-27,-172,-39,114,-75,-78,-77,-80,-79,-82,114,-76,-81,-37,-38,114,-34,-53,-61,-67,114,114,114,-56,114,254,254,-172,-172,-35,114,114,-66,114,-58,-57,-31,-23,-26,-47,-46,114,114,-52,114,]),'RCB':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,123,129,169,170,172,173,174,175,176,177,188,189,191,193,194,198,208,239,252,263,265,267,279,299,300,303,306,307,308,309,310,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-18,-50,-33,193,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-54,-61,-67,-56,-20,-22,-19,-35,-66,-58,-57,-31,-23,-26,-47,-46,340,-52,]),'VSTRING':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,249,254,255,256,257,258,259,260,261,262,268,271,275,280,313,339,352,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-75,-78,-77,-80,-79,-82,115,-76,-81,115,115,115,115,115,115,-73,115,-74,-72,-69,-71,-70,115,-68,115,115,115,115,115,115,115,]),'KEY_SWITCH':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,58,-16,-15,-172,-172,58,-172,-172,58,58,58,-172,-172,58,58,-172,-172,58,-172,58,58,]),'KEY_POINTER':([142,144,231,235,287,324,332,351,],[219,219,219,219,219,219,219,219,]),'KEY_ABS':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,313,339,352,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-75,-78,-77,-80,-79,-82,118,-76,-81,118,118,118,118,118,-73,118,-74,-72,-69,-71,-70,118,-68,118,118,118,118,118,118,]),'DIVIDE':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,110,111,112,113,115,120,121,129,169,174,175,177,188,189,191,193,198,208,239,264,266,267,279,299,300,303,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-32,-172,-29,-44,-51,-50,-33,-63,-36,258,-27,-39,-37,-38,-34,-53,-61,-67,-56,-172,-172,-35,-66,-58,-57,-31,-26,-47,-46,-52,]),'KEY_OF':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,265,267,279,288,289,299,300,303,306,307,308,309,326,327,340,365,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-18,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-19,-35,-66,-172,-98,-58,-57,-31,-23,-26,-47,-46,-97,351,-52,-96,]),'VCHAR':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,179,180,181,182,183,184,185,186,187,190,220,236,237,241,254,255,256,257,258,259,260,261,262,268,275,280,313,339,342,352,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-75,-78,-77,-80,-79,-82,120,-76,-81,120,120,120,120,120,-73,120,-74,-72,-69,-71,-70,120,-68,120,120,120,120,120,120,120,]),'NEQUAL':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,117,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,264,266,267,279,299,300,303,306,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,186,-50,-33,-63,-36,-172,-21,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,-20,-22,-172,-172,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,]),'KEY_TO':([219,],[287,]),'LRB':([26,27,29,31,32,34,35,36,38,40,42,44,45,47,48,51,52,54,56,58,60,63,64,65,76,77,79,81,82,83,84,86,88,89,90,91,93,95,96,101,103,114,116,118,119,121,122,123,126,129,130,135,136,138,139,151,152,155,178,179,180,181,182,183,184,185,186,187,190,198,199,215,220,236,237,239,241,254,255,256,257,258,259,260,261,262,268,275,280,299,300,313,339,352,],[-172,85,86,87,88,89,90,-62,91,93,94,95,122,122,125,126,-60,130,122,122,134,135,136,139,149,122,-172,-59,153,-60,-55,122,122,122,122,122,122,122,168,122,122,122,178,122,190,136,122,122,122,-63,122,122,122,122,122,236,237,122,122,-75,-78,-77,-80,-79,-82,122,-76,-81,122,-61,271,283,122,122,122,-56,122,-73,122,-74,-72,-69,-71,-70,122,-68,122,122,122,-58,-57,122,122,122,]),'LSB':([26,36,52,79,81,83,84,129,198,239,299,300,],[-172,-62,-60,-172,-59,-60,155,-63,-61,-56,-58,-57,]),'OR':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,109,110,111,112,113,115,120,121,129,169,170,172,173,174,175,176,177,188,189,191,193,198,208,239,252,263,264,266,267,279,299,300,303,306,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-172,-32,-172,-29,-44,-51,-50,-33,-63,-36,-172,256,-24,-25,-27,-172,-39,-37,-38,-34,-53,-61,-67,-56,256,256,-172,-172,-35,-66,-58,-57,-31,-23,-26,-47,-46,-52,]),'KEY_BREAK':([8,15,16,92,131,171,201,202,230,253,274,290,337,344,357,361,362,368,371,373,374,376,],[-172,67,-16,-15,-172,-172,67,-172,-172,67,67,67,-172,-172,67,67,-172,-172,67,-172,67,67,]),'MULTIPLY':([36,79,81,83,84,97,98,99,100,102,105,106,107,108,110,111,112,113,115,120,121,129,169,174,175,177,188,189,191,193,198,208,239,264,266,267,279,299,300,303,307,308,309,340,],[-62,-172,-59,-60,-55,-49,-42,-48,-45,-43,-40,-41,-30,-28,-32,-172,-29,-44,-51,-50,-33,-63,-36,262,-27,-39,-37,-38,-34,-53,-61,-67,-56,-172,-172,-35,-66,-58,-57,-31,-26,-47,-46,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'qualident':([15,26,45,47,56,58,77,79,85,86,87,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,127,130,135,136,138,139,153,155,168,178,185,190,201,220,236,237,241,253,255,261,268,274,275,280,283,290,313,335,339,352,357,361,371,374,376,],[26,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,198,79,79,79,79,79,238,79,79,79,79,79,26,79,79,79,79,26,79,79,79,26,79,79,320,26,79,79,79,79,26,26,26,26,26,]),'identList':([18,215,323,348,],[70,286,286,286,]),'fps':([234,],[294,]),'ifStatement':([15,201,253,274,290,357,361,371,374,376,],[30,30,30,30,30,30,30,30,30,30,]),'fieldList':([215,323,348,],[285,349,285,]),'length':([220,352,],[288,365,]),'procedureHeading':([11,],[21,]),'termss':([111,264,266,],[174,174,174,]),'designator2':([26,79,],[84,84,]),'formalParameters':([76,],[148,]),'typeDeclaration':([19,],[73,]),'switchStatement':([15,201,253,274,290,357,361,371,374,376,],[37,37,37,37,37,37,37,37,37,37,]),'procss':([6,147,],[11,11,]),'pointerType':([142,144,231,235,287,324,332,351,],[227,227,227,227,227,227,227,227,]),'statement':([15,201,253,274,290,357,361,371,374,376,],[39,39,39,39,39,39,39,39,39,39,]),'expression':([45,47,56,58,77,86,88,89,90,91,93,95,122,123,126,130,135,136,138,139,155,178,190,220,236,237,241,268,275,280,313,339,352,],[104,124,132,133,150,158,160,161,162,163,164,167,192,194,197,200,205,207,209,210,207,192,192,289,297,298,301,194,315,319,343,358,289,]),'statementSequence':([8,131,171,202,230,337,344,362,368,373,],[15,201,253,274,290,357,361,371,374,376,]),'expList':([136,155,],[206,240,]),'fpSection':([149,329,],[233,353,]),'string':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,185,190,220,236,237,241,249,255,261,268,271,275,280,313,339,352,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,302,107,107,107,312,107,107,107,107,107,]),'arrayType':([142,144,231,235,287,324,332,351,],[224,224,224,224,224,224,224,224,]),'ioStatement':([15,201,253,274,290,357,361,371,374,376,],[59,59,59,59,59,59,59,59,59,59,]),'varss':([9,],[18,]),'doWhileStatement':([15,201,253,274,290,357,361,371,374,376,],[43,43,43,43,43,43,43,43,43,43,]),'term':([45,47,56,58,77,86,88,89,90,91,93,95,103,114,122,123,126,130,135,136,138,139,155,178,185,190,220,236,237,241,255,268,275,280,313,339,352,],[109,109,109,109,109,109,109,109,109,109,109,109,170,176,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,306,109,109,109,109,109,109,]),'recordType':([142,144,231,235,287,324,332,351,],[225,225,225,225,225,225,225,225,]),'assignment':([15,85,201,253,274,290,335,357,361,371,374,376,],[41,156,41,41,41,41,356,41,41,41,41,41,]),'forStatement':([15,201,253,274,290,357,361,371,374,376,],[46,46,46,46,46,46,46,46,46,46,]),'fieldListSequence':([215,348,],[284,363,]),'casess':([276,317,],[316,347,]),'number':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,185,190,220,236,237,241,255,261,268,275,280,313,339,352,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'setStatement':([15,201,253,274,290,357,361,371,374,376,],[49,49,49,49,49,49,49,49,49,49,]),'whileStatement':([15,201,253,274,290,357,361,371,374,376,],[50,50,50,50,50,50,50,50,50,50,]),'factor':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,185,190,220,236,237,241,255,261,268,275,280,313,339,352,],[111,111,111,111,111,111,111,111,111,111,111,111,169,111,111,177,188,189,111,111,111,111,111,111,111,111,111,264,111,266,111,111,111,111,111,307,111,111,111,111,111,111,]),'addOperator':([172,252,263,],[255,255,255,]),'typess':([10,],[19,]),'baseType':([283,],[321,]),'char':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,185,190,220,236,237,241,255,261,268,275,280,313,339,342,352,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,360,112,]),'mulOperator':([174,],[261,]),'varType':([142,144,231,235,287,324,332,351,],[216,216,216,216,216,216,216,216,]),'ifss':([253,],[304,]),'module':([0,],[1,]),'identdef':([15,26,45,47,56,58,77,79,85,86,87,88,89,90,91,93,94,95,101,103,114,116,118,119,122,123,125,126,127,130,134,135,136,138,139,153,154,155,168,178,185,190,201,220,236,237,241,253,255,261,268,269,274,275,280,283,290,313,335,339,352,357,361,371,374,376,],[52,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,166,83,83,83,83,83,83,83,83,83,196,83,83,83,204,83,83,83,83,83,239,83,83,83,83,83,52,83,83,83,83,52,83,83,83,311,52,83,83,83,52,83,83,83,83,52,52,52,52,52,]),'procedureCall':([15,201,253,274,290,357,361,371,374,376,],[57,57,57,57,57,57,57,57,57,57,]),'formalss':([233,],[292,]),'relation':([117,],[185,]),'simpleExpression':([45,47,56,58,77,86,88,89,90,91,93,95,122,123,126,130,135,136,138,139,155,178,185,190,220,236,237,241,268,275,280,313,339,352,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,265,117,117,117,117,117,117,117,117,117,117,117,]),'empty':([4,6,7,8,9,10,15,26,74,79,109,111,131,147,170,171,176,201,202,215,230,233,234,253,264,266,274,276,288,290,317,323,337,344,348,357,361,362,368,371,373,374,376,],[5,12,13,16,17,20,61,81,5,81,173,175,16,12,173,16,173,61,16,282,16,293,295,305,175,175,61,318,326,61,318,282,16,16,282,61,61,16,16,61,16,61,61,]),'comass':([288,],[327,]),'procedureDeclaration':([11,],[22,]),'procedureBody':([74,],[146,]),'set':([45,47,56,58,77,86,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,178,185,190,220,236,237,241,255,261,268,275,280,313,339,352,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'fileStatement':([15,201,253,274,290,357,361,371,374,376,],[62,62,62,62,62,62,62,62,62,62,]),'conss':([7,],[14,]),'element':([123,268,],[195,310,]),'variableDeclaration':([18,],[71,]),'simpless':([109,170,176,],[172,252,263,]),'designator':([15,26,45,47,56,58,77,79,85,86,87,88,89,90,91,93,95,101,103,114,116,118,119,122,123,126,130,135,136,138,139,155,168,178,185,190,201,220,236,237,241,253,255,261,268,274,275,280,290,313,335,339,352,357,361,371,374,376,],[64,82,121,121,121,121,121,82,157,121,159,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,251,121,121,121,64,121,121,121,121,64,121,121,121,64,121,121,64,121,157,121,121,64,64,64,64,64,]),'type':([142,144,231,235,287,324,332,351,],[223,228,291,296,325,350,355,364,]),'declarationSequence':([4,74,],[6,147,]),'memoryalloc':([15,201,253,274,290,357,361,371,374,376,],[66,66,66,66,66,66,66,66,66,66,]),'actualParameters':([64,121,],[137,191,]),'constantDeclaration':([14,],[25,]),'case':([203,276,317,],[276,317,317,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> empty','conss',1,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> empty','typess',1,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> empty','varss',1,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> empty','procss',1,'p_procss','par.py',61),
  ('statementSequence -> statementSequence statement SCOLON','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> empty','statementSequence',1,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> char','factor',1,'p_factor','par.py',108),
  ('factor -> string','factor',1,'p_factor','par.py',109),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',110),
  ('factor -> set','factor',1,'p_factor','par.py',111),
  ('factor -> designator','factor',1,'p_factor','par.py',112),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',113),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',114),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',115),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',119),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',125),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',163),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',164),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB fpSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON fpSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('fpSection -> IDENT fps COLON type','fpSection',4,'p_fpSection','par.py',325),
  ('fps -> fps COMMA IDENT','fps',3,'p_fps','par.py',330),
  ('fps -> empty','fps',1,'p_fps','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',356),
  ('statement -> setStatement','statement',1,'p_statement','par.py',357),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',362),
  ('setStatement -> qualident DOT KEY_ADD LRB expression RRB','setStatement',6,'p_setStatement','par.py',367),
  ('setStatement -> qualident DOT KEY_DEL LRB expression RRB','setStatement',6,'p_setStatement','par.py',368),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',374),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',380),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',381),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',386),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',387),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',392),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',393),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',398),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',399),
  ('casess -> case casess','casess',2,'p_casess','par.py',404),
  ('casess -> empty','casess',1,'p_casess','par.py',405),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',410),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',415),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',420),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',425),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',430),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',431),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',432),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',433),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',434),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',435),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',441),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',446),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',447),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',448),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',449),
  ('empty -> <empty>','empty',0,'p_empty','par.py',454),
]
