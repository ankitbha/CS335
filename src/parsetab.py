
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITELN LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence SCOLON statement\n\t\t\t\t\t\t\t  | statement\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\t\t\t   | qualident\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT identdef\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | MULTIPLY IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT \n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT COLON type\n\t\t\n\t\t\tformalParameters : LRB FPSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON FPSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tFPSection : IDENT FPs COLON type\n\t\t\n\t\t\tFPs : FPs COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : casess OR case\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE COLON expression statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO statementSequence KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_CONTINUE':([8,27,40,41,58,60,61,62,63,64,66,67,68,69,72,74,75,77,78,81,82,83,86,87,88,98,101,121,122,123,124,125,126,127,128,129,130,142,144,148,152,154,162,200,202,203,204,206,216,229,240,241,250,251,270,274,279,292,309,312,],[15,15,-54,-60,15,-29,-156,-48,-43,-32,-58,-41,-40,-46,-44,-156,-30,-49,-47,-18,-42,-33,-28,-45,-31,-61,-53,-25,-27,-39,-36,-37,-38,-24,-21,-156,-51,-34,-156,-65,-59,15,15,-20,-19,-35,-22,-64,-55,15,-26,-23,-56,-57,-50,15,15,15,15,15,]),'MODULUS':([40,41,60,61,62,63,64,66,67,68,69,72,75,77,78,82,83,86,87,88,98,101,121,122,123,124,125,126,130,142,148,152,203,206,216,240,250,251,270,],[-54,-60,-29,-156,-48,-43,-32,-58,-41,-40,-46,-44,-30,-49,-47,-42,-33,-28,-45,-31,-61,-53,193,-27,-39,-36,-37,-38,-51,-34,-65,-59,-35,-64,-55,-26,-56,-57,-50,]),'VCHAR':([20,26,35,45,65,70,71,73,76,80,84,85,89,90,91,100,104,133,134,135,136,137,138,139,140,141,151,157,164,187,189,191,192,193,194,195,196,197,198,199,201,207,246,275,277,290,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-80,-74,-77,-79,-75,-78,-73,-76,62,62,62,62,62,-69,-66,-68,62,-67,-72,-70,-71,62,62,62,62,62,62,62,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'case':([150,273,],[208,293,]),'char':([20,26,35,45,65,70,71,73,76,80,84,85,89,90,91,100,104,133,151,157,164,187,189,194,199,201,207,246,275,277,290,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,295,60,60,]),'factor':([20,26,35,45,65,70,71,73,76,80,84,85,89,90,91,100,104,133,151,157,164,187,189,194,199,201,207,246,277,290,],[61,61,61,61,123,124,125,126,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,240,61,61,61,61,61,61,]),'length':([187,290,],[237,304,]),'pointerType':([114,167,172,227,236,261,284,289,],[181,181,181,181,181,181,181,181,]),'fileStatement':([8,27,58,154,162,229,274,279,292,309,312,],[16,16,16,16,16,16,16,16,16,16,16,]),'comass':([237,],[268,]),'ioStatement':([8,27,58,154,162,229,274,279,292,309,312,],[18,18,18,18,18,18,18,18,18,18,18,]),'module':([0,],[1,]),'procedureHeading':([11,],[50,]),'set':([20,26,35,45,65,70,71,73,76,80,84,85,89,90,91,100,104,133,151,157,164,187,189,194,199,201,207,246,277,290,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'addOperator':([128,200,204,],[199,199,199,]),'procss':([5,170,],[11,11,]),'mulOperator':([121,],[194,]),'element':([80,201,],[131,242,]),'whileStatement':([8,27,58,154,162,229,274,279,292,309,312,],[25,25,25,25,25,25,25,25,25,25,25,]),'baseType':([232,],[262,]),'conss':([9,],[47,]),'arrayType':([114,167,172,227,236,261,284,289,],[180,180,180,180,180,180,180,180,]),'designator2':([40,],[101,]),'ifStatement':([8,27,58,154,162,229,274,279,292,309,312,],[34,34,34,34,34,34,34,34,34,34,34,]),'declarationSequence':([4,110,],[5,170,]),'expression':([20,26,35,45,80,84,89,90,91,100,104,151,157,164,187,189,201,207,246,277,290,],[79,93,97,105,132,143,145,146,149,156,161,210,149,222,238,239,132,243,274,297,238,]),'procedureDeclaration':([11,],[51,]),'statementSequence':([8,27,154,162,229,274,279,292,309,312,],[19,94,212,220,260,294,298,306,314,315,]),'relation':([81,],[133,]),'empty':([4,5,7,8,9,12,27,58,61,74,110,129,144,154,162,170,175,208,220,223,225,229,237,264,274,279,287,292,309,312,],[6,10,13,30,48,53,30,30,122,127,6,127,127,30,30,10,234,245,253,256,257,30,267,234,30,30,234,30,30,30,]),'formalParameters':([109,],[168,]),'doWhileStatement':([8,27,58,154,162,229,274,279,292,309,312,],[24,24,24,24,24,24,24,24,24,24,24,]),'procedureCall':([8,27,58,154,162,229,274,279,292,309,312,],[28,28,28,28,28,28,28,28,28,28,28,]),'formalss':([223,],[255,]),'termss':([61,],[121,]),'expList':([91,157,],[147,215,]),'typess':([12,],[52,]),'identList':([14,175,264,287,],[55,231,231,231,]),'switchStatement':([8,27,58,154,162,229,274,279,292,309,312,],[31,31,31,31,31,31,31,31,31,31,31,]),'statement':([8,27,58,154,162,229,274,279,292,309,312,],[32,32,119,32,32,32,32,32,32,32,32,]),'varType':([114,167,172,227,236,261,284,289,],[184,184,184,184,184,184,184,184,]),'identdef':([8,20,26,27,35,40,45,57,58,65,70,71,73,76,80,84,85,89,90,91,95,99,100,103,104,106,133,151,154,157,158,159,162,164,187,189,194,199,201,207,213,229,232,246,269,274,277,279,290,292,309,312,],[33,66,66,33,66,66,66,66,33,66,66,66,66,66,66,66,66,66,66,66,152,155,66,160,66,163,66,66,33,66,216,66,33,66,66,66,66,66,66,66,249,33,66,66,66,33,66,33,66,33,33,33,]),'fieldList':([175,264,287,],[235,288,235,]),'simpless':([74,129,144,],[128,200,204,]),'actualParameters':([23,83,],[92,142,]),'designator':([8,20,26,27,35,40,45,57,58,65,70,71,73,76,80,84,85,89,90,91,100,104,133,151,154,157,162,164,187,189,194,199,201,207,229,246,269,274,277,279,290,292,309,312,],[23,83,83,23,83,102,83,117,23,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,23,83,23,83,83,83,83,83,83,83,23,83,117,23,83,23,83,23,23,23,]),'assignment':([8,27,57,58,154,162,229,269,274,279,292,309,312,],[37,37,118,37,37,37,37,291,37,37,37,37,37,]),'term':([20,26,35,45,76,80,84,85,89,90,91,100,104,133,151,157,164,187,189,199,201,207,246,277,290,],[74,74,74,74,129,74,74,144,74,74,74,74,74,74,74,74,74,74,74,241,74,74,74,74,74,]),'constantDeclaration':([47,],[108,]),'recordType':([114,167,172,227,236,261,284,289,],[179,179,179,179,179,179,179,179,]),'qualident':([8,20,26,27,35,40,45,57,58,65,70,71,73,76,80,84,85,89,90,91,100,104,133,151,154,157,159,162,164,187,189,194,199,201,207,229,232,246,269,274,277,279,290,292,309,312,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,217,40,40,40,40,40,40,40,40,40,263,40,40,40,40,40,40,40,40,40,]),'string':([20,26,35,45,65,70,71,73,76,80,84,85,89,90,91,100,104,133,151,157,164,187,189,194,199,201,207,211,221,246,277,290,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,247,254,75,75,75,]),'FPs':([225,],[258,]),'ifss':([220,],[252,]),'procedureBody':([110,],[169,]),'FPSection':([166,281,],[223,299,]),'simpleExpression':([20,26,35,45,80,84,89,90,91,100,104,133,151,157,164,187,189,201,207,246,277,290,],[81,81,81,81,81,81,81,81,81,81,81,202,81,81,81,81,81,81,81,81,81,81,]),'fieldListSequence':([175,287,],[233,302,]),'type':([114,167,172,227,236,261,284,289,],[178,226,230,259,266,286,301,303,]),'typeDeclaration':([52,],[112,]),'number':([20,26,35,45,65,70,71,73,76,80,84,85,89,90,91,100,104,133,151,157,164,187,189,194,199,201,207,246,277,290,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'forStatement':([8,27,58,154,162,229,274,279,292,309,312,],[44,44,44,44,44,44,44,44,44,44,44,]),'casess':([208,],[244,]),'variableDeclaration':([14,],[56,]),'varss':([7,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',30),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',36),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',37),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',38),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',39),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',44),
  ('conss -> empty','conss',1,'p_conss','par.py',45),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',50),
  ('typess -> empty','typess',1,'p_typess','par.py',51),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',56),
  ('varss -> empty','varss',1,'p_varss','par.py',57),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',62),
  ('procss -> empty','procss',1,'p_procss','par.py',63),
  ('statementSequence -> statementSequence SCOLON statement','statementSequence',3,'p_statementSequence','par.py',68),
  ('statementSequence -> statement','statementSequence',1,'p_statementSequence','par.py',69),
  ('constantDeclaration -> IDENT ASSIGN expression','constantDeclaration',3,'p_constantDeclaration','par.py',74),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',79),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',80),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',86),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',87),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',92),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',93),
  ('term -> factor termss','term',2,'p_term','par.py',98),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',103),
  ('termss -> empty','termss',1,'p_termss','par.py',104),
  ('factor -> number','factor',1,'p_factor','par.py',109),
  ('factor -> char','factor',1,'p_factor','par.py',110),
  ('factor -> string','factor',1,'p_factor','par.py',111),
  ('factor -> KEY_NIL','factor',1,'p_factor','par.py',112),
  ('factor -> set','factor',1,'p_factor','par.py',113),
  ('factor -> designator','factor',1,'p_factor','par.py',114),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',115),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',116),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',120),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator -> qualident','designator',1,'p_designator','par.py',159),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',164),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT identdef','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> MULTIPLY IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT COLON type','procedureHeading',4,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB FPSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON FPSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('FPSection -> IDENT FPs COLON type','FPSection',4,'p_FPSection','par.py',325),
  ('FPs -> FPs COMMA IDENT','FPs',3,'p_FPs','par.py',330),
  ('FPs -> empty','FPs',1,'p_FPs','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',360),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',365),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',366),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',371),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',372),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',377),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',378),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',383),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',384),
  ('casess -> casess OR case','casess',3,'p_casess','par.py',389),
  ('casess -> empty','casess',1,'p_casess','par.py',390),
  ('case -> KEY_CASE COLON expression statementSequence','case',4,'p_case','par.py',395),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',400),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',405),
  ('doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression','doWhileStatement',4,'p_doWhileStatement','par.py',410),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',415),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',416),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',417),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',422),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',423),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',424),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',425),
  ('empty -> <empty>','empty',0,'p_empty','par.py',430),
]
