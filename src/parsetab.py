
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence statement SCOLON\n\t\t\t\t\t\t\t  | empty\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | boolean\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tboolean : VBOOLEAN\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator2 LRB qualident RRB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB fpSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON fpSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tfpSection : IDENT fps COLON type\n\t\t\n\t\t\tfps : fps COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : qualident DOT KEY_ADD LRB expression RRB\n\t\t\t\t\t\t | qualident DOT KEY_DEL LRB expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_NIL':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,337,350,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-77,-78,-80,-82,-84,-79,-83,-81,88,88,88,88,88,-75,-74,-76,88,-71,-73,-72,88,-70,88,88,88,88,88,88,88,88,]),'KEY_TYPE':([4,5,6,8,9,10,11,12,15,16,20,21,22,23,70,71,141,144,146,149,],[-174,8,-6,-174,-5,-14,-174,-174,-10,-3,-4,-12,-8,-2,-13,-174,-9,8,-11,-7,]),'KEY_WRITECHAR':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,28,-16,-174,-15,28,-174,-174,-174,28,28,28,-174,-174,28,-174,28,-174,28,28,-174,28,]),'KEY_WRITELN':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,30,-16,-174,-15,30,-174,-174,-174,30,30,30,-174,-174,30,-174,30,-174,30,30,-174,30,]),'DOT':([36,51,56,82,93,112,129,131,139,157,270,310,311,],[84,-64,130,-65,84,-174,200,-61,211,-63,-58,-60,-59,]),'MODULUS':([51,82,86,87,91,92,93,94,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,162,176,178,180,181,182,183,185,196,250,251,258,267,270,299,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-55,-40,-38,-35,255,-27,-39,-37,-69,-36,-174,-174,-68,-58,-32,-48,-26,-47,-60,-59,-54,]),'AT':([7,13,14,40,41,58,60,77,78,79,80,81,84,85,89,90,98,102,106,107,115,116,119,120,121,122,123,124,125,126,128,132,135,136,137,138,150,151,159,166,167,168,169,170,171,172,173,174,177,184,186,199,200,201,206,216,231,244,245,246,247,248,253,254,255,256,257,259,263,268,272,273,276,277,280,287,295,297,337,338,340,347,350,359,361,362,368,371,374,375,377,],[-174,34,-16,34,34,34,34,-174,34,34,34,-15,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-77,-78,-80,-82,-84,-79,-83,-81,34,34,-174,34,34,34,-174,34,-174,34,-75,-74,-76,34,-71,-73,-72,34,-70,34,34,34,34,34,34,34,34,34,34,34,34,-174,34,-174,34,34,-174,34,-174,34,34,-174,34,]),'KEY_POINTER':([140,148,230,284,296,325,329,349,],[222,222,222,222,222,222,222,222,]),'VBOOLEAN':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,337,350,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-77,-78,-80,-82,-84,-79,-83,-81,94,94,94,94,94,-75,-74,-76,94,-71,-73,-72,94,-70,94,94,94,94,94,94,94,94,]),'KEY_EXIT':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,37,-16,-174,-15,37,-174,-174,-174,37,37,37,-174,-174,37,-174,37,-174,37,37,-174,37,]),'KEY_CONTINUE':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,35,-16,-174,-15,35,-174,-174,-174,35,35,35,-174,-174,35,-174,35,-174,35,35,-174,35,]),'KEY_CHAR':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,140,148,150,166,167,168,169,170,171,172,173,174,177,184,201,216,230,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,284,296,297,325,329,337,349,350,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,220,220,97,97,-77,-78,-80,-82,-84,-79,-83,-81,97,97,97,97,220,97,-75,-74,-76,97,-71,-73,-72,97,-70,97,97,97,97,97,220,220,97,220,220,97,220,97,]),'KEY_CASE':([14,81,205,275,315,347,362,],[-16,-15,276,276,276,-174,-154,]),'KEY_FOPEN':([83,],[156,]),'KEY_THEN':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,118,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,249,250,252,267,270,299,301,302,303,304,310,311,336,358,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,-18,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,186,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-19,-36,-20,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,368,]),'KEY_READ':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,57,-16,-174,-15,57,-174,-174,-174,57,57,57,-174,-174,57,-174,57,-174,57,57,-174,57,]),'VINTEGER':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,337,348,350,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-77,-78,-80,-82,-84,-79,-83,-81,100,100,100,100,100,-75,-74,-76,100,-71,-73,-72,100,-70,100,100,100,100,100,100,100,363,100,]),'KEY_FOR':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,45,-16,-174,-15,45,-174,-174,-174,45,45,45,-174,-174,45,-174,45,-174,45,45,-174,45,]),'KEY_RECORD':([140,148,230,284,296,325,329,349,],[226,226,226,226,226,226,226,226,]),'RRB':([51,80,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,126,129,131,142,152,153,155,157,158,160,162,164,165,175,176,178,179,180,181,182,183,185,187,188,189,192,193,195,196,197,198,204,207,208,210,212,213,214,215,217,218,219,220,221,224,225,229,242,243,249,250,251,252,258,267,269,270,292,293,299,301,302,303,304,308,309,310,311,312,313,322,324,326,327,336,355,356,357,360,363,364,373,],[-64,154,-65,-45,-31,-53,-28,-62,-51,-174,-18,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,196,-57,-61,227,237,238,239,-63,241,-174,-55,-21,-24,250,-40,-38,-174,-35,-25,-27,-39,-37,260,261,262,264,265,267,-69,-67,-140,274,278,279,281,-95,-88,-94,-92,-89,-86,-90,-93,-96,-87,-91,-174,299,-22,-19,-36,302,-20,304,-68,310,-58,-118,330,-32,-23,-48,-26,-47,341,-66,-60,-59,342,343,-110,-101,-103,353,-54,-119,-117,367,370,372,-97,-102,]),'KEY_ABS':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,337,350,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-77,-78,-80,-82,-84,-79,-83,-81,106,106,106,106,106,-75,-74,-76,106,-71,-73,-72,106,-70,106,106,106,106,106,106,106,106,]),'PLUS':([40,41,51,58,60,78,79,80,82,85,86,87,90,91,92,93,94,95,97,98,99,100,101,103,105,108,109,110,111,112,113,114,117,120,121,123,126,128,129,131,132,135,136,138,150,157,160,162,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,196,201,216,243,244,250,251,252,258,263,267,268,270,272,273,276,297,299,301,302,303,304,310,311,336,337,350,],[107,107,-64,107,107,107,107,107,-65,107,-45,-31,107,-53,-28,-62,-51,-174,-43,107,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,107,107,107,107,107,-57,-61,107,107,107,107,107,-63,-174,-55,246,-24,107,-77,-78,-80,-82,-84,-79,-83,-81,-40,107,-38,-174,-35,-25,-27,-39,107,-37,-69,107,107,246,107,-36,-174,246,-174,107,-68,107,-58,107,107,107,107,-32,-23,-48,-26,-47,-60,-59,-54,107,107,]),'KEY_ELSE':([14,81,186,259,275,305,306,314,315,316,344,347,362,368,374,],[-16,-15,-174,-174,-174,338,-149,-153,-174,345,-152,-174,-154,-174,-148,]),'KEY_STRING':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,140,148,150,166,167,168,169,170,171,172,173,174,177,184,201,216,230,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,284,296,297,325,329,337,349,350,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,214,214,109,109,-77,-78,-80,-82,-84,-79,-83,-81,109,109,109,109,214,109,-75,-74,-76,109,-71,-73,-72,109,-70,109,109,109,109,109,214,214,109,214,214,109,214,109,]),'KEY_ARRAY':([140,148,230,284,296,325,329,349,],[216,216,216,216,216,216,216,216,]),'KEY_FPRINTF':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,52,-16,-174,-15,52,-174,-174,-174,52,52,52,-174,-174,52,-174,52,-174,52,52,-174,52,]),'KEY_TO':([222,],[284,]),'SCOLON':([3,7,13,14,18,19,24,25,27,31,32,33,35,36,37,38,40,46,47,49,51,53,54,55,56,59,63,68,73,75,77,81,82,86,87,91,92,93,94,95,96,97,99,100,101,103,104,105,108,109,110,111,112,113,114,117,127,129,131,143,151,154,157,160,162,164,165,176,178,179,180,181,182,183,185,186,190,196,198,206,212,213,214,215,217,218,219,220,221,223,224,225,226,227,229,231,232,234,237,238,239,241,243,249,250,252,259,260,261,262,264,265,267,270,274,277,278,279,281,285,288,289,292,293,294,295,299,301,302,303,304,306,307,310,311,318,322,323,324,330,333,334,336,338,339,341,342,343,346,347,351,352,353,355,356,359,361,362,364,366,367,368,369,371,372,373,374,375,376,377,378,],[4,-174,-174,-16,70,71,-133,-123,-127,81,-134,-128,-136,-62,-130,-135,-132,-126,-125,-139,-64,-124,-145,-138,-174,-129,-137,141,146,149,-174,-15,-65,-45,-31,-53,-28,-62,-51,-174,-18,-43,-33,-49,-41,-29,-131,-30,-50,-44,-42,-34,-174,-46,-174,-52,-144,-57,-61,-114,-174,-164,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-174,263,-69,-140,-174,-95,-88,-94,-92,-89,-86,-90,-93,-96,-85,-87,-91,-174,-116,-174,-174,-112,-111,-161,-159,-163,-166,-22,-19,-36,-20,-174,-143,-168,-158,-169,-171,-68,-58,-165,-174,-162,-160,-167,323,-105,-107,-118,331,-113,-174,-32,-23,-48,-26,-47,-137,340,-60,-59,-155,-110,-174,-101,-115,-17,-157,-54,-174,-147,-172,-141,-142,-151,-174,-104,-106,-174,-119,-117,-174,-174,-174,-97,323,-170,-174,-146,-174,-173,-102,-174,-174,-150,-174,-156,]),'COMMA':([51,72,74,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,161,162,163,164,165,176,178,179,180,181,182,183,185,194,195,196,197,209,228,233,243,249,250,252,267,270,271,282,283,286,290,291,298,299,301,302,303,304,309,310,311,319,320,321,336,354,365,],[-64,-109,147,-65,-45,-31,-53,-28,-62,-51,-174,-18,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-56,-55,244,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,266,268,-69,-67,280,-174,-108,-22,-19,-36,-20,-68,-58,268,-174,-100,147,-121,328,335,-32,-23,-48,-26,-47,-66,-60,-59,348,-99,350,-54,-120,-98,]),'KEY_WRITE':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,44,-16,-174,-15,44,-174,-174,-174,44,44,44,-174,-174,44,-174,44,-174,44,44,-174,44,]),'KEY_DEL':([130,],[203,]),'GTEQ':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,250,251,252,258,267,270,299,301,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,170,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-36,-174,-20,-174,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,]),'NEQUAL':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,250,251,252,258,267,270,299,301,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,168,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-36,-174,-20,-174,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,]),'MINUS':([40,41,51,58,60,78,79,80,82,85,86,87,90,91,92,93,94,95,97,98,99,100,101,103,105,108,109,110,111,112,113,114,117,120,121,123,126,128,129,131,132,135,136,138,150,157,160,162,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,196,201,216,243,244,250,251,252,258,263,267,268,270,272,273,276,297,299,301,302,303,304,310,311,336,337,350,],[89,89,-64,89,89,89,89,89,-65,89,-45,-31,89,-53,-28,-62,-51,-174,-43,89,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,89,89,89,89,89,-57,-61,89,89,89,89,89,-63,-174,-55,245,-24,89,-77,-78,-80,-82,-84,-79,-83,-81,-40,89,-38,-174,-35,-25,-27,-39,89,-37,-69,89,89,245,89,-36,-174,245,-174,89,-68,89,-58,89,89,89,89,-32,-23,-48,-26,-47,-60,-59,-54,89,89,]),'KEY_OF':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,249,250,252,267,270,282,283,299,301,302,303,304,310,311,320,321,336,365,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,-18,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-19,-36,-20,-68,-58,-174,-100,-32,-23,-48,-26,-47,-60,-59,-99,349,-54,-98,]),'KEY_WHILE':([7,13,14,77,81,151,186,206,231,236,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,60,-16,-174,-15,60,-174,-174,-174,297,60,60,60,-174,-174,60,-174,60,-174,60,60,-174,60,]),'LT':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,250,251,252,258,267,270,299,301,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,172,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-36,-174,-20,-174,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,]),'KEY_NEW':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,42,-16,-174,-15,42,-174,-174,-174,42,42,42,-174,-174,42,-174,42,-174,42,42,-174,42,]),'KEY_IN':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,250,251,252,258,267,270,299,301,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,173,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-36,-174,-20,-174,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,]),'DIVIDE':([51,82,86,87,91,92,93,94,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,162,176,178,180,181,182,183,185,196,250,251,258,267,270,299,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-55,-40,-38,-35,253,-27,-39,-37,-69,-36,-174,-174,-68,-58,-32,-48,-26,-47,-60,-59,-54,]),'OR':([51,82,86,87,91,92,93,94,95,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,250,251,252,258,267,270,299,301,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,247,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,247,-36,-174,247,-174,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,]),'KEY_VAR':([4,5,6,8,9,10,11,12,15,16,20,21,22,23,70,71,141,144,146,149,],[-174,11,-6,-174,-5,-14,-174,-174,-10,-3,-4,-12,-8,-2,-13,-174,-9,11,-11,-7,]),'KEY_REAL':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,140,148,150,166,167,168,169,170,171,172,173,174,177,184,201,216,230,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,284,296,297,325,329,337,349,350,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,212,212,86,86,-77,-78,-80,-82,-84,-79,-83,-81,86,86,86,86,212,86,-75,-74,-76,86,-71,-73,-72,86,-70,86,86,86,86,86,212,212,86,212,212,86,212,86,]),'KEY_BEGIN':([4,5,6,8,9,10,11,12,15,16,20,21,22,23,26,51,70,71,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,133,134,141,144,146,149,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,249,250,252,267,270,299,301,302,303,304,310,311,336,370,],[-174,7,-6,-174,-5,-14,-174,-174,-10,-3,-4,-12,-8,-2,77,-64,-13,-174,-65,-45,-31,-53,-28,-62,-51,-174,-18,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,205,206,-9,231,-11,-7,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-19,-36,-20,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,375,]),'KEY_WRITEINT':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,29,-16,-174,-15,29,-174,-174,-174,29,29,29,-174,-174,29,-174,29,-174,29,29,-174,29,]),'LCB':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,337,350,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-77,-78,-80,-82,-84,-79,-83,-81,90,90,90,90,90,-75,-74,-76,90,-71,-73,-72,90,-70,90,90,90,90,90,90,90,90,]),'LRB':([28,29,30,36,39,40,41,42,43,44,45,48,50,51,52,54,56,57,58,60,61,62,64,65,69,78,79,80,82,85,88,89,90,93,98,102,106,107,111,112,115,116,120,121,123,126,128,129,131,132,135,136,138,150,156,157,166,167,168,169,170,171,172,173,174,177,184,201,202,203,216,226,244,245,246,247,248,253,254,255,256,257,263,268,270,272,273,276,297,310,311,337,350,],[78,79,80,-62,85,98,98,119,120,121,122,123,124,-64,125,126,-174,132,98,98,135,136,137,138,142,98,98,98,-65,98,159,98,98,-62,98,177,98,98,126,-174,184,98,98,98,98,98,98,199,-61,98,98,98,98,98,240,-63,98,-77,-78,-80,-82,-84,-79,-83,-81,98,98,98,272,273,98,287,98,-75,-74,-76,98,-71,-73,-72,98,-70,98,98,-58,98,98,98,98,-60,-59,98,98,]),'KEY_READBOOL':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,48,-16,-174,-15,48,-174,-174,-174,48,48,48,-174,-174,48,-174,48,-174,48,48,-174,48,]),'KEY_WRITEBOOL':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,61,-16,-174,-15,61,-174,-174,-174,61,61,61,-174,-174,61,-174,61,-174,61,61,-174,61,]),'VSTRING':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,240,244,245,246,247,248,253,254,255,256,257,263,266,268,272,273,276,297,337,350,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-77,-78,-80,-82,-84,-79,-83,-81,91,91,91,91,91,91,-75,-74,-76,91,-71,-73,-72,91,-70,91,91,91,91,91,91,91,91,91,]),'GT':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,250,251,252,258,267,270,299,301,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,174,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-36,-174,-20,-174,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,]),'KEY_MODULE':([0,],[2,]),'KEY_CHR':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,337,350,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-77,-78,-80,-82,-84,-79,-83,-81,115,115,115,115,115,-75,-74,-76,115,-71,-73,-72,115,-70,115,115,115,115,115,115,115,115,]),'KEY_ADD':([130,],[202,]),'KEY_BREAK':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,38,-16,-174,-15,38,-174,-174,-174,38,38,38,-174,-174,38,-174,38,-174,38,38,-174,38,]),'KEY_READINT':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,39,-16,-174,-15,39,-174,-174,-174,39,39,39,-174,-174,39,-174,39,-174,39,39,-174,39,]),'KEY_RETURN':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,40,-16,-174,-15,40,-174,-174,-174,40,40,40,-174,-174,40,-174,40,-174,40,40,-174,40,]),'KEY_IF':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,41,-16,-174,-15,41,-174,-174,-174,41,41,41,-174,-174,41,-174,41,-174,41,41,-174,41,]),'RCB':([51,82,86,87,90,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,161,162,164,165,176,178,179,180,181,182,183,185,196,243,249,250,252,267,270,299,300,301,302,303,304,310,311,336,],[-64,-65,-45,-31,162,-53,-28,-62,-51,-174,-18,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-56,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-19,-36,-20,-68,-58,-32,336,-23,-48,-26,-47,-60,-59,-54,]),'KEY_READCHAR':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,43,-16,-174,-15,43,-174,-174,-174,43,43,43,-174,-174,43,-174,43,-174,43,43,-174,43,]),'KEY_INTEGER':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,140,148,150,166,167,168,169,170,171,172,173,174,177,184,201,216,230,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,284,296,297,325,329,337,349,350,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,225,225,101,101,-77,-78,-80,-82,-84,-79,-83,-81,101,101,101,101,225,101,-75,-74,-76,101,-71,-73,-72,101,-70,101,101,101,101,101,225,225,101,225,225,101,225,101,]),'KEY_ORD':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,337,350,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-77,-78,-80,-82,-84,-79,-83,-81,102,102,102,102,102,-75,-74,-76,102,-71,-73,-72,102,-70,102,102,102,102,102,102,102,102,]),'KEY_IS':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,250,251,252,258,267,270,299,301,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,171,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-36,-174,-20,-174,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,]),'KEY_DO':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,26,-16,-174,-15,26,-174,-174,-174,26,26,26,-174,-174,26,-174,26,-174,26,26,-174,26,]),'LTEQ':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,250,251,252,258,267,270,299,301,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,169,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-36,-174,-20,-174,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,]),'KEY_ELSEIF':([14,81,186,259,305,306,368,374,],[-16,-15,-174,-174,337,-149,-174,-148,]),'RSB':([51,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,197,243,249,250,252,267,270,271,299,301,302,303,304,309,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-174,-18,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-67,-22,-19,-36,-20,-68,-58,311,-32,-23,-48,-26,-47,-66,-60,-59,-54,]),'VREAL':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,337,350,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-77,-78,-80,-82,-84,-79,-83,-81,108,108,108,108,108,-75,-74,-76,108,-71,-73,-72,108,-70,108,108,108,108,108,108,108,108,]),'KEY_FCLOSE':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,50,-16,-174,-15,50,-174,-174,-174,50,50,50,-174,-174,50,-174,50,-174,50,50,-174,50,]),'IDENT':([2,7,8,11,12,13,14,15,16,17,20,21,22,23,34,40,41,58,60,66,77,78,79,80,81,84,85,89,90,98,102,106,107,115,116,119,120,121,122,123,124,125,126,128,132,135,136,137,138,140,141,142,145,146,147,148,149,150,151,159,166,167,168,169,170,171,172,173,174,177,184,186,199,200,201,206,216,226,230,231,244,245,246,247,248,253,254,255,256,257,259,263,268,272,273,276,277,280,284,287,295,296,297,323,325,328,329,331,332,337,338,340,347,349,350,353,359,361,362,368,371,374,375,377,],[3,-174,-174,-174,-174,51,-16,-10,67,69,72,-12,-8,76,82,51,51,51,51,139,-174,51,51,51,-15,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,218,-9,228,232,-11,233,218,-7,51,51,51,51,-77,-78,-80,-82,-84,-79,-83,-81,51,51,-174,51,51,51,-174,51,72,218,-174,51,-75,-74,-76,51,-71,-73,-72,51,-70,51,51,51,51,51,51,51,51,218,51,51,218,51,72,218,354,218,228,-122,51,-174,51,-174,218,51,72,51,-174,51,-174,51,51,-174,51,]),'AND':([51,82,86,87,91,92,93,94,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,162,176,178,180,181,182,183,185,196,250,251,258,267,270,299,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-55,-40,-38,-35,254,-27,-39,-37,-69,-36,-174,-174,-68,-58,-32,-48,-26,-47,-60,-59,-54,]),'LSB':([36,51,56,82,93,112,129,131,157,270,310,311,],[-62,-64,-174,-65,-62,-174,201,-61,-63,-58,-60,-59,]),'KEY_BOOLEAN':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,140,148,150,166,167,168,169,170,171,172,173,174,177,184,201,216,230,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,284,296,297,325,329,337,349,350,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,215,215,110,110,-77,-78,-80,-82,-84,-79,-83,-81,110,110,110,110,215,110,-75,-74,-76,110,-71,-73,-72,110,-70,110,110,110,110,110,215,215,110,215,215,110,215,110,]),'$end':([1,211,],[0,-1,]),'KEY_SWITCH':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,58,-16,-174,-15,58,-174,-174,-174,58,58,58,-174,-174,58,-174,58,-174,58,58,-174,58,]),'KEY_WRITEREAL':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,62,-16,-174,-15,62,-174,-174,-174,62,62,62,-174,-174,62,-174,62,-174,62,62,-174,62,]),'KEY_SET':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,140,148,150,166,167,168,169,170,171,172,173,174,177,184,201,216,230,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,284,296,297,325,329,337,349,350,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,221,221,113,113,-77,-78,-80,-82,-84,-79,-83,-81,113,113,113,113,221,113,-75,-74,-76,113,-71,-73,-72,113,-70,113,113,113,113,113,221,221,113,221,221,113,221,113,]),'ASSIGN':([36,51,54,56,76,82,93,112,129,131,157,191,270,310,311,],[-62,-64,128,-174,150,-65,-62,-174,-57,-61,-63,128,-58,-60,-59,]),'MULTIPLY':([51,82,86,87,91,92,93,94,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,162,176,178,180,181,182,183,185,196,250,251,258,267,270,299,302,303,304,310,311,336,],[-64,-65,-45,-31,-53,-28,-62,-51,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-55,-40,-38,-35,257,-27,-39,-37,-69,-36,-174,-174,-68,-58,-32,-48,-26,-47,-60,-59,-54,]),'EQUAL':([36,51,67,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,157,160,162,164,165,176,178,179,180,181,182,183,185,196,243,250,251,252,258,267,270,299,301,302,303,304,310,311,336,],[83,-64,140,-65,-45,-31,-53,-28,-62,-51,-174,167,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-22,-36,-174,-20,-174,-68,-58,-32,-23,-48,-26,-47,-60,-59,-54,]),'NOT':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,337,350,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-77,-78,-80,-82,-84,-79,-83,-81,116,116,116,116,116,-75,-74,-76,116,-71,-73,-72,116,-70,116,116,116,116,116,116,116,116,]),'KEY_PROCEDURE':([4,5,6,8,9,10,11,12,15,16,20,21,22,23,70,71,141,144,146,149,],[-174,-174,-6,-174,17,-14,-174,-174,-10,-3,-4,-12,-8,-2,-13,-174,-9,-174,-11,-7,]),'VCHAR':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,167,168,169,170,171,172,173,174,177,184,201,216,244,245,246,247,248,253,254,255,256,257,263,268,272,273,276,297,335,337,350,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-77,-78,-80,-82,-84,-79,-83,-81,117,117,117,117,117,-75,-74,-76,117,-71,-73,-72,117,-70,117,117,117,117,117,117,117,117,117,]),'KEY_FREAD':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,64,-16,-174,-15,64,-174,-174,-174,64,64,64,-174,-174,64,-174,64,-174,64,64,-174,64,]),'KEY_READREAL':([7,13,14,77,81,151,186,206,231,259,277,295,338,347,359,361,362,368,371,374,375,377,],[-174,65,-16,-174,-15,65,-174,-174,-174,65,65,65,-174,-174,65,-174,65,-174,65,65,-174,65,]),'COLON':([51,72,74,82,86,87,91,92,93,94,95,96,97,99,100,101,103,105,108,109,110,111,112,113,114,117,129,131,143,157,160,162,164,165,176,178,179,180,181,182,183,185,196,227,228,233,235,243,249,250,252,267,270,286,290,291,299,301,302,303,304,310,311,317,330,336,345,354,],[-64,-109,148,-65,-45,-31,-53,-28,-62,-51,-174,-18,-43,-33,-49,-41,-29,-30,-50,-44,-42,-34,-174,-46,-174,-52,-57,-61,230,-63,-174,-55,-21,-24,-40,-38,-174,-35,-25,-27,-39,-37,-69,-116,-174,-108,296,-22,-19,-36,-20,-68,-58,325,-121,329,-32,-23,-48,-26,-47,-60,-59,347,-115,-54,361,-120,]),'KEY_CONST':([4,5,6,8,9,10,11,12,15,16,20,21,22,23,70,71,141,144,146,149,],[-174,12,-6,-174,-5,-14,-174,-174,-10,-3,-4,-12,-8,-2,-13,-174,-9,12,-11,-7,]),'KEY_END':([7,13,14,77,81,151,186,206,212,213,214,215,217,218,219,220,221,224,225,226,231,259,275,277,285,288,289,295,305,306,314,315,316,322,323,324,338,344,347,351,352,353,359,361,362,364,366,368,371,373,374,375,377,],[-174,66,-16,-174,-15,236,-174,-174,-95,-88,-94,-92,-89,-86,-90,-93,-96,-87,-91,-174,-174,-174,-174,318,324,-105,-107,332,339,-149,-153,-174,346,-110,-174,-101,-174,-152,-174,-104,-106,-174,369,-174,-154,-97,373,-174,376,-102,-148,-174,378,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constantDeclaration':([23,],[75,]),'ioStatement':([13,151,259,277,295,359,362,371,374,377,],[24,24,24,24,24,24,24,24,24,24,]),'length':([216,350,],[282,365,]),'expression':([40,41,58,60,78,79,80,85,90,98,120,121,123,126,128,132,135,136,138,150,177,184,201,216,244,263,268,272,273,276,297,337,350,],[104,118,133,134,152,153,155,158,161,175,188,189,192,197,198,204,207,208,210,235,175,175,197,283,161,307,309,312,313,317,334,358,283,]),'char':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,177,184,201,216,244,248,256,263,268,272,273,276,297,335,337,350,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,357,105,105,]),'fieldListSequence':([226,353,],[285,366,]),'formalParameters':([69,],[143,]),'procss':([5,144,],[9,9,]),'identList':([20,226,323,353,],[74,286,286,286,]),'whileStatement':([13,151,259,277,295,359,362,371,374,377,],[27,27,27,27,27,27,27,27,27,27,]),'module':([0,],[1,]),'statement':([13,151,259,277,295,359,362,371,374,377,],[31,31,31,31,31,31,31,31,31,31,]),'forStatement':([13,151,259,277,295,359,362,371,374,377,],[33,33,33,33,33,33,33,33,33,33,]),'fileStatement':([13,151,259,277,295,359,362,371,374,377,],[32,32,32,32,32,32,32,32,32,32,]),'expList':([126,201,],[195,271,]),'recordType':([140,148,230,284,296,325,329,349,],[217,217,217,217,217,217,217,217,]),'number':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,177,184,201,216,244,248,256,263,268,272,273,276,297,337,350,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'identdef':([13,40,41,58,60,78,79,80,84,85,89,90,98,102,106,107,115,116,119,120,121,122,123,124,125,126,128,132,135,136,137,138,150,151,159,166,177,184,199,200,201,216,244,248,256,259,263,268,272,273,276,277,280,287,295,297,337,340,350,359,362,371,374,377,],[36,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,193,194,93,93,93,93,93,209,93,93,36,93,93,93,93,93,270,93,93,93,93,93,36,93,93,93,93,93,36,319,93,36,93,93,93,93,36,36,36,36,36,]),'term':([40,41,58,60,78,79,80,85,89,90,98,107,120,121,123,126,128,132,135,136,138,150,166,177,184,201,216,244,248,263,268,272,273,276,297,337,350,],[95,95,95,95,95,95,95,95,160,95,95,179,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,301,95,95,95,95,95,95,95,95,]),'declarationSequence':([4,71,],[5,144,]),'formalss':([229,],[293,]),'simpleExpression':([40,41,58,60,78,79,80,85,90,98,120,121,123,126,128,132,135,136,138,150,166,177,184,201,216,244,263,268,272,273,276,297,337,350,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,249,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'comass':([282,],[321,]),'conss':([12,],[23,]),'actualParameters':([54,111,],[127,180,]),'procedureHeading':([9,],[19,]),'assignment':([13,122,151,259,277,295,340,359,362,371,374,377,],[25,190,25,25,25,25,360,25,25,25,25,25,]),'type':([140,148,230,284,296,325,329,349,],[223,234,294,322,333,352,355,364,]),'boolean':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,177,184,201,216,244,248,256,263,268,272,273,276,297,337,350,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'set':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,177,184,201,216,244,248,256,263,268,272,273,276,297,337,350,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'typeDeclaration':([16,],[68,]),'string':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,177,184,201,216,240,244,248,256,263,266,268,272,273,276,297,337,350,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,298,87,87,87,87,308,87,87,87,87,87,87,87,]),'variableDeclaration':([20,],[73,]),'varType':([140,148,230,284,296,325,329,349,],[224,224,224,224,224,224,224,224,]),'ifStatement':([13,151,259,277,295,359,362,371,374,377,],[47,47,47,47,47,47,47,47,47,47,]),'statementSequence':([7,77,186,206,231,338,347,361,368,375,],[13,151,259,277,295,359,362,371,374,377,]),'fieldList':([226,323,353,],[288,351,288,]),'arrayType':([140,148,230,284,296,325,329,349,],[213,213,213,213,213,213,213,213,]),'setStatement':([13,151,259,277,295,359,362,371,374,377,],[49,49,49,49,49,49,49,49,49,49,]),'procedureDeclaration':([9,],[18,]),'typess':([8,],[16,]),'switchStatement':([13,151,259,277,295,359,362,371,374,377,],[46,46,46,46,46,46,46,46,46,46,]),'designator2':([56,112,],[129,129,]),'casess':([275,315,],[316,344,]),'simpless':([95,160,179,],[164,243,252,]),'procedureCall':([13,151,259,277,295,359,362,371,374,377,],[53,53,53,53,53,53,53,53,53,53,]),'termss':([114,251,258,],[181,181,181,]),'baseType':([287,],[327,]),'designator':([13,40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,119,120,121,122,123,126,128,132,135,136,138,150,151,159,166,177,184,201,216,244,248,256,259,263,268,272,273,276,277,295,297,337,340,350,359,362,371,374,377,],[54,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,187,111,111,191,111,111,111,111,111,111,111,111,54,242,111,111,111,111,111,111,111,111,54,111,111,111,111,111,54,54,111,111,191,111,54,54,54,54,54,]),'memoryalloc':([13,151,259,277,295,359,362,371,374,377,],[55,55,55,55,55,55,55,55,55,55,]),'varss':([11,],[20,]),'relation':([96,],[166,]),'pointerType':([140,148,230,284,296,325,329,349,],[219,219,219,219,219,219,219,219,]),'qualident':([13,40,41,58,60,78,79,80,84,85,89,90,98,102,106,107,115,116,119,120,121,122,123,126,128,132,135,136,138,150,151,159,166,177,184,199,201,216,244,248,256,259,263,268,272,273,276,277,287,295,297,337,340,350,359,362,371,374,377,],[56,112,112,112,112,112,112,112,157,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,56,112,112,112,112,269,112,112,112,112,112,56,112,112,112,112,112,56,326,56,112,112,112,112,56,56,56,56,56,]),'fps':([228,],[291,]),'fpSection':([142,331,],[229,356,]),'doWhileStatement':([13,151,259,277,295,359,362,371,374,377,],[59,59,59,59,59,59,59,59,59,59,]),'mulOperator':([181,],[256,]),'case':([205,275,315,],[275,315,315,]),'factor':([40,41,58,60,78,79,80,85,89,90,98,102,106,107,115,116,120,121,123,126,128,132,135,136,138,150,166,177,184,201,216,244,248,256,263,268,272,273,276,297,337,350,],[114,114,114,114,114,114,114,114,114,114,114,176,178,114,183,185,114,114,114,114,114,114,114,114,114,114,114,251,258,114,114,114,114,303,114,114,114,114,114,114,114,114,]),'element':([90,244,],[163,300,]),'ifss':([259,],[305,]),'empty':([4,5,7,8,11,12,13,56,71,77,95,112,114,144,151,160,179,186,206,226,228,229,231,251,258,259,275,277,282,295,315,323,338,347,353,359,361,362,368,371,374,375,377,],[6,10,14,15,21,22,63,131,6,14,165,131,182,10,63,165,165,14,14,289,290,292,14,182,182,306,314,63,320,63,314,289,14,14,289,63,14,63,14,63,63,14,63,]),'addOperator':([164,243,252,],[248,248,248,]),'procedureBody':([71,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> empty','conss',1,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> empty','typess',1,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> empty','varss',1,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> empty','procss',1,'p_procss','par.py',61),
  ('statementSequence -> statementSequence statement SCOLON','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> empty','statementSequence',1,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> boolean','factor',1,'p_factor','par.py',108),
  ('factor -> char','factor',1,'p_factor','par.py',109),
  ('factor -> string','factor',1,'p_factor','par.py',110),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',111),
  ('factor -> set','factor',1,'p_factor','par.py',112),
  ('factor -> designator','factor',1,'p_factor','par.py',113),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',114),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',115),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',127),
  ('number -> VINTEGER','number',1,'p_number','par.py',132),
  ('number -> VREAL','number',1,'p_number','par.py',133),
  ('boolean -> VBOOLEAN','boolean',1,'p_boolean','par.py',138),
  ('char -> VCHAR','char',1,'p_char','par.py',143),
  ('string -> VSTRING','string',1,'p_string','par.py',148),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',153),
  ('set -> LCB RCB','set',2,'p_set','par.py',154),
  ('element -> expression','element',1,'p_element','par.py',159),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',164),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',169),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',170),
  ('designator2 -> designator2 LRB qualident RRB','designator2',4,'p_designator2','par.py',171),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',172),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',177),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',178),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',183),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',184),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',189),
  ('expList -> expression','expList',1,'p_expList','par.py',190),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',195),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',196),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',201),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',202),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',203),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',204),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',209),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',210),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',211),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',216),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',217),
  ('relation -> LT','relation',1,'p_relation','par.py',218),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',219),
  ('relation -> GT','relation',1,'p_relation','par.py',220),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',221),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',222),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',223),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',228),
  ('type -> IDENT','type',1,'p_type','par.py',233),
  ('type -> varType','type',1,'p_type','par.py',234),
  ('type -> arrayType','type',1,'p_type','par.py',235),
  ('type -> recordType','type',1,'p_type','par.py',236),
  ('type -> pointerType','type',1,'p_type','par.py',237),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',242),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',243),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',244),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',245),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',246),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',247),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',252),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',257),
  ('comass -> empty','comass',1,'p_comass','par.py',258),
  ('length -> expression','length',1,'p_length','par.py',263),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',268),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',269),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',274),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',279),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',280),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',285),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',286),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',291),
  ('identList -> IDENT','identList',1,'p_identList','par.py',292),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',297),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',303),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',308),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',313),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',314),
  ('formalParameters -> LRB fpSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',319),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',320),
  ('formalss -> formalss SCOLON fpSection','formalss',3,'p_formalss','par.py',325),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',326),
  ('fpSection -> IDENT fps COLON type','fpSection',4,'p_fpSection','par.py',331),
  ('fps -> fps COMMA IDENT','fps',3,'p_fps','par.py',336),
  ('fps -> empty','fps',1,'p_fps','par.py',337),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',342),
  ('statement -> assignment','statement',1,'p_statement','par.py',347),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',348),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',349),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',350),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',351),
  ('statement -> forStatement','statement',1,'p_statement','par.py',352),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',354),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',355),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',356),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',357),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',358),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',359),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',360),
  ('statement -> empty','statement',1,'p_statement','par.py',361),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',362),
  ('statement -> setStatement','statement',1,'p_statement','par.py',363),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',368),
  ('setStatement -> qualident DOT KEY_ADD LRB expression RRB','setStatement',6,'p_setStatement','par.py',373),
  ('setStatement -> qualident DOT KEY_DEL LRB expression RRB','setStatement',6,'p_setStatement','par.py',374),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',380),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',386),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',387),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',392),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',393),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',398),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',399),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',404),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',405),
  ('casess -> case casess','casess',2,'p_casess','par.py',410),
  ('casess -> empty','casess',1,'p_casess','par.py',411),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',416),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',421),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',426),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',431),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',441),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',442),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',443),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',444),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',445),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',446),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',447),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',452),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',453),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',454),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',455),
  ('empty -> <empty>','empty',0,'p_empty','par.py',460),
]
