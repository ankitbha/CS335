
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FAPPEND KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FREAD KEY_FWRITE KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence statement SCOLON\n\t\t\t\t\t\t\t  | empty\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | boolean\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tboolean : VBOOLEAN\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB fpSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON fpSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tfpSection : IDENT fps COLON type\n\t\t\n\t\t\tfps : fps COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : KEY_ADD LRB qualident COMMA expression RRB\n\t\t\t\t\t\t | KEY_DEL LRB qualident COMMA expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB IDENT COMMA char RRB\n\t\t\t\t\t\t  | identdef EQUAL KEY_FREAD LRB identdef COMMA VINTEGER RRB\n\t\t\t\t\t\t  | KEY_FWRITE LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FAPPEND LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_TYPE':([4,5,6,7,8,9,10,11,13,14,15,16,17,18,32,33,79,82,85,89,],[-174,-6,8,-174,-174,-174,-5,-14,-2,-8,-3,-10,-12,-4,-13,-174,-7,-9,-11,8,]),'KEY_STRING':([34,45,58,60,80,81,83,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,174,177,180,181,182,183,184,185,186,187,188,191,226,238,239,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,305,310,321,336,337,349,],[90,90,90,90,90,154,154,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,154,90,-82,-77,-79,-78,-83,-76,90,-81,-80,90,90,154,154,-71,90,-72,-70,-69,90,-73,90,-74,-75,90,90,90,90,90,154,154,90,154,90,90,]),'KEY_CONTINUE':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,40,-15,-174,-174,-174,40,-174,40,40,40,-174,-174,40,40,-174,-174,40,40,-174,40,]),'VINTEGER':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,358,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-82,-77,-79,-78,-83,-76,91,-81,-80,91,91,-71,91,-72,-70,-69,91,-73,91,-74,-75,91,91,91,91,91,91,91,91,368,]),'KEY_WRITECHAR':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,37,-15,-174,-174,-174,37,-174,37,37,37,-174,-174,37,37,-174,-174,37,37,-174,37,]),'KEY_WRITEBOOL':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,38,-15,-174,-174,-174,38,-174,38,38,38,-174,-174,38,38,-174,-174,38,38,-174,38,]),'VSTRING':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,290,292,294,321,337,349,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-82,-77,-79,-78,-83,-76,93,-81,-80,93,93,-71,93,-72,-70,-69,93,-73,93,-74,-75,93,93,93,93,93,93,93,93,93,93,]),'KEY_RETURN':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,34,-15,-174,-174,-174,34,-174,34,34,34,-174,-174,34,34,-174,-174,34,34,-174,34,]),'RRB':([64,78,86,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,125,129,140,141,143,154,155,156,159,160,161,162,163,164,166,168,171,178,179,189,190,192,193,194,195,196,199,200,202,203,204,205,206,207,208,209,210,212,215,216,218,219,224,228,231,233,234,237,247,248,253,254,255,256,257,264,265,274,288,300,303,304,306,313,314,315,317,318,319,322,330,331,332,333,341,342,344,360,365,368,369,370,],[-174,-63,173,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-18,-46,-34,-28,-174,-31,-45,-52,-51,-174,209,213,-57,-60,-64,-93,-92,-91,-95,-90,-89,-94,-86,-87,-85,-88,-174,-40,-174,-37,-35,-39,257,-25,-27,-55,-38,-174,-24,-21,270,271,272,-139,-66,-68,274,276,278,279,281,282,287,291,293,295,-62,298,309,-117,313,-20,-19,314,-36,-22,317,-67,-58,-109,-102,338,-100,-48,-47,-26,-32,-23,-65,346,-59,355,356,357,-116,-118,-54,-96,373,375,376,-101,]),'KEY_ELSEIF':([22,127,220,283,323,324,372,377,],[-16,-15,-174,-174,349,-148,-174,-147,]),'KEY_EXIT':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,41,-15,-174,-174,-174,41,-174,41,41,41,-174,-174,41,41,-174,-174,41,41,-174,41,]),'KEY_ORD':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-82,-77,-79,-78,-83,-76,95,-81,-80,95,95,-71,95,-72,-70,-69,95,-73,95,-74,-75,95,95,95,95,95,95,95,95,]),'KEY_THEN':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,136,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,254,255,257,264,274,288,313,314,315,317,318,330,344,364,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-18,-46,-34,-28,-174,-31,-45,-52,-51,-174,220,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-20,-19,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,372,]),'KEY_READINT':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,67,-15,-174,-174,-174,67,-174,67,67,67,-174,-174,67,67,-174,-174,67,67,-174,67,]),'COLON':([28,29,64,78,87,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,153,170,172,173,178,179,189,190,192,194,195,196,199,200,202,203,209,234,244,249,250,254,255,257,264,274,288,309,313,314,315,317,318,326,330,343,344,352,],[83,-108,-174,-63,174,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-18,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,238,-107,-174,-115,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,305,310,-120,-20,-19,-36,-22,-67,-58,-114,-48,-47,-26,-32,-23,351,-59,-119,-54,367,]),'EQUAL':([26,64,76,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,253,254,256,257,264,274,288,313,314,315,317,318,330,344,],[81,-174,151,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,185,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-174,-20,-174,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,]),'KEY_WHILE':([12,22,23,127,130,176,211,214,220,252,275,277,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,45,-15,-174,-174,-174,45,-174,45,45,321,45,-174,-174,45,45,-174,-174,45,45,-174,45,]),'KEY_WRITELN':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,46,-15,-174,-174,-174,46,-174,46,46,46,-174,-174,46,46,-174,-174,46,46,-174,46,]),'KEY_DO':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,47,-15,-174,-174,-174,47,-174,47,47,47,-174,-174,47,47,-174,-174,47,47,-174,47,]),'NEQUAL':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,253,254,256,257,264,274,288,313,314,315,317,318,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,181,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-174,-20,-174,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,]),'KEY_WRITE':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,55,-15,-174,-174,-174,55,-174,55,55,55,-174,-174,55,55,-174,-174,55,55,-174,55,]),'COMMA':([28,29,64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,170,172,178,179,189,190,192,194,195,196,197,198,199,200,202,203,208,209,210,217,227,229,232,234,240,241,244,249,250,254,255,257,264,274,288,289,301,302,313,314,315,317,318,319,330,334,335,343,344,361,],[84,-108,-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-18,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-107,-174,-40,-174,-37,-35,-39,-25,-27,-55,-56,263,-38,-174,-24,-21,-66,-68,273,280,290,292,294,-62,-99,-174,84,311,-120,-20,-19,-36,-22,-67,-58,273,337,-98,-48,-47,-26,-32,-23,-65,-59,358,359,-119,-54,-97,]),'KEY_INTEGER':([34,45,58,60,80,81,83,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,174,177,180,181,182,183,184,185,186,187,188,191,226,238,239,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,305,310,321,336,337,349,],[100,100,100,100,100,160,160,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,160,100,-82,-77,-79,-78,-83,-76,100,-81,-80,100,100,160,160,-71,100,-72,-70,-69,100,-73,100,-74,-75,100,100,100,100,100,160,160,100,160,100,100,]),'KEY_ADD':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,54,-15,-174,-174,-174,54,-174,54,54,54,-174,-174,54,54,-174,-174,54,54,-174,54,]),'KEY_WRITEINT':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,50,-15,-174,-174,-174,50,-174,50,50,50,-174,-174,50,50,-174,-174,50,50,-174,50,]),'KEY_IS':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,253,254,256,257,264,274,288,313,314,315,317,318,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,184,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-174,-20,-174,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,]),'NOT':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-82,-77,-79,-78,-83,-76,104,-81,-80,104,104,-71,104,-72,-70,-69,104,-73,104,-74,-75,104,104,104,104,104,104,104,104,]),'KEY_CONST':([4,5,6,7,8,9,10,11,13,14,15,16,17,18,32,33,79,82,85,89,],[-174,-6,7,-174,-174,-174,-5,-14,-2,-8,-3,-10,-12,-4,-13,-174,-7,-9,-11,7,]),'AT':([12,22,23,34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,127,129,130,131,132,133,134,135,137,139,142,144,145,147,148,149,150,152,158,176,177,180,181,182,183,184,185,186,187,188,191,201,211,214,220,225,226,242,252,258,259,260,261,262,263,266,267,268,269,273,275,280,283,284,285,294,296,321,337,347,349,350,351,363,366,367,372,374,377,378,380,],[-174,-16,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-15,66,-174,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-174,66,-82,-77,-79,-78,-83,-76,66,-81,-80,66,66,-174,66,-174,66,66,66,66,-71,66,-72,-70,-69,66,-73,66,-74,-75,66,66,66,66,66,66,66,66,66,66,-174,66,66,-174,66,66,-174,-174,66,66,-174,66,]),'KEY_CHAR':([34,45,58,60,80,81,83,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,174,177,180,181,182,183,184,185,186,187,188,191,226,238,239,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,305,310,321,336,337,349,],[92,92,92,92,92,155,155,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,155,92,-82,-77,-79,-78,-83,-76,92,-81,-80,92,92,155,155,-71,92,-72,-70,-69,92,-73,92,-74,-75,92,92,92,92,92,155,155,92,155,92,92,]),'KEY_SWITCH':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,60,-15,-174,-174,-174,60,-174,60,60,60,-174,-174,60,60,-174,-174,60,60,-174,60,]),'KEY_TO':([157,],[239,]),'LRB':([31,34,35,37,38,42,45,46,50,52,54,55,56,58,59,60,63,64,65,67,68,70,71,75,76,77,78,80,95,99,102,104,107,108,109,112,113,114,116,121,122,123,124,125,129,131,132,134,139,140,141,143,144,149,152,158,165,177,180,181,182,183,184,185,186,187,188,191,226,234,235,236,258,259,260,261,262,263,266,267,268,269,273,280,284,285,288,294,321,330,337,349,],[86,109,121,122,123,125,109,129,131,132,133,134,135,109,137,109,139,-174,142,144,145,147,148,149,-61,152,-63,109,177,-61,109,109,125,191,109,109,109,109,201,109,109,109,109,109,109,109,109,109,109,-57,-60,-64,109,109,109,109,242,109,-82,-77,-79,-78,-83,-76,109,-81,-80,109,109,-62,296,297,-71,109,-72,-70,-69,109,-73,109,-74,-75,109,109,109,109,-58,109,109,-59,109,109,]),'KEY_BOOLEAN':([34,45,58,60,80,81,83,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,174,177,180,181,182,183,184,185,186,187,188,191,226,238,239,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,305,310,321,336,337,349,],[94,94,94,94,94,156,156,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,156,94,-82,-77,-79,-78,-83,-76,94,-81,-80,94,94,156,156,-71,94,-72,-70,-69,94,-73,94,-74,-75,94,94,94,94,94,156,156,94,156,94,94,]),'KEY_ARRAY':([81,83,174,238,239,305,310,336,],[158,158,158,158,158,158,158,158,]),'ASSIGN':([25,42,64,76,78,99,140,141,143,221,234,288,330,],[80,124,-174,-61,-63,-61,-57,-60,-64,124,-62,-58,-59,]),'KEY_FAPPEND':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,65,-15,-174,-174,-174,65,-174,65,65,65,-174,-174,65,65,-174,-174,65,65,-174,65,]),'KEY_CASE':([22,127,223,286,328,351,366,],[-16,-15,285,285,285,-174,-153,]),'KEY_PROCEDURE':([4,5,6,7,8,9,10,11,13,14,15,16,17,18,32,33,79,82,85,89,],[-174,-6,-174,-174,-174,-174,19,-14,-2,-8,-3,-10,-12,-4,-13,-174,-7,-9,-11,-174,]),'MULTIPLY':([64,78,90,91,92,93,94,96,97,98,99,100,101,106,107,110,111,115,117,118,119,140,141,143,178,189,190,192,194,195,196,199,209,234,253,256,257,274,288,313,314,315,317,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-46,-34,-28,-174,-31,-45,-52,-51,-57,-60,-64,-40,-37,-35,-39,262,-27,-55,-38,-68,-62,-174,-174,-36,-67,-58,-48,-47,-26,-32,-59,-54,]),'KEY_END':([12,22,23,127,130,154,155,156,159,160,161,162,163,164,165,166,168,176,211,214,220,243,245,246,252,275,283,286,300,306,307,323,324,327,328,329,338,339,340,347,351,354,360,362,363,366,367,370,372,374,377,378,380,],[-174,-16,69,-15,-174,-93,-92,-91,-95,-90,-89,-94,-86,-87,-174,-85,-88,-174,-174,277,-174,-106,306,-104,312,320,-174,-174,-109,-100,-174,348,-148,353,-174,-152,-174,-105,-103,-174,-174,-151,-96,370,371,-153,-174,-101,-174,379,-147,-174,381,]),'KEY_NEW':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,70,-15,-174,-174,-174,70,-174,70,70,70,-174,-174,70,70,-174,-174,70,70,-174,70,]),'KEY_POINTER':([81,83,174,238,239,305,310,336,],[157,157,157,157,157,157,157,157,]),'KEY_WRITEREAL':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,52,-15,-174,-174,-174,52,-174,52,52,52,-174,-174,52,52,-174,-174,52,52,-174,52,]),'KEY_RECORD':([81,83,174,238,239,305,310,336,],[165,165,165,165,165,165,165,165,]),'KEY_FWRITE':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,68,-15,-174,-174,-174,68,-174,68,68,68,-174,-174,68,68,-174,-174,68,68,-174,68,]),'LT':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,253,254,256,257,264,274,288,313,314,315,317,318,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,183,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-174,-20,-174,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,]),'KEY_MODULE':([0,],[1,]),'KEY_READ':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,35,-15,-174,-174,-174,35,-174,35,35,35,-174,-174,35,35,-174,-174,35,35,-174,35,]),'KEY_BREAK':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,48,-15,-174,-174,-174,48,-174,48,48,48,-174,-174,48,48,-174,-174,48,48,-174,48,]),'KEY_READREAL':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,77,-15,-174,-174,-174,77,-174,77,77,77,-174,-174,77,77,-174,-174,77,77,-174,77,]),'MINUS':([34,45,58,60,64,78,80,90,91,92,93,94,96,97,98,99,100,101,106,107,109,110,111,112,115,117,118,119,120,121,122,123,124,125,129,131,132,134,139,140,141,143,144,149,152,158,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,199,200,202,203,209,226,234,253,254,256,257,263,264,273,274,280,284,285,288,294,313,314,315,317,318,321,330,337,344,349,],[114,114,114,114,-174,-63,114,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-46,-34,114,-28,-174,114,-31,-45,-52,-51,-174,114,114,114,114,114,114,114,114,114,114,-57,-60,-64,114,114,114,114,114,-40,-174,-82,-77,-79,-78,-83,-76,114,-81,-80,-37,-35,114,-39,-25,-27,-55,-38,-174,-24,268,-68,114,-62,-174,268,-174,-36,114,268,114,-67,114,114,114,-58,114,-48,-47,-26,-32,-23,114,-59,114,-54,114,]),'KEY_FREAD':([151,],[235,]),'KEY_DEL':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,71,-15,-174,-174,-174,71,-174,71,71,71,-174,-174,71,71,-174,-174,71,71,-174,71,]),'KEY_FOR':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,59,-15,-174,-174,-174,59,-174,59,59,59,-174,-174,59,59,-174,-174,59,59,-174,59,]),'LTEQ':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,253,254,256,257,264,274,288,313,314,315,317,318,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,182,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-174,-20,-174,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,]),'DOT':([64,76,78,99,140,141,143,146,234,288,330,],[-174,150,-63,150,225,-60,-64,230,-62,-58,-59,]),'OR':([64,78,90,91,92,93,94,96,97,98,99,100,101,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,253,254,256,257,264,274,288,313,314,315,317,318,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,269,-68,-62,-174,269,-174,-36,269,-67,-58,-48,-47,-26,-32,-23,-59,-54,]),'SCOLON':([3,12,20,21,22,23,24,27,30,34,36,39,40,41,42,43,44,48,49,51,53,57,61,62,64,72,73,74,76,78,87,90,91,92,93,94,96,97,98,99,100,101,103,105,106,107,110,111,115,117,118,119,120,126,127,130,140,141,143,154,155,156,159,160,161,162,163,164,165,166,167,168,169,171,173,175,176,178,179,189,190,192,194,195,196,199,200,202,203,207,209,211,213,214,220,222,234,243,245,246,247,248,251,252,254,255,257,264,270,271,272,274,275,276,278,279,281,282,283,287,288,291,293,295,298,299,300,306,307,309,313,314,315,317,318,320,324,325,330,338,339,340,341,342,344,345,346,347,348,351,353,355,356,357,360,362,363,366,367,370,371,372,374,375,376,377,378,379,380,381,],[4,-174,32,33,-16,-174,79,82,85,-131,-133,-132,-135,-129,-144,-137,127,-134,-138,-136,-128,-127,-126,-124,-174,-122,-123,-125,-61,-63,-113,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-18,-130,-46,-34,-28,-174,-31,-45,-52,-51,-174,-143,-15,-174,-57,-60,-64,-93,-92,-91,-95,-90,-89,-94,-86,-87,-174,-85,-84,-88,-110,-174,-115,-111,-174,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-139,-68,-174,-163,-174,-174,284,-62,-106,307,-104,308,-117,-112,-174,-20,-19,-36,-22,-164,-160,-161,-67,-174,-162,-158,-159,-157,-173,-174,-167,-58,-165,-142,-168,-166,-17,-109,-100,-174,-114,-48,-47,-26,-32,-23,-154,-136,350,-59,-174,-105,-103,-116,-118,-54,-156,-140,-174,-146,-174,-150,-172,-171,-141,-96,307,-174,-174,-174,-101,-145,-174,-174,-170,-169,-174,-174,-149,-174,-155,]),'LSB':([64,76,78,99,140,141,143,234,288,330,],[-174,-61,-63,-61,226,-60,-64,-62,-58,-59,]),'VREAL':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-82,-77,-79,-78,-83,-76,97,-81,-80,97,97,-71,97,-72,-70,-69,97,-73,97,-74,-75,97,97,97,97,97,97,97,97,]),'RCB':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,112,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,197,199,200,202,203,209,234,254,255,257,264,274,288,313,314,315,316,317,318,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-18,-46,-34,-28,-174,196,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-56,-38,-174,-24,-21,-68,-62,-20,-19,-36,-22,-67,-58,-48,-47,-26,344,-32,-23,-59,-54,]),'KEY_VAR':([4,5,6,7,8,9,10,11,13,14,15,16,17,18,32,33,79,82,85,89,],[-174,-6,9,-174,-174,-174,-5,-14,-2,-8,-3,-10,-12,-4,-13,-174,-7,-9,-11,9,]),'DIVIDE':([64,78,90,91,92,93,94,96,97,98,99,100,101,106,107,110,111,115,117,118,119,140,141,143,178,189,190,192,194,195,196,199,209,234,253,256,257,274,288,313,314,315,317,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-46,-34,-28,-174,-31,-45,-52,-51,-57,-60,-64,-40,-37,-35,-39,261,-27,-55,-38,-68,-62,-174,-174,-36,-67,-58,-48,-47,-26,-32,-59,-54,]),'GTEQ':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,253,254,256,257,264,274,288,313,314,315,317,318,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,187,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-174,-20,-174,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,]),'PLUS':([34,45,58,60,64,78,80,90,91,92,93,94,96,97,98,99,100,101,106,107,109,110,111,112,115,117,118,119,120,121,122,123,124,125,129,131,132,134,139,140,141,143,144,149,152,158,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,199,200,202,203,209,226,234,253,254,256,257,263,264,273,274,280,284,285,288,294,313,314,315,317,318,321,330,337,344,349,],[102,102,102,102,-174,-63,102,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-46,-34,102,-28,-174,102,-31,-45,-52,-51,-174,102,102,102,102,102,102,102,102,102,102,-57,-60,-64,102,102,102,102,102,-40,-174,-82,-77,-79,-78,-83,-76,102,-81,-80,-37,-35,102,-39,-25,-27,-55,-38,-174,-24,266,-68,102,-62,-174,266,-174,-36,102,266,102,-67,102,102,102,-58,102,-48,-47,-26,-32,-23,102,-59,102,-54,102,]),'GT':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,253,254,256,257,264,274,288,313,314,315,317,318,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,188,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-174,-20,-174,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,]),'KEY_FCLOSE':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,56,-15,-174,-174,-174,56,-174,56,56,56,-174,-174,56,56,-174,-174,56,56,-174,56,]),'VBOOLEAN':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-82,-77,-79,-78,-83,-76,119,-81,-80,119,119,-71,119,-72,-70,-69,119,-73,119,-74,-75,119,119,119,119,119,119,119,119,]),'KEY_ELSE':([22,127,220,283,286,323,324,327,328,329,351,354,366,372,377,],[-16,-15,-174,-174,-174,347,-148,352,-174,-152,-174,-151,-153,-174,-147,]),'KEY_OF':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,240,241,254,255,257,264,274,288,301,302,313,314,315,317,318,330,344,361,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-18,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-99,-174,-20,-19,-36,-22,-67,-58,336,-98,-48,-47,-26,-32,-23,-59,-54,-97,]),'KEY_BEGIN':([4,5,6,7,8,9,10,11,13,14,15,16,17,18,32,33,47,64,78,79,82,85,89,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,128,138,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,254,255,257,264,274,288,313,314,315,317,318,330,344,373,],[-174,-6,12,-174,-174,-174,-5,-14,-2,-8,-3,-10,-12,-4,-13,-174,130,-174,-63,-7,-9,-11,176,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-18,-46,-34,-28,-174,-31,-45,-52,-51,-174,211,223,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-20,-19,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,378,]),'KEY_IF':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,58,-15,-174,-174,-174,58,-174,58,58,58,-174,-174,58,58,-174,-174,58,58,-174,58,]),'KEY_SET':([34,45,58,60,80,81,83,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,174,177,180,181,182,183,184,185,186,187,188,191,226,238,239,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,305,310,321,336,337,349,],[106,106,106,106,106,159,159,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,159,106,-82,-77,-79,-78,-83,-76,106,-81,-80,106,106,159,159,-71,106,-72,-70,-69,106,-73,106,-74,-75,106,106,106,106,106,159,159,106,159,106,106,]),'KEY_CHR':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-82,-77,-79,-78,-83,-76,108,-81,-80,108,108,-71,108,-72,-70,-69,108,-73,108,-74,-75,108,108,108,108,108,108,108,108,]),'RSB':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,208,209,234,254,255,257,264,274,288,289,313,314,315,317,318,319,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-18,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-66,-68,-62,-20,-19,-36,-22,-67,-58,330,-48,-47,-26,-32,-23,-65,-59,-54,]),'KEY_READCHAR':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,63,-15,-174,-174,-174,63,-174,63,63,63,-174,-174,63,63,-174,-174,63,63,-174,63,]),'LCB':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-82,-77,-79,-78,-83,-76,112,-81,-80,112,112,-71,112,-72,-70,-69,112,-73,112,-74,-75,112,112,112,112,112,112,112,112,]),'KEY_ABS':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-82,-77,-79,-78,-83,-76,113,-81,-80,113,113,-71,113,-72,-70,-69,113,-73,113,-74,-75,113,113,113,113,113,113,113,113,]),'$end':([2,230,],[0,-1,]),'MODULUS':([64,78,90,91,92,93,94,96,97,98,99,100,101,106,107,110,111,115,117,118,119,140,141,143,178,189,190,192,194,195,196,199,209,234,253,256,257,274,288,313,314,315,317,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-46,-34,-28,-174,-31,-45,-52,-51,-57,-60,-64,-40,-37,-35,-39,258,-27,-55,-38,-68,-62,-174,-174,-36,-67,-58,-48,-47,-26,-32,-59,-54,]),'KEY_IN':([64,78,90,91,92,93,94,96,97,98,99,100,101,103,106,107,110,111,115,117,118,119,120,140,141,143,178,179,189,190,192,194,195,196,199,200,202,203,209,234,253,254,256,257,264,274,288,313,314,315,317,318,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,180,-46,-34,-28,-174,-31,-45,-52,-51,-174,-57,-60,-64,-40,-174,-37,-35,-39,-25,-27,-55,-38,-174,-24,-21,-68,-62,-174,-20,-174,-36,-22,-67,-58,-48,-47,-26,-32,-23,-59,-54,]),'AND':([64,78,90,91,92,93,94,96,97,98,99,100,101,106,107,110,111,115,117,118,119,140,141,143,178,189,190,192,194,195,196,199,209,234,253,256,257,274,288,313,314,315,317,330,344,],[-174,-63,-44,-49,-43,-53,-42,-29,-50,-30,-61,-41,-33,-46,-34,-28,-174,-31,-45,-52,-51,-57,-60,-64,-40,-37,-35,-39,260,-27,-55,-38,-68,-62,-174,-174,-36,-67,-58,-48,-47,-26,-32,-59,-54,]),'KEY_NIL':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-82,-77,-79,-78,-83,-76,116,-81,-80,116,116,-71,116,-72,-70,-69,116,-73,116,-74,-75,116,116,116,116,116,116,116,116,]),'KEY_FOPEN':([151,],[236,]),'KEY_REAL':([34,45,58,60,80,81,83,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,174,177,180,181,182,183,184,185,186,187,188,191,226,238,239,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,305,310,321,336,337,349,],[117,117,117,117,117,162,162,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,162,117,-82,-77,-79,-78,-83,-76,117,-81,-80,117,117,162,162,-71,117,-72,-70,-69,117,-73,117,-74,-75,117,117,117,117,117,162,162,117,162,117,117,]),'VCHAR':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,180,181,182,183,184,185,186,187,188,191,226,258,259,260,261,262,263,266,267,268,269,273,280,284,285,294,321,337,349,359,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-82,-77,-79,-78,-83,-76,118,-81,-80,118,118,-71,118,-72,-70,-69,118,-73,118,-74,-75,118,118,118,118,118,118,118,118,118,]),'KEY_READBOOL':([12,22,23,127,130,176,211,214,220,252,275,283,347,351,363,366,367,372,374,377,378,380,],[-174,-16,75,-15,-174,-174,-174,75,-174,75,75,75,-174,-174,75,75,-174,-174,75,75,-174,75,]),'IDENT':([1,7,8,9,12,13,14,15,16,17,18,19,22,23,34,45,58,60,66,69,79,80,81,82,83,84,85,86,88,95,102,104,108,109,112,113,114,121,122,123,124,125,127,129,130,131,132,133,134,135,137,139,142,144,145,147,148,149,150,152,158,165,174,176,177,180,181,182,183,184,185,186,187,188,191,201,211,214,220,225,226,238,239,242,252,258,259,260,261,262,263,266,267,268,269,273,275,280,283,284,285,294,296,297,305,307,308,310,311,312,321,336,337,338,347,349,350,351,363,366,367,372,374,377,378,380,],[3,-174,-174,-174,-174,25,-8,26,-10,-12,29,31,-16,78,78,78,78,78,143,146,-7,78,166,-9,166,170,-11,172,175,78,78,78,78,78,78,78,78,78,78,78,78,78,-15,78,-174,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,29,166,-174,78,-82,-77,-79,-78,-83,-76,78,-81,-80,78,78,-174,78,-174,78,78,166,166,78,78,-71,78,-72,-70,-69,78,-73,78,-74,-75,78,78,78,78,78,78,78,78,335,166,29,172,166,343,-121,78,166,78,29,-174,78,78,-174,78,78,-174,-174,78,78,-174,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fileStatement':([23,214,252,275,283,363,366,374,377,380,],[36,36,36,36,36,36,36,36,36,36,]),'case':([223,286,328,],[286,328,328,]),'comass':([241,],[301,]),'procss':([6,89,],[10,10,]),'formalss':([171,],[247,]),'mulOperator':([194,],[259,]),'conss':([7,],[13,]),'statementSequence':([12,130,176,211,220,347,351,367,372,378,],[23,214,252,275,283,363,366,374,377,380,]),'ioStatement':([23,214,252,275,283,363,366,374,377,380,],[39,39,39,39,39,39,39,39,39,39,]),'pointerType':([81,83,174,238,239,305,310,336,],[161,161,161,161,161,161,161,161,]),'varss':([9,],[18,]),'procedureHeading':([10,],[21,]),'memoryalloc':([23,214,252,275,283,363,366,374,377,380,],[43,43,43,43,43,43,43,43,43,43,]),'statement':([23,214,252,275,283,363,366,374,377,380,],[44,44,44,44,44,44,44,44,44,44,]),'char':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,186,191,226,259,263,267,273,280,284,285,294,321,337,349,359,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,369,]),'arrayType':([81,83,174,238,239,305,310,336,],[164,164,164,164,164,164,164,164,]),'setStatement':([23,214,252,275,283,363,366,374,377,380,],[49,49,49,49,49,49,49,49,49,49,]),'identdef':([23,34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,133,134,135,137,139,142,144,145,147,148,149,150,152,158,177,186,191,201,214,225,226,242,252,259,263,267,273,275,280,283,284,285,294,296,321,337,349,350,363,366,374,377,380,],[76,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,219,99,99,227,99,229,99,99,99,99,99,99,99,99,99,99,76,288,99,99,76,99,99,99,99,76,99,76,99,99,99,334,99,99,99,99,76,76,76,76,76,]),'fpSection':([86,308,],[171,341,]),'empty':([4,6,7,8,9,12,23,33,64,89,111,120,130,165,171,172,176,179,200,211,214,220,241,252,253,256,275,283,286,307,328,338,347,351,363,366,367,372,374,377,378,380,],[5,11,14,16,17,22,51,5,141,11,195,202,22,243,248,250,22,202,202,22,51,22,302,51,195,195,51,324,329,243,329,243,22,22,51,51,22,22,51,51,22,51,]),'doWhileStatement':([23,214,252,275,283,363,366,374,377,380,],[53,53,53,53,53,53,53,53,53,53,]),'ifss':([283,],[323,]),'set':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,186,191,226,259,263,267,273,280,284,285,294,321,337,349,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'boolean':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,186,191,226,259,263,267,273,280,284,285,294,321,337,349,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'casess':([286,328,],[327,354,]),'designator2':([64,],[140,]),'addOperator':([203,254,264,],[267,267,267,]),'simpleExpression':([34,45,58,60,80,109,112,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,186,191,226,263,273,280,284,285,294,321,337,349,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,255,103,103,103,103,103,103,103,103,103,103,103,]),'fps':([172,],[249,]),'factor':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,186,191,226,259,263,267,273,280,284,285,294,321,337,349,],[111,111,111,111,111,178,111,189,192,111,111,199,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,253,111,256,111,315,111,111,111,111,111,111,111,111,111,111,]),'formalParameters':([31,],[87,]),'forStatement':([23,214,252,275,283,363,366,374,377,380,],[57,57,57,57,57,57,57,57,57,57,]),'typess':([8,],[15,]),'designator':([23,34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,137,139,144,147,149,152,158,177,186,191,201,214,226,252,259,263,267,273,275,280,283,284,285,294,321,337,349,350,363,366,374,377,380,],[42,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,221,107,107,231,107,107,107,107,107,107,265,42,107,42,107,107,107,107,42,107,42,107,107,107,107,107,107,221,42,42,42,42,42,]),'whileStatement':([23,214,252,275,283,363,366,374,377,380,],[61,61,61,61,61,61,61,61,61,61,]),'ifStatement':([23,214,252,275,283,363,366,374,377,380,],[62,62,62,62,62,62,62,62,62,62,]),'actualParameters':([42,107,],[126,190,]),'number':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,186,191,226,259,263,267,273,280,284,285,294,321,337,349,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'expression':([34,45,58,60,80,109,112,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,191,226,263,273,280,284,285,294,321,337,349,],[105,128,136,138,153,193,197,204,205,206,207,208,212,215,216,218,224,228,233,237,240,193,193,208,197,319,322,325,326,333,345,240,364,]),'fieldListSequence':([165,338,],[245,362,]),'procedureBody':([33,],[88,]),'declarationSequence':([4,33,],[6,89,]),'element':([112,263,],[198,316,]),'qualident':([23,34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,133,134,137,139,144,147,148,149,150,152,158,177,186,191,201,214,226,242,252,259,263,267,273,275,280,283,284,285,294,321,337,349,350,363,366,374,377,380,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,217,64,64,64,64,64,232,64,234,64,64,64,64,64,64,64,64,303,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'variableDeclaration':([18,],[30,]),'typeDeclaration':([15,],[27,]),'constantDeclaration':([13,],[24,]),'module':([0,],[2,]),'type':([81,83,174,238,239,305,310,336,],[167,169,251,299,300,339,342,360,]),'simpless':([120,179,200,],[203,254,264,]),'baseType':([242,],[304,]),'assignment':([23,137,214,252,275,283,350,363,366,374,377,380,],[72,222,72,72,72,72,365,72,72,72,72,72,]),'identList':([18,165,307,338,],[28,244,244,244,]),'varType':([81,83,174,238,239,305,310,336,],[163,163,163,163,163,163,163,163,]),'expList':([125,226,],[210,289,]),'termss':([111,253,256,],[194,194,194,]),'procedureCall':([23,214,252,275,283,363,366,374,377,380,],[73,73,73,73,73,73,73,73,73,73,]),'switchStatement':([23,214,252,275,283,363,366,374,377,380,],[74,74,74,74,74,74,74,74,74,74,]),'fieldList':([165,307,338,],[246,340,246,]),'length':([158,337,],[241,361,]),'relation':([103,],[186,]),'term':([34,45,58,60,80,102,109,112,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,186,191,226,263,267,273,280,284,285,294,321,337,349,],[120,120,120,120,120,179,120,120,200,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,318,120,120,120,120,120,120,120,120,]),'string':([34,45,58,60,80,95,102,104,108,109,112,113,114,121,122,123,124,125,129,131,132,134,139,144,149,152,158,177,186,191,226,259,263,267,273,280,284,285,290,292,294,321,337,349,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,331,332,115,115,115,115,]),'procedureDeclaration':([10,],[20,]),'recordType':([81,83,174,238,239,305,310,336,],[168,168,168,168,168,168,168,168,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> empty','conss',1,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> empty','typess',1,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> empty','varss',1,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> empty','procss',1,'p_procss','par.py',61),
  ('statementSequence -> statementSequence statement SCOLON','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> empty','statementSequence',1,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> boolean','factor',1,'p_factor','par.py',108),
  ('factor -> char','factor',1,'p_factor','par.py',109),
  ('factor -> string','factor',1,'p_factor','par.py',110),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',111),
  ('factor -> set','factor',1,'p_factor','par.py',112),
  ('factor -> designator','factor',1,'p_factor','par.py',113),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',114),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',115),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',127),
  ('number -> VINTEGER','number',1,'p_number','par.py',132),
  ('number -> VREAL','number',1,'p_number','par.py',133),
  ('boolean -> VBOOLEAN','boolean',1,'p_boolean','par.py',138),
  ('char -> VCHAR','char',1,'p_char','par.py',143),
  ('string -> VSTRING','string',1,'p_string','par.py',148),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',153),
  ('set -> LCB RCB','set',2,'p_set','par.py',154),
  ('element -> expression','element',1,'p_element','par.py',159),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',164),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',169),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',170),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',171),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',176),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',177),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',182),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',183),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',188),
  ('expList -> expression','expList',1,'p_expList','par.py',189),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',194),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',195),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',200),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',201),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',202),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',203),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',208),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',209),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',210),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',215),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',216),
  ('relation -> LT','relation',1,'p_relation','par.py',217),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',218),
  ('relation -> GT','relation',1,'p_relation','par.py',219),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',220),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',221),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',222),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',227),
  ('type -> IDENT','type',1,'p_type','par.py',232),
  ('type -> varType','type',1,'p_type','par.py',233),
  ('type -> arrayType','type',1,'p_type','par.py',234),
  ('type -> recordType','type',1,'p_type','par.py',235),
  ('type -> pointerType','type',1,'p_type','par.py',236),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',241),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',242),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',243),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',244),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',245),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',246),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',251),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',256),
  ('comass -> empty','comass',1,'p_comass','par.py',257),
  ('length -> expression','length',1,'p_length','par.py',262),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',267),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',268),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',273),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',278),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',279),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',284),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',285),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',290),
  ('identList -> IDENT','identList',1,'p_identList','par.py',291),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',296),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',302),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',312),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',313),
  ('formalParameters -> LRB fpSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',318),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',319),
  ('formalss -> formalss SCOLON fpSection','formalss',3,'p_formalss','par.py',324),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',325),
  ('fpSection -> IDENT fps COLON type','fpSection',4,'p_fpSection','par.py',330),
  ('fps -> fps COMMA IDENT','fps',3,'p_fps','par.py',335),
  ('fps -> empty','fps',1,'p_fps','par.py',336),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',341),
  ('statement -> assignment','statement',1,'p_statement','par.py',346),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',347),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',348),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',349),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',350),
  ('statement -> forStatement','statement',1,'p_statement','par.py',351),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',354),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',355),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',356),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',357),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',358),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',359),
  ('statement -> empty','statement',1,'p_statement','par.py',360),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',361),
  ('statement -> setStatement','statement',1,'p_statement','par.py',362),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',367),
  ('setStatement -> KEY_ADD LRB qualident COMMA expression RRB','setStatement',6,'p_setStatement','par.py',372),
  ('setStatement -> KEY_DEL LRB qualident COMMA expression RRB','setStatement',6,'p_setStatement','par.py',373),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',379),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',385),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',386),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',391),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',392),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',397),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',398),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',403),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',404),
  ('casess -> case casess','casess',2,'p_casess','par.py',409),
  ('casess -> empty','casess',1,'p_casess','par.py',410),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',415),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',420),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',425),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',430),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',435),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',441),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',442),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',443),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',444),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',445),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',446),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB IDENT COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',451),
  ('fileStatement -> identdef EQUAL KEY_FREAD LRB identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',452),
  ('fileStatement -> KEY_FWRITE LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',453),
  ('fileStatement -> KEY_FAPPEND LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',454),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',455),
  ('empty -> <empty>','empty',0,'p_empty','par.py',460),
]
