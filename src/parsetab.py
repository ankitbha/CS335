
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence SCOLON statement\n\t\t\t\t\t\t\t  | statement\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB FPSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON FPSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tFPSection : IDENT FPs COLON type\n\t\t\n\t\t\tFPs : FPs COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : casess OR case\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE COLON expression statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_DO KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO statementSequence KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {end':([1,229,],[0,-1,]),'KEY_CHAR':([21,24,34,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,119,123,138,139,140,141,142,143,144,145,146,165,172,178,188,200,201,202,203,204,208,209,210,211,212,219,223,234,238,249,273,282,291,294,295,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,190,86,-79,-74,-77,86,-78,-76,-73,-80,-75,86,86,190,86,86,-70,86,-71,-72,-69,-68,86,-67,-66,86,86,190,190,86,190,86,190,190,86,]),'VREAL':([21,24,34,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,123,138,139,140,141,142,143,144,145,146,165,172,188,200,201,202,203,204,208,209,210,211,212,219,223,249,282,295,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-79,-74,-77,87,-78,-76,-73,-80,-75,87,87,87,87,-70,87,-71,-72,-69,-68,87,-67,-66,87,87,87,87,87,]),'KEY_READ':([8,18,35,38,64,66,67,68,69,70,71,75,78,79,80,81,82,83,84,85,86,87,88,89,103,105,108,110,126,129,130,131,132,133,134,135,136,147,148,149,151,157,168,205,206,207,213,220,222,227,235,251,252,259,260,280,281,283,300,314,322,],[27,27,-60,-158,-45,-41,-31,-158,-29,-30,-44,-33,-58,-43,-28,-32,-18,-40,-48,-158,-42,-47,-49,-46,-57,-53,-61,27,-38,-51,-24,-21,-36,-37,-39,-34,-158,-25,-27,-158,27,-65,-59,-20,-35,-19,-22,-64,27,-54,27,-23,-26,-56,-55,27,-50,27,27,27,27,]),'KEY_THEN':([35,38,64,66,67,68,69,70,71,75,78,79,80,81,82,83,84,85,86,87,88,89,92,103,105,108,126,129,130,131,132,133,134,135,136,147,148,149,157,168,205,206,207,213,220,227,251,252,259,260,281,302,],[-60,-158,-45,-41,-31,-158,-29,-30,-44,-33,-58,-43,-28,-32,-18,-40,-48,-158,-42,-47,-49,-46,151,-57,-53,-61,-38,-51,-24,-21,-36,-37,-39,-34,-158,-25,-27,-158,-65,-59,-20,-35,-19,-22,-64,-54,-23,-26,-56,-55,-50,314,]),'KEY_ARRAY':([119,178,234,238,273,291,294,],[188,188,188,188,188,188,188,]),'KEY_PROCEDURE':([4,5,6,7,9,10,11,12,13,14,49,50,54,55,115,116,121,171,175,177,],[-158,-6,-158,-158,-158,-14,51,-158,-4,-12,-2,-8,-3,-10,-158,-13,-11,-7,-158,-9,]),'KEY_CASE':([125,278,],[199,199,]),'VINTEGER':([21,24,34,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,123,138,139,140,141,142,143,144,145,146,165,172,188,200,201,202,203,204,208,209,210,211,212,219,223,249,282,285,295,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-79,-74,-77,89,-78,-76,-73,-80,-75,89,89,89,89,-70,89,-71,-72,-69,-68,89,-67,-66,89,89,89,89,304,89,]),'KEY_INTEGER':([21,24,34,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,119,123,138,139,140,141,142,143,144,145,146,165,172,178,188,200,201,202,203,204,208,209,210,211,212,219,223,234,238,249,273,282,291,294,295,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,187,83,-79,-74,-77,83,-78,-76,-73,-80,-75,83,83,187,83,83,-70,83,-71,-72,-69,-68,83,-67,-66,83,83,187,187,83,187,83,187,187,83,]),'MINUS':([21,24,34,35,38,48,59,64,65,66,67,68,69,70,71,75,77,78,79,80,81,83,84,85,86,87,88,89,91,94,95,96,97,99,103,105,108,123,126,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,157,165,168,172,188,200,205,206,213,219,220,223,227,249,251,252,259,260,281,282,295,],[90,90,90,-60,-158,90,90,-45,90,-41,-31,-158,-29,-30,-44,-33,90,-58,-43,-28,-32,-40,-48,-158,-42,-47,-49,-46,90,90,90,90,90,90,-57,-53,-61,90,-38,-51,-24,203,-36,-37,-39,-34,-158,-79,-74,-77,90,-78,-76,-73,-80,-75,-25,-27,-158,-65,90,-59,90,90,90,203,-35,203,90,-64,90,-54,90,-23,-26,-56,-55,-50,90,90,]),'KEY_OF':([35,38,64,66,67,68,69,70,71,75,78,79,80,81,82,83,84,85,86,87,88,89,103,105,108,126,129,130,131,132,133,134,135,136,147,148,149,157,168,205,206,207,213,220,227,239,240,251,252,259,260,269,270,281,311,],[-60,-158,-45,-41,-31,-158,-29,-30,-44,-33,-58,-43,-28,-32,-18,-40,-48,-158,-42,-47,-49,-46,-57,-53,-61,-38,-51,-24,-21,-36,-37,-39,-34,-158,-25,-27,-158,-65,-59,-20,-35,-19,-22,-64,-54,-96,-158,-23,-26,-56,-55,-95,294,-50,-94,]),'KEY_RETURN':([8,18,35,38,64,66,67,68,69,70,71,75,78,79,80,81,82,83,84,85,86,87,88,89,103,105,108,110,126,129,130,131,132,133,134,135,136,147,148,149,151,157,168,205,206,207,213,220,222,227,235,251,252,259,260,280,281,283,300,314,322,],[48,48,-60,-158,-45,-41,-31,-158,-29,-30,-44,-33,-58,-43,-28,-32,-18,-40,-48,-158,-42,-47,-49,-46,-57,-53,-61,48,-38,-51,-24,-21,-36,-37,-39,-34,-158,-25,-27,-158,48,-65,-59,-20,-35,-19,-22,-64,48,-54,48,-23,-26,-56,-55,48,-50,48,48,48,48,]),'KEY_END':([8,15,17,19,23,25,28,30,32,33,35,38,39,40,41,43,44,45,46,47,48,64,66,67,68,69,70,71,75,78,79,80,81,82,83,84,85,86,87,88,89,98,103,105,108,110,111,126,129,130,131,132,133,134,135,136,147,148,149,151,157,158,168,170,181,182,183,184,185,186,187,189,190,191,192,193,195,196,198,205,206,207,213,214,215,217,218,220,221,222,224,227,235,243,244,245,247,248,251,252,253,254,257,259,260,267,268,274,275,276,277,280,281,283,284,286,296,297,298,299,300,301,303,310,312,313,314,315,316,318,319,320,321,322,323,324,],[-158,-124,-129,-125,-130,-119,-16,-136,-123,-133,-60,-158,-122,-121,-58,-131,-126,-132,109,-120,-128,-45,-41,-31,-158,-29,-30,-44,-33,-58,-43,-28,-32,-18,-40,-48,-158,-42,-47,-49,-46,-135,-57,-53,-61,-158,-127,-38,-51,-24,-21,-36,-37,-39,-34,-158,-25,-27,-158,-158,-65,-134,-59,-15,-82,-86,-90,-92,-88,-84,-87,-158,-89,-85,-91,-83,-150,-148,-158,-20,-35,-19,-22,-152,-158,-153,-149,-64,-151,-158,-155,-54,-158,-101,-103,274,-144,277,-23,-26,-140,284,286,-56,-55,293,-106,-97,-158,-156,-142,-158,-50,-158,-138,-146,-158,-102,-100,-143,-158,-145,315,-93,319,320,-158,-137,-157,-154,-98,-141,-139,-158,324,-147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'forStatement':([8,18,110,151,222,235,280,283,300,314,322,],[15,15,15,15,15,15,15,15,15,15,15,]),'procedureHeading':([11,],[52,]),'fieldList':([189,275,296,],[243,298,243,]),'actualParameters':([30,75,],[98,135,]),'expression':([21,24,34,48,59,65,77,91,94,95,96,97,99,123,165,172,188,200,219,223,249,282,295,],[62,92,100,111,122,127,137,150,153,154,155,158,159,196,155,230,239,127,256,258,280,302,239,]),'termss':([85,],[147,]),'pointerType':([119,178,234,238,273,291,294,],[182,182,182,182,182,182,182,]),'fieldListSequence':([189,296,],[245,312,]),'doWhileStatement':([8,18,110,151,222,235,280,283,300,314,322,],[19,19,19,19,19,19,19,19,19,19,19,]),'module':([0,],[1,]),'typess':([12,],[54,]),'typeDeclaration':([54,],[117,]),'length':([188,295,],[240,311,]),'variableDeclaration':([13,],[58,]),'simpleExpression':([21,24,34,48,59,65,77,91,94,95,96,97,99,123,141,165,172,188,200,219,223,249,282,295,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,207,82,82,82,82,82,82,82,82,82,]),'fileStatement':([8,18,110,151,222,235,280,283,300,314,322,],[23,23,23,23,23,23,23,23,23,23,23,]),'constantDeclaration':([49,],[112,]),'term':([21,24,34,48,59,65,76,77,90,91,94,95,96,97,99,123,141,165,172,188,200,202,219,223,249,282,295,],[68,68,68,68,68,68,136,68,149,68,68,68,68,68,68,68,68,68,68,68,68,251,68,68,68,68,68,]),'formalParameters':([114,],[174,]),'string':([21,24,34,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,123,141,165,172,188,197,200,202,210,219,223,228,249,282,295,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,246,70,70,70,70,70,261,70,70,70,]),'ioStatement':([8,18,110,151,222,235,280,283,300,314,322,],[17,17,17,17,17,17,17,17,17,17,17,]),'baseType':([241,],[271,]),'procss':([6,175,],[11,11,]),'expList':([96,165,],[156,226,]),'arrayType':([119,178,234,238,273,291,294,],[186,186,186,186,186,186,186,]),'statement':([8,18,110,151,222,235,280,283,300,314,322,],[28,28,170,28,28,28,28,28,28,28,28,]),'mulOperator':([147,],[210,]),'set':([21,24,34,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,123,141,165,172,188,200,202,210,219,223,249,282,295,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'casess':([198,],[248,]),'conss':([9,],[49,]),'varType':([119,178,234,238,273,291,294,],[193,193,193,193,193,193,193,]),'comass':([240,],[270,]),'identdef':([8,18,21,24,34,38,48,59,61,63,65,72,73,74,76,77,90,91,93,94,95,96,97,99,101,102,107,110,123,141,151,164,165,166,172,188,200,202,210,216,219,222,223,235,241,249,280,282,283,287,295,300,314,322,],[41,41,78,78,78,78,78,78,124,78,78,78,78,78,78,78,78,78,152,78,78,78,78,78,78,163,78,41,78,78,41,78,78,227,78,78,78,78,78,255,78,41,78,41,78,78,41,78,41,78,78,41,41,41,]),'whileStatement':([8,18,110,151,222,235,280,283,300,314,322,],[32,32,32,32,32,32,32,32,32,32,32,]),'type':([119,178,234,238,273,291,294,],[179,237,266,268,297,308,310,]),'number':([21,24,34,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,123,141,165,172,188,200,202,210,219,223,249,282,295,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'procedureDeclaration':([11,],[53,]),'addOperator':([131,205,213,],[202,202,202,]),'relation':([82,],[141,]),'designator':([8,18,21,24,34,38,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,101,110,123,141,151,165,172,188,200,202,210,219,222,223,235,249,280,282,283,287,295,300,314,322,],[30,30,75,75,75,104,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,162,30,75,75,30,75,75,75,75,75,75,75,30,75,30,75,30,75,30,162,75,30,30,30,]),'case':([125,278,],[198,299,]),'designator2':([38,],[105,]),'qualident':([8,18,21,24,34,38,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,101,107,110,123,141,151,164,165,172,188,200,202,210,219,222,223,235,241,249,280,282,283,287,295,300,314,322,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,168,38,38,38,38,225,38,38,38,38,38,38,38,38,38,38,272,38,38,38,38,38,38,38,38,38,]),'assignment':([8,18,101,110,151,222,235,280,283,287,300,314,322,],[25,25,161,25,25,25,25,25,25,305,25,25,25,]),'identList':([13,189,275,296,],[56,242,242,242,]),'FPSection':([173,290,],[231,307,]),'varss':([7,],[13,]),'element':([65,200,],[128,250,]),'ifStatement':([8,18,110,151,222,235,280,283,300,314,322,],[40,40,40,40,40,40,40,40,40,40,40,]),'recordType':([119,178,234,238,273,291,294,],[191,191,191,191,191,191,191,]),'simpless':([68,136,149,],[131,205,213,]),'FPs':([233,],[265,]),'formalss':([231,],[262,]),'factor':([21,24,34,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,123,141,165,172,188,200,202,210,219,223,249,282,295,],[85,85,85,85,85,126,85,132,133,134,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,252,85,85,85,85,85,]),'char':([21,24,34,48,59,63,65,72,73,74,76,77,90,91,94,95,96,97,99,123,141,165,172,188,200,202,210,219,223,249,282,288,295,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,306,69,]),'procedureBody':([115,],[176,]),'declarationSequence':([4,115,],[6,175,]),'statementSequence':([8,18,151,222,235,280,283,300,314,322,],[46,60,215,257,267,301,303,313,321,323,]),'procedureCall':([8,18,110,151,222,235,280,283,300,314,322,],[47,47,47,47,47,47,47,47,47,47,47,]),'switchStatement':([8,18,110,151,222,235,280,283,300,314,322,],[39,39,39,39,39,39,39,39,39,39,39,]),'ifss':([215,],[254,]),'empty':([4,6,7,8,9,12,18,38,68,85,110,115,136,149,151,175,189,198,215,222,231,233,235,240,275,280,283,296,300,314,322,],[5,10,14,33,50,55,33,103,130,148,33,5,130,130,33,10,244,247,253,33,263,264,33,269,244,33,33,244,33,33,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',30),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',36),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',37),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',38),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',39),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',44),
  ('conss -> empty','conss',1,'p_conss','par.py',45),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',50),
  ('typess -> empty','typess',1,'p_typess','par.py',51),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',56),
  ('varss -> empty','varss',1,'p_varss','par.py',57),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',62),
  ('procss -> empty','procss',1,'p_procss','par.py',63),
  ('statementSequence -> statementSequence SCOLON statement','statementSequence',3,'p_statementSequence','par.py',68),
  ('statementSequence -> statement','statementSequence',1,'p_statementSequence','par.py',69),
  ('constantDeclaration -> IDENT ASSIGN expression','constantDeclaration',3,'p_constantDeclaration','par.py',74),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',79),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',80),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',86),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',87),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',92),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',93),
  ('term -> factor termss','term',2,'p_term','par.py',98),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',103),
  ('termss -> empty','termss',1,'p_termss','par.py',104),
  ('factor -> number','factor',1,'p_factor','par.py',109),
  ('factor -> char','factor',1,'p_factor','par.py',110),
  ('factor -> string','factor',1,'p_factor','par.py',111),
  ('factor -> KEY_NIL','factor',1,'p_factor','par.py',112),
  ('factor -> set','factor',1,'p_factor','par.py',113),
  ('factor -> designator','factor',1,'p_factor','par.py',114),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',115),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',116),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',120),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',163),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',164),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB FPSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON FPSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('FPSection -> IDENT FPs COLON type','FPSection',4,'p_FPSection','par.py',325),
  ('FPs -> FPs COMMA IDENT','FPs',3,'p_FPs','par.py',330),
  ('FPs -> empty','FPs',1,'p_FPs','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',360),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',365),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',366),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',371),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',372),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',377),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',378),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',383),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',384),
  ('casess -> casess OR case','casess',3,'p_casess','par.py',389),
  ('casess -> empty','casess',1,'p_casess','par.py',390),
  ('case -> KEY_CASE COLON expression statementSequence','case',4,'p_case','par.py',395),
  ('whileStatement -> KEY_WHILE expression KEY_DO KEY_BEGIN statementSequence KEY_END','whileStatement',6,'p_whileStatement','par.py',400),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',405),
  ('doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression','doWhileStatement',4,'p_doWhileStatement','par.py',410),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',415),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',416),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',417),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',418),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',419),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',424),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',425),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',426),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',427),
  ('empty -> <empty>','empty',0,'p_empty','par.py',432),
]
