
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DO KEY_ELSE KEY_ELSIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITELN LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON KEY_BEGIN ifStatement KEY_END IDENT DOT\n\t\t\n\t\t\tifStatement  :  KEY_IF LCB KEY_THEN RCB KEY_END\n\t\t\t\t\t\t\t| KEY_IF LCB KEY_ELSE RCB KEY_END\n\t\t'
    
_lr_action_items = {'LCB':([7,],[9,]),'RCB':([11,12,],[14,15,]),'IDENT':([2,8,],[3,10,]),'KEY_MODULE':([0,],[2,]),'SCOLON':([3,],[4,]),'KEY_ELSE':([9,],[12,]),'KEY_THEN':([9,],[11,]),'$end':([1,13,],[0,-1,]),'KEY_END':([6,14,15,16,17,],[8,16,17,-2,-3,]),'KEY_IF':([5,],[7,]),'KEY_BEGIN':([4,],[5,]),'DOT':([10,],[13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'ifStatement':([5,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON KEY_BEGIN ifStatement KEY_END IDENT DOT','module',8,'p_module','par.py',30),
  ('ifStatement -> KEY_IF LCB KEY_THEN RCB KEY_END','ifStatement',5,'p_ifStatement','par.py',34),
  ('ifStatement -> KEY_IF LCB KEY_ELSE RCB KEY_END','ifStatement',5,'p_ifStatement','par.py',35),
]
