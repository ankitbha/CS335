
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence SCOLON statement\n\t\t\t\t\t\t\t  | statement\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB fpSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON fpSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tfpSection : IDENT fps COLON type\n\t\t\n\t\t\tfps : fps COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : qualident DOT KEY_ADD LRB expression RRB\n\t\t\t\t\t\t | qualident DOT KEY_DEL LRB expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_POINTER':([200,209,277,304,312,337,346,356,],[258,258,258,258,258,258,258,258,]),'VINTEGER':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,281,324,333,355,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-82,-75,109,-81,-77,-76,-80,-79,-78,109,109,109,109,109,109,-74,-72,-73,-70,109,-71,-69,-68,109,109,109,109,350,109,109,]),'KEY_DO':([7,66,117,184,198,279,329,331,351,368,372,],[17,17,17,17,17,17,17,17,17,17,17,]),'IDENT':([1,7,9,10,12,19,21,33,40,42,47,49,55,56,57,58,59,60,63,64,65,66,67,68,72,74,75,76,77,79,80,81,82,84,85,86,90,91,97,103,106,107,113,114,115,116,117,118,119,121,123,124,125,141,142,143,156,162,165,167,175,176,177,178,179,180,181,182,183,184,198,199,200,201,202,203,204,206,208,209,217,218,220,221,226,232,233,234,235,236,237,238,239,240,245,252,269,272,277,279,281,304,311,312,322,329,331,333,337,338,343,345,346,347,351,355,356,359,368,372,],[3,19,-172,-172,-172,-62,19,-60,19,115,19,19,19,127,-12,131,-8,132,136,-10,19,19,19,19,-60,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-63,19,19,191,19,19,19,19,19,19,19,19,-61,19,19,19,-82,-75,19,-81,-77,-76,-80,-79,-78,19,19,257,261,-11,-7,19,275,278,-9,261,19,19,19,19,19,19,-74,-72,-73,-70,19,-71,-69,-68,19,19,19,127,261,19,19,261,19,261,19,19,19,19,261,127,275,361,261,-120,19,19,261,127,19,19,]),'VSTRING':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,225,232,233,234,235,236,237,238,239,240,245,252,253,269,281,333,355,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-82,-75,95,-81,-77,-76,-80,-79,-78,95,95,95,95,95,95,95,-74,-72,-73,-70,95,-71,-69,-68,95,95,95,95,95,95,95,]),'OR':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,109,110,111,115,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,229,231,241,242,282,283,290,291,292,293,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-48,-42,-32,-63,-67,-61,-172,-39,-37,-34,-38,-24,233,-36,-27,-25,-172,-53,-56,-66,233,-172,-172,-35,233,-58,-57,-47,-31,-46,-23,-26,-52,]),'KEY_DEL':([73,],[144,]),'KEY_ELSE':([13,14,16,19,21,22,24,26,27,28,29,30,33,34,37,38,39,44,47,51,52,70,71,72,74,78,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,117,120,146,150,152,156,160,161,163,164,166,168,169,170,171,172,174,187,190,198,210,212,213,215,219,222,223,224,227,228,241,242,243,246,247,249,250,251,254,255,256,282,283,290,291,292,293,294,295,297,298,299,302,303,319,320,321,325,326,328,329,330,332,352,364,365,367,368,373,374,377,],[-127,-135,-16,-62,-172,-124,-137,-143,-132,-131,-136,-133,-60,-121,-123,-126,-125,-134,-130,-128,-122,-55,-59,-60,-172,-142,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,-172,-129,-162,-138,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-15,-172,-169,-167,-157,-56,-161,-66,-159,-141,-165,-22,-35,-20,-19,-156,-160,-158,-166,-172,-164,-163,-172,-58,-57,-47,-31,-46,-23,-26,-153,-151,-172,327,331,-147,-155,-140,-139,-52,-150,-149,-172,-170,-145,-152,-168,-171,-144,-172,-148,-146,-154,]),'KEY_CONST':([4,5,6,8,9,10,11,12,56,57,58,59,63,64,133,134,201,202,207,208,],[-172,-6,10,-14,-172,-172,-5,-172,-4,-12,-2,-8,-3,-10,-13,-172,-11,-7,10,-9,]),'KEY_ORD':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,281,333,355,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-82,-75,90,-81,-77,-76,-80,-79,-78,90,90,90,90,90,90,-74,-72,-73,-70,90,-71,-69,-68,90,90,90,90,90,90,]),'KEY_FOR':([7,66,117,184,198,279,329,331,351,368,372,],[25,25,25,25,25,25,25,25,25,25,25,]),'LSB':([19,21,33,70,71,72,74,115,156,215,282,283,],[-62,-172,-60,143,-59,-60,-172,-63,-61,-56,-58,-57,]),'KEY_SET':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,200,203,209,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,277,281,304,312,333,337,346,355,356,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-82,-75,93,-81,-77,-76,-80,-79,-78,268,93,268,93,93,93,93,93,-74,-72,-73,-70,93,-71,-69,-68,93,93,93,268,93,268,268,93,268,268,93,268,]),'$end':([2,248,],[0,-1,]),'MULTIPLY':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,102,104,105,109,110,111,115,152,156,161,163,164,166,170,171,172,187,215,222,229,231,241,282,283,290,291,292,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-40,-43,-172,-48,-42,-32,-63,-67,-61,-39,-37,-34,-38,-36,-27,240,-53,-56,-66,-172,-172,-35,-58,-57,-47,-31,-46,-26,-52,]),'KEY_BREAK':([7,66,117,184,198,279,329,331,351,368,372,],[30,30,30,30,30,30,30,30,30,30,30,]),'ASSIGN':([19,21,26,33,70,71,72,74,115,131,148,156,215,282,283,],[-62,-172,77,-60,-55,-59,-60,-172,-63,203,77,-61,-56,-58,-57,]),'KEY_NEW':([7,66,117,184,198,279,329,331,351,368,372,],[32,32,32,32,32,32,32,32,32,32,32,]),'KEY_NIL':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,281,333,355,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-82,-75,96,-81,-77,-76,-80,-79,-78,96,96,96,96,96,96,-74,-72,-73,-70,96,-71,-69,-68,96,96,96,96,96,96,]),'KEY_WRITECHAR':([7,66,117,184,198,279,329,331,351,368,372,],[31,31,31,31,31,31,31,31,31,31,31,]),'DIVIDE':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,102,104,105,109,110,111,115,152,156,161,163,164,166,170,171,172,187,215,222,229,231,241,282,283,290,291,292,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-40,-43,-172,-48,-42,-32,-63,-67,-61,-39,-37,-34,-38,-36,-27,239,-53,-56,-66,-172,-172,-35,-58,-57,-47,-31,-46,-26,-52,]),'KEY_INTEGER':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,200,203,209,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,277,281,304,312,333,337,346,355,356,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-82,-75,102,-81,-77,-76,-80,-79,-78,264,102,264,102,102,102,102,102,-74,-72,-73,-70,102,-71,-69,-68,102,102,102,264,102,264,264,102,264,264,102,264,]),'RSB':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,152,153,156,160,161,163,164,166,168,169,170,171,172,174,187,215,216,222,228,241,242,243,282,283,287,290,291,292,293,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,-67,-65,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,283,-66,-22,-35,-20,-19,-58,-57,-64,-47,-31,-46,-23,-26,-52,]),'KEY_MODULE':([0,],[1,]),'AT':([7,19,21,33,40,47,49,55,65,66,67,68,72,74,75,76,77,79,80,81,82,84,85,86,90,91,97,103,106,107,113,114,115,116,117,119,121,123,124,125,141,142,143,156,162,165,167,175,176,177,178,179,180,181,182,183,184,198,203,217,218,220,221,226,232,233,234,235,236,237,238,239,240,245,252,269,279,281,311,322,329,331,333,351,355,368,372,],[42,-62,42,-60,42,42,42,42,42,42,42,42,-60,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-63,42,42,42,42,42,42,42,42,42,42,-61,42,42,42,-82,-75,42,-81,-77,-76,-80,-79,-78,42,42,42,42,42,42,42,42,42,-74,-72,-73,-70,42,-71,-69,-68,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'KEY_WRITEBOOL':([7,66,117,184,198,279,329,331,351,368,372,],[43,43,43,43,43,43,43,43,43,43,43,]),'KEY_CONTINUE':([7,66,117,184,198,279,329,331,351,368,372,],[44,44,44,44,44,44,44,44,44,44,44,]),'KEY_BEGIN':([4,5,6,8,9,10,11,12,17,19,56,57,58,59,63,64,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,112,115,122,133,134,152,156,160,161,163,164,166,168,169,170,171,172,174,187,201,202,207,208,215,222,228,241,242,243,282,283,290,291,292,293,294,325,363,],[-172,-6,7,-14,-172,-172,-5,-172,66,-62,-4,-12,-2,-8,-3,-10,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,184,-63,194,-13,-172,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-11,-7,279,-9,-56,-66,-22,-35,-20,-19,-58,-57,-47,-31,-46,-23,-26,-52,372,]),'KEY_TYPE':([4,5,6,8,9,10,11,12,56,57,58,59,63,64,133,134,201,202,207,208,],[-172,-6,12,-14,-172,-172,-5,-172,-4,-12,-2,-8,-3,-10,-13,-172,-11,-7,12,-9,]),'KEY_WRITEREAL':([7,66,117,184,198,279,329,331,351,368,372,],[46,46,46,46,46,46,46,46,46,46,46,]),'MODULUS':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,102,104,105,109,110,111,115,152,156,161,163,164,166,170,171,172,187,215,222,229,231,241,282,283,290,291,292,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-40,-43,-172,-48,-42,-32,-63,-67,-61,-39,-37,-34,-38,-36,-27,236,-53,-56,-66,-172,-172,-35,-58,-57,-47,-31,-46,-26,-52,]),'PLUS':([19,40,47,49,55,67,68,70,71,72,74,75,77,79,80,85,87,88,89,92,93,94,95,98,99,100,101,102,104,105,106,109,110,111,113,114,115,116,119,121,124,125,143,152,156,160,161,162,163,164,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,187,203,215,217,218,220,221,222,228,229,231,241,242,245,252,269,281,282,283,290,291,292,293,294,325,333,355,],[-62,107,107,107,107,107,107,-55,-59,-60,-172,107,107,107,107,107,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,107,-48,-42,-32,107,107,-63,107,107,107,107,107,107,-67,-61,-172,-39,107,-37,-34,-38,107,-24,234,-36,-27,-25,-172,-82,-75,107,-81,-77,-76,-80,-79,-78,-53,107,-56,107,107,107,107,-66,234,-172,-172,-35,234,107,107,107,107,-58,-57,-47,-31,-46,-23,-26,-52,107,107,]),'COLON':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,127,128,152,156,160,161,163,164,166,168,169,170,171,172,174,187,205,215,222,228,241,242,243,257,273,275,276,282,283,290,291,292,293,294,300,309,315,316,325,327,344,361,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,-107,200,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,277,-56,-66,-22,-35,-20,-19,-106,312,-172,-114,-58,-57,-47,-31,-46,-23,-26,329,337,-119,346,-52,351,-113,-118,]),'MINUS':([19,40,47,49,55,67,68,70,71,72,74,75,77,79,80,85,87,88,89,92,93,94,95,98,99,100,101,102,104,105,106,109,110,111,113,114,115,116,119,121,124,125,143,152,156,160,161,162,163,164,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,187,203,215,217,218,220,221,222,228,229,231,241,242,245,252,269,281,282,283,290,291,292,293,294,325,333,355,],[-62,86,86,86,86,86,86,-55,-59,-60,-172,86,86,86,86,86,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,86,-48,-42,-32,86,86,-63,86,86,86,86,86,86,-67,-61,-172,-39,86,-37,-34,-38,86,-24,235,-36,-27,-25,-172,-82,-75,86,-81,-77,-76,-80,-79,-78,-53,86,-56,86,86,86,86,-66,235,-172,-172,-35,235,86,86,86,86,-58,-57,-47,-31,-46,-23,-26,-52,86,86,]),'KEY_ADD':([73,],[145,]),'LTEQ':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,229,231,241,242,282,283,290,291,292,293,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,183,-48,-42,-32,-63,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-172,-172,-35,-20,-58,-57,-47,-31,-46,-23,-26,-52,]),'KEY_SWITCH':([7,66,117,184,198,279,329,331,351,368,372,],[49,49,49,49,49,49,49,49,49,49,49,]),'KEY_RETURN':([7,66,117,184,198,279,329,331,351,368,372,],[47,47,47,47,47,47,47,47,47,47,47,]),'KEY_EXIT':([7,66,117,184,198,279,329,331,351,368,372,],[51,51,51,51,51,51,51,51,51,51,51,]),'KEY_OF':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,241,242,243,282,283,290,291,292,293,294,305,306,325,335,336,369,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-35,-20,-19,-58,-57,-47,-31,-46,-23,-26,-172,-98,-52,356,-97,-96,]),'KEY_READ':([7,66,117,184,198,279,329,331,351,368,372,],[54,54,54,54,54,54,54,54,54,54,54,]),'KEY_IF':([7,66,117,184,198,279,329,331,351,368,372,],[55,55,55,55,55,55,55,55,55,55,55,]),'RCB':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,113,115,152,156,160,161,163,164,166,168,169,170,171,172,174,185,187,215,222,228,241,242,243,282,283,290,291,292,293,294,296,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,187,-63,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-54,-53,-56,-66,-22,-35,-20,-19,-58,-57,-47,-31,-46,-23,-26,325,-52,]),'KEY_IN':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,229,231,241,242,282,283,290,291,292,293,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,178,-48,-42,-32,-63,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-172,-172,-35,-20,-58,-57,-47,-31,-46,-23,-26,-52,]),'KEY_FCLOSE':([7,66,117,184,198,279,329,331,351,368,372,],[15,15,15,15,15,15,15,15,15,15,15,]),'KEY_VAR':([4,5,6,8,9,10,11,12,56,57,58,59,63,64,133,134,201,202,207,208,],[-172,-6,9,-14,-172,-172,-5,-172,-4,-12,-2,-8,-3,-10,-13,-172,-11,-7,9,-9,]),'KEY_IS':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,229,231,241,242,282,283,290,291,292,293,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,175,-48,-42,-32,-63,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-172,-172,-35,-20,-58,-57,-47,-31,-46,-23,-26,-52,]),'KEY_WRITEINT':([7,66,117,184,198,279,329,331,351,368,372,],[20,20,20,20,20,20,20,20,20,20,20,]),'VREAL':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,281,333,355,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-82,-75,88,-81,-77,-76,-80,-79,-78,88,88,88,88,88,88,-74,-72,-73,-70,88,-71,-69,-68,88,88,88,88,88,88,]),'LCB':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,281,333,355,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-82,-75,113,-81,-77,-76,-80,-79,-78,113,113,113,113,113,113,-74,-72,-73,-70,113,-71,-69,-68,113,113,113,113,113,113,]),'KEY_WRITELN':([7,66,117,184,198,279,329,331,351,368,372,],[23,23,23,23,23,23,23,23,23,23,23,]),'SCOLON':([3,7,13,14,16,19,21,22,24,26,27,28,29,30,33,34,37,38,39,44,45,47,51,52,61,62,66,70,71,72,74,78,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,117,120,129,130,135,138,146,149,150,152,156,160,161,163,164,166,168,169,170,171,172,174,184,187,190,198,205,210,212,213,215,219,222,223,224,227,228,241,242,243,244,246,247,249,250,254,255,256,259,260,261,262,263,264,265,266,267,268,270,271,272,274,276,278,279,280,282,283,286,290,291,292,293,294,295,307,308,310,313,314,317,318,319,320,321,325,328,329,330,331,332,334,338,339,342,344,351,352,353,357,358,359,360,362,364,365,366,367,368,370,371,372,373,374,375,376,377,],[4,-172,-127,-135,-16,-62,-172,-124,-137,-143,-132,-131,-136,-133,-60,-121,-123,-126,-125,-134,117,-130,-128,-122,133,134,-172,-55,-59,-60,-172,-142,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,-172,-129,201,202,208,117,-162,220,-138,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-172,-53,-15,-172,-112,-169,-167,-157,-56,-161,-66,-159,-141,-165,-22,-35,-20,-19,117,-156,-160,-158,-166,-164,-163,117,-86,-92,-84,-91,-87,-89,-85,-93,-88,-94,-90,-109,-172,-172,-114,-110,-172,-83,-58,-57,322,-47,-31,-46,-23,-26,-153,-103,-105,338,343,-116,-111,117,-155,-140,-139,-52,-149,-172,-170,-172,-145,-108,-172,-99,-17,-113,-172,117,117,-104,-102,-172,-115,-117,-168,-171,117,-144,-172,-95,338,-172,-148,117,-100,117,-154,]),'KEY_ABS':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,281,333,355,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-82,-75,91,-81,-77,-76,-80,-79,-78,91,91,91,91,91,91,-74,-72,-73,-70,91,-71,-69,-68,91,91,91,91,91,91,]),'KEY_READREAL':([7,66,117,184,198,279,329,331,351,368,372,],[36,36,36,36,36,36,36,36,36,36,36,]),'KEY_THEN':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,126,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,241,242,243,282,283,290,291,292,293,294,325,354,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,198,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-35,-20,-19,-58,-57,-47,-31,-46,-23,-26,-52,368,]),'KEY_ELSEIF':([13,14,16,19,21,22,24,26,27,28,29,30,33,34,37,38,39,44,47,51,52,70,71,72,74,78,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,117,120,146,150,152,156,160,161,163,164,166,168,169,170,171,172,174,187,190,198,210,212,213,215,219,222,223,224,227,228,241,242,243,246,247,249,250,254,255,256,282,283,290,291,292,293,294,295,302,303,319,320,321,325,328,330,332,364,365,367,368,373,374,377,],[-127,-135,-16,-62,-172,-124,-137,-143,-132,-131,-136,-133,-60,-121,-123,-126,-125,-134,-130,-128,-122,-55,-59,-60,-172,-142,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,-172,-129,-162,-138,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-15,-172,-169,-167,-157,-56,-161,-66,-159,-141,-165,-22,-35,-20,-19,-156,-160,-158,-166,-164,-163,-172,-58,-57,-47,-31,-46,-23,-26,-153,333,-147,-155,-140,-139,-52,-149,-170,-145,-168,-171,-144,-172,-148,-146,-154,]),'GT':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,229,231,241,242,282,283,290,291,292,293,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,182,-48,-42,-32,-63,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-172,-172,-35,-20,-58,-57,-47,-31,-46,-23,-26,-52,]),'RRB':([19,70,71,72,74,75,79,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,137,139,140,147,150,151,152,153,154,155,156,159,160,161,163,164,166,168,169,170,171,172,173,174,187,188,189,192,193,196,197,204,214,215,222,228,229,230,231,241,242,243,259,260,261,262,263,264,265,266,267,268,270,274,282,283,284,285,287,290,291,292,293,294,301,313,314,325,334,339,340,341,348,349,350,360,362,370,375,],[-62,-55,-59,-60,-172,146,152,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,210,212,213,219,-138,222,-67,-65,223,224,-61,227,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,241,-172,-53,246,247,249,250,254,255,276,282,-56,-66,-22,290,291,292,-35,-20,-19,-86,-92,-84,-91,-87,-89,-85,-93,-88,-94,-90,-172,-58,-57,320,321,-64,-47,-31,-46,-23,-26,330,344,-116,-52,-108,-99,359,-101,363,364,365,-115,-117,-95,-100,]),'EQUAL':([19,33,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,136,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,229,231,241,242,282,283,290,291,292,293,294,325,],[-62,83,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,176,-48,-42,-32,-63,209,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-172,-172,-35,-20,-58,-57,-47,-31,-46,-23,-26,-52,]),'KEY_RECORD':([200,209,277,304,312,337,346,356,],[272,272,272,272,272,272,272,272,]),'AND':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,102,104,105,109,110,111,115,152,156,161,163,164,166,170,171,172,187,215,222,229,231,241,282,283,290,291,292,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-40,-43,-172,-48,-42,-32,-63,-67,-61,-39,-37,-34,-38,-36,-27,238,-53,-56,-66,-172,-172,-35,-58,-57,-47,-31,-46,-26,-52,]),'KEY_CHR':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,281,333,355,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-82,-75,97,-81,-77,-76,-80,-79,-78,97,97,97,97,97,97,-74,-72,-73,-70,97,-71,-69,-68,97,97,97,97,97,97,]),'NEQUAL':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,229,231,241,242,282,283,290,291,292,293,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,180,-48,-42,-32,-63,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-172,-172,-35,-20,-58,-57,-47,-31,-46,-23,-26,-52,]),'KEY_FREAD':([7,66,117,184,198,279,329,331,351,368,372,],[35,35,35,35,35,35,35,35,35,35,35,]),'KEY_READBOOL':([7,66,117,184,198,279,329,331,351,368,372,],[18,18,18,18,18,18,18,18,18,18,18,]),'KEY_CHAR':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,200,203,209,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,277,281,304,312,333,337,346,355,356,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-82,-75,110,-81,-77,-76,-80,-79,-78,262,110,262,110,110,110,110,110,-74,-72,-73,-70,110,-71,-69,-68,110,110,110,262,110,262,262,110,262,262,110,262,]),'KEY_END':([7,13,14,16,19,21,22,24,26,27,28,29,30,33,34,37,38,39,44,45,47,51,52,66,70,71,72,74,78,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,117,120,138,146,150,152,156,160,161,163,164,166,168,169,170,171,172,174,184,187,190,198,210,212,213,215,219,222,223,224,227,228,241,242,243,244,246,247,249,250,251,254,255,256,259,260,261,262,263,264,265,266,267,268,270,272,279,282,283,290,291,292,293,294,295,297,298,299,302,303,307,308,310,318,319,320,321,325,326,328,329,330,331,332,334,338,339,351,352,353,357,358,359,364,365,366,367,368,370,371,372,373,374,375,376,377,],[-172,-127,-135,-16,-62,-172,-124,-137,-143,-132,-131,-136,-133,-60,-121,-123,-126,-125,-134,118,-130,-128,-122,-172,-55,-59,-60,-172,-142,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,-172,-129,211,-162,-138,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-172,-53,-15,-172,-169,-167,-157,-56,-161,-66,-159,-141,-165,-22,-35,-20,-19,295,-156,-160,-158,-166,-172,-164,-163,-172,-86,-92,-84,-91,-87,-89,-85,-93,-88,-94,-90,-172,-172,-58,-57,-47,-31,-46,-23,-26,-153,-151,-172,328,332,-147,-103,-105,339,347,-155,-140,-139,-52,-150,-149,-172,-170,-172,-145,-108,-172,-99,-172,-152,367,-104,-102,-172,-168,-171,373,-144,-172,-95,375,-172,-148,-146,-100,377,-154,]),'KEY_WHILE':([7,66,117,184,198,211,279,329,331,351,368,372,],[40,40,40,40,40,281,40,40,40,40,40,40,]),'KEY_CASE':([13,14,16,19,21,22,24,26,27,28,29,30,33,34,37,38,39,44,47,51,52,70,71,72,74,78,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,117,120,146,150,152,156,160,161,163,164,166,168,169,170,171,172,174,187,190,194,210,212,213,215,219,222,223,224,227,228,241,242,243,246,247,249,250,251,254,255,282,283,290,291,292,293,294,295,298,319,320,321,325,328,329,330,332,352,364,365,367,373,377,],[-127,-135,-16,-62,-172,-124,-137,-143,-132,-131,-136,-133,-60,-121,-123,-126,-125,-134,-130,-128,-122,-55,-59,-60,-172,-142,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,-172,-129,-162,-138,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-15,252,-169,-167,-157,-56,-161,-66,-159,-141,-165,-22,-35,-20,-19,-156,-160,-158,-166,252,-164,-163,-58,-57,-47,-31,-46,-23,-26,-153,252,-155,-140,-139,-52,-149,-172,-170,-145,-152,-168,-171,-144,-148,-154,]),'DOT':([19,21,33,70,71,72,74,115,156,191,215,282,283,],[-62,73,82,142,-59,82,-172,-63,-61,248,-56,-58,-57,]),'KEY_TO':([258,],[304,]),'NOT':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,281,333,355,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-82,-75,103,-81,-77,-76,-80,-79,-78,103,103,103,103,103,103,-74,-72,-73,-70,103,-71,-69,-68,103,103,103,103,103,103,]),'KEY_STRING':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,200,203,209,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,277,281,304,312,333,337,346,355,356,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-82,-75,104,-81,-77,-76,-80,-79,-78,260,104,260,104,104,104,104,104,-74,-72,-73,-70,104,-71,-69,-68,104,104,104,260,104,260,260,104,260,260,104,260,]),'KEY_WRITE':([7,66,117,184,198,279,329,331,351,368,372,],[41,41,41,41,41,41,41,41,41,41,41,]),'GTEQ':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,229,231,241,242,282,283,290,291,292,293,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,181,-48,-42,-32,-63,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-172,-172,-35,-20,-58,-57,-47,-31,-46,-23,-26,-52,]),'KEY_FOPEN':([83,],[157,]),'KEY_PROCEDURE':([4,5,6,8,9,10,11,12,56,57,58,59,63,64,133,134,201,202,207,208,],[-172,-6,-172,-14,-172,-172,60,-172,-4,-12,-2,-8,-3,-10,-13,-172,-11,-7,-172,-9,]),'KEY_REAL':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,200,203,209,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,277,281,304,312,333,337,346,355,356,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-82,-75,99,-81,-77,-76,-80,-79,-78,266,99,266,99,99,99,99,99,-74,-72,-73,-70,99,-71,-69,-68,99,99,99,266,99,266,266,99,266,266,99,266,]),'LRB':([15,18,19,20,21,23,25,26,31,32,33,35,36,40,41,43,46,47,48,49,50,53,54,55,67,68,69,70,71,72,74,75,77,79,80,85,86,90,91,92,96,97,103,106,107,113,114,115,116,119,121,124,125,132,143,144,145,156,157,162,167,175,176,177,178,179,180,181,182,183,203,215,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,272,281,282,283,333,355,],[65,67,-62,68,-172,75,76,79,80,81,-60,84,85,106,114,116,119,106,121,106,123,124,125,106,106,106,141,-55,-59,-60,-172,106,106,106,106,106,106,162,106,79,165,167,106,106,106,106,106,-63,106,106,106,106,106,204,106,217,218,-61,225,106,106,-82,-75,106,-81,-77,-76,-80,-79,-78,106,-56,106,106,106,106,106,-74,-72,-73,-70,106,-71,-69,-68,106,106,106,311,106,-58,-57,106,106,]),'VCHAR':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,203,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,281,323,333,355,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-82,-75,94,-81,-77,-76,-80,-79,-78,94,94,94,94,94,94,-74,-72,-73,-70,94,-71,-69,-68,94,94,94,94,94,94,94,]),'KEY_BOOLEAN':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,175,176,177,178,179,180,181,182,183,200,203,209,217,218,220,221,232,233,234,235,236,237,238,239,240,245,252,269,277,281,304,312,333,337,346,355,356,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-82,-75,89,-81,-77,-76,-80,-79,-78,270,89,270,89,89,89,89,89,-74,-72,-73,-70,89,-71,-69,-68,89,89,89,270,89,270,270,89,270,270,89,270,]),'KEY_READCHAR':([7,66,117,184,198,279,329,331,351,368,372,],[48,48,48,48,48,48,48,48,48,48,48,]),'KEY_ARRAY':([200,209,277,304,312,337,346,356,],[269,269,269,269,269,269,269,269,]),'KEY_FPRINTF':([7,66,117,184,198,279,329,331,351,368,372,],[50,50,50,50,50,50,50,50,50,50,50,]),'COMMA':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,127,128,151,152,153,156,158,160,161,163,164,166,168,169,170,171,172,174,185,186,187,195,215,216,222,228,241,242,243,257,275,282,283,287,288,289,290,291,292,293,294,305,306,309,315,316,325,335,336,361,369,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,-18,-48,-42,-32,-63,-107,199,221,-67,-65,-61,226,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-54,245,-53,253,-56,221,-66,-22,-35,-20,-19,-106,-172,-58,-57,-64,323,324,-47,-31,-46,-23,-26,-172,-98,199,-119,345,-52,355,-97,-118,-96,]),'LT':([19,70,71,72,74,87,88,89,92,93,94,95,98,99,100,101,102,104,105,108,109,110,111,115,152,156,160,161,163,164,166,168,169,170,171,172,174,187,215,222,228,229,231,241,242,282,283,290,291,292,293,294,325,],[-62,-55,-59,-60,-172,-28,-49,-41,-33,-45,-50,-51,-30,-44,-29,-172,-40,-43,-172,179,-48,-42,-32,-63,-67,-61,-172,-39,-37,-34,-38,-24,-21,-36,-27,-25,-172,-53,-56,-66,-22,-172,-172,-35,-20,-58,-57,-47,-31,-46,-23,-26,-52,]),'KEY_READINT':([7,66,117,184,198,279,329,331,351,368,372,],[53,53,53,53,53,53,53,53,53,53,53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'doWhileStatement':([7,66,117,184,198,279,329,331,351,368,372,],[13,13,13,13,13,13,13,13,13,13,13,]),'module':([0,],[2,]),'procedureBody':([134,],[206,]),'designator2':([21,74,],[70,70,]),'case':([194,251,298,],[251,298,298,]),'statement':([7,66,117,184,198,279,329,331,351,368,372,],[16,16,190,16,16,16,16,16,16,16,16,]),'formalParameters':([132,],[205,]),'char':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,177,203,217,218,220,221,232,237,245,252,269,281,323,333,355,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,349,100,100,]),'termss':([105,229,231,],[172,172,172,]),'simpless':([101,160,174,],[169,228,242,]),'addOperator':([169,228,242,],[232,232,232,]),'switchStatement':([7,66,117,184,198,279,329,331,351,368,372,],[22,22,22,22,22,22,22,22,22,22,22,]),'recordType':([200,209,277,304,312,337,346,356,],[263,263,263,263,263,263,263,263,]),'procedureDeclaration':([11,],[61,]),'fieldListSequence':([272,359,],[310,371,]),'type':([200,209,277,304,312,337,346,356,],[271,280,317,334,342,357,362,370,]),'setStatement':([7,66,117,184,198,279,329,331,351,368,372,],[24,24,24,24,24,24,24,24,24,24,24,]),'identdef':([7,21,40,47,49,55,65,66,67,68,74,75,76,77,79,80,81,82,84,85,86,90,91,97,103,106,107,113,114,116,117,119,121,123,124,125,141,142,143,162,165,167,177,184,198,203,217,218,220,221,226,232,237,245,252,269,279,281,311,322,329,331,333,351,355,368,372,],[33,72,72,72,72,72,137,33,72,72,72,72,72,72,72,72,72,72,158,72,72,72,72,72,72,72,72,72,72,72,33,72,72,195,72,72,72,215,72,72,72,72,72,33,33,72,72,72,72,72,289,72,72,72,72,72,33,72,72,72,33,33,72,33,72,33,33,]),'varType':([200,209,277,304,312,337,346,356,],[265,265,265,265,265,265,265,265,]),'designator':([7,21,40,47,49,55,66,67,68,74,75,76,77,79,80,81,85,86,90,91,97,103,106,107,113,114,116,117,119,121,124,125,143,162,165,167,177,184,198,203,217,218,220,221,232,237,245,252,269,279,281,322,329,331,333,351,355,368,372,],[26,69,92,92,92,92,26,92,92,69,92,148,92,92,92,155,92,92,92,92,92,92,92,92,92,92,92,26,92,92,92,92,92,92,230,92,92,26,26,92,92,92,92,92,92,92,92,92,92,26,92,148,26,26,92,26,92,26,26,]),'length':([269,355,],[305,369,]),'fileStatement':([7,66,117,184,198,279,329,331,351,368,372,],[27,27,27,27,27,27,27,27,27,27,27,]),'ifss':([256,],[302,]),'typess':([12,],[63,]),'relation':([108,],[177,]),'factor':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,177,203,217,218,220,221,232,237,245,252,269,281,333,355,],[105,105,105,105,105,105,105,105,105,105,105,105,161,163,166,170,105,105,105,105,105,105,105,105,105,105,229,231,105,105,105,105,105,105,105,294,105,105,105,105,105,105,]),'empty':([4,6,7,9,10,12,21,66,74,101,105,117,134,160,174,184,198,207,229,231,251,256,272,274,275,279,298,305,329,331,338,351,359,368,372,],[5,8,14,57,59,64,71,14,71,168,171,14,5,168,168,14,14,8,171,171,297,303,308,314,315,14,297,336,14,14,308,14,308,14,14,]),'number':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,177,203,217,218,220,221,232,237,245,252,269,281,333,355,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'memoryalloc':([7,66,117,184,198,279,329,331,351,368,372,],[29,29,29,29,29,29,29,29,29,29,29,]),'expList':([79,143,],[151,216,]),'comass':([305,],[335,]),'ioStatement':([7,66,117,184,198,279,329,331,351,368,372,],[28,28,28,28,28,28,28,28,28,28,28,]),'casess':([251,298,],[299,326,]),'varss':([9,],[56,]),'conss':([10,],[58,]),'string':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,177,203,217,218,220,221,225,232,237,245,252,253,269,281,333,355,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,288,98,98,98,98,301,98,98,98,98,]),'assignment':([7,66,76,117,184,198,279,322,329,331,351,368,372,],[34,34,149,34,34,34,34,348,34,34,34,34,34,]),'formalss':([274,],[313,]),'ifStatement':([7,66,117,184,198,279,329,331,351,368,372,],[37,37,37,37,37,37,37,37,37,37,37,]),'forStatement':([7,66,117,184,198,279,329,331,351,368,372,],[38,38,38,38,38,38,38,38,38,38,38,]),'arrayType':([200,209,277,304,312,337,346,356,],[259,259,259,259,259,259,259,259,]),'whileStatement':([7,66,117,184,198,279,329,331,351,368,372,],[39,39,39,39,39,39,39,39,39,39,39,]),'fps':([275,],[316,]),'declarationSequence':([4,134,],[6,207,]),'term':([40,47,49,55,67,68,75,77,79,80,85,86,106,107,113,114,116,119,121,124,125,143,162,167,177,203,217,218,220,221,232,245,252,269,281,333,355,],[101,101,101,101,101,101,101,101,101,101,101,160,101,174,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,293,101,101,101,101,101,101,]),'procss':([6,207,],[11,11,]),'element':([113,245,],[186,296,]),'baseType':([311,],[340,]),'fpSection':([204,343,],[274,360,]),'simpleExpression':([40,47,49,55,67,68,75,77,79,80,85,106,113,114,116,119,121,124,125,143,162,167,177,203,217,218,220,221,245,252,269,281,333,355,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,243,108,108,108,108,108,108,108,108,108,108,108,]),'pointerType':([200,209,277,304,312,337,346,356,],[267,267,267,267,267,267,267,267,]),'statementSequence':([7,66,184,198,279,329,331,351,368,372,],[45,138,244,256,318,352,353,366,374,376,]),'fieldList':([272,338,359,],[307,358,307,]),'qualident':([7,21,40,47,49,55,66,67,68,74,75,76,77,79,80,81,82,85,86,90,91,97,103,106,107,113,114,116,117,119,121,124,125,141,143,162,165,167,177,184,198,203,217,218,220,221,232,237,245,252,269,279,281,311,322,329,331,333,351,355,368,372,],[21,74,74,74,74,74,21,74,74,74,74,74,74,74,74,74,156,74,74,74,74,74,74,74,74,74,74,74,21,74,74,74,74,214,74,74,74,74,74,21,21,74,74,74,74,74,74,74,74,74,74,21,74,341,74,21,21,74,21,74,21,21,]),'identList':([56,272,338,359,],[128,309,309,309,]),'set':([40,47,49,55,67,68,75,77,79,80,85,86,90,91,97,103,106,107,113,114,116,119,121,124,125,143,162,167,177,203,217,218,220,221,232,237,245,252,269,281,333,355,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'expression':([40,47,49,55,67,68,75,77,79,80,85,106,113,114,116,119,121,124,125,143,162,167,203,217,218,220,221,245,252,269,281,333,355,],[112,120,122,126,139,140,147,150,153,154,159,173,185,188,189,192,193,196,197,153,173,173,273,284,285,286,287,185,300,306,319,354,306,]),'typeDeclaration':([63,],[135,]),'constantDeclaration':([58,],[130,]),'actualParameters':([26,92,],[78,164,]),'mulOperator':([172,],[237,]),'variableDeclaration':([56,],[129,]),'procedureHeading':([11,],[62,]),'procedureCall':([7,66,117,184,198,279,329,331,351,368,372,],[52,52,52,52,52,52,52,52,52,52,52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> empty','conss',1,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> empty','typess',1,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> empty','varss',1,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> empty','procss',1,'p_procss','par.py',61),
  ('statementSequence -> statementSequence SCOLON statement','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> statement','statementSequence',1,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> char','factor',1,'p_factor','par.py',108),
  ('factor -> string','factor',1,'p_factor','par.py',109),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',110),
  ('factor -> set','factor',1,'p_factor','par.py',111),
  ('factor -> designator','factor',1,'p_factor','par.py',112),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',113),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',114),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',115),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',119),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',125),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',163),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',164),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB fpSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON fpSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('fpSection -> IDENT fps COLON type','fpSection',4,'p_fpSection','par.py',325),
  ('fps -> fps COMMA IDENT','fps',3,'p_fps','par.py',330),
  ('fps -> empty','fps',1,'p_fps','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',356),
  ('statement -> setStatement','statement',1,'p_statement','par.py',357),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',362),
  ('setStatement -> qualident DOT KEY_ADD LRB expression RRB','setStatement',6,'p_setStatement','par.py',367),
  ('setStatement -> qualident DOT KEY_DEL LRB expression RRB','setStatement',6,'p_setStatement','par.py',368),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',374),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',380),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',381),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',386),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',387),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',392),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',393),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',398),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',399),
  ('casess -> case casess','casess',2,'p_casess','par.py',404),
  ('casess -> empty','casess',1,'p_casess','par.py',405),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',410),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',415),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',420),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',425),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',430),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',431),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',432),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',433),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',434),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',435),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',441),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',446),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',447),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',448),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',449),
  ('empty -> <empty>','empty',0,'p_empty','par.py',454),
]
