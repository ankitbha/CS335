
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITELN LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence SCOLON statement\n\t\t\t\t\t\t\t  | statement\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\t\t\t   | qualident\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT identdef\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT \n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT COLON type\n\t\t\n\t\t\tformalParameters : LRB FPSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON FPSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tFPSection : IDENT FPs COLON type\n\t\t\n\t\t\tFPs : FPs COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : casess OR case\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE COLON expression statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO statementSequence KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {end':([2,214,],[0,-1,]),'GT':([20,35,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,94,95,119,120,130,131,133,135,136,138,139,140,141,143,155,163,200,208,209,216,226,245,250,253,254,274,],[-60,-54,-30,-32,-31,-44,-156,127,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,-61,-53,-25,-27,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,-59,-65,-20,-22,-35,-55,-64,-26,-23,-56,-57,-50,]),'KEY_WRITELN':([8,20,24,35,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,92,94,95,119,120,130,131,133,135,136,138,139,140,141,143,155,159,161,163,173,199,200,208,209,216,226,245,250,253,254,274,278,283,295,310,313,],[39,-60,39,-54,-30,-32,-31,-44,-156,-18,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,39,-61,-53,-25,-27,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,-59,39,39,-65,39,-19,-20,-22,-35,-55,-64,-26,-23,-56,-57,-50,39,39,39,39,39,]),'KEY_PROCEDURE':([4,5,6,7,9,10,11,12,48,49,50,51,52,53,54,55,114,168,169,171,],[-156,-156,-6,15,-156,-156,-156,-14,-4,-12,-3,-10,-2,-8,-156,-13,-156,-11,-9,-7,]),'OR':([16,17,18,20,23,25,26,27,30,31,34,35,36,37,38,40,44,46,47,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,89,92,94,95,105,119,120,130,131,133,135,136,138,139,140,141,143,150,155,163,165,199,200,202,208,209,210,212,215,216,220,223,226,245,247,248,250,253,254,257,274,277,278,280,285,294,296,307,308,309,312,316,],[-122,-120,-119,-60,-132,-126,-128,-131,-125,-133,-16,-54,-123,-124,-58,-121,-129,-130,-136,-30,-32,-31,-44,-156,-18,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,-127,-156,-61,-53,-135,-25,-27,-39,-156,-51,-37,-38,207,-24,-36,-156,-34,-15,-59,-65,-134,-19,-20,-156,-22,-35,-153,-148,-151,-55,-150,-149,-64,-26,275,-144,-23,-56,-57,-146,-50,-142,-156,-154,-138,-143,-145,-152,-155,-137,-141,-147,]),'AT':([8,19,20,24,26,35,38,42,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,93,94,95,97,99,100,102,104,106,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,136,138,139,140,141,143,147,152,153,154,155,159,161,163,172,173,184,194,195,196,197,198,199,200,201,204,205,206,207,208,209,211,216,221,225,226,240,245,249,250,253,254,274,278,279,283,284,289,295,310,313,],[33,33,-60,33,33,33,-58,33,33,-30,-32,-31,-44,-156,-18,-49,-40,-42,-47,33,-41,33,33,33,33,-156,-46,-58,33,-45,-43,-48,33,-28,33,-29,-33,33,33,33,33,33,-61,-53,33,33,33,33,33,33,-25,-27,33,-74,-80,-75,-78,-79,-77,-76,-73,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,33,33,33,33,-59,33,33,-65,33,33,33,-68,-69,33,-67,-66,-19,-20,33,-70,-71,33,-72,-22,-35,33,-55,33,33,-64,33,-26,33,-23,-56,-57,-50,33,33,33,33,33,33,33,33,]),'NOT':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,121,122,123,124,125,126,127,128,129,147,153,172,184,194,195,196,197,198,201,204,205,206,207,211,225,249,284,289,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-74,-80,-75,-78,-79,-77,-76,-73,77,77,77,77,-68,-69,77,-67,-66,77,-70,-71,77,-72,77,77,77,77,77,]),'KEY_ELSEIF':([16,17,18,20,23,25,26,27,30,31,34,35,36,37,38,40,44,46,47,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,89,92,94,95,105,119,120,130,131,133,135,136,138,139,140,141,143,150,155,161,163,165,199,200,208,209,210,212,215,216,220,223,224,226,245,250,253,254,257,258,259,274,277,280,285,307,308,309,310,312,314,316,],[-122,-120,-119,-60,-132,-126,-128,-131,-125,-133,-16,-54,-123,-124,-58,-121,-129,-130,-136,-30,-32,-31,-44,-156,-18,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,-127,-156,-61,-53,-135,-25,-27,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,-15,-59,-156,-65,-134,-19,-20,-22,-35,-153,-148,-151,-55,-150,-149,-156,-64,-26,-23,-56,-57,-146,-140,284,-50,-142,-154,-138,-152,-155,-137,-156,-141,-139,-147,]),'VCHAR':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,121,122,123,124,125,126,127,128,129,147,153,172,184,194,195,196,197,198,201,204,205,206,207,211,225,249,281,284,289,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-74,-80,-75,-78,-79,-77,-76,-73,80,80,80,80,-68,-69,80,-67,-66,80,-70,-71,80,-72,80,80,80,80,80,80,]),'KEY_SET':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,118,121,122,123,124,125,126,127,128,129,147,153,167,170,172,175,184,194,195,196,197,198,201,204,205,206,207,211,225,237,249,265,271,284,289,290,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,181,78,-74,-80,-75,-78,-79,-77,-76,-73,78,78,181,181,78,181,78,-68,-69,78,-67,-66,78,-70,-71,78,-72,78,78,181,78,181,181,78,78,181,]),'KEY_STRING':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,118,121,122,123,124,125,126,127,128,129,147,153,167,170,172,175,184,194,195,196,197,198,201,204,205,206,207,211,225,237,249,265,271,284,289,290,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,188,79,-74,-80,-75,-78,-79,-77,-76,-73,79,79,188,188,79,188,79,-68,-69,79,-67,-66,79,-70,-71,79,-72,79,79,188,79,188,188,79,79,188,]),'ASSIGN':([20,35,38,47,76,94,95,113,146,155,216,253,254,],[-60,-54,-58,106,-58,-61,-53,172,106,-59,-55,-56,-57,]),'KEY_WHILE':([8,16,17,18,20,23,24,25,26,27,30,31,34,35,36,37,38,40,44,46,47,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,88,89,92,94,95,105,119,120,130,131,133,135,136,138,139,140,141,143,150,155,159,161,163,165,173,199,200,208,209,210,212,215,216,220,223,226,245,250,253,254,257,274,277,278,280,283,285,295,307,308,309,310,312,313,316,],[42,-122,-120,-119,-60,-132,42,-126,-128,-131,-125,-133,-16,-54,-123,-124,-58,-121,-129,-130,-136,-30,-32,-31,-44,-156,-18,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,147,-127,42,-61,-53,-135,-25,-27,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,-15,-59,42,42,-65,-134,42,-19,-20,-22,-35,-153,-148,-151,-55,-150,-149,-64,-26,-23,-56,-57,-146,-50,-142,42,-154,42,-138,42,-152,-155,-137,42,-141,42,-147,]),'KEY_WRITE':([8,20,24,35,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,92,94,95,119,120,130,131,133,135,136,138,139,140,141,143,155,159,161,163,173,199,200,208,209,216,226,245,250,253,254,274,278,283,295,310,313,],[43,-60,43,-54,-30,-32,-31,-44,-156,-18,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,43,-61,-53,-25,-27,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,-59,43,43,-65,43,-19,-20,-22,-35,-55,-64,-26,-23,-56,-57,-50,43,43,43,43,43,]),'LT':([20,35,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,94,95,119,120,130,131,133,135,136,138,139,140,141,143,155,163,200,208,209,216,226,245,250,253,254,274,],[-60,-54,-30,-32,-31,-44,-156,124,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,-61,-53,-25,-27,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,-59,-65,-20,-22,-35,-55,-64,-26,-23,-56,-57,-50,]),'KEY_VAR':([4,5,6,7,9,10,11,12,48,49,50,51,52,53,54,55,114,168,169,171,],[-156,9,-6,-5,-156,-156,-156,-14,-4,-12,-3,-10,-2,-8,-156,-13,9,-11,-9,-7,]),'KEY_IN':([20,35,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,94,95,119,120,130,131,133,135,136,138,139,140,141,143,155,163,200,208,209,216,226,245,250,253,254,274,],[-60,-54,-30,-32,-31,-44,-156,126,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,-61,-53,-25,-27,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,-59,-65,-20,-22,-35,-55,-64,-26,-23,-56,-57,-50,]),'KEY_INTEGER':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,118,121,122,123,124,125,126,127,128,129,147,153,167,170,172,175,184,194,195,196,197,198,201,204,205,206,207,211,225,237,249,265,271,284,289,290,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,182,64,-74,-80,-75,-78,-79,-77,-76,-73,64,64,182,182,64,182,64,-68,-69,64,-67,-66,64,-70,-71,64,-72,64,64,182,64,182,182,64,64,182,]),'KEY_OF':([20,35,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,94,95,119,120,130,131,133,135,136,138,139,140,141,143,155,163,199,200,208,209,216,226,238,239,245,250,253,254,267,268,274,302,],[-60,-54,-30,-32,-31,-44,-156,-18,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,-61,-53,-25,-27,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,-59,-65,-19,-20,-22,-35,-55,-64,-96,-156,-26,-23,-56,-57,290,-95,-50,-94,]),'KEY_IF':([8,20,24,35,57,58,59,60,61,62,63,64,65,66,68,74,75,76,78,79,80,82,84,85,92,94,95,119,120,130,131,133,135,136,138,139,140,141,143,155,159,161,163,173,199,200,208,209,216,226,245,250,253,254,274,278,283,295,310,313,],[45,-60,45,-54,-30,-32,-31,-44,-156,-18,-49,-40,-42,-47,-41,-156,-46,-58,-45,-43,-48,-28,-29,-33,45,-61,-53,-25,-27,-39,-156,-51,-37,-38,-21,-24,-36,-156,-34,-59,45,45,-65,45,-19,-20,-22,-35,-55,-64,-26,-23,-56,-57,-50,45,45,45,45,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'switchStatement':([8,24,92,159,161,173,278,283,295,310,313,],[16,16,16,16,16,16,16,16,16,16,16,]),'string':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,121,147,153,172,184,196,201,206,211,213,219,225,249,284,289,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,252,255,57,57,57,57,]),'set':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,121,147,153,172,184,196,201,206,211,225,249,284,289,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FPs':([178,],[235,]),'declarationSequence':([4,54,],[5,114,]),'assignment':([8,24,87,92,159,161,173,278,279,283,295,310,313,],[18,18,145,18,18,18,18,18,297,18,18,18,18,]),'simpleExpression':([19,26,42,45,70,83,93,99,102,104,106,121,147,153,172,184,201,211,225,249,284,289,],[62,62,62,62,62,62,62,62,62,62,62,199,62,62,62,62,62,62,62,62,62,62,]),'formalss':([176,],[233,]),'varType':([118,167,170,175,237,265,271,290,],[193,193,193,193,193,193,193,193,]),'factor':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,121,147,153,172,184,196,201,206,211,225,249,284,289,],[61,61,61,61,130,61,61,135,136,140,61,61,61,61,61,61,61,61,61,61,61,61,245,61,61,61,61,61,61,61,]),'baseType':([240,],[270,]),'typeDeclaration':([50,],[110,]),'formalParameters':([56,],[116,]),'typess':([10,],[50,]),'module':([0,],[2,]),'designator2':([35,],[95,]),'statementSequence':([8,24,159,161,173,278,283,295,310,313,],[29,88,222,224,231,296,300,305,314,315,]),'FPSection':([117,263,],[176,286,]),'recordType':([118,167,170,175,237,265,271,290,],[189,189,189,189,189,189,189,189,]),'termss':([61,],[119,]),'comass':([239,],[267,]),'variableDeclaration':([48,],[108,]),'doWhileStatement':([8,24,92,159,161,173,278,283,295,310,313,],[30,30,30,30,30,30,30,30,30,30,30,]),'actualParameters':([47,85,],[105,143,]),'empty':([4,5,8,9,10,11,24,54,61,74,92,114,131,141,159,161,173,176,178,187,202,224,239,273,278,283,291,295,310,313,],[6,12,31,49,51,53,31,6,120,139,31,12,139,139,31,31,31,234,236,243,248,258,268,243,31,31,243,31,31,31,]),'procss':([5,114,],[7,7,]),'procedureCall':([8,24,92,159,161,173,278,283,295,310,313,],[17,17,17,17,17,17,17,17,17,17,17,]),'procedureHeading':([7,],[13,]),'casess':([202,],[247,]),'addOperator':([138,200,208,],[206,206,206,]),'expression':([19,26,42,45,70,83,93,99,102,104,106,147,153,172,184,201,211,225,249,284,289,],[73,89,101,103,132,142,151,157,160,162,165,212,162,230,238,132,251,260,278,301,238,]),'statement':([8,24,92,159,161,173,278,283,295,310,313,],[34,34,150,34,34,34,34,34,34,34,34,]),'qualident':([8,19,24,26,35,42,45,67,69,70,71,72,77,81,83,87,92,93,99,102,104,106,121,147,153,154,159,161,172,173,184,196,201,206,211,225,240,249,278,279,283,284,289,295,310,313,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,218,35,35,35,35,35,35,35,35,35,35,269,35,35,35,35,35,35,35,35,35,]),'whileStatement':([8,24,92,159,161,173,278,283,295,310,313,],[36,36,36,36,36,36,36,36,36,36,36,]),'type':([118,167,170,175,237,265,271,290,],[185,228,229,232,266,288,292,303,]),'constantDeclaration':([52,],[112,]),'identList':([48,187,273,291,],[107,242,242,242,]),'term':([19,26,42,45,69,70,81,83,93,99,102,104,106,121,147,153,172,184,201,206,211,225,249,284,289,],[74,74,74,74,131,74,141,74,74,74,74,74,74,74,74,74,74,74,74,250,74,74,74,74,74,]),'forStatement':([8,24,92,159,161,173,278,283,295,310,313,],[37,37,37,37,37,37,37,37,37,37,37,]),'procedureBody':([54,],[115,]),'procedureDeclaration':([7,],[14,]),'identdef':([8,19,24,26,35,42,45,67,69,70,71,72,77,81,83,86,87,90,92,93,97,99,100,102,104,106,121,147,152,153,154,159,161,172,173,184,196,201,206,211,221,225,240,249,278,279,283,284,289,295,310,313,],[38,76,38,76,76,76,76,76,76,76,76,76,76,76,76,144,76,148,38,76,155,76,158,76,76,76,76,76,216,76,76,38,38,76,38,76,76,76,76,76,256,76,76,76,38,76,38,76,76,38,38,38,]),'pointerType':([118,167,170,175,237,265,271,290,],[190,190,190,190,190,190,190,190,]),'fieldListSequence':([187,291,],[244,304,]),'length':([184,289,],[239,302,]),'mulOperator':([119,],[196,]),'simpless':([74,131,141,],[138,200,208,]),'element':([70,201,],[134,246,]),'ifStatement':([8,24,92,159,161,173,278,283,295,310,313,],[40,40,40,40,40,40,40,40,40,40,40,]),'fieldList':([187,273,291,],[241,293,241,]),'conss':([11,],[52,]),'case':([137,275,],[202,294,]),'relation':([62,],[121,]),'ifss':([224,],[259,]),'varss':([9,],[48,]),'number':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,121,147,153,172,184,196,201,206,211,225,249,284,289,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'ioStatement':([8,24,92,159,161,173,278,283,295,310,313,],[44,44,44,44,44,44,44,44,44,44,44,]),'char':([19,26,42,45,67,69,70,71,72,77,81,83,93,99,102,104,106,121,147,153,172,184,196,201,206,211,225,249,281,284,289,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,298,84,84,]),'expList':([104,153,],[164,217,]),'arrayType':([118,167,170,175,237,265,271,290,],[192,192,192,192,192,192,192,192,]),'fileStatement':([8,24,92,159,161,173,278,283,295,310,313,],[46,46,46,46,46,46,46,46,46,46,46,]),'designator':([8,19,24,26,35,42,45,67,69,70,71,72,77,81,83,87,92,93,99,102,104,106,121,147,153,159,161,172,173,184,196,201,206,211,225,249,278,279,283,284,289,295,310,313,],[47,85,47,85,96,85,85,85,85,85,85,85,85,85,85,146,47,85,85,85,85,85,85,85,85,47,47,85,47,85,85,85,85,85,85,85,47,146,47,85,85,47,47,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',30),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',36),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',37),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',38),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',39),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',44),
  ('conss -> empty','conss',1,'p_conss','par.py',45),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',50),
  ('typess -> empty','typess',1,'p_typess','par.py',51),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',56),
  ('varss -> empty','varss',1,'p_varss','par.py',57),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',62),
  ('procss -> empty','procss',1,'p_procss','par.py',63),
  ('statementSequence -> statementSequence SCOLON statement','statementSequence',3,'p_statementSequence','par.py',68),
  ('statementSequence -> statement','statementSequence',1,'p_statementSequence','par.py',69),
  ('constantDeclaration -> IDENT ASSIGN expression','constantDeclaration',3,'p_constantDeclaration','par.py',74),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',79),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',80),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',86),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',87),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',92),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',93),
  ('term -> factor termss','term',2,'p_term','par.py',98),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',103),
  ('termss -> empty','termss',1,'p_termss','par.py',104),
  ('factor -> number','factor',1,'p_factor','par.py',109),
  ('factor -> char','factor',1,'p_factor','par.py',110),
  ('factor -> string','factor',1,'p_factor','par.py',111),
  ('factor -> KEY_NIL','factor',1,'p_factor','par.py',112),
  ('factor -> set','factor',1,'p_factor','par.py',113),
  ('factor -> designator','factor',1,'p_factor','par.py',114),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',115),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',116),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',120),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator -> qualident','designator',1,'p_designator','par.py',159),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',164),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT identdef','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT COLON type','procedureHeading',4,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB FPSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON FPSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('FPSection -> IDENT FPs COLON type','FPSection',4,'p_FPSection','par.py',325),
  ('FPs -> FPs COMMA IDENT','FPs',3,'p_FPs','par.py',330),
  ('FPs -> empty','FPs',1,'p_FPs','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',360),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',365),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',366),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',371),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',372),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',377),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',378),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',383),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',384),
  ('casess -> casess OR case','casess',3,'p_casess','par.py',389),
  ('casess -> empty','casess',1,'p_casess','par.py',390),
  ('case -> KEY_CASE COLON expression statementSequence','case',4,'p_case','par.py',395),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',400),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',405),
  ('doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression','doWhileStatement',4,'p_doWhileStatement','par.py',410),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',415),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',416),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',417),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',422),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',423),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',424),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',425),
  ('empty -> <empty>','empty',0,'p_empty','par.py',430),
]
