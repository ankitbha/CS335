
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITELN LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tstatementSequence : statementSequence SCOLON statement\n\t\t\t\t\t\t\t  | statement\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\t\t\t   | qualident\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT identdef\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | MULTIPLY IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT SCOLON\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT COLON type\n\t\t\n\t\t\tformalParameters : LRB FPSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON FPSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tFPSection : IDENT FPs COLON type\n\t\t\n\t\t\tFPs : FPs COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : casess OR case\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE COLON expression statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO statementSequence KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'VINTEGER':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,221,251,254,255,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-80,-75,-77,56,-78,-74,-73,-76,-79,56,56,56,-72,-71,-70,56,-66,-67,-69,-68,56,56,56,56,56,56,267,56,]),'KEY_CONST':([4,5,6,7,8,9,11,12,13,14,15,16,106,109,110,],[-156,-6,7,-156,-156,-156,-8,-2,-10,-3,-12,-4,-7,-9,-11,]),'KEY_SET':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,108,111,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,218,221,237,251,255,256,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,162,162,-80,-75,-77,57,-78,-74,-73,-76,-79,57,57,57,-72,-71,-70,57,-66,-67,-69,-68,57,57,57,57,162,57,162,57,57,162,]),'KEY_SWITCH':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[21,-54,-60,21,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,21,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,21,21,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,21,-50,21,21,21,21,]),'KEY_BEGIN':([4,5,6,7,8,9,11,12,13,14,15,16,22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,76,78,80,81,83,84,85,94,101,106,109,110,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,192,194,208,219,220,225,226,247,272,],[-156,-6,10,-156,-156,-156,-8,-2,-10,-3,-12,-4,-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,122,-18,-40,-49,-33,-42,-53,-61,154,-7,-9,-11,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,-50,279,]),'RSB':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,156,157,178,183,191,192,194,195,208,219,220,225,226,233,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-63,-65,-22,-35,-20,-19,-55,225,-64,-23,-26,-56,-57,-62,-50,]),'KEY_ORD':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,221,251,255,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-80,-75,-77,79,-78,-74,-73,-76,-79,79,79,79,-72,-71,-70,79,-66,-67,-69,-68,79,79,79,79,79,79,79,]),'KEY_WRITE':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[43,-54,-60,43,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,43,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,43,43,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,43,-50,43,43,43,43,]),'$end':([2,202,],[0,-1,]),'KEY_FOPEN':([93,],[147,]),'AND':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,72,75,80,81,83,84,85,94,113,115,119,120,121,133,136,137,146,157,183,194,208,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-58,-156,-40,-49,-33,-42,-53,-61,-37,-36,-38,-27,186,-39,-51,-34,-59,-65,-35,-55,-64,-26,-56,-57,-50,]),'NOT':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,221,251,255,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-80,-75,-77,70,-78,-74,-73,-76,-79,70,70,70,-72,-71,-70,70,-66,-67,-69,-68,70,70,70,70,70,70,70,]),'KEY_OF':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,192,194,208,211,212,219,220,225,226,235,236,247,268,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-19,-55,-64,-156,-96,-23,-26,-56,-57,-95,256,-50,-94,]),'SCOLON':([3,10,17,18,19,20,22,25,26,27,30,31,33,34,35,37,38,40,41,42,44,45,47,49,52,54,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,89,94,95,99,104,113,114,115,116,117,119,120,121,123,133,136,137,141,146,148,150,154,155,157,160,161,162,163,164,165,167,168,169,170,171,173,174,175,176,178,183,191,192,194,199,200,203,204,205,206,207,208,213,216,217,219,220,225,226,227,232,240,241,242,243,245,247,249,252,253,257,258,259,260,262,266,269,270,271,273,274,275,276,277,278,279,280,281,282,],[4,-156,-129,-123,-121,-120,-54,-132,-16,-128,-58,-133,-60,95,-131,-119,-124,-126,-125,-156,-122,-130,-136,106,109,110,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-127,-61,-156,95,-135,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,197,-59,-15,-156,-156,-134,-65,-17,-82,-92,-85,-83,-87,-91,-156,-81,-84,-90,-86,-88,-89,-107,-22,-35,-20,-19,-55,-151,-153,95,-150,-148,-149,95,-64,-103,241,-101,-23,-26,-56,-57,248,-146,-97,-156,-106,-156,-142,-50,-154,-138,-156,-102,-156,-100,95,-156,95,-93,241,95,-152,-156,-137,-155,-98,-141,-156,95,95,-147,]),'MULTIPLY':([10,21,22,27,30,33,36,42,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,87,88,90,91,92,94,95,98,100,102,103,105,107,113,114,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,140,146,150,152,154,157,166,178,179,180,181,182,183,184,185,186,187,188,191,192,193,194,197,208,209,210,215,219,220,221,225,226,243,247,248,251,253,255,262,274,279,],[32,32,32,32,-58,-60,32,32,32,-46,-45,-30,-28,-29,32,32,-32,-31,-43,-41,-44,-47,-48,32,-156,-58,32,32,-156,32,-18,32,-40,-49,32,-33,-42,-53,32,32,32,32,32,-61,32,32,32,32,32,32,32,-37,-156,-36,-24,-21,-38,-27,184,-156,-80,-75,-77,32,-78,-74,-73,-76,-79,-39,-51,-34,32,32,32,-59,32,32,32,-65,32,-22,-72,-71,-70,32,-35,-66,-67,-69,-68,32,-20,-19,32,-55,32,-64,32,32,32,-23,-26,32,-56,-57,32,-50,32,32,32,32,32,32,32,]),'ASSIGN':([22,30,33,47,50,72,85,94,142,146,194,225,226,],[-54,-58,-60,102,107,-58,-53,-61,102,-59,-55,-56,-57,]),'KEY_ARRAY':([108,111,218,237,256,],[166,166,166,166,166,]),'LTEQ':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,194,208,219,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,131,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-55,-64,-23,-26,-56,-57,-50,]),'COMMA':([22,33,53,55,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,134,135,136,137,143,146,156,157,158,159,177,178,183,191,192,194,195,208,211,212,214,219,220,225,226,229,233,234,235,236,247,268,],[-54,-60,-105,112,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-52,193,-51,-34,198,-59,-63,-65,209,210,-104,-22,-35,-20,-19,-55,209,-64,-156,-96,112,-23,-26,-56,-57,250,-62,254,-95,255,-50,-94,]),'KEY_TO':([172,],[218,]),'KEY_STRING':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,108,111,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,218,221,237,251,255,256,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,171,171,-80,-75,-77,65,-78,-74,-73,-76,-79,65,65,65,-72,-71,-70,65,-66,-67,-69,-68,65,65,65,65,171,65,171,65,65,171,]),'NEQUAL':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,194,208,219,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,129,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-55,-64,-23,-26,-56,-57,-50,]),'MINUS':([21,22,27,33,36,46,56,57,58,59,60,63,64,65,66,67,68,69,71,72,73,75,80,81,82,83,84,85,90,94,98,100,102,103,107,113,114,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,132,133,136,137,139,146,152,157,166,178,183,191,193,194,197,208,209,219,220,221,225,226,247,251,255,],[62,-54,62,-60,62,62,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,62,-156,-40,-49,62,-33,-42,-53,62,-61,62,62,62,62,62,-37,-156,-36,-24,180,-38,-27,-25,-156,-80,-75,-77,62,-78,-74,-73,-76,-79,-39,-51,-34,62,-59,62,-65,62,180,-35,180,62,-55,62,-64,62,-23,-26,62,-56,-57,-50,62,62,]),'KEY_FPRINTF':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[24,-54,-60,24,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,24,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,24,24,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,24,-50,24,24,24,24,]),'KEY_CONTINUE':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[25,-54,-60,25,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,25,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,25,25,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,25,-50,25,25,25,25,]),'KEY_ELSE':([17,18,19,20,22,25,26,27,30,31,33,35,37,38,40,41,44,45,47,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,89,94,95,104,113,114,115,116,117,119,120,121,123,133,136,137,146,148,150,155,157,178,183,190,191,192,194,199,200,203,204,205,206,208,219,220,222,223,225,226,230,231,232,243,245,247,249,252,260,261,273,274,275,276,278,280,282,],[-129,-123,-121,-120,-54,-132,-16,-128,-58,-133,-60,-131,-119,-124,-126,-125,-122,-130,-136,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-127,-61,-156,-135,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-15,-156,-134,-65,-22,-35,-156,-20,-19,-55,-151,-153,-156,-150,-148,-149,-64,-23,-26,-144,246,-56,-57,-140,253,-146,-156,-142,-50,-154,-138,-145,-143,-152,-156,-137,-155,-141,-139,-147,]),'KEY_NIL':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,221,251,255,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-80,-75,-77,64,-78,-74,-73,-76,-79,64,64,64,-72,-71,-70,64,-66,-67,-69,-68,64,64,64,64,64,64,64,]),'KEY_IS':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,194,208,219,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,124,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-55,-64,-23,-26,-56,-57,-50,]),'KEY_ABS':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,221,251,255,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-80,-75,-77,61,-78,-74,-73,-76,-79,61,61,61,-72,-71,-70,61,-66,-67,-69,-68,61,61,61,61,61,61,61,]),'KEY_POINTER':([108,111,218,237,256,],[172,172,172,172,172,]),'KEY_BOOLEAN':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,108,111,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,218,221,237,251,255,256,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,174,174,-80,-75,-77,66,-78,-74,-73,-76,-79,66,66,66,-72,-71,-70,66,-66,-67,-69,-68,66,66,66,66,174,66,174,66,66,174,]),'GT':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,194,208,219,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,126,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-55,-64,-23,-26,-56,-57,-50,]),'OR':([17,18,19,20,22,25,26,27,30,31,33,35,37,38,40,41,44,45,47,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,89,94,95,104,113,114,115,116,117,119,120,121,123,133,136,137,146,148,155,157,178,183,190,191,192,194,199,200,204,205,206,208,219,220,222,223,225,226,232,243,245,247,249,252,260,261,273,275,276,278,282,],[-129,-123,-121,-120,-54,-132,-16,-128,-58,-133,-60,-131,-119,-124,-126,-125,-122,-130,-136,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-127,-61,-156,-135,-37,-156,-36,-24,179,-38,-27,-25,-156,-39,-51,-34,-59,-15,-134,-65,-22,-35,-156,-20,-19,-55,-151,-153,-150,-148,-149,-64,-23,-26,-144,244,-56,-57,-146,-156,-142,-50,-154,-138,-145,-143,-152,-137,-155,-141,-147,]),'KEY_RETURN':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[27,-54,-60,27,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,27,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,27,27,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,27,-50,27,27,27,27,]),'VREAL':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,221,251,255,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-80,-75,-77,68,-78,-74,-73,-76,-79,68,68,68,-72,-71,-70,68,-66,-67,-69,-68,68,68,68,68,68,68,68,]),'KEY_FCLOSE':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[29,-54,-60,29,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,29,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,29,29,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,29,-50,29,29,29,29,]),'COLON':([53,55,177,189,214,246,],[-105,111,-104,221,237,262,]),'VCHAR':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,221,250,251,255,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-80,-75,-77,69,-78,-74,-73,-76,-79,69,69,69,-72,-71,-70,69,-66,-67,-69,-68,69,69,69,69,69,69,69,69,]),'IDENT':([1,7,8,9,10,11,12,13,14,15,16,21,22,27,30,32,33,36,42,46,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,87,88,90,91,92,94,95,96,98,100,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,140,146,150,152,154,157,166,168,178,179,180,181,182,183,184,185,186,187,188,191,192,193,194,197,208,209,210,215,218,219,220,221,225,226,237,241,243,247,248,251,253,255,256,258,262,274,279,],[3,-156,-156,-156,33,-8,50,-10,51,-12,53,33,33,33,-58,94,-60,33,33,33,-46,-45,-30,-28,-29,33,33,-32,-31,-43,-41,-44,-47,-48,33,-156,-58,33,33,-156,33,-18,33,-40,-49,33,-33,-42,-53,33,33,33,33,33,-61,33,149,33,33,33,33,33,-7,33,161,-9,-11,161,177,-37,-156,-36,-24,-21,-38,-27,-25,-156,-80,-75,-77,33,-78,-74,-73,-76,-79,-39,-51,-34,33,33,33,-59,33,33,33,-65,33,53,-22,-72,-71,-70,33,-35,-66,-67,-69,-68,33,-20,-19,33,-55,33,-64,33,33,33,161,-23,-26,33,-56,-57,161,53,33,-50,33,33,33,33,161,53,33,33,33,]),'KEY_BREAK':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[35,-54,-60,35,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,35,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,35,35,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,35,-50,35,35,35,35,]),'KEY_IF':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[36,-54,-60,36,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,36,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,36,36,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,36,-50,36,36,36,36,]),'KEY_THEN':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,97,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,192,194,208,219,220,225,226,247,265,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,150,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,-50,274,]),'DIVIDE':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,72,75,80,81,83,84,85,94,113,115,119,120,121,133,136,137,146,157,183,194,208,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-58,-156,-40,-49,-33,-42,-53,-61,-37,-36,-38,-27,185,-39,-51,-34,-59,-65,-35,-55,-64,-26,-56,-57,-50,]),'LRB':([21,22,23,24,27,28,29,30,33,36,39,43,46,47,48,61,62,70,72,73,74,77,79,82,83,85,86,90,94,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,146,147,152,166,168,179,180,181,182,184,185,186,187,188,193,194,197,209,221,225,226,251,255,],[73,-54,87,88,73,90,91,-58,-60,73,98,100,73,103,105,73,73,73,-58,73,73,73,73,73,103,-53,140,73,-61,73,73,73,73,73,-80,-75,-77,73,-78,-74,-73,-76,-79,73,-59,201,73,73,215,-72,-71,-70,73,-66,-67,-69,-68,73,73,-55,73,73,73,-56,-57,73,73,]),'KEY_WRITELN':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[39,-54,-60,39,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,39,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,39,39,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,39,-50,39,39,39,39,]),'MODULUS':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,72,75,80,81,83,84,85,94,113,115,119,120,121,133,136,137,146,157,183,194,208,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-58,-156,-40,-49,-33,-42,-53,-61,-37,-36,-38,-27,187,-39,-51,-34,-59,-65,-35,-55,-64,-26,-56,-57,-50,]),'KEY_TYPE':([4,5,6,7,8,9,11,12,13,14,15,16,106,109,110,],[-156,-6,8,-156,-156,-156,-8,-2,-10,-3,-12,-4,-7,-9,-11,]),'KEY_EXIT':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[40,-54,-60,40,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,40,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,40,40,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,40,-50,40,40,40,40,]),'KEY_VAR':([4,5,6,7,8,9,11,12,13,14,15,16,106,109,110,],[-156,-6,9,-156,-156,-156,-8,-2,-10,-3,-12,-4,-7,-9,-11,]),'DOT':([30,33,72,85,94,149,194,225,226,],[92,-60,92,138,-61,202,-55,-56,-57,]),'LT':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,194,208,219,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,125,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-55,-64,-23,-26,-56,-57,-50,]),'KEY_CASE':([122,244,],[189,189,]),'KEY_CHR':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,221,251,255,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-80,-75,-77,74,-78,-74,-73,-76,-79,74,74,74,-72,-71,-70,74,-66,-67,-69,-68,74,74,74,74,74,74,74,]),'KEY_RECORD':([108,111,218,237,256,],[168,168,168,168,168,]),'KEY_REAL':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,108,111,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,218,221,237,251,255,256,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,167,167,-80,-75,-77,67,-78,-74,-73,-76,-79,67,67,67,-72,-71,-70,67,-66,-67,-69,-68,67,67,67,67,167,67,167,67,67,167,]),'KEY_FOR':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[23,-54,-60,23,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,23,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,23,23,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,23,-50,23,23,23,23,]),'PLUS':([21,22,27,33,36,46,56,57,58,59,60,63,64,65,66,67,68,69,71,72,73,75,80,81,82,83,84,85,90,94,98,100,102,103,107,113,114,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,132,133,136,137,139,146,152,157,166,178,183,191,193,194,197,208,209,219,220,221,225,226,247,251,255,],[77,-54,77,-60,77,77,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,77,-156,-40,-49,77,-33,-42,-53,77,-61,77,77,77,77,77,-37,-156,-36,-24,181,-38,-27,-25,-156,-80,-75,-77,77,-78,-74,-73,-76,-79,-39,-51,-34,77,-59,77,-65,77,181,-35,181,77,-55,77,-64,77,-23,-26,77,-56,-57,-50,77,77,]),'LSB':([33,85,94,194,225,226,],[-60,139,-61,-55,-56,-57,]),'KEY_MODULE':([0,],[1,]),'KEY_ELSEIF':([17,18,19,20,22,25,26,27,30,31,33,35,37,38,40,41,44,45,47,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,89,94,95,104,113,114,115,116,117,119,120,121,123,133,136,137,146,148,150,155,157,178,183,191,192,194,199,200,203,204,205,206,208,219,220,225,226,230,231,232,245,247,249,252,273,274,275,276,278,280,282,],[-129,-123,-121,-120,-54,-132,-16,-128,-58,-133,-60,-131,-119,-124,-126,-125,-122,-130,-136,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-127,-61,-156,-135,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-15,-156,-134,-65,-22,-35,-20,-19,-55,-151,-153,-156,-150,-148,-149,-64,-23,-26,-56,-57,-140,251,-146,-142,-50,-154,-138,-152,-156,-137,-155,-141,-139,-147,]),'KEY_READ':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[28,-54,-60,28,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,28,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,28,28,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,28,-50,28,28,28,28,]),'KEY_DO':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[42,-54,-60,42,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,42,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,42,42,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,42,-50,42,42,42,42,]),'EQUAL':([22,30,33,51,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,194,208,219,220,225,226,247,],[-54,93,-60,108,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,130,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-55,-64,-23,-26,-56,-57,-50,]),'RRB':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,103,113,114,115,116,117,118,119,120,121,123,133,136,137,144,145,146,151,153,155,156,157,158,178,183,191,192,194,196,208,219,220,225,226,228,233,238,239,247,263,264,267,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,157,-37,-156,-36,-24,-21,183,-38,-27,-25,-156,-39,-51,-34,199,200,-59,204,206,-134,-63,-65,208,-22,-35,-20,-19,-55,226,-64,-23,-26,-56,-57,249,-62,-99,258,-50,272,273,276,]),'KEY_INTEGER':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,108,111,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,218,221,237,251,255,256,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,165,165,-80,-75,-77,80,-78,-74,-73,-76,-79,80,80,80,-72,-71,-70,80,-66,-67,-69,-68,80,80,80,80,165,80,165,80,80,165,]),'VSTRING':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,198,201,209,221,251,255,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-80,-75,-77,81,-78,-74,-73,-76,-79,81,81,81,-72,-71,-70,81,-66,-67,-69,-68,81,81,81,81,81,81,81,81,81,]),'LCB':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,221,251,255,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-80,-75,-77,82,-78,-74,-73,-76,-79,82,82,82,-72,-71,-70,82,-66,-67,-69,-68,82,82,82,82,82,82,82,]),'KEY_IN':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,194,208,219,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,132,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-55,-64,-23,-26,-56,-57,-50,]),'KEY_CHAR':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,108,111,124,125,126,127,128,129,130,131,132,139,152,166,179,180,181,182,184,185,186,187,188,193,197,209,218,221,237,251,255,256,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,175,175,-80,-75,-77,84,-78,-74,-73,-76,-79,84,84,84,-72,-71,-70,84,-66,-67,-69,-68,84,84,84,84,175,84,175,84,84,175,]),'KEY_WHILE':([10,17,18,19,20,22,25,26,27,30,31,33,35,37,38,40,41,42,44,45,47,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,89,94,95,99,104,113,114,115,116,117,119,120,121,123,133,136,137,146,148,150,154,155,157,178,183,191,192,194,199,200,204,205,206,208,219,220,225,226,232,243,245,247,249,252,253,262,273,274,275,276,278,279,282,],[46,-129,-123,-121,-120,-54,-132,-16,-128,-58,-133,-60,-131,-119,-124,-126,-125,46,-122,-130,-136,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-127,-61,46,152,-135,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-15,46,46,-134,-65,-22,-35,-20,-19,-55,-151,-153,-150,-148,-149,-64,-23,-26,-56,-57,-146,46,-142,-50,-154,-138,46,46,-152,46,-137,-155,-141,46,-147,]),'KEY_END':([10,17,18,19,20,22,25,26,27,30,31,33,34,35,37,38,40,41,44,45,47,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,89,94,95,104,113,114,115,116,117,119,120,121,123,133,136,137,146,148,150,154,155,157,161,162,163,164,165,167,168,170,171,173,174,175,178,183,190,191,192,194,199,200,203,204,205,206,207,208,213,216,217,219,220,222,223,225,226,230,231,232,240,241,242,243,245,247,249,252,253,257,258,259,260,261,262,266,269,270,271,273,274,275,276,277,278,279,280,281,282,],[-156,-129,-123,-121,-120,-54,-132,-16,-128,-58,-133,-60,96,-131,-119,-124,-126,-125,-122,-130,-136,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-127,-61,-156,-135,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-15,-156,-156,-134,-65,-82,-92,-85,-83,-87,-91,-156,-84,-90,-86,-88,-89,-22,-35,-156,-20,-19,-55,-151,-153,-156,-150,-148,-149,232,-64,-103,240,-101,-23,-26,-144,245,-56,-57,-140,252,-146,-97,-156,-106,-156,-142,-50,-154,-138,-156,-102,-156,-100,-145,-143,-156,275,-93,277,278,-152,-156,-137,-155,-98,-141,-156,-139,282,-147,]),'GTEQ':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,113,114,115,116,117,119,120,121,123,133,136,137,146,157,178,183,191,194,208,219,220,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,128,-40,-49,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,-65,-22,-35,-20,-55,-64,-23,-26,-56,-57,-50,]),'KEY_FREAD':([10,22,33,42,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,83,84,85,94,95,113,114,115,116,117,119,120,121,123,133,136,137,146,150,154,157,178,183,191,192,194,208,219,220,225,226,243,247,253,262,274,279,],[48,-54,-60,48,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,-33,-42,-53,-61,48,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-51,-34,-59,48,48,-65,-22,-35,-20,-19,-55,-64,-23,-26,-56,-57,48,-50,48,48,48,48,]),'RCB':([22,33,56,57,58,59,60,63,64,65,66,67,68,69,71,72,75,78,80,81,82,83,84,85,94,113,114,115,116,117,119,120,121,123,133,134,136,137,146,157,178,183,191,192,194,208,219,220,224,225,226,247,],[-54,-60,-46,-45,-30,-28,-29,-32,-31,-43,-41,-44,-47,-48,-156,-58,-156,-18,-40,-49,136,-33,-42,-53,-61,-37,-156,-36,-24,-21,-38,-27,-25,-156,-39,-52,-51,-34,-59,-65,-22,-35,-20,-19,-55,-64,-23,-26,247,-56,-57,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ioStatement':([10,42,95,150,154,243,253,262,274,279,],[17,17,17,17,17,17,17,17,17,17,]),'identList':([16,168,241,258,],[55,214,214,214,]),'expList':([103,139,],[158,195,]),'recordType':([108,111,218,237,256,],[163,163,163,163,163,]),'ifStatement':([10,42,95,150,154,243,253,262,274,279,],[19,19,19,19,19,19,19,19,19,19,]),'varss':([9,],[16,]),'fieldList':([168,241,258,],[217,259,217,]),'module':([0,],[2,]),'fieldListSequence':([168,258,],[216,270,]),'string':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,127,139,152,166,182,188,193,197,198,201,209,221,251,255,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,228,229,58,58,58,58,]),'procedureCall':([10,42,95,150,154,243,253,262,274,279,],[20,20,20,20,20,20,20,20,20,20,]),'number':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,127,139,152,166,182,188,193,197,209,221,251,255,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'qualident':([10,21,22,27,36,42,46,61,62,70,73,74,77,79,82,87,90,95,98,100,102,103,107,127,139,140,150,152,154,166,182,188,193,197,209,215,221,243,248,251,253,255,262,274,279,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,196,22,22,22,22,22,22,22,22,22,238,22,22,22,22,22,22,22,22,22,]),'char':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,127,139,152,166,182,188,193,197,209,221,250,251,255,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,264,60,60,]),'fileStatement':([10,42,95,150,154,243,253,262,274,279,],[45,45,45,45,45,45,45,45,45,45,]),'case':([122,244,],[190,261,]),'addOperator':([117,178,191,],[182,182,182,]),'set':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,127,139,152,166,182,188,193,197,209,221,251,255,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'simpless':([71,114,123,],[117,178,191,]),'length':([166,255,],[211,268,]),'typess':([8,],[14,]),'ifss':([203,],[231,]),'statement':([10,42,95,150,154,243,253,262,274,279,],[26,26,148,26,26,26,26,26,26,26,]),'identdef':([10,21,22,27,36,42,46,61,62,70,73,74,77,79,82,87,88,90,91,92,95,98,100,102,103,105,107,127,138,139,140,150,152,154,166,182,188,193,197,209,210,215,221,243,248,251,253,255,262,274,279,],[30,72,72,72,72,30,72,72,72,72,72,72,72,72,72,72,143,72,145,146,30,72,72,72,72,159,72,72,194,72,72,30,72,30,72,72,72,72,72,72,234,72,72,30,72,72,30,72,30,30,30,]),'actualParameters':([47,83,],[104,137,]),'empty':([4,7,8,9,10,42,71,75,95,114,123,150,154,168,190,203,211,241,243,253,258,262,274,279,],[5,11,13,15,31,31,116,120,31,116,116,31,31,213,222,230,235,213,31,31,213,31,31,31,]),'whileStatement':([10,42,95,150,154,243,253,262,274,279,],[18,18,18,18,18,18,18,18,18,18,]),'statementSequence':([10,42,150,154,243,253,262,274,279,],[34,99,203,207,260,266,271,280,281,]),'relation':([78,],[127,]),'constantDeclaration':([12,],[49,]),'term':([21,27,36,46,62,73,77,82,90,98,100,102,103,107,127,139,152,166,182,193,197,209,221,251,255,],[71,71,71,71,114,71,123,71,71,71,71,71,71,71,71,71,71,71,219,71,71,71,71,71,71,]),'assignment':([10,42,87,95,150,154,243,248,253,262,274,279,],[37,37,141,37,37,37,37,263,37,37,37,37,]),'designator2':([22,],[85,]),'forStatement':([10,42,95,150,154,243,253,262,274,279,],[38,38,38,38,38,38,38,38,38,38,]),'varType':([108,111,218,237,256,],[164,164,164,164,164,]),'factor':([21,27,36,46,61,62,70,73,74,77,79,82,90,98,100,102,103,107,127,139,152,166,182,188,193,197,209,221,251,255,],[75,75,75,75,113,75,115,75,119,75,133,75,75,75,75,75,75,75,75,75,75,75,75,220,75,75,75,75,75,75,]),'expression':([21,27,36,46,73,82,90,98,100,102,103,107,139,152,166,193,197,209,221,251,255,],[76,89,97,101,118,134,144,151,153,155,156,160,156,205,212,134,227,233,243,265,212,]),'declarationSequence':([4,],[6,]),'doWhileStatement':([10,42,95,150,154,243,253,262,274,279,],[41,41,41,41,41,41,41,41,41,41,]),'conss':([7,],[12,]),'simpleExpression':([21,27,36,46,73,82,90,98,100,102,103,107,127,139,152,166,193,197,209,221,251,255,],[78,78,78,78,78,78,78,78,78,78,78,78,192,78,78,78,78,78,78,78,78,78,]),'comass':([211,],[236,]),'typeDeclaration':([14,],[52,]),'element':([82,193,],[135,224,]),'type':([108,111,218,237,256,],[169,176,242,257,269,]),'arrayType':([108,111,218,237,256,],[170,170,170,170,170,]),'switchStatement':([10,42,95,150,154,243,253,262,274,279,],[44,44,44,44,44,44,44,44,44,44,]),'casess':([190,],[223,]),'termss':([75,],[121,]),'pointerType':([108,111,218,237,256,],[173,173,173,173,173,]),'baseType':([215,],[239,]),'variableDeclaration':([16,],[54,]),'designator':([10,21,22,27,36,42,46,61,62,70,73,74,77,79,82,87,90,95,98,100,102,103,107,127,139,150,152,154,166,182,188,193,197,209,221,243,248,251,253,255,262,274,279,],[47,83,86,83,83,47,83,83,83,83,83,83,83,83,83,142,83,47,83,83,83,83,83,83,83,47,83,47,83,83,83,83,83,83,83,47,142,83,47,83,47,47,47,]),'mulOperator':([121,],[188,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',30),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',36),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',37),
  ('declarationSequence -> declarationSequence','declarationSequence',1,'p_declarationSequence','par.py',38),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',39),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',44),
  ('conss -> empty','conss',1,'p_conss','par.py',45),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',50),
  ('typess -> empty','typess',1,'p_typess','par.py',51),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',56),
  ('varss -> empty','varss',1,'p_varss','par.py',57),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',62),
  ('procss -> empty','procss',1,'p_procss','par.py',63),
  ('statementSequence -> statementSequence SCOLON statement','statementSequence',3,'p_statementSequence','par.py',68),
  ('statementSequence -> statement','statementSequence',1,'p_statementSequence','par.py',69),
  ('constantDeclaration -> IDENT ASSIGN expression','constantDeclaration',3,'p_constantDeclaration','par.py',74),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',79),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',80),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',86),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',87),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',92),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',93),
  ('term -> factor termss','term',2,'p_term','par.py',98),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',103),
  ('termss -> empty','termss',1,'p_termss','par.py',104),
  ('factor -> number','factor',1,'p_factor','par.py',109),
  ('factor -> char','factor',1,'p_factor','par.py',110),
  ('factor -> string','factor',1,'p_factor','par.py',111),
  ('factor -> KEY_NIL','factor',1,'p_factor','par.py',112),
  ('factor -> set','factor',1,'p_factor','par.py',113),
  ('factor -> designator','factor',1,'p_factor','par.py',114),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',115),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',116),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',120),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator -> qualident','designator',1,'p_designator','par.py',159),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',164),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT identdef','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> MULTIPLY IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT SCOLON','procedureDeclaration',5,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT COLON type','procedureHeading',4,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB FPSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON FPSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('FPSection -> IDENT FPs COLON type','FPSection',4,'p_FPSection','par.py',325),
  ('FPs -> FPs COMMA IDENT','FPs',3,'p_FPs','par.py',330),
  ('FPs -> empty','FPs',1,'p_FPs','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',360),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',365),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',366),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',371),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',372),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',377),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',378),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',383),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',384),
  ('casess -> casess OR case','casess',3,'p_casess','par.py',389),
  ('casess -> empty','casess',1,'p_casess','par.py',390),
  ('case -> KEY_CASE COLON expression statementSequence','case',4,'p_case','par.py',395),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',400),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',405),
  ('doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression','doWhileStatement',4,'p_doWhileStatement','par.py',410),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',415),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',416),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',417),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',422),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',423),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',424),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',425),
  ('empty -> <empty>','empty',0,'p_empty','par.py',430),
]
