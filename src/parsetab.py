
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITELN LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence SCOLON statement\n\t\t\t\t\t\t\t  | statement\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\t\t\t   | qualident\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT \n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB FPSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON FPSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tFPSection : IDENT FPs COLON type\n\t\t\n\t\t\tFPs : FPs COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : casess OR case\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE COLON expression statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO statementSequence KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_FREAD':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[23,23,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,23,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,23,23,-65,-59,-22,-20,-35,-19,-55,-64,23,-26,-23,-57,-56,-50,23,23,23,23,23,]),'AND':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,81,83,84,89,95,119,120,121,122,123,125,127,131,154,160,181,190,199,229,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-31,-41,-43,-53,-61,-37,-36,-27,179,-38,-34,-51,-39,-65,-59,-35,-55,-64,-26,-57,-56,-50,]),'KEY_ELSE':([15,16,17,19,20,22,25,29,31,32,33,34,36,38,40,41,43,45,46,61,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,99,117,118,119,120,121,122,123,125,127,129,130,131,141,149,152,154,160,173,174,175,181,187,190,194,195,196,197,199,202,205,229,231,232,233,236,237,238,239,240,259,261,262,265,268,285,287,300,302,303,305,309,310,314,],[-133,-121,-129,-128,-16,-54,-119,-122,-126,-124,-130,-123,-136,-131,-125,-120,-58,-132,-60,-127,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-156,-53,-61,-135,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-15,-156,-134,-65,-59,-148,-22,-20,-35,-19,-55,-156,-149,-156,-151,-64,-150,-153,-26,-23,-57,-56,-144,263,-140,267,-146,-50,-156,-142,-138,-154,-145,-143,-155,-156,-137,-152,-141,-139,-147,]),'DOT':([43,46,79,89,95,142,190,232,233,],[103,-60,103,144,-61,188,-55,-57,-56,]),'KEY_IN':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,190,199,229,231,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,136,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-55,-64,-26,-23,-57,-56,-50,]),'NOT':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,203,217,235,266,296,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-78,-74,-76,-79,-80,-75,-77,-73,60,-67,60,-68,-69,-66,60,-71,60,-70,-72,60,60,60,60,60,60,]),'MINUS':([19,22,24,27,35,46,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,89,92,94,95,97,98,101,114,116,117,118,119,120,121,122,123,125,127,129,130,131,132,133,134,135,136,137,138,139,140,145,154,160,174,175,181,182,190,199,200,203,217,229,231,232,233,235,259,266,296,],[57,-54,57,57,57,-60,-49,-32,-156,-48,-28,-30,57,-29,-45,-47,-46,-33,-40,-42,-44,57,-58,-156,-31,-41,-43,-53,57,57,-61,57,57,57,57,57,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,183,-39,57,-78,-74,-76,-79,-80,-75,-77,-73,57,-65,-59,183,183,-35,57,-55,-64,57,57,57,-26,-23,-57,-56,57,-50,57,57,]),'OR':([15,16,17,19,20,22,25,29,31,32,33,34,36,38,40,41,43,45,46,61,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,99,117,118,119,120,121,122,123,125,127,129,130,131,141,152,154,160,173,174,175,181,187,190,194,195,197,199,202,205,229,231,232,233,236,237,240,259,261,262,265,268,285,287,300,303,305,309,314,],[-133,-121,-129,-128,-16,-54,-119,-122,-126,-124,-130,-123,-136,-131,-125,-120,-58,-132,-60,-127,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-156,-53,-61,-135,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,186,-39,-15,-134,-65,-59,-148,-22,-20,-35,-19,-55,-156,-149,-151,-64,-150,-153,-26,-23,-57,-56,-144,264,-146,-50,-156,-142,-138,-154,-145,-143,-155,-137,-152,-141,-147,]),'KEY_POINTER':([164,170,223,245,272,281,295,],[210,210,210,210,210,210,210,]),'KEY_RETURN':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[19,19,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,19,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,19,19,-65,-59,-22,-20,-35,-19,-55,-64,19,-26,-23,-57,-56,-50,19,19,19,19,19,]),'GT':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,190,199,229,231,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,139,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-55,-64,-26,-23,-57,-56,-50,]),'LTEQ':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,190,199,229,231,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,135,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-55,-64,-26,-23,-57,-56,-50,]),'KEY_IS':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,190,199,229,231,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,137,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-55,-64,-26,-23,-57,-56,-50,]),'VREAL':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,203,217,235,266,296,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-78,-74,-76,-79,-80,-75,-77,-73,72,-67,72,-68,-69,-66,72,-71,72,-70,-72,72,72,72,72,72,72,]),'VINTEGER':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,203,217,235,260,266,296,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-78,-74,-76,-79,-80,-75,-77,-73,73,-67,73,-68,-69,-66,73,-71,73,-70,-72,73,73,73,73,284,73,73,]),'KEY_WHILE':([9,15,16,17,18,19,20,22,25,29,31,32,33,34,36,38,40,41,43,45,46,56,61,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,99,117,118,119,120,121,122,123,125,127,129,130,131,141,149,151,152,154,160,173,174,175,181,187,190,195,197,199,202,205,221,229,231,232,233,240,259,261,262,265,267,268,286,300,302,303,305,309,311,314,],[35,-133,-121,-129,35,-128,-16,-54,-119,-122,-126,-124,-130,-123,-136,-131,-125,-120,-58,-132,-60,116,-127,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,35,-53,-61,-135,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-15,35,35,-134,-65,-59,-148,-22,-20,-35,-19,-55,-149,-151,-64,-150,-153,35,-26,-23,-57,-56,-146,-50,35,-142,-138,35,-154,35,-155,35,-137,-152,-141,35,-147,]),'RRB':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,98,117,118,119,120,121,122,123,124,125,127,129,130,131,148,150,152,153,154,155,157,160,162,168,174,175,181,187,189,190,199,206,207,208,209,211,213,214,216,218,219,220,226,229,231,232,233,241,242,257,258,259,271,274,275,276,284,290,291,298,299,307,312,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-53,-61,154,-156,-156,-37,-36,-27,-25,-38,181,-34,-51,-24,-21,-39,195,197,-134,199,-65,-63,202,-59,205,225,-22,-20,-35,-19,232,-55,-64,-85,-84,-90,-92,-82,-89,-88,-87,-83,-86,-91,-156,-26,-23,-57,-56,-62,268,-114,283,-50,-106,-97,294,-99,300,304,305,-115,-113,-93,-98,]),'KEY_INTEGER':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,164,170,176,177,178,179,180,182,183,184,185,186,200,203,217,223,235,245,266,272,281,295,296,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-78,-74,-76,-79,-80,-75,-77,-73,75,216,216,-67,75,-68,-69,-66,75,-71,75,-70,-72,75,75,75,216,75,216,75,216,216,216,75,]),'KEY_WRITE':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[26,26,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,26,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,26,26,-65,-59,-22,-20,-35,-19,-55,-64,26,-26,-23,-57,-56,-50,26,26,26,26,26,]),'AT':([9,18,19,22,24,27,35,43,46,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,92,94,95,97,98,100,101,102,103,105,114,116,117,118,119,120,121,122,123,125,127,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,149,151,154,160,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,199,200,203,217,221,229,231,232,233,235,250,259,261,266,267,269,286,296,302,311,],[30,30,30,30,30,30,30,-58,-60,30,30,30,30,-49,-32,-156,-48,30,-28,-30,30,-29,-45,-47,-46,-33,-40,-42,-44,30,-58,-156,-31,30,-41,-43,-18,30,-53,30,30,30,-61,30,30,30,30,30,30,30,30,30,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,30,-78,-74,-76,-79,-80,-75,-77,-73,30,30,30,30,30,-65,-59,-22,-20,-67,30,-68,-69,-66,-35,30,-71,30,-70,-72,-19,-55,30,-64,30,30,30,30,-26,-23,-57,-56,30,30,-50,30,30,30,30,30,30,30,30,]),'NEQUAL':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,190,199,229,231,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,134,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-55,-64,-26,-23,-57,-56,-50,]),'COMMA':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,112,113,117,118,119,120,121,122,123,125,126,127,128,129,130,131,146,153,154,155,156,160,174,175,181,187,190,191,199,224,228,229,231,232,233,234,241,244,247,251,252,255,256,259,277,278,297,308,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-53,-61,-105,171,-156,-156,-37,-36,-27,-25,-38,-34,-52,-51,182,-24,-21,-39,192,200,-65,-63,201,-59,-22,-20,-35,-19,-55,200,-64,-156,-104,-26,-23,-57,-56,260,-62,270,171,-156,-96,-117,280,-50,-95,296,-116,-94,]),'KEY_RECORD':([164,170,223,245,272,281,295,],[215,215,215,215,215,215,215,]),'KEY_CONST':([4,5,6,7,8,10,11,12,13,14,47,48,52,53,108,110,115,163,165,169,],[-156,-6,8,-14,-156,-156,-5,-156,-8,-2,-10,-3,-12,-4,-156,-13,-7,-9,8,-11,]),'KEY_ARRAY':([164,170,223,245,272,281,295,],[217,217,217,217,217,217,217,]),'KEY_VAR':([4,5,6,7,8,10,11,12,13,14,47,48,52,53,108,110,115,163,165,169,],[-156,-6,12,-14,-156,-156,-5,-156,-8,-2,-10,-3,-12,-4,-156,-13,-7,-9,12,-11,]),'KEY_FOPEN':([104,],[161,]),'KEY_IF':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[27,27,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,27,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,27,27,-65,-59,-22,-20,-35,-19,-55,-64,27,-26,-23,-57,-56,-50,27,27,27,27,27,]),'KEY_READ':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[28,28,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,28,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,28,28,-65,-59,-22,-20,-35,-19,-55,-64,28,-26,-23,-57,-56,-50,28,28,28,28,28,]),'KEY_REAL':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,164,170,176,177,178,179,180,182,183,184,185,186,200,203,217,223,235,245,266,272,281,295,296,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-78,-74,-76,-79,-80,-75,-77,-73,77,220,220,-67,77,-68,-69,-66,77,-71,77,-70,-72,77,77,77,220,77,220,77,220,220,220,77,]),'MODULUS':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,81,83,84,89,95,119,120,121,122,123,125,127,131,154,160,181,190,199,229,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-31,-41,-43,-53,-61,-37,-36,-27,178,-38,-34,-51,-39,-65,-59,-35,-55,-64,-26,-57,-56,-50,]),'RSB':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,127,129,130,131,154,155,160,174,175,181,187,190,191,199,229,231,232,233,241,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-63,-59,-22,-20,-35,-19,-55,233,-64,-26,-23,-57,-56,-62,-50,]),'KEY_THEN':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,93,95,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,187,190,199,229,231,232,233,259,288,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-53,149,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-19,-55,-64,-26,-23,-57,-56,-50,302,]),'PLUS':([19,22,24,27,35,46,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,89,92,94,95,97,98,101,114,116,117,118,119,120,121,122,123,125,127,129,130,131,132,133,134,135,136,137,138,139,140,145,154,160,174,175,181,182,190,199,200,203,217,229,231,232,233,235,259,266,296,],[58,-54,58,58,58,-60,-49,-32,-156,-48,-28,-30,58,-29,-45,-47,-46,-33,-40,-42,-44,58,-58,-156,-31,-41,-43,-53,58,58,-61,58,58,58,58,58,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,185,-39,58,-78,-74,-76,-79,-80,-75,-77,-73,58,-65,-59,185,185,-35,58,-55,-64,58,58,58,-26,-23,-57,-56,58,-50,58,58,]),'KEY_ABS':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,203,217,235,266,296,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-78,-74,-76,-79,-80,-75,-77,-73,59,-67,59,-68,-69,-66,59,-71,59,-70,-72,59,59,59,59,59,59,]),'KEY_TO':([210,],[245,]),'KEY_PROCEDURE':([4,5,6,7,8,10,11,12,13,14,47,48,52,53,108,110,115,163,165,169,],[-156,-6,-156,-14,-156,-156,50,-156,-8,-2,-10,-3,-12,-4,-156,-13,-7,-9,-156,-11,]),'GTEQ':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,190,199,229,231,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,133,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-55,-64,-26,-23,-57,-56,-50,]),'KEY_CASE':([147,264,],[193,193,]),'VSTRING':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,201,203,204,217,235,266,296,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-78,-74,-76,-79,-80,-75,-77,-73,62,-67,62,-68,-69,-66,62,-71,62,-70,-72,62,62,62,62,62,62,62,62,]),'KEY_CHR':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,203,217,235,266,296,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-78,-74,-76,-79,-80,-75,-77,-73,66,-67,66,-68,-69,-66,66,-71,66,-70,-72,66,66,66,66,66,66,]),'KEY_BEGIN':([4,5,6,7,8,10,11,12,13,14,22,46,47,48,52,53,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,91,95,96,108,110,115,117,118,119,120,121,122,123,125,127,129,130,131,154,160,163,165,169,174,175,181,187,190,199,229,231,232,233,259,304,],[-156,-6,9,-14,-156,-156,-5,-156,-8,-2,-54,-60,-10,-3,-12,-4,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-53,147,-61,151,-156,-13,-7,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-9,221,-11,-22,-20,-35,-19,-55,-64,-26,-23,-57,-56,-50,311,]),'KEY_MODULE':([0,],[2,]),'KEY_END':([9,15,16,17,19,20,21,22,25,29,31,32,33,34,36,38,40,41,43,45,46,61,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,99,117,118,119,120,121,122,123,125,127,129,130,131,141,149,151,152,154,160,173,174,175,181,187,190,194,195,196,197,198,199,202,205,206,207,208,209,211,213,214,215,216,218,219,220,221,229,231,232,233,236,237,238,239,240,246,248,249,253,259,261,262,265,267,268,271,273,274,285,286,287,289,292,293,294,300,301,302,303,305,306,307,309,310,311,312,313,314,],[-156,-133,-121,-129,-128,-16,87,-54,-119,-122,-126,-124,-130,-123,-136,-131,-125,-120,-58,-132,-60,-127,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-156,-53,-61,-135,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-15,-156,-156,-134,-65,-59,-148,-22,-20,-35,-19,-55,-156,-149,-156,-151,240,-64,-150,-153,-85,-84,-90,-92,-82,-89,-88,-156,-87,-83,-86,-91,-156,-26,-23,-57,-56,-144,262,-140,265,-146,-103,-101,274,279,-50,-156,-142,-138,-156,-154,-106,-156,-97,-145,-156,-143,303,-102,-100,-156,-155,309,-156,-137,-152,312,-93,-141,-139,-156,-98,314,-147,]),'KEY_EXIT':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[31,31,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,31,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,31,31,-65,-59,-22,-20,-35,-19,-55,-64,31,-26,-23,-57,-56,-50,31,31,31,31,31,]),'RCB':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,126,127,129,130,131,154,160,174,175,181,187,190,199,229,230,231,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,127,-58,-156,-31,-41,-43,-18,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-52,-51,-24,-21,-39,-65,-59,-22,-20,-35,-19,-55,-64,-26,259,-23,-57,-56,-50,]),'LT':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,190,199,229,231,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,138,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-55,-64,-26,-23,-57,-56,-50,]),'KEY_DO':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[18,18,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,18,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,18,18,-65,-59,-22,-20,-35,-19,-55,-64,18,-26,-23,-57,-56,-50,18,18,18,18,18,]),'KEY_SWITCH':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[24,24,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,24,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,24,24,-65,-59,-22,-20,-35,-19,-55,-64,24,-26,-23,-57,-56,-50,24,24,24,24,24,]),'EQUAL':([22,43,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,107,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,190,199,229,231,232,233,259,],[-54,104,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,140,-53,-61,164,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-55,-64,-26,-23,-57,-56,-50,]),'LRB':([19,22,23,24,26,27,28,35,36,37,39,42,43,44,46,57,58,59,60,66,69,74,78,79,82,88,89,92,94,95,97,98,101,109,114,116,132,133,134,135,136,137,138,139,140,145,160,161,176,177,178,179,180,182,183,184,185,186,190,200,203,215,217,232,233,235,266,296,],[69,-54,90,69,92,69,94,69,98,100,101,102,-58,105,-60,69,69,69,69,69,69,98,69,-58,69,143,-53,69,69,-61,69,69,69,168,69,69,69,-78,-74,-76,-79,-80,-75,-77,-73,69,-59,204,-67,69,-68,-69,-66,69,-71,69,-70,-72,-55,69,69,250,69,-57,-56,69,69,69,]),'KEY_ORD':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,203,217,235,266,296,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-78,-74,-76,-79,-80,-75,-77,-73,82,-67,82,-68,-69,-66,82,-71,82,-70,-72,82,82,82,82,82,82,]),'KEY_SET':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,164,170,176,177,178,179,180,182,183,184,185,186,200,203,217,223,235,245,266,272,281,295,296,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-78,-74,-76,-79,-80,-75,-77,-73,71,209,209,-67,71,-68,-69,-66,71,-71,71,-70,-72,71,71,71,209,71,209,71,209,209,209,71,]),'KEY_FOR':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[42,42,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,42,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,42,42,-65,-59,-22,-20,-35,-19,-55,-64,42,-26,-23,-57,-56,-50,42,42,42,42,42,]),'LCB':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,203,217,235,266,296,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-78,-74,-76,-79,-80,-75,-77,-73,78,-67,78,-68,-69,-66,78,-71,78,-70,-72,78,78,78,78,78,78,]),'COLON':([112,113,167,193,224,225,228,247,255,256,263,283,297,],[-105,170,223,235,-156,-112,-104,272,-117,281,286,-111,-116,]),'DIVIDE':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,81,83,84,89,95,119,120,121,122,123,125,127,131,154,160,181,190,199,229,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-31,-41,-43,-53,-61,-37,-36,-27,176,-38,-34,-51,-39,-65,-59,-35,-55,-64,-26,-57,-56,-50,]),'VCHAR':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,203,217,235,266,270,296,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-78,-74,-76,-79,-80,-75,-77,-73,65,-67,65,-68,-69,-66,65,-71,65,-70,-72,65,65,65,65,65,65,65,]),'KEY_CHAR':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,164,170,176,177,178,179,180,182,183,184,185,186,200,203,217,223,235,245,266,272,281,295,296,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-78,-74,-76,-79,-80,-75,-77,-73,76,213,213,-67,76,-68,-69,-66,76,-71,76,-70,-72,76,76,76,213,76,213,76,213,213,213,76,]),'KEY_WRITELN':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[39,39,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,39,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,39,39,-65,-59,-22,-20,-35,-19,-55,-64,39,-26,-23,-57,-56,-50,39,39,39,39,39,]),'$end':([1,188,],[0,-1,]),'KEY_OF':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,95,117,118,119,120,121,122,123,125,127,129,130,131,154,160,174,175,181,187,190,199,229,231,232,233,251,252,259,277,278,308,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-65,-59,-22,-20,-35,-19,-55,-64,-26,-23,-57,-56,-156,-96,-50,-95,295,-94,]),'KEY_BREAK':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[38,38,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,38,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,38,38,-65,-59,-22,-20,-35,-19,-55,-64,38,-26,-23,-57,-56,-50,38,38,38,38,38,]),'SCOLON':([3,9,15,16,17,18,19,20,21,22,25,29,31,32,33,34,36,38,40,41,43,45,46,49,51,55,56,61,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,99,106,111,117,118,119,120,121,122,123,125,127,129,130,131,141,149,151,152,154,159,160,167,172,173,174,175,181,187,190,195,196,197,198,199,202,205,206,207,208,209,211,212,213,214,215,216,218,219,220,221,222,225,226,227,229,231,232,233,240,243,246,248,249,253,254,257,258,259,261,262,265,267,268,271,273,274,283,285,286,289,292,293,294,298,299,300,301,302,303,305,306,307,309,310,311,312,313,314,],[4,-156,-133,-121,-129,-156,-128,-16,86,-54,-119,-122,-126,-124,-130,-123,-136,-131,-125,-120,-58,-132,-60,108,110,115,86,-127,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-156,-53,-61,-135,163,169,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-15,-156,-156,-134,-65,203,-59,-110,-17,-148,-22,-20,-35,-19,-55,-149,86,-151,86,-64,-150,-153,-85,-84,-90,-92,-82,-81,-89,-88,-156,-87,-83,-86,-91,-156,-108,-112,-156,-107,-26,-23,-57,-56,-146,269,-103,-101,273,86,-109,-114,282,-50,-156,-142,-138,-156,-154,-106,-156,-97,-111,86,-156,86,-102,-100,-156,-115,-113,-155,86,-156,-137,-152,273,-93,-141,86,-156,-98,86,-147,]),'KEY_TYPE':([4,5,6,7,8,10,11,12,13,14,47,48,52,53,108,110,115,163,165,169,],[-156,-6,10,-14,-156,-156,-5,-156,-8,-2,-10,-3,-12,-4,-156,-13,-7,-9,10,-11,]),'MULTIPLY':([22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,81,83,84,89,95,119,120,121,122,123,125,127,131,154,160,181,190,199,229,232,233,259,],[-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-31,-41,-43,-53,-61,-37,-36,-27,180,-38,-34,-51,-39,-65,-59,-35,-55,-64,-26,-57,-56,-50,]),'ASSIGN':([22,36,43,46,54,79,89,95,158,160,190,232,233,],[-54,97,-58,-60,114,-58,-53,-61,97,-59,-55,-57,-56,]),'KEY_NIL':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,176,177,178,179,180,182,183,184,185,186,200,203,217,235,266,296,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-78,-74,-76,-79,-80,-75,-77,-73,81,-67,81,-68,-69,-66,81,-71,81,-70,-72,81,81,81,81,81,81,]),'KEY_FCLOSE':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[44,44,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,44,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,44,44,-65,-59,-22,-20,-35,-19,-55,-64,44,-26,-23,-57,-56,-50,44,44,44,44,44,]),'KEY_CONTINUE':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[45,45,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,45,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,45,45,-65,-59,-22,-20,-35,-19,-55,-64,45,-26,-23,-57,-56,-50,45,45,45,45,45,]),'KEY_ELSEIF':([15,16,17,19,20,22,25,29,31,32,33,34,36,38,40,41,43,45,46,61,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,99,117,118,119,120,121,122,123,125,127,129,130,131,141,149,152,154,160,173,174,175,181,187,190,195,196,197,199,202,205,229,231,232,233,238,239,240,259,262,265,268,300,302,303,305,309,310,314,],[-133,-121,-129,-128,-16,-54,-119,-122,-126,-124,-130,-123,-136,-131,-125,-120,-58,-132,-60,-127,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,-156,-53,-61,-135,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,-15,-156,-134,-65,-59,-148,-22,-20,-35,-19,-55,-149,-156,-151,-64,-150,-153,-26,-23,-57,-56,-140,266,-146,-50,-142,-138,-154,-155,-156,-137,-152,-141,-139,-147,]),'LSB':([46,89,95,190,232,233,],[-60,145,-61,-55,-57,-56,]),'KEY_BOOLEAN':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,164,170,176,177,178,179,180,182,183,184,185,186,200,203,217,223,235,245,266,272,281,295,296,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-78,-74,-76,-79,-80,-75,-77,-73,83,214,214,-67,83,-68,-69,-66,83,-71,83,-70,-72,83,83,83,214,83,214,83,214,214,214,83,]),'KEY_STRING':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,133,134,135,136,137,138,139,140,145,164,170,176,177,178,179,180,182,183,184,185,186,200,203,217,223,235,245,266,272,281,295,296,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-78,-74,-76,-79,-80,-75,-77,-73,84,208,208,-67,84,-68,-69,-66,84,-71,84,-70,-72,84,84,84,208,84,208,84,208,208,208,84,]),'KEY_FPRINTF':([9,18,22,46,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,80,81,83,84,85,86,89,95,117,118,119,120,121,122,123,125,127,129,130,131,149,151,154,160,174,175,181,187,190,199,221,229,231,232,233,259,261,267,286,302,311,],[37,37,-54,-60,-49,-32,-156,-48,-28,-30,-29,-45,-47,-46,-33,-40,-42,-44,-58,-156,-31,-41,-43,-18,37,-53,-61,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,37,37,-65,-59,-22,-20,-35,-19,-55,-64,37,-26,-23,-57,-56,-50,37,37,37,37,37,]),'IDENT':([2,8,9,10,12,13,14,18,19,22,24,27,30,35,43,46,47,48,50,52,53,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,92,94,95,97,98,100,101,102,103,105,114,115,116,117,118,119,120,121,122,123,125,127,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,149,151,154,160,163,164,166,168,169,170,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,199,200,203,215,217,221,223,229,231,232,233,235,245,250,259,261,266,267,269,272,273,279,280,281,282,286,294,295,296,302,311,],[3,-156,46,-156,-156,-8,54,46,46,46,46,46,95,46,-58,-60,-10,107,109,-12,112,46,46,46,46,-49,-32,-156,-48,46,-28,-30,46,-29,-45,-47,-46,-33,-40,-42,-44,46,-58,-156,-31,46,-41,-43,-18,46,142,-53,46,46,46,-61,46,46,46,46,46,46,46,46,-7,46,-156,-156,-37,-36,-27,-25,-38,-34,-51,-24,-21,-39,46,-78,-74,-76,-79,-80,-75,-77,-73,46,46,46,46,46,-65,-59,-9,211,222,224,-11,211,228,-22,-20,-67,46,-68,-69,-66,-35,46,-71,46,-70,-72,-19,-55,46,-64,46,46,112,46,46,211,-26,-23,-57,-56,46,211,46,-50,46,46,46,46,211,112,-118,297,211,224,46,112,211,46,46,46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empty':([4,6,8,9,10,12,18,64,80,86,108,117,118,149,151,165,194,196,215,221,224,226,251,261,267,273,286,294,302,311,],[5,7,13,15,47,52,15,121,129,15,5,129,129,15,15,7,236,238,246,15,255,257,277,15,15,246,15,246,15,15,]),'relation':([85,],[132,]),'declarationSequence':([4,108,],[6,165,]),'conss':([8,],[14,]),'procedureDeclaration':([11,],[51,]),'comass':([251,],[278,]),'typeDeclaration':([48,],[106,]),'forStatement':([9,18,86,149,151,221,261,267,286,302,311,],[32,32,32,32,32,32,32,32,32,32,32,]),'ifStatement':([9,18,86,149,151,221,261,267,286,302,311,],[16,16,16,16,16,16,16,16,16,16,16,]),'set':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,145,177,182,184,200,203,217,235,266,296,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'ioStatement':([9,18,86,149,151,221,261,267,286,302,311,],[17,17,17,17,17,17,17,17,17,17,17,]),'fieldListSequence':([215,294,],[249,306,]),'typess':([10,],[48,]),'string':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,145,177,182,184,200,201,203,204,217,235,266,296,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,242,68,244,68,68,68,68,]),'statement':([9,18,86,149,151,221,261,267,286,302,311,],[20,20,141,20,20,20,20,20,20,20,20,]),'statementSequence':([9,18,149,151,221,261,267,286,302,311,],[21,56,196,198,253,285,289,301,310,313,]),'procedureBody':([108,],[166,]),'length':([217,296,],[251,308,]),'char':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,145,177,182,184,200,203,217,235,266,270,296,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,291,70,]),'type':([164,170,223,245,272,281,295,],[212,227,254,271,292,298,307,]),'FPs':([224,],[256,]),'simpless':([80,117,118,],[130,174,175,]),'assignment':([9,18,86,102,149,151,221,261,267,269,286,302,311,],[25,25,25,159,25,25,25,25,25,290,25,25,25,]),'case':([147,264,],[194,287,]),'varType':([164,170,223,245,272,281,295,],[218,218,218,218,218,218,218,]),'variableDeclaration':([53,],[111,]),'module':([0,],[1,]),'casess':([194,],[237,]),'pointerType':([164,170,223,245,272,281,295,],[219,219,219,219,219,219,219,]),'varss':([12,],[53,]),'arrayType':([164,170,223,245,272,281,295,],[207,207,207,207,207,207,207,]),'baseType':([250,],[275,]),'qualident':([9,18,19,22,24,27,35,57,58,59,60,66,69,78,82,86,92,94,97,98,101,102,103,114,116,132,143,145,149,151,177,182,184,200,203,217,221,235,250,261,266,267,269,286,296,302,311,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,160,22,22,22,189,22,22,22,22,22,22,22,22,22,22,22,276,22,22,22,22,22,22,22,22,]),'expression':([19,24,27,35,69,78,92,94,97,98,101,114,116,145,182,200,203,217,235,266,296,],[61,91,93,96,124,126,148,150,152,155,157,172,173,155,126,241,243,252,261,288,252,]),'switchStatement':([9,18,86,149,151,221,261,267,286,302,311,],[29,29,29,29,29,29,29,29,29,29,29,]),'constantDeclaration':([14,],[55,]),'mulOperator':([122,],[177,]),'expList':([98,145,],[153,191,]),'term':([19,24,27,35,57,58,69,78,92,94,97,98,101,114,116,132,145,182,184,200,203,217,235,266,296,],[80,80,80,80,117,118,80,80,80,80,80,80,80,80,80,80,80,80,231,80,80,80,80,80,80,]),'FPSection':([168,282,],[226,299,]),'factor':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,145,177,182,184,200,203,217,235,266,296,],[64,64,64,64,64,64,119,120,123,64,64,131,64,64,64,64,64,64,64,64,64,229,64,64,64,64,64,64,64,64,]),'ifss':([196,],[239,]),'doWhileStatement':([9,18,86,149,151,221,261,267,286,302,311,],[40,40,40,40,40,40,40,40,40,40,40,]),'formalss':([226,],[258,]),'number':([19,24,27,35,57,58,59,60,66,69,78,82,92,94,97,98,101,114,116,132,145,177,182,184,200,203,217,235,266,296,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'procss':([6,165,],[11,11,]),'formalParameters':([109,],[167,]),'fileStatement':([9,18,86,149,151,221,261,267,286,302,311,],[33,33,33,33,33,33,33,33,33,33,33,]),'whileStatement':([9,18,86,149,151,221,261,267,286,302,311,],[34,34,34,34,34,34,34,34,34,34,34,]),'element':([78,182,],[128,230,]),'termss':([64,],[122,]),'designator':([9,18,19,22,24,27,35,57,58,59,60,66,69,78,82,86,92,94,97,98,101,102,114,116,132,145,149,151,177,182,184,200,203,217,221,235,261,266,267,269,286,296,302,311,],[36,36,74,88,74,74,74,74,74,74,74,74,74,74,74,36,74,74,74,74,74,158,74,74,74,74,36,36,74,74,74,74,74,74,36,74,36,74,36,158,36,74,36,36,]),'procedureHeading':([11,],[49,]),'identList':([53,215,273,294,],[113,247,247,247,]),'procedureCall':([9,18,86,149,151,221,261,267,286,302,311,],[41,41,41,41,41,41,41,41,41,41,41,]),'designator2':([22,],[89,]),'recordType':([164,170,223,245,272,281,295,],[206,206,206,206,206,206,206,]),'identdef':([9,18,19,22,24,27,35,57,58,59,60,66,69,78,82,86,90,92,94,97,98,100,101,102,103,105,114,116,132,143,144,145,149,151,177,182,184,192,200,203,217,221,235,250,261,266,267,269,286,296,302,311,],[43,43,79,79,79,79,79,79,79,79,79,79,79,79,79,43,146,79,79,79,79,156,79,79,79,162,79,79,79,79,190,79,43,43,79,79,79,234,79,79,79,43,79,79,43,79,43,79,43,79,43,43,]),'addOperator':([130,174,175,],[184,184,184,]),'fieldList':([215,273,294,],[248,293,248,]),'actualParameters':([36,74,],[99,125,]),'simpleExpression':([19,24,27,35,69,78,92,94,97,98,101,114,116,132,145,182,200,203,217,235,266,296,],[85,85,85,85,85,85,85,85,85,85,85,85,85,187,85,85,85,85,85,85,85,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',30),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',36),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',37),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',38),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',39),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',44),
  ('conss -> empty','conss',1,'p_conss','par.py',45),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',50),
  ('typess -> empty','typess',1,'p_typess','par.py',51),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',56),
  ('varss -> empty','varss',1,'p_varss','par.py',57),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',62),
  ('procss -> empty','procss',1,'p_procss','par.py',63),
  ('statementSequence -> statementSequence SCOLON statement','statementSequence',3,'p_statementSequence','par.py',68),
  ('statementSequence -> statement','statementSequence',1,'p_statementSequence','par.py',69),
  ('constantDeclaration -> IDENT ASSIGN expression','constantDeclaration',3,'p_constantDeclaration','par.py',74),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',79),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',80),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',86),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',87),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',92),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',93),
  ('term -> factor termss','term',2,'p_term','par.py',98),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',103),
  ('termss -> empty','termss',1,'p_termss','par.py',104),
  ('factor -> number','factor',1,'p_factor','par.py',109),
  ('factor -> char','factor',1,'p_factor','par.py',110),
  ('factor -> string','factor',1,'p_factor','par.py',111),
  ('factor -> KEY_NIL','factor',1,'p_factor','par.py',112),
  ('factor -> set','factor',1,'p_factor','par.py',113),
  ('factor -> designator','factor',1,'p_factor','par.py',114),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',115),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',116),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',120),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator -> qualident','designator',1,'p_designator','par.py',159),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',164),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB FPSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON FPSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('FPSection -> IDENT FPs COLON type','FPSection',4,'p_FPSection','par.py',325),
  ('FPs -> FPs COMMA IDENT','FPs',3,'p_FPs','par.py',330),
  ('FPs -> empty','FPs',1,'p_FPs','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',360),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',365),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',366),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',371),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',372),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',377),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',378),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',383),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',384),
  ('casess -> casess OR case','casess',3,'p_casess','par.py',389),
  ('casess -> empty','casess',1,'p_casess','par.py',390),
  ('case -> KEY_CASE COLON expression statementSequence','case',4,'p_case','par.py',395),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',400),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',405),
  ('doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression','doWhileStatement',4,'p_doWhileStatement','par.py',410),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',415),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',416),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',417),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',422),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',423),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',424),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',425),
  ('empty -> <empty>','empty',0,'p_empty','par.py',430),
]
