
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ADD KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DEL KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_READBOOL KEY_READCHAR KEY_READINT KEY_READREAL KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITEBOOL KEY_WRITECHAR KEY_WRITEINT KEY_WRITELN KEY_WRITEREAL LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence statement SCOLON\n\t\t\t\t\t\t\t  | empty\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression COLON type\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | boolean\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL LRB designator RRB\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\t\t   | KEY_CHR LRB factor RRB\n\t\t\t\t   | KEY_ORD LRB factor RRB\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tboolean : VBOOLEAN\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator2 LSB expList RSB\n\t\t\t\t\t\t| empty\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT\n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB fpSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON fpSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tfpSection : IDENT fps COLON type\n\t\t\n\t\t\tfps : fps COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\t\t\t  | memoryalloc\n\t\t\t\t\t  | setStatement\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tsetStatement : qualident DOT KEY_ADD LRB expression RRB\n\t\t\t\t\t\t | qualident DOT KEY_DEL LRB expression RRB\n\n\t\t\n\t\t\tmemoryalloc : KEY_NEW LRB designator RRB\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : case casess\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE expression COLON statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEINT LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITECHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITEBOOL LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\t\t\t\t| KEY_READINT LRB expression RRB\n\t\t\t\t\t\t| KEY_READREAL LRB expression RRB\n\t\t\t\t\t\t| KEY_READCHAR LRB expression RRB\n\t\t\t\t\t\t| KEY_READBOOL LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'KEY_CHAR':([38,47,48,54,77,84,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,170,182,184,185,186,187,188,189,190,191,192,193,234,235,249,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,302,303,322,331,332,348,],[91,91,91,91,151,151,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,151,91,-78,-79,-77,-80,-81,91,-76,-83,-82,91,91,151,151,-75,91,-73,-74,91,91,-71,-70,-69,-72,91,91,91,91,91,151,151,91,151,91,91,]),'KEY_END':([12,22,23,132,138,151,152,154,156,158,159,160,161,162,163,164,165,172,211,215,216,239,240,242,248,273,275,280,295,300,301,317,318,319,323,324,333,334,335,342,345,349,354,356,358,359,361,364,366,367,371,373,374,],[-173,34,-16,-173,-15,-92,-93,-87,-90,-173,-85,-95,-89,-94,-88,-91,-86,-173,-173,279,-173,300,-104,-106,307,-173,321,-173,-109,-100,-173,-173,343,-152,347,-148,-173,-103,-105,-151,-173,-173,-96,364,-173,-153,368,-101,372,-173,-173,-147,375,]),'KEY_RETURN':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,38,-16,-173,-15,-173,-173,38,-173,38,38,38,-173,-173,-173,38,38,38,-173,-173,38,38,]),'KEY_DEL':([148,],[232,]),'KEY_MODULE':([0,],[2,]),'KEY_BREAK':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,40,-16,-173,-15,-173,-173,40,-173,40,40,40,-173,-173,-173,40,40,40,-173,-173,40,40,]),'VREAL':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-78,-79,-77,-80,-81,96,-76,-83,-82,96,96,-75,96,-73,-74,96,96,-71,-70,-69,-72,96,96,96,96,96,96,96,96,]),'$end':([1,175,],[0,-1,]),'ASSIGN':([33,62,63,73,75,114,120,144,149,150,206,229,293,330,],[87,140,-63,-61,-173,-173,-61,-64,-57,-60,140,-62,-58,-59,]),'NOT':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-78,-79,-77,-80,-81,97,-76,-83,-82,97,97,-75,97,-73,-74,97,97,-71,-70,-69,-72,97,97,97,97,97,97,97,97,]),'KEY_IN':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,256,258,259,260,263,285,293,310,311,312,313,315,330,340,],[-63,-43,-45,-41,-173,-50,-30,192,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-173,-173,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,]),'KEY_THEN':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,133,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,257,259,260,263,285,293,310,311,312,313,315,330,340,360,],[-63,-43,-45,-41,-173,-50,-30,-18,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,216,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-19,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,367,]),'KEY_WRITEINT':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,46,-16,-173,-15,-173,-173,46,-173,46,46,46,-173,-173,-173,46,46,46,-173,-173,46,46,]),'KEY_CHR':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-78,-79,-77,-80,-81,100,-76,-83,-82,100,100,-75,100,-73,-74,100,100,-71,-70,-69,-72,100,100,100,100,100,100,100,100,]),'KEY_SWITCH':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,47,-16,-173,-15,-173,-173,47,-173,47,47,47,-173,-173,-173,47,47,47,-173,-173,47,47,]),'KEY_WHILE':([12,22,23,132,138,172,211,215,216,248,275,279,280,345,349,358,359,361,366,367,371,373,374,],[-173,48,-16,-173,-15,-173,-173,48,-173,48,48,322,48,-173,-173,-173,48,48,48,-173,-173,48,48,]),'COMMA':([24,25,63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,166,168,177,178,179,180,181,183,194,195,196,197,199,200,201,203,204,222,223,224,227,229,236,237,241,243,244,257,259,260,263,285,293,294,296,297,310,311,312,313,315,325,326,327,330,337,340,355,],[-108,78,-63,-43,-45,-41,-173,-50,-30,-18,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-107,-173,251,-21,-24,-37,-38,-39,-40,-173,-173,-35,-56,262,-55,-25,-27,-68,-66,286,288,-62,-99,-173,78,-120,304,-19,-22,-20,-36,-67,-58,286,332,-98,-23,-47,-48,-32,-26,-65,350,351,-59,-119,-54,-97,]),'KEY_SET':([38,47,48,54,77,84,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,170,182,184,185,186,187,188,189,190,191,192,193,234,235,249,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,302,303,322,331,332,348,],[117,117,117,117,160,160,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,160,117,-78,-79,-77,-80,-81,117,-76,-83,-82,117,117,160,160,-75,117,-73,-74,117,117,-71,-70,-69,-72,117,117,117,117,117,160,160,117,160,117,117,]),'COLON':([24,25,63,81,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,166,167,168,174,178,179,180,181,183,194,195,196,197,201,203,204,222,229,241,243,244,257,259,260,263,285,293,305,310,311,312,313,315,320,330,337,340,344,],[-108,77,-63,170,-43,-45,-41,-173,-50,-30,-18,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-107,-115,-173,249,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,302,-120,303,-19,-22,-20,-36,-67,-58,-114,-23,-47,-48,-32,-26,345,-59,-119,-54,358,]),'KEY_IF':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,54,-16,-173,-15,-173,-173,54,-173,54,54,54,-173,-173,-173,54,54,54,-173,-173,54,54,]),'KEY_WRITEREAL':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,55,-16,-173,-15,-173,-173,55,-173,55,55,55,-173,-173,-173,55,55,55,-173,-173,55,55,]),'KEY_TYPE':([4,5,6,7,8,9,10,11,13,14,18,19,20,21,27,29,79,83,85,86,],[-173,9,-6,-173,-5,-173,-173,-14,-4,-12,-3,-10,-8,-2,-13,-173,-11,9,-9,-7,]),'MINUS':([38,47,48,54,63,87,89,91,92,93,94,96,99,102,103,105,106,107,109,110,112,113,114,116,117,118,119,120,121,122,124,125,126,131,134,135,136,137,139,140,142,144,145,149,150,157,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,201,203,204,222,229,234,256,258,259,260,262,263,269,274,285,286,291,292,293,310,311,312,313,315,322,330,332,340,348,],[108,108,108,108,-63,108,108,-43,-45,-41,-173,-50,-30,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,108,-46,108,-29,-61,-52,-173,108,108,108,108,108,108,108,108,108,108,108,-64,108,-57,-60,108,255,-24,-37,-38,108,-39,-78,-79,-77,-80,-81,108,-76,-83,-82,108,-40,-173,-173,-35,-55,-25,-27,-68,-62,108,-173,-173,255,255,108,-36,108,108,-67,108,108,108,-58,-23,-47,-48,-32,-26,108,-59,108,-54,108,]),'VBOOLEAN':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-78,-79,-77,-80,-81,109,-76,-83,-82,109,109,-75,109,-73,-74,109,109,-71,-70,-69,-72,109,109,109,109,109,109,109,109,]),'KEY_FPRINTF':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,37,-16,-173,-15,-173,-173,37,-173,37,37,37,-173,-173,-173,37,37,37,-173,-173,37,37,]),'KEY_READBOOL':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,60,-16,-173,-15,-173,-173,60,-173,60,60,60,-173,-173,-173,60,60,60,-173,-173,60,60,]),'KEY_IS':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,256,258,259,260,263,285,293,310,311,312,313,315,330,340,],[-63,-43,-45,-41,-173,-50,-30,191,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-173,-173,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,]),'PLUS':([38,47,48,54,63,87,89,91,92,93,94,96,99,102,103,105,106,107,109,110,112,113,114,116,117,118,119,120,121,122,124,125,126,131,134,135,136,137,139,140,142,144,145,149,150,157,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,201,203,204,222,229,234,256,258,259,260,262,263,269,274,285,286,291,292,293,310,311,312,313,315,322,330,332,340,348,],[111,111,111,111,-63,111,111,-43,-45,-41,-173,-50,-30,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,111,-46,111,-29,-61,-52,-173,111,111,111,111,111,111,111,111,111,111,111,-64,111,-57,-60,111,254,-24,-37,-38,111,-39,-78,-79,-77,-80,-81,111,-76,-83,-82,111,-40,-173,-173,-35,-55,-25,-27,-68,-62,111,-173,-173,254,254,111,-36,111,111,-67,111,111,111,-58,-23,-47,-48,-32,-26,111,-59,111,-54,111,]),'KEY_ELSEIF':([23,138,216,280,323,324,367,373,],[-16,-15,-173,-173,348,-148,-173,-147,]),'KEY_NIL':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-78,-79,-77,-80,-81,115,-76,-83,-82,115,115,-75,115,-73,-74,115,115,-71,-70,-69,-72,115,115,115,115,115,115,115,115,]),'IDENT':([2,7,9,10,12,13,14,16,18,19,20,21,22,23,34,38,47,48,54,68,77,78,79,80,82,84,85,86,87,89,90,97,98,100,104,108,111,116,118,123,124,125,126,129,130,131,132,134,135,136,137,138,139,140,142,143,145,146,157,158,170,172,182,184,185,186,187,188,189,190,191,192,193,198,211,215,216,233,234,235,238,248,249,252,253,254,255,262,264,265,266,267,268,269,274,275,280,286,288,291,292,301,302,303,304,306,307,322,331,332,333,341,345,348,349,358,359,361,366,367,371,373,374,],[3,-173,-173,-173,-173,24,-12,28,30,-10,-8,33,63,-16,88,63,63,63,63,144,159,166,-11,168,171,159,-9,-7,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-173,63,63,63,63,-15,63,63,63,63,63,63,63,24,159,-173,63,-78,-79,-77,-80,-81,63,-76,-83,-82,63,63,-173,63,-173,63,63,159,63,63,159,-75,63,-73,-74,63,63,-71,-70,-69,-72,63,63,63,63,63,63,63,63,24,159,159,337,168,-121,63,159,63,24,63,-173,63,-173,-173,63,63,63,-173,-173,63,63,]),'LCB':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-78,-79,-77,-80,-81,116,-76,-83,-82,116,116,-75,116,-73,-74,116,116,-71,-70,-69,-72,116,116,116,116,116,116,116,116,]),'KEY_READ':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,66,-16,-173,-15,-173,-173,66,-173,66,66,66,-173,-173,-173,66,66,66,-173,-173,66,66,]),'KEY_CONTINUE':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,69,-16,-173,-15,-173,-173,69,-173,69,69,69,-173,-173,-173,69,69,69,-173,-173,69,69,]),'KEY_READCHAR':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,70,-16,-173,-15,-173,-173,70,-173,70,70,70,-173,-173,-173,70,70,70,-173,-173,70,70,]),'GT':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,256,258,259,260,263,285,293,310,311,312,313,315,330,340,],[-63,-43,-45,-41,-173,-50,-30,187,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-173,-173,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,]),'NEQUAL':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,256,258,259,260,263,285,293,310,311,312,313,315,330,340,],[-63,-43,-45,-41,-173,-50,-30,186,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-173,-173,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,]),'MODULUS':([63,91,92,93,96,99,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,180,181,183,194,197,201,203,204,222,229,256,258,263,285,293,311,312,313,315,330,340,],[-63,-43,-45,-41,-50,-30,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-37,-38,-39,-40,-35,-55,265,-27,-68,-62,-173,-173,-36,-67,-58,-47,-48,-32,-26,-59,-54,]),'AND':([63,91,92,93,96,99,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,180,181,183,194,197,201,203,204,222,229,256,258,263,285,293,311,312,313,315,330,340,],[-63,-43,-45,-41,-50,-30,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-37,-38,-39,-40,-35,-55,268,-27,-68,-62,-173,-173,-36,-67,-58,-47,-48,-32,-26,-59,-54,]),'KEY_BOOLEAN':([38,47,48,54,77,84,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,170,182,184,185,186,187,188,189,190,191,192,193,234,235,249,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,302,303,322,331,332,348,],[102,102,102,102,164,164,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,164,102,-78,-79,-77,-80,-81,102,-76,-83,-82,102,102,164,164,-75,102,-73,-74,102,102,-71,-70,-69,-72,102,102,102,102,102,164,164,102,164,102,102,]),'KEY_REAL':([38,47,48,54,77,84,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,170,182,184,185,186,187,188,189,190,191,192,193,234,235,249,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,302,303,322,331,332,348,],[92,92,92,92,162,162,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,162,92,-78,-79,-77,-80,-81,92,-76,-83,-82,92,92,162,162,-75,92,-73,-74,92,92,-71,-70,-69,-72,92,92,92,92,92,162,162,92,162,92,92,]),'SCOLON':([3,12,15,17,22,23,26,31,32,36,38,40,41,42,44,49,56,59,61,62,63,64,65,69,71,72,73,74,75,76,81,91,92,93,94,95,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,132,138,141,144,149,150,151,152,153,154,156,158,159,160,161,162,163,164,165,167,169,171,172,173,178,179,180,181,183,194,195,196,197,201,203,204,205,211,215,216,219,222,225,229,239,240,242,245,246,247,248,250,257,259,260,263,270,271,272,275,276,277,278,280,281,282,283,284,285,287,289,293,295,300,301,305,308,310,311,312,313,315,316,321,324,330,333,334,335,336,338,339,340,343,345,346,347,349,352,353,354,356,358,359,361,364,366,367,368,369,370,371,372,373,374,375,],[4,-173,27,29,-173,-16,79,85,86,-127,-131,-134,-128,-123,-125,-136,-122,-138,138,-144,-63,-137,-132,-135,-129,-126,-61,-133,-173,-124,-113,-43,-45,-41,-173,-130,-50,-30,-18,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-173,-15,-143,-64,-57,-60,-92,-93,-110,-87,-90,-173,-85,-95,-89,-94,-88,-91,-86,-115,-173,-111,-173,-84,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,269,-173,-173,-173,-163,-68,-139,-62,301,-104,-106,306,-117,-112,-173,-161,-19,-22,-20,-36,-157,-160,-158,-173,-142,-170,-165,-173,-159,-166,-162,-168,-67,-164,-167,-58,-109,-100,-173,-114,-17,-23,-47,-48,-32,-26,341,-154,-136,-59,-173,-103,-105,-118,-116,-171,-54,-150,-173,-156,-146,-173,-140,-141,-96,301,-173,-173,-173,-101,-173,-173,-145,-172,-169,-173,-149,-173,-173,-155,]),'KEY_WRITEBOOL':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,35,-16,-173,-15,-173,-173,35,-173,35,35,35,-173,-173,-173,35,35,35,-173,-173,35,35,]),'RRB':([63,80,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,136,139,144,149,150,151,152,154,156,159,160,161,162,163,164,165,169,176,178,179,180,181,183,194,195,196,197,201,202,203,204,207,208,209,212,213,214,217,218,220,221,222,223,224,225,226,228,229,245,246,256,257,258,259,260,261,263,285,293,295,298,299,300,309,310,311,312,313,315,325,328,329,330,336,338,340,354,357,362,363,364,],[-63,167,-43,-45,-41,-173,-50,-30,-18,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,219,222,-64,-57,-60,-92,-93,-87,-90,-85,-95,-89,-94,-88,-91,-86,-173,250,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,263,-25,-27,270,271,272,276,277,278,281,282,283,284,-68,-66,285,-139,287,289,-62,305,-117,311,-19,312,-22,-20,313,-36,-67,-58,-109,-102,333,-100,339,-23,-47,-48,-32,-26,-65,352,353,-59,-118,-116,-54,-96,365,369,370,-101,]),'KEY_POINTER':([77,84,170,235,249,302,303,331,],[155,155,155,155,155,155,155,155,]),'KEY_INTEGER':([38,47,48,54,77,84,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,170,182,184,185,186,187,188,189,190,191,192,193,234,235,249,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,302,303,322,331,332,348,],[93,93,93,93,156,156,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,156,93,-78,-79,-77,-80,-81,93,-76,-83,-82,93,93,156,156,-75,93,-73,-74,93,93,-71,-70,-69,-72,93,93,93,93,93,156,156,93,156,93,93,]),'DOT':([63,73,75,88,114,120,144,149,150,229,293,330,],[-63,146,148,175,-173,146,-64,233,-60,-62,-58,-59,]),'EQUAL':([30,63,73,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,256,258,259,260,263,285,293,310,311,312,313,315,330,340,],[84,-63,147,-43,-45,-41,-173,-50,-30,190,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-173,-173,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,]),'KEY_PROCEDURE':([4,5,6,7,8,9,10,11,13,14,18,19,20,21,27,29,79,83,85,86,],[-173,-173,-6,-173,16,-173,-173,-14,-4,-12,-3,-10,-8,-2,-13,-173,-11,-173,-9,-7,]),'KEY_FOR':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,39,-16,-173,-15,-173,-173,39,-173,39,39,39,-173,-173,-173,39,39,39,-173,-173,39,39,]),'KEY_RECORD':([77,84,170,235,249,302,303,331,],[158,158,158,158,158,158,158,158,]),'KEY_TO':([155,],[235,]),'KEY_FOPEN':([147,],[230,]),'KEY_NEW':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,50,-16,-173,-15,-173,-173,50,-173,50,50,50,-173,-173,-173,50,50,50,-173,-173,50,50,]),'KEY_WRITE':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,43,-16,-173,-15,-173,-173,43,-173,43,43,43,-173,-173,-173,43,43,43,-173,-173,43,43,]),'GTEQ':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,256,258,259,260,263,285,293,310,311,312,313,315,330,340,],[-63,-43,-45,-41,-173,-50,-30,188,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-173,-173,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,]),'LSB':([63,73,75,114,120,144,149,150,229,293,330,],[-63,-61,-173,-173,-61,-64,234,-60,-62,-58,-59,]),'OR':([63,91,92,93,94,96,99,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,256,258,259,260,263,285,293,310,311,312,313,315,330,340,],[-63,-43,-45,-41,-173,-50,-30,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,252,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-173,-173,252,252,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,]),'KEY_WRITECHAR':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,45,-16,-173,-15,-173,-173,45,-173,45,45,45,-173,-173,-173,45,45,45,-173,-173,45,45,]),'KEY_ABS':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-78,-79,-77,-80,-81,98,-76,-83,-82,98,98,-75,98,-73,-74,98,98,-71,-70,-69,-72,98,98,98,98,98,98,98,98,]),'KEY_FREAD':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,67,-16,-173,-15,-173,-173,67,-173,67,67,67,-173,-173,-173,67,67,67,-173,-173,67,67,]),'KEY_ELSE':([23,138,216,273,280,317,318,319,323,324,342,345,359,367,373,],[-16,-15,-173,-173,-173,-173,344,-152,349,-148,-151,-173,-153,-173,-147,]),'KEY_EXIT':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,71,-16,-173,-15,-173,-173,71,-173,71,71,71,-173,-173,-173,71,71,71,-173,-173,71,71,]),'KEY_READREAL':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,57,-16,-173,-15,-173,-173,57,-173,57,57,57,-173,-173,-173,57,57,57,-173,-173,57,57,]),'MULTIPLY':([63,91,92,93,96,99,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,180,181,183,194,197,201,203,204,222,229,256,258,263,285,293,311,312,313,315,330,340,],[-63,-43,-45,-41,-50,-30,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-37,-38,-39,-40,-35,-55,267,-27,-68,-62,-173,-173,-36,-67,-58,-47,-48,-32,-26,-59,-54,]),'KEY_CONST':([4,5,6,7,8,9,10,11,13,14,18,19,20,21,27,29,79,83,85,86,],[-173,10,-6,-173,-5,-173,-173,-14,-4,-12,-3,-10,-8,-2,-13,-173,-11,10,-9,-7,]),'DIVIDE':([63,91,92,93,96,99,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,180,181,183,194,197,201,203,204,222,229,256,258,263,285,293,311,312,313,315,330,340,],[-63,-43,-45,-41,-50,-30,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-37,-38,-39,-40,-35,-55,266,-27,-68,-62,-173,-173,-36,-67,-58,-47,-48,-32,-26,-59,-54,]),'KEY_ORD':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-78,-79,-77,-80,-81,104,-76,-83,-82,104,104,-75,104,-73,-74,104,104,-71,-70,-69,-72,104,104,104,104,104,104,104,104,]),'VINTEGER':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,350,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-78,-79,-77,-80,-81,105,-76,-83,-82,105,105,-75,105,-73,-74,105,105,-71,-70,-69,-72,105,105,105,105,105,105,105,105,362,]),'KEY_READINT':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,52,-16,-173,-15,-173,-173,52,-173,52,52,52,-173,-173,-173,52,52,52,-173,-173,52,52,]),'KEY_DO':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,53,-16,-173,-15,-173,-173,53,-173,53,53,53,-173,-173,-173,53,53,53,-173,-173,53,53,]),'KEY_STRING':([38,47,48,54,77,84,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,170,182,184,185,186,187,188,189,190,191,192,193,234,235,249,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,302,303,322,331,332,348,],[106,106,106,106,152,152,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,152,106,-78,-79,-77,-80,-81,106,-76,-83,-82,106,106,152,152,-75,106,-73,-74,106,106,-71,-70,-69,-72,106,106,106,106,106,152,152,106,152,106,106,]),'LTEQ':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,256,258,259,260,263,285,293,310,311,312,313,315,330,340,],[-63,-43,-45,-41,-173,-50,-30,185,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-173,-173,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,]),'VSTRING':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,251,252,253,254,255,262,264,265,266,267,268,269,274,286,290,291,292,322,332,348,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-78,-79,-77,-80,-81,107,-76,-83,-82,107,107,107,-75,107,-73,-74,107,107,-71,-70,-69,-72,107,107,107,107,107,107,107,107,107,]),'KEY_VAR':([4,5,6,7,8,9,10,11,13,14,18,19,20,21,27,29,79,83,85,86,],[-173,7,-6,-173,-5,-173,-173,-14,-4,-12,-3,-10,-8,-2,-13,-173,-11,7,-9,-7,]),'KEY_FCLOSE':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,51,-16,-173,-15,-173,-173,51,-173,51,51,51,-173,-173,-173,51,51,51,-173,-173,51,51,]),'KEY_WRITELN':([12,22,23,132,138,172,211,215,216,248,275,280,345,349,358,359,361,366,367,371,373,374,],[-173,58,-16,-173,-15,-173,-173,58,-173,58,58,58,-173,-173,-173,58,58,58,-173,-173,58,58,]),'KEY_ARRAY':([77,84,170,235,249,302,303,331,],[157,157,157,157,157,157,157,157,]),'LT':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,256,258,259,260,263,285,293,310,311,312,313,315,330,340,],[-63,-43,-45,-41,-173,-50,-30,184,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-173,-173,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,]),'KEY_ADD':([148,],[231,]),'KEY_CASE':([23,138,210,273,317,345,359,],[-16,-15,274,274,274,-173,-153,]),'KEY_BEGIN':([4,5,6,7,8,9,10,11,13,14,18,19,20,21,27,29,53,63,79,83,85,86,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,127,128,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,257,259,260,263,285,293,310,311,312,313,315,330,340,365,],[-173,12,-6,-173,-5,-173,-173,-14,-4,-12,-3,-10,-8,-2,-13,-173,132,-63,-11,172,-9,-7,-43,-45,-41,-173,-50,-30,-18,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,210,211,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-19,-22,-20,-36,-67,-58,-23,-47,-48,-32,-26,-59,-54,371,]),'KEY_OF':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,229,236,237,257,259,260,263,285,293,296,297,310,311,312,313,315,330,340,355,],[-63,-43,-45,-41,-173,-50,-30,-18,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-62,-99,-173,-19,-22,-20,-36,-67,-58,331,-98,-23,-47,-48,-32,-26,-59,-54,-97,]),'LRB':([28,35,37,38,39,43,45,46,47,48,50,51,52,54,55,57,58,60,62,63,66,67,70,73,75,87,89,97,98,100,104,108,111,113,114,115,116,118,120,124,125,126,131,134,135,136,137,139,140,142,144,145,149,150,157,158,182,184,185,186,187,188,189,190,191,192,193,229,230,231,232,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,293,322,330,332,348,],[80,89,90,118,123,124,125,126,118,118,129,130,131,118,134,135,136,137,139,-63,142,143,145,-61,-173,118,118,118,118,182,193,118,118,139,-173,198,118,118,-61,118,118,118,118,118,118,118,118,118,118,118,-64,118,-57,-60,118,238,118,-78,-79,-77,-80,-81,118,-76,-83,-82,118,-62,290,291,292,118,-75,118,-73,-74,118,118,-71,-70,-69,-72,118,118,118,118,118,-58,118,-59,118,118,]),'AT':([12,22,23,38,47,48,54,87,89,90,97,98,100,104,108,111,116,118,123,124,125,126,129,130,131,132,134,135,136,137,138,139,140,142,143,145,146,157,172,182,184,185,186,187,188,189,190,191,192,193,198,211,215,216,233,234,238,248,252,253,254,255,262,264,265,266,267,268,269,274,275,280,286,288,291,292,322,332,341,345,348,349,358,359,361,366,367,371,373,374,],[-173,68,-16,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-173,68,68,68,68,-15,68,68,68,68,68,68,68,-173,68,-78,-79,-77,-80,-81,68,-76,-83,-82,68,68,-173,68,-173,68,68,68,68,-75,68,-73,-74,68,68,-71,-70,-69,-72,68,68,68,68,68,68,68,68,68,68,68,-173,68,-173,-173,68,68,68,-173,-173,68,68,]),'RSB':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,201,203,204,222,223,229,257,259,260,263,285,293,294,310,311,312,313,315,325,330,340,],[-63,-43,-45,-41,-173,-50,-30,-18,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-55,-25,-27,-68,-66,-62,-19,-22,-20,-36,-67,-58,330,-23,-47,-48,-32,-26,-65,-59,-54,]),'VCHAR':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,184,185,186,187,188,189,190,191,192,193,234,252,253,254,255,262,264,265,266,267,268,269,274,286,291,292,322,332,348,351,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-78,-79,-77,-80,-81,121,-76,-83,-82,121,121,-75,121,-73,-74,121,121,-71,-70,-69,-72,121,121,121,121,121,121,121,121,121,]),'RCB':([63,91,92,93,94,96,99,101,102,103,105,106,107,109,110,112,113,114,116,117,119,120,121,122,144,149,150,178,179,180,181,183,194,195,196,197,199,201,203,204,222,229,257,259,260,263,285,293,310,311,312,313,314,315,330,340,],[-63,-43,-45,-41,-173,-50,-30,-18,-42,-33,-49,-44,-53,-51,-31,-28,-34,-173,201,-46,-29,-61,-52,-173,-64,-57,-60,-21,-24,-37,-38,-39,-40,-173,-173,-35,-56,-55,-25,-27,-68,-62,-19,-22,-20,-36,-67,-58,-23,-47,-48,-32,340,-26,-59,-54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mulOperator':([203,],[264,]),'identList':([13,158,301,333,],[25,241,241,241,]),'arrayType':([77,84,170,235,249,302,303,331,],[154,154,154,154,154,154,154,154,]),'procedureDeclaration':([8,],[15,]),'case':([210,273,317,],[273,317,317,]),'term':([38,47,48,54,87,89,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,189,193,234,253,262,269,274,286,291,292,322,332,348,],[94,94,94,94,94,94,195,196,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,310,94,94,94,94,94,94,94,94,94,]),'ifss':([280,],[323,]),'variableDeclaration':([13,],[26,]),'formalss':([169,],[245,]),'doWhileStatement':([22,215,248,275,280,359,361,366,373,374,],[41,41,41,41,41,41,41,41,41,41,]),'expression':([38,47,48,54,87,89,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,193,234,262,269,274,286,291,292,322,332,348,],[95,127,128,133,174,176,199,202,207,208,209,214,217,218,220,221,223,225,226,228,236,202,202,223,199,316,320,325,328,329,346,236,360,]),'length':([157,332,],[237,355,]),'fieldListSequence':([158,333,],[239,356,]),'module':([0,],[1,]),'typeDeclaration':([18,],[31,]),'casess':([273,317,],[318,342,]),'forStatement':([22,215,248,275,280,359,361,366,373,374,],[36,36,36,36,36,36,36,36,36,36,]),'switchStatement':([22,215,248,275,280,359,361,366,373,374,],[44,44,44,44,44,44,44,44,44,44,]),'procss':([5,83,],[8,8,]),'procedureHeading':([8,],[17,]),'pointerType':([77,84,170,235,249,302,303,331,],[161,161,161,161,161,161,161,161,]),'relation':([101,],[189,]),'ioStatement':([22,215,248,275,280,359,361,366,373,374,],[65,65,65,65,65,65,65,65,65,65,]),'simpleExpression':([38,47,48,54,87,89,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,189,193,234,262,269,274,286,291,292,322,332,348,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,257,101,101,101,101,101,101,101,101,101,101,101,]),'varType':([77,84,170,235,249,302,303,331,],[165,165,165,165,165,165,165,165,]),'statementSequence':([12,132,172,211,216,345,349,358,367,371,],[22,215,248,275,280,359,361,366,373,374,]),'recordType':([77,84,170,235,249,302,303,331,],[163,163,163,163,163,163,163,163,]),'fps':([168,],[244,]),'baseType':([238,],[299,]),'fpSection':([80,306,],[169,338,]),'type':([77,84,170,235,249,302,303,331,],[153,173,247,295,308,335,336,354,]),'designator2':([75,114,],[149,149,]),'procedureCall':([22,215,248,275,280,359,361,366,373,374,],[42,42,42,42,42,42,42,42,42,42,]),'assignment':([22,123,215,248,275,280,341,359,361,366,373,374,],[56,205,56,56,56,56,357,56,56,56,56,56,]),'addOperator':([178,259,260,],[253,253,253,]),'set':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,189,193,234,253,262,264,269,274,286,291,292,322,332,348,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'setStatement':([22,215,248,275,280,359,361,366,373,374,],[59,59,59,59,59,59,59,59,59,59,]),'number':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,189,193,234,253,262,264,269,274,286,291,292,322,332,348,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'typess':([9,],[18,]),'string':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,189,193,234,251,253,262,264,269,274,286,290,291,292,322,332,348,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,309,110,110,110,110,110,110,327,110,110,110,110,110,]),'formalParameters':([28,],[81,]),'statement':([22,215,248,275,280,359,361,366,373,374,],[61,61,61,61,61,61,61,61,61,61,]),'designator':([22,38,47,48,54,87,89,97,98,100,104,108,111,116,118,123,124,125,126,129,131,134,135,136,137,139,140,142,145,157,182,189,193,198,215,234,248,253,262,264,269,274,275,280,286,291,292,322,332,341,348,359,361,366,373,374,],[62,113,113,113,113,113,113,113,113,113,113,113,113,113,113,206,113,113,113,212,113,113,113,113,113,113,113,113,113,113,113,113,113,261,62,113,62,113,113,113,113,113,62,62,113,113,113,113,113,206,113,62,62,62,62,62,]),'qualident':([22,38,47,48,54,87,89,97,98,100,104,108,111,116,118,123,124,125,126,129,131,134,135,136,137,139,140,142,145,146,157,182,189,193,198,215,234,238,248,253,262,264,269,274,275,280,286,291,292,322,332,341,348,359,361,366,373,374,],[75,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,229,114,114,114,114,114,75,114,298,75,114,114,114,114,114,75,75,114,114,114,114,114,114,114,75,75,75,75,75,]),'memoryalloc':([22,215,248,275,280,359,361,366,373,374,],[64,64,64,64,64,64,64,64,64,64,]),'expList':([139,234,],[224,294,]),'empty':([4,5,7,9,10,12,22,29,75,83,94,114,122,132,158,168,169,172,195,196,211,215,216,237,248,256,258,273,275,280,301,317,333,345,349,358,359,361,366,367,371,373,374,],[6,11,14,19,20,23,49,6,150,11,179,150,204,23,242,243,246,23,179,179,23,49,23,297,49,204,204,319,49,324,242,319,242,23,23,23,49,49,49,23,23,49,49,]),'declarationSequence':([4,29,],[5,83,]),'comass':([237,],[296,]),'fieldList':([158,301,333,],[240,334,240,]),'boolean':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,189,193,234,253,262,264,269,274,286,291,292,322,332,348,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'procedureBody':([29,],[82,]),'simpless':([94,195,196,],[178,259,260,]),'identdef':([22,38,47,48,54,87,89,90,97,98,100,104,108,111,116,118,123,124,125,126,129,130,131,134,135,136,137,139,140,142,143,145,146,157,182,189,193,198,215,233,234,238,248,253,262,264,269,274,275,280,286,288,291,292,322,332,341,348,359,361,366,373,374,],[73,120,120,120,120,120,120,177,120,120,120,120,120,120,120,120,120,120,120,120,120,213,120,120,120,120,120,120,120,120,227,120,120,120,120,120,120,120,73,293,120,120,73,120,120,120,120,120,73,73,120,326,120,120,120,120,120,120,73,73,73,73,73,]),'element':([116,262,],[200,314,]),'actualParameters':([62,113,],[141,197,]),'whileStatement':([22,215,248,275,280,359,361,366,373,374,],[72,72,72,72,72,72,72,72,72,72,]),'constantDeclaration':([21,],[32,]),'termss':([122,256,258,],[203,203,203,]),'conss':([10,],[21,]),'varss':([7,],[13,]),'char':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,189,193,234,253,262,264,269,274,286,291,292,322,332,348,351,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,363,]),'fileStatement':([22,215,248,275,280,359,361,366,373,374,],[74,74,74,74,74,74,74,74,74,74,]),'factor':([38,47,48,54,87,89,97,98,100,104,108,111,116,118,124,125,126,131,134,135,136,137,139,140,142,145,157,182,189,193,234,253,262,264,269,274,286,291,292,322,332,348,],[122,122,122,122,122,122,180,181,183,194,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,256,122,258,122,122,122,315,122,122,122,122,122,122,122,122,]),'ifStatement':([22,215,248,275,280,359,361,366,373,374,],[76,76,76,76,76,76,76,76,76,76,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',28),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',33),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',34),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',36),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',37),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',42),
  ('conss -> empty','conss',1,'p_conss','par.py',43),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',48),
  ('typess -> empty','typess',1,'p_typess','par.py',49),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',54),
  ('varss -> empty','varss',1,'p_varss','par.py',55),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',60),
  ('procss -> empty','procss',1,'p_procss','par.py',61),
  ('statementSequence -> statementSequence statement SCOLON','statementSequence',3,'p_statementSequence','par.py',66),
  ('statementSequence -> empty','statementSequence',1,'p_statementSequence','par.py',67),
  ('constantDeclaration -> IDENT ASSIGN expression COLON type','constantDeclaration',5,'p_constantDeclaration','par.py',72),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',77),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',78),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',83),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',84),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',90),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',91),
  ('term -> factor termss','term',2,'p_term','par.py',96),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',101),
  ('termss -> empty','termss',1,'p_termss','par.py',102),
  ('factor -> number','factor',1,'p_factor','par.py',107),
  ('factor -> boolean','factor',1,'p_factor','par.py',108),
  ('factor -> char','factor',1,'p_factor','par.py',109),
  ('factor -> string','factor',1,'p_factor','par.py',110),
  ('factor -> KEY_NIL LRB designator RRB','factor',4,'p_factor','par.py',111),
  ('factor -> set','factor',1,'p_factor','par.py',112),
  ('factor -> designator','factor',1,'p_factor','par.py',113),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',114),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',115),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',116),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',120),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_CHR LRB factor RRB','factor',4,'p_factor','par.py',126),
  ('factor -> KEY_ORD LRB factor RRB','factor',4,'p_factor','par.py',127),
  ('number -> VINTEGER','number',1,'p_number','par.py',132),
  ('number -> VREAL','number',1,'p_number','par.py',133),
  ('boolean -> VBOOLEAN','boolean',1,'p_boolean','par.py',138),
  ('char -> VCHAR','char',1,'p_char','par.py',143),
  ('string -> VSTRING','string',1,'p_string','par.py',148),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',153),
  ('set -> LCB RCB','set',2,'p_set','par.py',154),
  ('element -> expression','element',1,'p_element','par.py',159),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',164),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',169),
  ('designator2 -> designator2 LSB expList RSB','designator2',4,'p_designator2','par.py',170),
  ('designator2 -> empty','designator2',1,'p_designator2','par.py',171),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',176),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',177),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',182),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',183),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',188),
  ('expList -> expression','expList',1,'p_expList','par.py',189),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',194),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',195),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',200),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',201),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',202),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',203),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',208),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',209),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',210),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',215),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',216),
  ('relation -> LT','relation',1,'p_relation','par.py',217),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',218),
  ('relation -> GT','relation',1,'p_relation','par.py',219),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',220),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',221),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',222),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',227),
  ('type -> IDENT','type',1,'p_type','par.py',232),
  ('type -> varType','type',1,'p_type','par.py',233),
  ('type -> arrayType','type',1,'p_type','par.py',234),
  ('type -> recordType','type',1,'p_type','par.py',235),
  ('type -> pointerType','type',1,'p_type','par.py',236),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',241),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',242),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',243),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',244),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',245),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',246),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',251),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',256),
  ('comass -> empty','comass',1,'p_comass','par.py',257),
  ('length -> expression','length',1,'p_length','par.py',262),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',267),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',268),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',273),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',278),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',279),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',284),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',285),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',290),
  ('identList -> IDENT','identList',1,'p_identList','par.py',291),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',296),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',302),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',312),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',313),
  ('formalParameters -> LRB fpSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',318),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',319),
  ('formalss -> formalss SCOLON fpSection','formalss',3,'p_formalss','par.py',324),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',325),
  ('fpSection -> IDENT fps COLON type','fpSection',4,'p_fpSection','par.py',330),
  ('fps -> fps COMMA IDENT','fps',3,'p_fps','par.py',335),
  ('fps -> empty','fps',1,'p_fps','par.py',336),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',341),
  ('statement -> assignment','statement',1,'p_statement','par.py',346),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',347),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',348),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',349),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',350),
  ('statement -> forStatement','statement',1,'p_statement','par.py',351),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',354),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',355),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',356),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',357),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',358),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',359),
  ('statement -> empty','statement',1,'p_statement','par.py',360),
  ('statement -> memoryalloc','statement',1,'p_statement','par.py',361),
  ('statement -> setStatement','statement',1,'p_statement','par.py',362),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',367),
  ('setStatement -> qualident DOT KEY_ADD LRB expression RRB','setStatement',6,'p_setStatement','par.py',372),
  ('setStatement -> qualident DOT KEY_DEL LRB expression RRB','setStatement',6,'p_setStatement','par.py',373),
  ('memoryalloc -> KEY_NEW LRB designator RRB','memoryalloc',4,'p_memoryalloc','par.py',379),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',385),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',386),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',391),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',392),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',397),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',398),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',403),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',404),
  ('casess -> case casess','casess',2,'p_casess','par.py',409),
  ('casess -> empty','casess',1,'p_casess','par.py',410),
  ('case -> KEY_CASE expression COLON statementSequence','case',4,'p_case','par.py',415),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',420),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',425),
  ('doWhileStatement -> KEY_DO KEY_BEGIN statementSequence KEY_END KEY_WHILE expression','doWhileStatement',6,'p_doWhileStatement','par.py',430),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',435),
  ('ioStatement -> KEY_WRITEINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',436),
  ('ioStatement -> KEY_WRITEREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',437),
  ('ioStatement -> KEY_WRITECHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',438),
  ('ioStatement -> KEY_WRITEBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',439),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',440),
  ('ioStatement -> KEY_WRITELN LRB RRB','ioStatement',3,'p_ioStatement','par.py',441),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',442),
  ('ioStatement -> KEY_READINT LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',443),
  ('ioStatement -> KEY_READREAL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',444),
  ('ioStatement -> KEY_READCHAR LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',445),
  ('ioStatement -> KEY_READBOOL LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',446),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',451),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',452),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',453),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',454),
  ('empty -> <empty>','empty',0,'p_empty','par.py',459),
]
