
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'modulerightASSIGNleftORleftANDleftORleftANDleftEQUALNEQUALleftGTGTEQLTLTEQleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightNOTleftDOTAND ASSIGN AT COLON COMMA DIVIDE DOT EQUAL GT GTEQ IDENT KEY_ABS KEY_ARRAY KEY_BEGIN KEY_BOOLEAN KEY_BREAK KEY_CASE KEY_CHAR KEY_CHR KEY_CONST KEY_CONTINUE KEY_DO KEY_ELSE KEY_ELSEIF KEY_END KEY_EXIT KEY_FCLOSE KEY_FOPEN KEY_FOR KEY_FPRINTF KEY_FREAD KEY_IF KEY_IN KEY_INTEGER KEY_IS KEY_MODULE KEY_NEW KEY_NIL KEY_OF KEY_ORD KEY_POINTER KEY_PROCEDURE KEY_READ KEY_REAL KEY_RECORD KEY_RETURN KEY_SET KEY_STRING KEY_SWITCH KEY_THEN KEY_TO KEY_TYPE KEY_VAR KEY_WHILE KEY_WRITE KEY_WRITELN LCB LRB LSB LT LTEQ MINUS MODULUS MULTIPLY NEQUAL NOT OR PLUS RCB RRB RSB SCOLON VBOOLEAN VCHAR VINTEGER VREAL VSTRING\n\t\t\tmodule : KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT\n\t\t\n\t\t\tdeclarationSequence : declarationSequence KEY_CONST conss\n\t\t\t\t\t\t\t\t| declarationSequence KEY_TYPE typess\n\t\t\t\t\t\t\t\t| declarationSequence KEY_VAR varss\n\t\t\t\t\t\t\t\t| declarationSequence procss\n\t\t\t\t\t\t\t\t| empty\n\t\t\n\t\t\tconss : conss constantDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\ttypess : typess typeDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tvarss : varss variableDeclaration SCOLON\n\t\t\t\t  | empty\n\t\t\n\t\t\tprocss : procss procedureDeclaration SCOLON\n\t\t\t\t   | empty\n\t\t\n\t\t\tstatementSequence : statementSequence SCOLON statement\n\t\t\t\t\t\t\t  | statement\n\t\t\n\t\t\tconstantDeclaration : IDENT ASSIGN expression\n\t\t\n\t\t\texpression : simpleExpression\n\t\t\t\t\t   | simpleExpression relation simpleExpression\n\t\t\n\t\t\tsimpleExpression : PLUS term simpless\n\t\t\t\t\t\t\t | term simpless\n\t\t\t\t\t\t\t | MINUS term simpless\n\t\t\n\t\t\tsimpless : simpless addOperator term\n\t\t\t\t\t | empty\n\t\t\n\t\t\tterm : factor termss\n\t\t\n\t\t\ttermss : termss mulOperator factor\n\t\t\t\t   | empty\n\t\t\n\t\t\tfactor : number\n\t\t\t\t   | char\n\t\t\t\t   | string\n\t\t\t\t   | KEY_NIL\n\t\t\t\t   | set\n\t\t\t\t   | designator\n\t\t\t\t   | designator actualParameters\n\t\t\t\t   | LRB expression RRB\n\t\t\t\t   | NOT factor\n\t\t\t\t   | KEY_ABS factor\n\t\t\t\t   | KEY_CHR factor\n\t\t\t\t   | KEY_ORD factor\n\t\t\t\t   | KEY_INTEGER\n\t\t\t\t   | KEY_BOOLEAN\n\t\t\t\t   | KEY_CHAR\n\t\t\t\t   | KEY_STRING\n\t\t\t\t   | KEY_REAL\n\t\t\t\t   | KEY_SET\n\t\t\n\t\t\tnumber : VINTEGER\n\t\t\t\t   | VREAL\n\t\t\n\t\t\tchar : VCHAR\n\t\t\n\t\t\tstring : VSTRING\n\t\t\n\t\t\tset : LCB element COMMA element RCB\n\t\t\t\t| LCB RCB\n\t\t\n\t\t\telement : expression\n\t\t\n\t\t\tdesignator : qualident designator2\n\t\t\t\t\t   | qualident\n\t\t\n\t\t\tdesignator2 : designator2 DOT identdef\n\t\t\t\t\t\t| designator LSB expList RSB\n\t\t\t\t\t\t| designator LRB qualident RRB\n\t\t\n\t\t\tqualident : identdef\n\t\t\t\t\t  | identdef DOT qualident\n\t\t\n\t\t\tidentdef : IDENT\n\t\t\t\t\t | AT IDENT\n\t\t\n\t\t\texpList : expList COMMA expression\n\t\t\t\t\t| expression\n\t\t\n\t\t\tactualParameters : LRB expList RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tmulOperator : MULTIPLY\n\t\t\t\t\t\t| DIVIDE\n\t\t\t\t\t\t| MODULUS\n\t\t\t\t\t\t| AND\n\t\t\n\t\t\taddOperator : PLUS\n\t\t\t\t\t\t| MINUS\n\t\t\t\t\t\t| OR\n\t\t\n\t\t\trelation : EQUAL\n\t\t\t\t\t | NEQUAL\n\t\t\t\t\t | LT\n\t\t\t\t\t | LTEQ\n\t\t\t\t\t | GT\n\t\t\t\t\t | GTEQ\n\t\t\t\t\t | KEY_IN\n\t\t\t\t\t | KEY_IS\n\t\t\n\t\t\ttypeDeclaration : IDENT EQUAL type\n\t\t\n\t\t\ttype : IDENT\n\t\t\t\t | varType\n\t\t\t\t | arrayType\n\t\t\t\t | recordType\n\t\t\t\t | pointerType\n\t\t\n\t\t\tvarType : KEY_INTEGER\n\t\t\t\t\t| KEY_BOOLEAN\n\t\t\t\t\t| KEY_CHAR\n\t\t\t\t\t| KEY_STRING\n\t\t\t\t\t| KEY_REAL\n\t\t\t\t\t| KEY_SET\n\t\t\n\t\t\tarrayType : KEY_ARRAY length comass KEY_OF type\n\t\t\n\t\t\tcomass : comass COMMA length\n\t\t\t\t   | empty\n\t\t\n\t\t\tlength : expression\n\t\t\n\t\t\trecordType : KEY_RECORD fieldListSequence KEY_END\n\t\t\t\t\t   | KEY_RECORD LRB baseType RRB fieldListSequence KEY_END\n\t\t\n\t\t\tbaseType : qualident\n\t\t\n\t\t\tfieldListSequence : fieldListSequence SCOLON fieldList\n\t\t\t\t\t\t\t  | fieldList\n\t\t\n\t\t\tfieldList : identList COLON type\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tidentList : identList COMMA IDENT\n\t\t\t\t\t  | IDENT\n\t\t\n\t\t\tpointerType : KEY_POINTER KEY_TO type\n\t\t\n\t\t\tvariableDeclaration : identList COLON type\n\t\t\n\t\t\tprocedureDeclaration : procedureHeading SCOLON procedureBody IDENT \n\t\t\n\t\t\tprocedureHeading : KEY_PROCEDURE IDENT formalParameters COLON type\n\t\t\t\t\t\t\t | KEY_PROCEDURE IDENT formalParameters\n\t\t\n\t\t\tformalParameters : LRB FPSection formalss RRB\n\t\t\t\t\t\t\t | LRB RRB\n\t\t\n\t\t\tformalss : formalss SCOLON FPSection\n\t\t\t\t\t | empty\n\t\t\n\t\t\tFPSection : IDENT FPs COLON type\n\t\t\n\t\t\tFPs : FPs COMMA IDENT\n\t\t\t\t| empty\n\t\t\n\t\t\tprocedureBody : declarationSequence KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tstatement : assignment\n\t\t\t\t\t  | procedureCall\n\t\t\t\t\t  | ifStatement\n\t\t\t\t\t  | switchStatement\n\t\t\t\t\t  | whileStatement\n\t\t\t\t\t  | forStatement\n\t\t\t\t\t  | doWhileStatement\n\t\t\t\t\t  | KEY_EXIT\n\t\t\t\t\t  | KEY_RETURN expression\n\t\t\t\t\t  | KEY_RETURN\n\t\t\t\t\t  | ioStatement\n\t\t\t\t\t  | fileStatement\n\t\t\t\t\t  | KEY_BREAK\n\t\t\t\t\t  | KEY_CONTINUE\n\t\t\t\t\t  | empty\n\t\t\n\t\t\tassignment : designator ASSIGN expression\n\t\t\n\t\t\tprocedureCall : designator actualParameters\n\t\t\t\t\t\t  | designator\n\t\t\n\t\t\tifStatement : KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END\n\t\t\t\t\t\t| KEY_IF expression KEY_THEN statementSequence ifss KEY_END\n\t\t\n\t\t\tifss : ifss KEY_ELSEIF expression KEY_THEN statementSequence\n\t\t\t\t | empty\n\t\t\n\t\t\tswitchStatement : KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END\n\t\t\t\t\t\t\t| KEY_SWITCH expression KEY_BEGIN case casess KEY_END\n\t\t\n\t\t\tcasess : casess OR case\n\t\t\t\t   | empty\n\t\t\n\t\t\tcase : KEY_CASE COLON expression statementSequence\n\t\t\n\t\t\twhileStatement : KEY_WHILE expression KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tforStatement : KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END\n\t\t\n\t\t\tdoWhileStatement : KEY_DO statementSequence KEY_WHILE expression\n\t\t\n\t\t\tioStatement : KEY_WRITE LRB expression RRB\n\t\t\t\t\t\t| KEY_WRITELN LRB expression RRB\n\t\t\t\t\t\t| KEY_READ LRB expression RRB\n\t\t\n\t\t\tfileStatement : identdef EQUAL KEY_FOPEN LRB string COMMA char RRB\n\t\t\t\t\t\t  | KEY_FCLOSE LRB identdef RRB\n\t\t\t\t\t\t  | KEY_FPRINTF LRB identdef COMMA string RRB\n\t\t\t\t\t\t  | KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB\n\t\t\n\t\t\tempty :\n\t\t'
    
_lr_action_items = {'VINTEGER':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,207,221,239,272,275,296,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-77,63,-74,-79,-76,-75,-80,-73,-78,63,63,63,63,63,-70,-72,-71,63,63,-68,-66,-67,-69,63,63,63,63,294,63,]),'KEY_VAR':([4,5,6,7,9,10,11,12,48,49,50,51,52,53,55,56,116,165,168,170,],[-156,9,-6,-5,-156,-156,-14,-156,-12,-4,-3,-10,-2,-8,-13,-156,9,-11,-9,-7,]),'KEY_READ':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[17,17,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,17,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,17,17,-65,17,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,17,17,17,17,17,]),'SCOLON':([3,8,14,15,19,20,21,24,25,26,27,28,29,31,33,36,38,39,40,41,42,43,44,46,47,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,92,95,101,103,105,107,110,112,114,120,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,158,159,162,173,174,176,177,178,179,182,195,196,197,198,199,202,203,205,206,208,211,212,213,214,215,216,217,218,219,222,223,224,225,227,228,229,230,231,234,235,237,242,243,244,245,254,255,258,259,266,267,269,271,273,274,276,279,280,284,285,289,291,293,297,298,299,301,302,303,304,305,306,308,309,310,311,312,313,314,],[4,-156,55,56,-132,-123,-58,-133,-129,-125,-156,-126,-122,-54,-60,-16,-119,-136,-120,103,-131,-130,-128,-121,-124,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,103,-53,-135,-156,-127,165,168,170,-110,180,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-156,-156,-134,-65,-15,-156,-112,-156,-108,-150,-151,-20,-19,-22,-35,-148,-149,-55,103,103,-153,-64,-88,-92,-82,-87,-107,-84,-90,-86,-83,-91,-89,-156,-85,-81,-17,-109,260,-114,103,264,-23,-26,-57,-56,-146,280,-101,-103,-111,-50,-156,-142,-154,-138,-156,-106,-97,-156,-113,-115,103,-156,103,-100,-102,-156,-152,103,-156,-137,-155,-93,280,-156,-141,103,-98,103,-147,]),'PLUS':([23,31,32,33,35,44,57,58,62,63,65,66,67,70,71,72,73,74,75,77,78,80,81,82,83,85,88,89,90,91,93,95,100,102,122,124,125,126,127,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,159,171,180,182,187,196,197,202,207,208,221,237,239,242,243,244,266,272,296,],[64,-54,64,-60,64,64,64,64,-61,-46,-45,-156,-29,-58,64,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-47,-31,-30,64,-42,64,-53,64,64,-59,-156,184,-24,-36,-39,-51,-27,-25,-38,-34,-77,64,-74,-79,-76,-75,-80,-73,-78,-156,-37,64,64,-65,64,64,184,64,184,-35,-55,64,-64,64,-23,64,-26,-57,-56,-50,64,64,]),'RSB':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,133,134,135,136,146,147,159,160,182,195,196,197,201,202,208,237,242,243,244,249,266,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-63,-20,-19,-22,-35,244,-55,-64,-23,-26,-57,-56,-62,-50,]),'RRB':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,102,115,118,119,122,124,125,126,127,128,129,133,134,135,136,146,147,148,150,157,158,159,160,161,173,182,195,196,197,200,202,208,211,212,213,214,216,217,218,219,222,223,225,230,231,237,242,243,244,246,249,266,276,279,282,283,284,285,287,288,294,306,312,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,159,174,178,179,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,197,199,206,-134,-65,-63,208,-156,-20,-19,-22,-35,243,-55,-64,-88,-92,-82,-87,-84,-90,-86,-83,-91,-89,-85,259,-114,-23,-26,-57,-56,271,-62,-50,-106,-97,-99,299,-113,-115,300,301,305,-93,-98,]),'KEY_SET':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,166,169,171,172,180,183,184,185,186,187,190,191,192,193,194,207,221,239,251,261,272,281,295,296,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-77,65,-74,-79,-76,-75,-80,-73,-78,65,65,212,212,65,212,65,65,-70,-72,-71,65,65,-68,-66,-67,-69,65,65,65,212,212,65,212,212,65,]),'KEY_WRITELN':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[16,16,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,16,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,16,16,-65,16,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,16,16,16,16,16,]),'KEY_ELSE':([19,20,21,24,25,26,28,29,31,33,36,38,39,40,42,43,44,46,47,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,101,103,105,122,124,125,126,127,128,129,133,134,135,136,146,147,156,158,159,162,178,179,182,189,195,196,197,198,199,202,205,206,208,237,240,241,242,243,244,245,247,248,266,267,269,271,273,289,290,301,303,304,305,310,311,314,],[-132,-123,-58,-133,-129,-125,-126,-122,-54,-60,-16,-119,-136,-120,-131,-130,-128,-121,-124,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,-135,-156,-127,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-156,-134,-65,-15,-150,-151,-20,-156,-19,-22,-35,-148,-149,-55,-156,-153,-64,-23,-144,270,-26,-57,-56,-146,274,-140,-50,-156,-142,-154,-138,-145,-143,-152,-156,-137,-155,-141,-139,-147,]),'KEY_CONTINUE':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[19,19,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,19,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,19,19,-65,19,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,19,19,19,19,19,]),'NOT':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,207,221,239,272,296,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-77,68,-74,-79,-76,-75,-80,-73,-78,68,68,68,68,68,-70,-72,-71,68,68,-68,-66,-67,-69,68,68,68,68,68,]),'KEY_ORD':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,207,221,239,272,296,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-77,69,-74,-79,-76,-75,-80,-73,-78,69,69,69,69,69,-70,-72,-71,69,69,-68,-66,-67,-69,69,69,69,69,69,]),'RCB':([31,33,62,63,65,66,67,70,71,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,131,133,134,135,136,146,147,159,182,195,196,197,202,208,237,238,242,243,244,266,],[-54,-60,-61,-46,-45,-156,-29,-58,129,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-52,-27,-25,-38,-34,-156,-37,-65,-20,-19,-22,-35,-55,-64,-23,266,-26,-57,-56,-50,]),'KEY_ELSEIF':([19,20,21,24,25,26,28,29,31,33,36,38,39,40,42,43,44,46,47,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,101,103,105,122,124,125,126,127,128,129,133,134,135,136,146,147,156,158,159,162,178,179,182,195,196,197,198,199,202,205,206,208,237,242,243,244,245,247,248,266,269,271,273,301,303,304,305,310,311,314,],[-132,-123,-58,-133,-129,-125,-126,-122,-54,-60,-16,-119,-136,-120,-131,-130,-128,-121,-124,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,-135,-156,-127,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-156,-134,-65,-15,-150,-151,-20,-19,-22,-35,-148,-149,-55,-156,-153,-64,-23,-26,-57,-56,-146,272,-140,-50,-142,-154,-138,-152,-156,-137,-155,-141,-139,-147,]),'KEY_SWITCH':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[23,23,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,23,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,23,23,-65,23,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,23,23,23,23,23,]),'MULTIPLY':([31,33,62,63,65,67,70,72,73,74,75,77,78,80,81,82,83,85,88,89,91,95,122,127,128,129,133,134,135,136,147,159,197,202,208,242,243,244,266,],[-54,-60,-61,-46,-45,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-47,-31,-30,-42,-53,-59,-36,-39,-51,-27,192,-38,-34,-37,-65,-35,-55,-64,-26,-57,-56,-50,]),'LCB':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,207,221,239,272,296,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-77,71,-74,-79,-76,-75,-80,-73,-78,71,71,71,71,71,-70,-72,-71,71,71,-68,-66,-67,-69,71,71,71,71,71,]),'NEQUAL':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,196,197,202,208,237,242,243,244,266,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,139,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-22,-35,-55,-64,-23,-26,-57,-56,-50,]),'MODULUS':([31,33,62,63,65,67,70,72,73,74,75,77,78,80,81,82,83,85,88,89,91,95,122,127,128,129,133,134,135,136,147,159,197,202,208,242,243,244,266,],[-54,-60,-61,-46,-45,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-47,-31,-30,-42,-53,-59,-36,-39,-51,-27,191,-38,-34,-37,-65,-35,-55,-64,-26,-57,-56,-50,]),'AND':([31,33,62,63,65,67,70,72,73,74,75,77,78,80,81,82,83,85,88,89,91,95,122,127,128,129,133,134,135,136,147,159,197,202,208,242,243,244,266,],[-54,-60,-61,-46,-45,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-47,-31,-30,-42,-53,-59,-36,-39,-51,-27,194,-38,-34,-37,-65,-35,-55,-64,-26,-57,-56,-50,]),'AT':([8,21,23,27,31,32,33,35,44,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,97,99,100,102,103,106,122,124,125,126,127,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,151,152,153,154,156,159,171,176,180,182,183,184,185,186,187,190,191,192,193,194,195,196,197,202,207,208,210,221,237,239,242,243,244,257,264,266,267,272,274,291,296,303,309,],[22,-58,22,22,22,22,-60,22,22,22,22,22,22,-61,-46,22,-45,-156,-29,22,22,-58,22,-43,-28,-32,-44,-156,-48,22,-41,-49,-33,-40,-18,-47,22,22,-31,-30,22,-42,22,-53,22,22,22,22,22,22,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-77,22,-74,-79,-76,-75,-80,-73,-78,-156,-37,22,22,22,22,22,22,-65,22,22,22,-20,22,-70,-72,-71,22,22,-68,-66,-67,-69,-19,-22,-35,-55,22,-64,22,22,-23,22,-26,-57,-56,22,22,-50,22,22,22,22,22,22,22,]),'KEY_REAL':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,166,169,171,172,180,183,184,185,186,187,190,191,192,193,194,207,221,239,251,261,272,281,295,296,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-77,75,-74,-79,-76,-75,-80,-73,-78,75,75,222,222,75,222,75,75,-70,-72,-71,75,75,-68,-66,-67,-69,75,75,75,222,222,75,222,222,75,]),'GTEQ':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,196,197,202,208,237,242,243,244,266,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,145,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-22,-35,-55,-64,-23,-26,-57,-56,-50,]),'KEY_DO':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[27,27,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,27,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,27,27,-65,27,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,27,27,27,27,27,]),'KEY_MODULE':([0,],[2,]),'KEY_EXIT':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[28,28,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,28,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,28,28,-65,28,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,28,28,28,28,28,]),'ASSIGN':([21,31,33,39,62,70,95,113,121,122,202,243,244,],[-58,-54,-60,100,-61,-58,-53,171,100,-59,-55,-57,-56,]),'KEY_IN':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,196,197,202,208,237,242,243,244,266,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,140,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-22,-35,-55,-64,-23,-26,-57,-56,-50,]),'KEY_FCLOSE':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[37,37,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,37,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,37,37,-65,37,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,37,37,37,37,37,]),'VCHAR':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,207,221,239,265,272,296,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-77,78,-74,-79,-76,-75,-80,-73,-78,78,78,78,78,78,-70,-72,-71,78,78,-68,-66,-67,-69,78,78,78,78,78,78,]),'KEY_WRITE':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[30,30,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,30,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,30,30,-65,30,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,30,30,30,30,30,]),'KEY_RECORD':([166,169,172,251,261,281,295,],[224,224,224,224,224,224,224,]),'KEY_TO':([220,],[251,]),'OR':([19,20,21,24,25,26,28,29,31,33,36,38,39,40,42,43,44,46,47,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,101,103,105,122,124,125,126,127,128,129,133,134,135,136,146,147,158,159,162,178,179,182,189,195,196,197,198,199,202,206,208,237,240,241,242,243,244,245,266,267,269,271,273,289,290,301,304,305,310,314,],[-132,-123,-58,-133,-129,-125,-126,-122,-54,-60,-16,-119,-136,-120,-131,-130,-128,-121,-124,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,-135,-156,-127,-59,-156,185,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-134,-65,-15,-150,-151,-20,-156,-19,-22,-35,-148,-149,-55,-153,-64,-23,-144,268,-26,-57,-56,-146,-50,-156,-142,-154,-138,-145,-143,-152,-137,-155,-141,-147,]),'KEY_OF':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,195,196,197,202,208,237,242,243,244,252,253,266,277,278,307,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-156,-96,-50,295,-95,-94,]),'KEY_FOPEN':([61,],[123,]),'KEY_WHILE':([8,19,20,21,24,25,26,27,28,29,31,33,36,38,39,40,42,43,44,46,47,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,92,95,101,103,105,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,158,159,162,176,178,179,182,195,196,197,198,199,202,206,208,237,242,243,244,245,266,267,269,271,273,274,291,301,303,304,305,309,310,314,],[32,-132,-123,-58,-133,-129,-125,32,-126,-122,-54,-60,-16,-119,-136,-120,-131,-130,-128,-121,-124,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,149,-53,-135,32,-127,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,32,32,-134,-65,-15,32,-150,-151,-20,-19,-22,-35,-148,-149,-55,-153,-64,-23,-26,-57,-56,-146,-50,32,-142,-154,-138,32,32,-152,32,-137,-155,32,-141,-147,]),'KEY_NIL':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,207,221,239,272,296,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-77,88,-74,-79,-76,-75,-80,-73,-78,88,88,88,88,88,-70,-72,-71,88,88,-68,-66,-67,-69,88,88,88,88,88,]),'KEY_FOR':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[18,18,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,18,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,18,18,-65,18,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,18,18,18,18,18,]),'VSTRING':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,181,183,184,185,186,187,190,191,192,193,194,204,207,221,239,272,296,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-77,81,-74,-79,-76,-75,-80,-73,-78,81,81,81,81,81,81,-70,-72,-71,81,81,-68,-66,-67,-69,81,81,81,81,81,81,]),'IDENT':([2,8,9,10,12,13,21,22,23,27,31,32,33,35,44,48,49,50,51,52,53,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,97,99,100,102,103,104,106,115,117,122,124,125,126,127,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,151,152,153,154,156,159,165,166,167,168,169,170,171,172,176,180,182,183,184,185,186,187,190,191,192,193,194,195,196,197,202,207,208,210,221,224,237,239,242,243,244,251,257,260,261,262,263,264,266,267,272,274,280,281,291,295,296,299,303,309,],[3,33,-156,-156,-156,54,-58,62,33,33,33,33,-60,33,33,-12,109,111,-10,113,-8,33,33,33,33,-61,-46,33,-45,-156,-29,33,33,-58,33,-43,-28,-32,-44,-156,-48,33,-41,-49,-33,-40,-18,-47,33,33,-31,-30,33,-42,33,-53,33,33,33,33,33,163,33,175,177,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-77,33,-74,-79,-76,-75,-80,-73,-78,-156,-37,33,33,33,33,33,33,-65,-11,213,226,-9,213,-7,33,213,33,33,-20,33,-70,-72,-71,33,33,-68,-66,-67,-69,-19,-22,-35,-55,33,-64,33,33,109,-23,33,-26,-57,-56,213,33,175,213,286,-118,33,-50,33,33,33,109,213,33,213,33,109,33,33,]),'DOT':([21,33,62,70,95,163,202,243,244,],[60,-60,-61,60,153,209,-55,-57,-56,]),'GT':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,196,197,202,208,237,242,243,244,266,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,137,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-22,-35,-55,-64,-23,-26,-57,-56,-50,]),'KEY_BEGIN':([4,5,6,7,9,10,11,12,31,33,48,49,50,51,52,53,55,56,62,63,65,66,67,70,72,73,74,75,76,77,78,80,81,82,83,84,85,88,89,91,95,96,116,122,124,125,126,127,128,129,133,134,135,136,146,147,159,165,168,170,182,195,196,197,202,208,237,242,243,244,266,300,],[-156,8,-6,-5,-156,-156,-14,-156,-54,-60,-12,-4,-3,-10,-2,-8,-13,-156,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,132,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,154,176,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-11,-9,-7,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,309,]),'COMMA':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,108,109,122,124,125,126,127,128,129,130,131,133,134,135,136,146,147,155,159,160,161,164,175,182,195,196,197,201,202,208,226,232,233,236,237,242,243,244,249,250,252,253,256,266,277,278,286,307,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,167,-105,-59,-156,-21,-24,-36,-39,-51,187,-52,-27,-25,-38,-34,-156,-37,204,-65,-63,207,210,-156,-20,-19,-22,-35,207,-55,-64,-104,-117,262,265,-23,-26,-57,-56,-62,275,-156,-96,167,-50,296,-95,-116,-94,]),'KEY_FREAD':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[45,45,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,45,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,45,45,-65,45,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,45,45,45,45,45,]),'KEY_IF':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[35,35,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,35,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,35,35,-65,35,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,35,35,35,35,35,]),'KEY_INTEGER':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,166,169,171,172,180,183,184,185,186,187,190,191,192,193,194,207,221,239,251,261,272,281,295,296,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-77,83,-74,-79,-76,-75,-80,-73,-78,83,83,214,214,83,214,83,83,-70,-72,-71,83,83,-68,-66,-67,-69,83,83,83,214,214,83,214,214,83,]),'$end':([1,209,],[0,-1,]),'KEY_END':([8,19,20,21,24,25,26,28,29,31,33,36,38,39,40,41,42,43,44,46,47,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,101,103,105,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,158,159,162,176,178,179,182,189,195,196,197,198,199,202,203,205,206,208,211,212,213,214,216,217,218,219,222,223,224,225,234,237,240,241,242,243,244,245,247,248,254,255,258,266,267,269,271,273,274,276,279,280,289,290,291,293,297,298,299,301,302,303,304,305,306,308,309,310,311,312,313,314,],[-156,-132,-123,-58,-133,-129,-125,-126,-122,-54,-60,-16,-119,-136,-120,104,-131,-130,-128,-121,-124,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,-135,-156,-127,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-156,-156,-134,-65,-15,-156,-150,-151,-20,-156,-19,-22,-35,-148,-149,-55,245,-156,-153,-64,-88,-92,-82,-87,-84,-90,-86,-83,-91,-89,-156,-85,263,-23,-144,269,-26,-57,-56,-146,273,-140,279,-101,-103,-50,-156,-142,-154,-138,-156,-106,-97,-156,-145,-143,-156,304,-100,-102,-156,-152,310,-156,-137,-155,-93,312,-156,-141,-139,-98,314,-147,]),'KEY_THEN':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,98,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,195,196,197,202,208,237,242,243,244,266,292,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,156,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,303,]),'EQUAL':([21,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,111,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,196,197,202,208,237,242,243,244,266,],[61,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,144,-47,-31,-30,-42,-53,169,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-22,-35,-55,-64,-23,-26,-57,-56,-50,]),'KEY_STRING':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,166,169,171,172,180,183,184,185,186,187,190,191,192,193,194,207,221,239,251,261,272,281,295,296,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-77,72,-74,-79,-76,-75,-80,-73,-78,72,72,217,217,72,217,72,72,-70,-72,-71,72,72,-68,-66,-67,-69,72,72,72,217,217,72,217,217,72,]),'LT':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,196,197,202,208,237,242,243,244,266,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,142,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-22,-35,-55,-64,-23,-26,-57,-56,-50,]),'KEY_CHR':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,207,221,239,272,296,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-77,79,-74,-79,-76,-75,-80,-73,-78,79,79,79,79,79,-70,-72,-71,79,79,-68,-66,-67,-69,79,79,79,79,79,]),'LSB':([31,33,62,70,94,95,122,202,243,244,],[-54,-60,-61,-58,152,-53,-59,-55,-57,-56,]),'KEY_POINTER':([166,169,172,251,261,281,295,],[220,220,220,220,220,220,220,]),'KEY_CONST':([4,5,6,7,9,10,11,12,48,49,50,51,52,53,55,56,116,165,168,170,],[-156,12,-6,-5,-156,-156,-14,-156,-12,-4,-3,-10,-2,-8,-13,-156,12,-11,-9,-7,]),'KEY_TYPE':([4,5,6,7,9,10,11,12,48,49,50,51,52,53,55,56,116,165,168,170,],[-156,10,-6,-5,-156,-156,-14,-156,-12,-4,-3,-10,-2,-8,-13,-156,10,-11,-9,-7,]),'KEY_BREAK':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[42,42,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,42,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,42,42,-65,42,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,42,42,42,42,42,]),'COLON':([108,109,114,174,175,188,226,232,233,256,259,270,286,],[166,-105,172,-112,-156,239,-104,-117,261,281,-111,291,-116,]),'KEY_ARRAY':([166,169,172,251,261,281,295,],[221,221,221,221,221,221,221,]),'DIVIDE':([31,33,62,63,65,67,70,72,73,74,75,77,78,80,81,82,83,85,88,89,91,95,122,127,128,129,133,134,135,136,147,159,197,202,208,242,243,244,266,],[-54,-60,-61,-46,-45,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-47,-31,-30,-42,-53,-59,-36,-39,-51,-27,193,-38,-34,-37,-65,-35,-55,-64,-26,-57,-56,-50,]),'VREAL':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,207,221,239,272,296,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-77,85,-74,-79,-76,-75,-80,-73,-78,85,85,85,85,85,-70,-72,-71,85,85,-68,-66,-67,-69,85,85,85,85,85,]),'KEY_IS':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,196,197,202,208,237,242,243,244,266,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,143,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-22,-35,-55,-64,-23,-26,-57,-56,-50,]),'MINUS':([23,31,32,33,35,44,57,58,62,63,65,66,67,70,71,72,73,74,75,77,78,80,81,82,83,85,88,89,90,91,93,95,100,102,122,124,125,126,127,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,159,171,180,182,187,196,197,202,207,208,221,237,239,242,243,244,266,272,296,],[86,-54,86,-60,86,86,86,86,-61,-46,-45,-156,-29,-58,86,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-47,-31,-30,86,-42,86,-53,86,86,-59,-156,186,-24,-36,-39,-51,-27,-25,-38,-34,-77,86,-74,-79,-76,-75,-80,-73,-78,-156,-37,86,86,-65,86,86,186,86,186,-35,-55,86,-64,86,-23,86,-26,-57,-56,-50,86,86,]),'KEY_ABS':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,207,221,239,272,296,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-77,87,-74,-79,-76,-75,-80,-73,-78,87,87,87,87,87,-70,-72,-71,87,87,-68,-66,-67,-69,87,87,87,87,87,]),'KEY_PROCEDURE':([4,5,6,7,9,10,11,12,48,49,50,51,52,53,55,56,116,165,168,170,],[-156,-156,-6,13,-156,-156,-14,-156,-12,-4,-3,-10,-2,-8,-13,-156,-156,-11,-9,-7,]),'KEY_BOOLEAN':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,166,169,171,172,180,183,184,185,186,187,190,191,192,193,194,207,221,239,251,261,272,281,295,296,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-77,80,-74,-79,-76,-75,-80,-73,-78,80,80,211,211,80,211,80,80,-70,-72,-71,80,80,-68,-66,-67,-69,80,80,80,211,211,80,211,211,80,]),'KEY_RETURN':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[44,44,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,44,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,44,44,-65,44,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,44,44,44,44,44,]),'LTEQ':([31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,122,124,125,126,127,128,129,133,134,135,136,146,147,159,182,196,197,202,208,237,242,243,244,266,],[-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,141,-47,-31,-30,-42,-53,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,-65,-20,-22,-35,-55,-64,-23,-26,-57,-56,-50,]),'KEY_FPRINTF':([8,27,31,33,62,63,65,66,67,70,72,73,74,75,77,78,80,81,82,83,84,85,88,89,91,95,103,122,124,125,126,127,128,129,133,134,135,136,146,147,154,156,159,176,182,195,196,197,202,208,237,242,243,244,266,267,274,291,303,309,],[34,34,-54,-60,-61,-46,-45,-156,-29,-58,-43,-28,-32,-44,-156,-48,-41,-49,-33,-40,-18,-47,-31,-30,-42,-53,34,-59,-156,-21,-24,-36,-39,-51,-27,-25,-38,-34,-156,-37,34,34,-65,34,-20,-19,-22,-35,-55,-64,-23,-26,-57,-56,-50,34,34,34,34,34,]),'KEY_CASE':([132,268,],[188,188,]),'LRB':([16,17,18,21,23,30,31,32,33,34,35,37,39,44,45,54,57,58,62,64,68,69,70,71,79,82,86,87,90,93,94,95,100,102,122,123,137,138,139,140,141,142,143,144,145,149,152,171,180,183,184,185,186,187,190,191,192,193,194,202,207,221,224,239,243,244,272,296,],[57,58,59,-58,90,93,-54,90,-60,97,90,99,102,90,106,115,90,90,-61,90,90,90,-58,90,90,102,90,90,90,90,151,-53,90,90,-59,181,-77,90,-74,-79,-76,-75,-80,-73,-78,90,90,90,90,90,-70,-72,-71,90,90,-68,-66,-67,-69,-55,90,90,257,90,-57,-56,90,90,]),'KEY_CHAR':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,137,138,139,140,141,142,143,144,145,149,152,166,169,171,172,180,183,184,185,186,187,190,191,192,193,194,207,221,239,251,261,272,281,295,296,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-77,91,-74,-79,-76,-75,-80,-73,-78,91,91,223,223,91,223,91,91,-70,-72,-71,91,91,-68,-66,-67,-69,91,91,91,223,223,91,223,223,91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variableDeclaration':([49,],[107,]),'simpless':([66,124,146,],[125,182,196,]),'formalss':([173,],[230,]),'set':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,138,149,152,171,180,183,187,190,207,221,239,272,296,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'module':([0,],[1,]),'qualident':([8,23,27,31,32,35,44,57,58,59,60,64,68,69,71,79,86,87,90,93,100,102,103,138,149,151,152,154,156,171,176,180,183,187,190,207,221,239,257,264,267,272,274,291,296,303,309,],[31,31,31,31,31,31,31,31,31,31,122,31,31,31,31,31,31,31,31,31,31,31,31,31,31,200,31,31,31,31,31,31,31,31,31,31,31,31,282,31,31,31,31,31,31,31,31,]),'termss':([77,],[134,]),'casess':([189,],[241,]),'relation':([84,],[138,]),'conss':([12,],[52,]),'char':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,138,149,152,171,180,183,187,190,207,221,239,265,272,296,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,288,67,67,]),'comass':([252,],[277,]),'whileStatement':([8,27,103,154,156,176,267,274,291,303,309,],[20,20,20,20,20,20,20,20,20,20,20,]),'mulOperator':([134,],[190,]),'identdef':([8,23,27,31,32,35,44,57,58,59,60,64,68,69,71,79,86,87,90,93,97,99,100,102,103,106,138,149,151,152,153,154,156,171,176,180,183,187,190,207,210,221,239,257,264,267,272,274,291,296,303,309,],[21,70,21,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,155,157,70,70,21,164,70,70,70,70,202,21,21,70,21,70,70,70,70,70,250,70,70,70,70,21,70,21,21,70,21,21,]),'identList':([49,224,280,299,],[108,256,256,256,]),'pointerType':([166,169,172,251,261,281,295,],[218,218,218,218,218,218,218,]),'varType':([166,169,172,251,261,281,295,],[219,219,219,219,219,219,219,]),'empty':([4,5,8,9,10,12,27,56,66,77,103,116,124,146,154,156,173,175,176,189,205,224,252,267,274,280,291,299,303,309,],[6,11,24,48,51,53,24,6,126,133,24,11,126,126,24,24,231,232,24,240,248,258,278,24,24,258,24,258,24,24,]),'FPSection':([115,260,],[173,284,]),'ioStatement':([8,27,103,154,156,176,267,274,291,303,309,],[25,25,25,25,25,25,25,25,25,25,25,]),'actualParameters':([39,82,],[101,136,]),'procedureHeading':([7,],[15,]),'doWhileStatement':([8,27,103,154,156,176,267,274,291,303,309,],[26,26,26,26,26,26,26,26,26,26,26,]),'procedureDeclaration':([7,],[14,]),'length':([221,296,],[252,307,]),'procss':([5,116,],[7,7,]),'procedureBody':([56,],[117,]),'ifss':([205,],[247,]),'constantDeclaration':([52,],[112,]),'factor':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,138,149,152,171,180,183,187,190,207,221,239,272,296,],[77,77,77,77,77,77,77,127,128,77,135,77,147,77,77,77,77,77,77,77,77,77,77,77,242,77,77,77,77,77,]),'procedureCall':([8,27,103,154,156,176,267,274,291,303,309,],[40,40,40,40,40,40,40,40,40,40,40,]),'case':([132,268,],[189,290,]),'recordType':([166,169,172,251,261,281,295,],[225,225,225,225,225,225,225,]),'fieldList':([224,280,299,],[255,297,255,]),'baseType':([257,],[283,]),'typess':([10,],[50,]),'term':([23,32,35,44,57,58,64,71,86,90,93,100,102,138,149,152,171,180,183,187,207,221,239,272,296,],[66,66,66,66,66,66,124,66,146,66,66,66,66,66,66,66,66,66,237,66,66,66,66,66,66,]),'designator2':([31,],[95,]),'varss':([9,],[49,]),'addOperator':([125,182,196,],[183,183,183,]),'declarationSequence':([4,56,],[5,116,]),'element':([71,187,],[130,238,]),'statement':([8,27,103,154,156,176,267,274,291,303,309,],[36,36,162,36,36,36,36,36,36,36,36,]),'switchStatement':([8,27,103,154,156,176,267,274,291,303,309,],[29,29,29,29,29,29,29,29,29,29,29,]),'assignment':([8,27,59,103,154,156,176,264,267,274,291,303,309,],[38,38,120,38,38,38,38,287,38,38,38,38,38,]),'type':([166,169,172,251,261,281,295,],[215,227,229,276,285,298,306,]),'arrayType':([166,169,172,251,261,281,295,],[216,216,216,216,216,216,216,]),'simpleExpression':([23,32,35,44,57,58,71,90,93,100,102,138,149,152,171,180,187,207,221,239,272,296,],[84,84,84,84,84,84,84,84,84,84,84,195,84,84,84,84,84,84,84,84,84,84,]),'fieldListSequence':([224,299,],[254,308,]),'statementSequence':([8,27,154,156,176,267,274,291,303,309,],[41,92,203,205,234,289,293,302,311,313,]),'formalParameters':([54,],[114,]),'expression':([23,32,35,44,57,58,71,90,93,100,102,149,152,171,180,187,207,221,239,272,296,],[76,96,98,105,118,119,131,148,150,158,160,198,160,228,235,131,249,253,267,292,253,]),'FPs':([175,],[233,]),'number':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,138,149,152,171,180,183,187,190,207,221,239,272,296,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'string':([23,32,35,44,57,58,64,68,69,71,79,86,87,90,93,100,102,138,149,152,171,180,181,183,187,190,204,207,221,239,272,296,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,236,89,89,89,246,89,89,89,89,89,]),'fileStatement':([8,27,103,154,156,176,267,274,291,303,309,],[43,43,43,43,43,43,43,43,43,43,43,]),'expList':([102,152,],[161,201,]),'typeDeclaration':([50,],[110,]),'ifStatement':([8,27,103,154,156,176,267,274,291,303,309,],[46,46,46,46,46,46,46,46,46,46,46,]),'forStatement':([8,27,103,154,156,176,267,274,291,303,309,],[47,47,47,47,47,47,47,47,47,47,47,]),'designator':([8,23,27,31,32,35,44,57,58,59,64,68,69,71,79,86,87,90,93,100,102,103,138,149,152,154,156,171,176,180,183,187,190,207,221,239,264,267,272,274,291,296,303,309,],[39,82,39,94,82,82,82,82,82,121,82,82,82,82,82,82,82,82,82,82,82,39,82,82,82,39,39,82,39,82,82,82,82,82,82,82,121,39,82,39,39,82,39,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> KEY_MODULE IDENT SCOLON declarationSequence KEY_BEGIN statementSequence KEY_END IDENT DOT','module',9,'p_module','par.py',30),
  ('declarationSequence -> declarationSequence KEY_CONST conss','declarationSequence',3,'p_declarationSequence','par.py',35),
  ('declarationSequence -> declarationSequence KEY_TYPE typess','declarationSequence',3,'p_declarationSequence','par.py',36),
  ('declarationSequence -> declarationSequence KEY_VAR varss','declarationSequence',3,'p_declarationSequence','par.py',37),
  ('declarationSequence -> declarationSequence procss','declarationSequence',2,'p_declarationSequence','par.py',38),
  ('declarationSequence -> empty','declarationSequence',1,'p_declarationSequence','par.py',39),
  ('conss -> conss constantDeclaration SCOLON','conss',3,'p_conss','par.py',44),
  ('conss -> empty','conss',1,'p_conss','par.py',45),
  ('typess -> typess typeDeclaration SCOLON','typess',3,'p_typess','par.py',50),
  ('typess -> empty','typess',1,'p_typess','par.py',51),
  ('varss -> varss variableDeclaration SCOLON','varss',3,'p_varss','par.py',56),
  ('varss -> empty','varss',1,'p_varss','par.py',57),
  ('procss -> procss procedureDeclaration SCOLON','procss',3,'p_procss','par.py',62),
  ('procss -> empty','procss',1,'p_procss','par.py',63),
  ('statementSequence -> statementSequence SCOLON statement','statementSequence',3,'p_statementSequence','par.py',68),
  ('statementSequence -> statement','statementSequence',1,'p_statementSequence','par.py',69),
  ('constantDeclaration -> IDENT ASSIGN expression','constantDeclaration',3,'p_constantDeclaration','par.py',74),
  ('expression -> simpleExpression','expression',1,'p_expression','par.py',79),
  ('expression -> simpleExpression relation simpleExpression','expression',3,'p_expression','par.py',80),
  ('simpleExpression -> PLUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',85),
  ('simpleExpression -> term simpless','simpleExpression',2,'p_simpleExpression','par.py',86),
  ('simpleExpression -> MINUS term simpless','simpleExpression',3,'p_simpleExpression','par.py',87),
  ('simpless -> simpless addOperator term','simpless',3,'p_simpless','par.py',92),
  ('simpless -> empty','simpless',1,'p_simpless','par.py',93),
  ('term -> factor termss','term',2,'p_term','par.py',98),
  ('termss -> termss mulOperator factor','termss',3,'p_termss','par.py',103),
  ('termss -> empty','termss',1,'p_termss','par.py',104),
  ('factor -> number','factor',1,'p_factor','par.py',109),
  ('factor -> char','factor',1,'p_factor','par.py',110),
  ('factor -> string','factor',1,'p_factor','par.py',111),
  ('factor -> KEY_NIL','factor',1,'p_factor','par.py',112),
  ('factor -> set','factor',1,'p_factor','par.py',113),
  ('factor -> designator','factor',1,'p_factor','par.py',114),
  ('factor -> designator actualParameters','factor',2,'p_factor','par.py',115),
  ('factor -> LRB expression RRB','factor',3,'p_factor','par.py',116),
  ('factor -> NOT factor','factor',2,'p_factor','par.py',117),
  ('factor -> KEY_ABS factor','factor',2,'p_factor','par.py',118),
  ('factor -> KEY_CHR factor','factor',2,'p_factor','par.py',119),
  ('factor -> KEY_ORD factor','factor',2,'p_factor','par.py',120),
  ('factor -> KEY_INTEGER','factor',1,'p_factor','par.py',121),
  ('factor -> KEY_BOOLEAN','factor',1,'p_factor','par.py',122),
  ('factor -> KEY_CHAR','factor',1,'p_factor','par.py',123),
  ('factor -> KEY_STRING','factor',1,'p_factor','par.py',124),
  ('factor -> KEY_REAL','factor',1,'p_factor','par.py',125),
  ('factor -> KEY_SET','factor',1,'p_factor','par.py',126),
  ('number -> VINTEGER','number',1,'p_number','par.py',131),
  ('number -> VREAL','number',1,'p_number','par.py',132),
  ('char -> VCHAR','char',1,'p_char','par.py',137),
  ('string -> VSTRING','string',1,'p_string','par.py',142),
  ('set -> LCB element COMMA element RCB','set',5,'p_set','par.py',147),
  ('set -> LCB RCB','set',2,'p_set','par.py',148),
  ('element -> expression','element',1,'p_element','par.py',153),
  ('designator -> qualident designator2','designator',2,'p_designator','par.py',158),
  ('designator -> qualident','designator',1,'p_designator','par.py',159),
  ('designator2 -> designator2 DOT identdef','designator2',3,'p_designator2','par.py',164),
  ('designator2 -> designator LSB expList RSB','designator2',4,'p_designator2','par.py',165),
  ('designator2 -> designator LRB qualident RRB','designator2',4,'p_designator2','par.py',166),
  ('qualident -> identdef','qualident',1,'p_qualident','par.py',171),
  ('qualident -> identdef DOT qualident','qualident',3,'p_qualident','par.py',172),
  ('identdef -> IDENT','identdef',1,'p_identdef','par.py',177),
  ('identdef -> AT IDENT','identdef',2,'p_identdef','par.py',178),
  ('expList -> expList COMMA expression','expList',3,'p_expList','par.py',183),
  ('expList -> expression','expList',1,'p_expList','par.py',184),
  ('actualParameters -> LRB expList RRB','actualParameters',3,'p_actualParameters','par.py',189),
  ('actualParameters -> LRB RRB','actualParameters',2,'p_actualParameters','par.py',190),
  ('mulOperator -> MULTIPLY','mulOperator',1,'p_mulOperator','par.py',195),
  ('mulOperator -> DIVIDE','mulOperator',1,'p_mulOperator','par.py',196),
  ('mulOperator -> MODULUS','mulOperator',1,'p_mulOperator','par.py',197),
  ('mulOperator -> AND','mulOperator',1,'p_mulOperator','par.py',198),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator','par.py',203),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator','par.py',204),
  ('addOperator -> OR','addOperator',1,'p_addOperator','par.py',205),
  ('relation -> EQUAL','relation',1,'p_relation','par.py',210),
  ('relation -> NEQUAL','relation',1,'p_relation','par.py',211),
  ('relation -> LT','relation',1,'p_relation','par.py',212),
  ('relation -> LTEQ','relation',1,'p_relation','par.py',213),
  ('relation -> GT','relation',1,'p_relation','par.py',214),
  ('relation -> GTEQ','relation',1,'p_relation','par.py',215),
  ('relation -> KEY_IN','relation',1,'p_relation','par.py',216),
  ('relation -> KEY_IS','relation',1,'p_relation','par.py',217),
  ('typeDeclaration -> IDENT EQUAL type','typeDeclaration',3,'p_typeDeclaration','par.py',222),
  ('type -> IDENT','type',1,'p_type','par.py',227),
  ('type -> varType','type',1,'p_type','par.py',228),
  ('type -> arrayType','type',1,'p_type','par.py',229),
  ('type -> recordType','type',1,'p_type','par.py',230),
  ('type -> pointerType','type',1,'p_type','par.py',231),
  ('varType -> KEY_INTEGER','varType',1,'p_varType','par.py',236),
  ('varType -> KEY_BOOLEAN','varType',1,'p_varType','par.py',237),
  ('varType -> KEY_CHAR','varType',1,'p_varType','par.py',238),
  ('varType -> KEY_STRING','varType',1,'p_varType','par.py',239),
  ('varType -> KEY_REAL','varType',1,'p_varType','par.py',240),
  ('varType -> KEY_SET','varType',1,'p_varType','par.py',241),
  ('arrayType -> KEY_ARRAY length comass KEY_OF type','arrayType',5,'p_arrayType','par.py',246),
  ('comass -> comass COMMA length','comass',3,'p_comass','par.py',251),
  ('comass -> empty','comass',1,'p_comass','par.py',252),
  ('length -> expression','length',1,'p_length','par.py',257),
  ('recordType -> KEY_RECORD fieldListSequence KEY_END','recordType',3,'p_recordType','par.py',262),
  ('recordType -> KEY_RECORD LRB baseType RRB fieldListSequence KEY_END','recordType',6,'p_recordType','par.py',263),
  ('baseType -> qualident','baseType',1,'p_baseType','par.py',268),
  ('fieldListSequence -> fieldListSequence SCOLON fieldList','fieldListSequence',3,'p_fieldListSequence','par.py',273),
  ('fieldListSequence -> fieldList','fieldListSequence',1,'p_fieldListSequence','par.py',274),
  ('fieldList -> identList COLON type','fieldList',3,'p_fieldList','par.py',279),
  ('fieldList -> empty','fieldList',1,'p_fieldList','par.py',280),
  ('identList -> identList COMMA IDENT','identList',3,'p_identList','par.py',285),
  ('identList -> IDENT','identList',1,'p_identList','par.py',286),
  ('pointerType -> KEY_POINTER KEY_TO type','pointerType',3,'p_pointerType','par.py',291),
  ('variableDeclaration -> identList COLON type','variableDeclaration',3,'p_variableDeclaration','par.py',297),
  ('procedureDeclaration -> procedureHeading SCOLON procedureBody IDENT','procedureDeclaration',4,'p_procedureDeclaration','par.py',302),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters COLON type','procedureHeading',5,'p_procedureHeading','par.py',307),
  ('procedureHeading -> KEY_PROCEDURE IDENT formalParameters','procedureHeading',3,'p_procedureHeading','par.py',308),
  ('formalParameters -> LRB FPSection formalss RRB','formalParameters',4,'p_formalParameters','par.py',313),
  ('formalParameters -> LRB RRB','formalParameters',2,'p_formalParameters','par.py',314),
  ('formalss -> formalss SCOLON FPSection','formalss',3,'p_formalss','par.py',319),
  ('formalss -> empty','formalss',1,'p_formalss','par.py',320),
  ('FPSection -> IDENT FPs COLON type','FPSection',4,'p_FPSection','par.py',325),
  ('FPs -> FPs COMMA IDENT','FPs',3,'p_FPs','par.py',330),
  ('FPs -> empty','FPs',1,'p_FPs','par.py',331),
  ('procedureBody -> declarationSequence KEY_BEGIN statementSequence KEY_END','procedureBody',4,'p_procedureBody','par.py',336),
  ('statement -> assignment','statement',1,'p_statement','par.py',341),
  ('statement -> procedureCall','statement',1,'p_statement','par.py',342),
  ('statement -> ifStatement','statement',1,'p_statement','par.py',343),
  ('statement -> switchStatement','statement',1,'p_statement','par.py',344),
  ('statement -> whileStatement','statement',1,'p_statement','par.py',345),
  ('statement -> forStatement','statement',1,'p_statement','par.py',346),
  ('statement -> doWhileStatement','statement',1,'p_statement','par.py',347),
  ('statement -> KEY_EXIT','statement',1,'p_statement','par.py',348),
  ('statement -> KEY_RETURN expression','statement',2,'p_statement','par.py',349),
  ('statement -> KEY_RETURN','statement',1,'p_statement','par.py',350),
  ('statement -> ioStatement','statement',1,'p_statement','par.py',351),
  ('statement -> fileStatement','statement',1,'p_statement','par.py',352),
  ('statement -> KEY_BREAK','statement',1,'p_statement','par.py',353),
  ('statement -> KEY_CONTINUE','statement',1,'p_statement','par.py',354),
  ('statement -> empty','statement',1,'p_statement','par.py',355),
  ('assignment -> designator ASSIGN expression','assignment',3,'p_assignment','par.py',360),
  ('procedureCall -> designator actualParameters','procedureCall',2,'p_procedureCall','par.py',365),
  ('procedureCall -> designator','procedureCall',1,'p_procedureCall','par.py',366),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_ELSE statementSequence KEY_END','ifStatement',8,'p_ifStatement','par.py',371),
  ('ifStatement -> KEY_IF expression KEY_THEN statementSequence ifss KEY_END','ifStatement',6,'p_ifStatement','par.py',372),
  ('ifss -> ifss KEY_ELSEIF expression KEY_THEN statementSequence','ifss',5,'p_ifss','par.py',377),
  ('ifss -> empty','ifss',1,'p_ifss','par.py',378),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_ELSE COLON statementSequence KEY_END','switchStatement',9,'p_switchStatement','par.py',383),
  ('switchStatement -> KEY_SWITCH expression KEY_BEGIN case casess KEY_END','switchStatement',6,'p_switchStatement','par.py',384),
  ('casess -> casess OR case','casess',3,'p_casess','par.py',389),
  ('casess -> empty','casess',1,'p_casess','par.py',390),
  ('case -> KEY_CASE COLON expression statementSequence','case',4,'p_case','par.py',395),
  ('whileStatement -> KEY_WHILE expression KEY_BEGIN statementSequence KEY_END','whileStatement',5,'p_whileStatement','par.py',400),
  ('forStatement -> KEY_FOR LRB assignment SCOLON expression SCOLON assignment RRB KEY_BEGIN statementSequence KEY_END','forStatement',11,'p_forStatement','par.py',405),
  ('doWhileStatement -> KEY_DO statementSequence KEY_WHILE expression','doWhileStatement',4,'p_doWhileStatement','par.py',410),
  ('ioStatement -> KEY_WRITE LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',415),
  ('ioStatement -> KEY_WRITELN LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',416),
  ('ioStatement -> KEY_READ LRB expression RRB','ioStatement',4,'p_ioStatement','par.py',417),
  ('fileStatement -> identdef EQUAL KEY_FOPEN LRB string COMMA char RRB','fileStatement',8,'p_fileStatement','par.py',422),
  ('fileStatement -> KEY_FCLOSE LRB identdef RRB','fileStatement',4,'p_fileStatement','par.py',423),
  ('fileStatement -> KEY_FPRINTF LRB identdef COMMA string RRB','fileStatement',6,'p_fileStatement','par.py',424),
  ('fileStatement -> KEY_FREAD LRB identdef COMMA identdef COMMA VINTEGER RRB','fileStatement',8,'p_fileStatement','par.py',425),
  ('empty -> <empty>','empty',0,'p_empty','par.py',430),
]
